(module
  (type $FUNCSIG$ii (func (param i32) (result i32)))
  (type $FUNCSIG$iiii (func (param i32 i32 i32) (result i32)))
  (type $FUNCSIG$vi (func (param i32)))
  (type $FUNCSIG$iiiiiii (func (param i32 i32 i32 i32 i32 i32) (result i32)))
  (type $FUNCSIG$vii (func (param i32 i32)))
  (type $FUNCSIG$iii (func (param i32 i32) (result i32)))
  (type $FUNCSIG$iiiiiiiii (func (param i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
  (type $FUNCSIG$iiiii (func (param i32 i32 i32 i32) (result i32)))
  (type $FUNCSIG$iiiiii (func (param i32 i32 i32 i32 i32) (result i32)))
  (type $FUNCSIG$viiiii (func (param i32 i32 i32 i32 i32)))
  (type $FUNCSIG$viiiiii (func (param i32 i32 i32 i32 i32 i32)))
  (type $FUNCSIG$iiiiid (func (param i32 i32 i32 i32 f64) (result i32)))
  (type $FUNCSIG$viiii (func (param i32 i32 i32 i32)))
  (type $FUNCSIG$v (func ))
  (type $FUNCSIG$viii (func (param i32 i32 i32)))
  (type $FUNCSIG$iiiiiiii (func (param i32 i32 i32 i32 i32 i32 i32) (result i32)))
  (type $FUNCSIG$iiiiiid (func (param i32 i32 i32 i32 i32 f64) (result i32)))
  (type $FUNCSIG$i (func  (result i32)))
  (type $_1 (func (param i32 i32 i32) (result f64)))
  (type $_2 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
  (type $_3 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)))
  (type $_4 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)))
  (type $_5 (func (param i32 i32 i32 i32 i32 i32 i32)))
  (type $_6 (func (param f64 f64) (result f64)))
  (type $_7 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
  (type $_8 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
  (type $_9 (func (param i32 i32 i32 i32 i32 i32 i32 i32)))
  (type $_10 (func (param i32 f64) (result i32)))
  (type $_11 (func (param f64 i32) (result f64)))
  (type $_12 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
  (type $_13 (func (param i32 i32 i32 i32 i32 i32 f64) (result i32)))
  (import "env" "abort" (func $abort (param i32)))
  (import "env" "_pthread_cleanup_pop" (func $_pthread_cleanup_pop (param i32)))
  (import "env" "_pthread_cond_wait" (func $_pthread_cond_wait (param i32 i32) (result i32)))
  (import "env" "_pthread_key_create" (func $_pthread_key_create (param i32 i32) (result i32)))
  (import "env" "_abort" (func $_abort ))
  (import "env" "___assert_fail" (func $___assert_fail (param i32 i32 i32 i32)))
  (import "env" "___cxa_allocate_exception" (func $___cxa_allocate_exception (param i32) (result i32)))
  (import "env" "__ZSt18uncaught_exceptionv" (func $__ZSt18uncaught_exceptionv  (result i32)))
  (import "env" "_strftime_l" (func $_strftime_l (param i32 i32 i32 i32 i32) (result i32)))
  (import "env" "_sbrk" (func $_sbrk (param i32) (result i32)))
  (import "env" "_emscripten_memcpy_big" (func $_emscripten_memcpy_big (param i32 i32 i32) (result i32)))
  (import "env" "_pthread_getspecific" (func $_pthread_getspecific (param i32) (result i32)))
  (import "env" "_pthread_once" (func $_pthread_once (param i32 i32) (result i32)))
  (import "env" "___syscall54" (func $___syscall54 (param i32 i32) (result i32)))
  (import "env" "___unlock" (func $___unlock (param i32)))
  (import "env" "_pthread_setspecific" (func $_pthread_setspecific (param i32 i32) (result i32)))
  (import "env" "___cxa_atexit" (func $___cxa_atexit (param i32 i32 i32) (result i32)))
  (import "env" "___cxa_throw" (func $___cxa_throw (param i32 i32 i32)))
  (import "env" "___lock" (func $___lock (param i32)))
  (import "env" "___syscall6" (func $___syscall6 (param i32 i32) (result i32)))
  (import "env" "_pthread_cleanup_push" (func $_pthread_cleanup_push (param i32 i32)))
  (import "env" "___syscall140" (func $___syscall140 (param i32 i32) (result i32)))
  (import "env" "___syscall145" (func $___syscall145 (param i32 i32) (result i32)))
  (import "env" "___syscall146" (func $___syscall146 (param i32 i32) (result i32)))
  (import "env" "table" (table $_14 469 anyfunc))
  (import "env" "memory" (memory $0 256))
  (import "env" "STACKTOP" (global $STACKTOP$asm2wasm$import i32))
  (import "env" "STACK_MAX" (global $STACK_MAX$asm2wasm$import i32))
  (import "env" "tempDoublePtr" (global $tempDoublePtr$asm2wasm$import i32))
  (import "env" "___dso_handle" (global $___dso_handle$asm2wasm$import i32))
  (import "global" "NaN" (global $nan$asm2wasm$import f64))
  (import "global" "Infinity" (global $inf$asm2wasm$import f64))
  (import "env" "memoryBase" (global $memoryBase i32))
  (import "env" "tableBase" (global $tableBase i32))
  (export "_main" (func $_main))
  (export "___udivdi3" (func $___udivdi3))
  (export "_bitshift64Lshr" (func $_bitshift64Lshr))
  (export "_bitshift64Shl" (func $_bitshift64Shl))
  (export "_fflush" (func $_fflush))
  (export "___cxa_is_pointer_type" (func $___cxa_is_pointer_type))
  (export "_memset" (func $_memset))
  (export "_memcpy" (func $_memcpy))
  (export "___muldi3" (func $___muldi3))
  (export "___uremdi3" (func $___uremdi3))
  (export "_i64Subtract" (func $_i64Subtract))
  (export "___udivmoddi4" (func $___udivmoddi4))
  (export "_i64Add" (func $_i64Add))
  (export "_pthread_self" (func $_pthread_self))
  (export "_pthread_mutex_unlock" (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv))
  (export "_pthread_cond_broadcast" (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv))
  (export "___errno_location" (func $___errno_location))
  (export "___muldsi3" (func $___muldsi3))
  (export "___cxa_can_catch" (func $___cxa_can_catch))
  (export "_free" (func $_free))
  (export "_memmove" (func $_memmove))
  (export "_malloc" (func $_malloc))
  (export "_pthread_mutex_lock" (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv))
  (export "__GLOBAL__I_000101" (func $__GLOBAL__I_000101))
  (export "__GLOBAL__sub_I_iostream_cpp" (func $runPostSets))
  (export "runPostSets" (func $runPostSets))
  (export "stackAlloc" (func $stackAlloc))
  (export "stackSave" (func $stackSave))
  (export "stackRestore" (func $stackRestore))
  (export "establishStackSpace" (func $establishStackSpace))
  (export "setThrew" (func $setThrew))
  (export "setTempRet0" (func $setTempRet0))
  (export "getTempRet0" (func $getTempRet0))
  (export "dynCall_iiiiiiii" (func $dynCall_iiiiiiii))
  (export "dynCall_iiii" (func $dynCall_iiii))
  (export "dynCall_viiiii" (func $dynCall_viiiii))
  (export "dynCall_iiiiiid" (func $dynCall_iiiiiid))
  (export "dynCall_vi" (func $dynCall_vi))
  (export "dynCall_vii" (func $dynCall_vii))
  (export "dynCall_iiiiiii" (func $dynCall_iiiiiii))
  (export "dynCall_iiiiid" (func $dynCall_iiiiid))
  (export "dynCall_ii" (func $dynCall_ii))
  (export "dynCall_viii" (func $dynCall_viii))
  (export "dynCall_v" (func $dynCall_v))
  (export "dynCall_iiiiiiiii" (func $dynCall_iiiiiiiii))
  (export "dynCall_iiiii" (func $dynCall_iiiii))
  (export "dynCall_viiiiii" (func $dynCall_viiiiii))
  (export "dynCall_iii" (func $dynCall_iii))
  (export "dynCall_iiiiii" (func $dynCall_iiiiii))
  (export "dynCall_viiii" (func $dynCall_viiii))
  (global $STACKTOP (mut i32) (get_global $STACKTOP$asm2wasm$import))
  (global $STACK_MAX (mut i32) (get_global $STACK_MAX$asm2wasm$import))
  (global $tempDoublePtr (mut i32) (get_global $tempDoublePtr$asm2wasm$import))
  (global $___dso_handle (mut i32) (get_global $___dso_handle$asm2wasm$import))
  (global $__THREW__ (mut i32) (i32.const 0))
  (global $threwValue (mut i32) (i32.const 0))
  (global $nan (mut f64) (get_global $nan$asm2wasm$import))
  (global $inf (mut f64) (get_global $inf$asm2wasm$import))
  (global $tempRet0 (mut i32) (i32.const 0))
  (elem $_14 (get_global $tableBase)
    $b0 $__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc $__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc $__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe $__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE $__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe $__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE $b0
    $b1 $___stdio_write $___stdio_seek $___stdio_read $___stdout_write $_sn_write $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci
    $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi $__ZNSt3__211__stdoutbufIcE6xsputnEPKci $__ZNSt3__211__stdoutbufIwE6xsputnEPKwi $__ZNKSt3__27collateIcE7do_hashEPKcS3_ $__ZNKSt3__27collateIwE7do_hashEPKwS3_
    $__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE $__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE $__ZNKSt3__25ctypeIcE10do_toupperEPcPKc $__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc $__ZNKSt3__25ctypeIcE9do_narrowEcc $__ZNKSt3__25ctypeIwE5do_isEtw $__ZNKSt3__25ctypeIwE10do_toupperEPwPKw $__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw
    $__ZNKSt3__25ctypeIwE9do_narrowEwc $__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv $_do_read $b1 $b1 $b1 $b1 $b1
    $b2 $__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib $__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib $__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib $b3 $__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce $__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe $b3
    $b4 $__ZNSt3__28ios_baseD2Ev $__ZNSt3__28ios_baseD0Ev $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev $__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev
    $__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev $__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev $__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev $__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev $__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev $__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev $__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev
    $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev $__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev $__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev $__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev $__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev $__ZNSt3__211__stdoutbufIcED0Ev
    $__ZNSt3__211__stdoutbufIwED0Ev $__ZNSt3__211__stdoutbufIcED0Ev $__ZNSt3__211__stdoutbufIwED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__26locale5facet16__on_zero_sharedEv $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev
    $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev
    $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev
    $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev
    $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev
    $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__27codecvtIwc11__mbstate_tED2Ev
    $__ZNSt3__27codecvtIwc11__mbstate_tED0Ev $__ZNSt3__26locale5__impD2Ev $__ZNSt3__26locale5__impD0Ev $__ZNSt3__25ctypeIcED2Ev $__ZNSt3__25ctypeIcED0Ev $__ZNSt3__28numpunctIcED2Ev $__ZNSt3__28numpunctIcED0Ev $__ZNSt3__28numpunctIwED2Ev
    $__ZNSt3__28numpunctIwED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev
    $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev $_cleanup_522 $_cleanup_522
    $__ZNSt3__28ios_base4InitD2Ev $__ZNSt3__26locale2id6__initEv $__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv $___cxx_global_array_dtor $___cxx_global_array_dtor_61 $___cxx_global_array_dtor_109 $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev $___cxx_global_array_dtor_46
    $___cxx_global_array_dtor_85 $___cxx_global_array_dtor_112 $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev $_free $__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv $b4 $b4
    $b4 $b4 $b4 $b4 $b4 $b4 $b4 $b4
    $b4 $b4 $b4 $b4 $b4 $b4 $b4 $b4
    $b5 $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE $__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE $__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE $__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE $__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE $__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv
    $__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv $__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv $__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv $__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv $__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv $__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv $__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv $__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv
    $__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv $__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv $__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv $__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv $__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv $__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv $__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv $__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv
    $__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv $__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv $__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv $__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv $__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv $__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv $__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE
    $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE $__ZNKSt3__28numpunctIcE11do_groupingEv $__ZNKSt3__28numpunctIcE11do_truenameEv $__ZNKSt3__28numpunctIcE12do_falsenameEv $__ZNKSt3__28numpunctIwE11do_groupingEv $__ZNKSt3__28numpunctIwE11do_truenameEv $__ZNKSt3__28numpunctIwE12do_falsenameEv $b5
    $b5 $b5 $b5 $b5 $b5 $b5 $b5 $b5
    $b5 $b5 $b5 $b5 $b5 $b5 $b5 $b5
    $b5 $b5 $b5 $b5 $b5 $b5 $b5 $b5
    $b6 $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy
    $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt
    $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx
    $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm
    $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm $__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE $__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE $b6
    $b6 $b6 $b6 $b6 $b6 $b6 $b6 $b6
    $b6 $b6 $b6 $b6 $b6 $b6 $b6 $b6
    $b6 $b6 $b6 $b6 $b6 $b6 $b6 $b6
    $b7 $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe $b7 $b7 $b7
    $b8 $___stdio_close $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
    $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv $__ZNSt3__210__stdinbufIcE9underflowEv $__ZNSt3__210__stdinbufIcE5uflowEv $__ZNSt3__210__stdinbufIwE9underflowEv $__ZNSt3__210__stdinbufIwE5uflowEv $__ZNSt3__211__stdoutbufIwE4syncEv $__ZNSt3__211__stdoutbufIwE4syncEv
    $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv $__ZNKSt3__220__time_get_c_storageIcE7__weeksEv $__ZNKSt3__220__time_get_c_storageIcE8__monthsEv $__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv $__ZNKSt3__220__time_get_c_storageIcE3__cEv $__ZNKSt3__220__time_get_c_storageIcE3__rEv $__ZNKSt3__220__time_get_c_storageIcE3__xEv $__ZNKSt3__220__time_get_c_storageIcE3__XEv
    $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv $__ZNKSt3__220__time_get_c_storageIwE7__weeksEv $__ZNKSt3__220__time_get_c_storageIwE8__monthsEv $__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv $__ZNKSt3__220__time_get_c_storageIwE3__cEv $__ZNKSt3__220__time_get_c_storageIwE3__rEv $__ZNKSt3__220__time_get_c_storageIwE3__xEv $__ZNKSt3__220__time_get_c_storageIwE3__XEv
    $__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv $__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv $__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv $__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv $__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv $__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv
    $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv $__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv $__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv $__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv $__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv
    $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv $__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv $__ZNKSt3__28numpunctIcE16do_decimal_pointEv $__ZNKSt3__28numpunctIcE16do_thousands_sepEv $__ZNKSt3__28numpunctIwE16do_decimal_pointEv $__ZNKSt3__28numpunctIwE16do_thousands_sepEv $__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv $__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv
    $__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv $__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv $__ZNKSt9bad_alloc4whatEv $b8 $b8 $b8
    $b9 $b10 $__ZL25default_terminate_handlerv $__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev $b10 $b11 $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc
    $__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_ $__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_ $__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_ $__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_ $__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_ $__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_ $__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_ $__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_
    $b11 $b11 $b11 $b11 $b11 $b12 $__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc $__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt
    $__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_ $__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_ $__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw $b12 $b12 $b13 $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj
    $__ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE $__ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE $__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib $__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib $__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib $b14 $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj
    $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj $__ZNSt3__210__stdinbufIcE9pbackfailEi $__ZNSt3__210__stdinbufIwE9pbackfailEj $__ZNSt3__211__stdoutbufIcE8overflowEi $__ZNSt3__211__stdoutbufIwE8overflowEj $__ZNKSt3__25ctypeIcE10do_toupperEc $__ZNKSt3__25ctypeIcE10do_tolowerEc
    $__ZNKSt3__25ctypeIcE8do_widenEc $__ZNKSt3__25ctypeIwE10do_toupperEw $__ZNKSt3__25ctypeIwE10do_tolowerEw $__ZNKSt3__25ctypeIwE8do_widenEc $b14 $b15 $__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_ $__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_
    $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv
    $__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ $__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j $__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ $__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j $__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc $__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc $__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ $__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j
    $__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ $__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j $b15 $b15 $b15 $b15 $b15 $b15
    $b15 $b15 $b15 $b15 $b15 $b16 $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj
    $__ZNKSt3__27collateIcE12do_transformEPKcS3_ $__ZNKSt3__27collateIwE12do_transformEPKwS3_ $__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi $__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi $__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi)
  (data $0 (get_global $memoryBase)
    "\b8%\00\00\b43\00\00\10\04\00\00\00\00\00\00\90%\00\00\de3\00\00\b8%\00\00\f03\00\00\10\04\00\00\00\00\00\00\90%\00\00\1a4\00\00\90%\00\00K4\00\00\f8%\00\00|4\00\00"
    "\00\00\00\00\01\00\00\00\00\04\00\00\03\f4\ff\ff\f8%\00\00\ab4\00\00\00\00\00\00\01\00\00\00\18\04\00\00\03\f4\ff\ff\f8%\00\00\da4\00\00\00\00\00\00\01\00\00\00\00\04\00\00\03\f4\ff\ff"
    "\f8%\00\00\095\00\00\00\00\00\00\01\00\00\00\18\04\00\00\03\f4\ff\ff\b8%\00\0085\00\00(\04\00\00\00\00\00\00\b8%\00\00v5\00\000\04\00\00\00\00\00\00\b8%\00\00\8e5\00\00"
    "(\04\00\00\00\00\00\00\b8%\00\00\a75\00\000\04\00\00\00\00\00\00\b8%\00\00\c05\00\00\e8\04\00\00\00\00\00\00\b8%\00\00\d45\00\008\09\00\00\00\00\00\00\b8%\00\00\ea5\00\00"
    "\e8\04\00\00\00\00\00\00\f8%\00\00\fe5\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00(\05\00\00\00\00\00\00\f8%\00\00B6\00\00\00\00\00\00\01\00\00\00@\05\00\00\00\00\00\00"
    "\90%\00\00X6\00\00\f8%\00\00\976\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00h\05\00\00\00\00\00\00\f8%\00\00\db6\00\00\00\00\00\00\01\00\00\00@\05\00\00\00\00\00\00"
    "\f8%\00\00\f16\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00\a0\05\00\00\00\00\00\00\f8%\00\0057\00\00\00\00\00\00\01\00\00\00\b8\05\00\00\00\00\00\00\90%\00\00K7\00\00"
    "\f8%\00\00w7\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00\e0\05\00\00\00\00\00\00\f8%\00\00\bb7\00\00\00\00\00\00\01\00\00\00\b8\05\00\00\00\00\00\00\f8%\00\00\d17\00\00"
    "\00\00\00\00\03\00\00\00\e8\04\00\00\02\00\00\00 \06\00\00\02\00\00\00(\06\00\00\00\08\00\00\90%\00\00\168\00\00\90%\00\00)8\00\00\f8%\00\00\8b9\00\00\00\00\00\00\03\00\00\00"
    "\e8\04\00\00\02\00\00\00 \06\00\00\02\00\00\00X\06\00\00\00\08\00\00\90%\00\00\d09\00\00\f8%\00\00\f29\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00\80\06\00\00\00\08\00\00"
    "\90%\00\007:\00\00\f8%\00\00L:\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00\80\06\00\00\00\08\00\00\f8%\00\00\91:\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00"
    "\c8\06\00\00\02\00\00\00\90%\00\00\ad:\00\00\f8%\00\00\c2:\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00\c8\06\00\00\02\00\00\00\f8%\00\00\de:\00\00\00\00\00\00\02\00\00\00"
    "\e8\04\00\00\02\00\00\00\c8\06\00\00\02\00\00\00\f8%\00\00\fa:\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00\c8\06\00\00\02\00\00\00\f8%\00\00\16;\00\00\00\00\00\00\02\00\00\00"
    "\e8\04\00\00\02\00\00\00P\07\00\00\00\00\00\00\90%\00\00\\;\00\00\f8%\00\00\84;\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00x\07\00\00\00\00\00\00\90%\00\00\ca;\00\00"
    "\f8%\00\00\ee;\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00\a0\07\00\00\00\00\00\00\90%\00\004<\00\00\f8%\00\00S<\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00"
    "\c8\07\00\00\00\00\00\00\90%\00\00\99<\00\00\f8%\00\00\b2<\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00\f0\07\00\00\02\00\00\00\90%\00\00\c7<\00\00\f8%\00\00\df<\00\00"
    "\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00\f0\07\00\00\02\00\00\00\b8%\00\00\f4<\00\00(\08\00\00\00\00\00\00\f8%\00\00\16=\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00"
    "H\08\00\00\02\00\00\00\90%\00\009=\00\00\b8%\00\00P=\00\00(\08\00\00\00\00\00\00\f8%\00\00s=\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00H\08\00\00\02\00\00\00"
    "\f8%\00\00\95=\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00H\08\00\00\02\00\00\00\f8%\00\00\b7=\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00H\08\00\00\02\00\00\00"
    "\b8%\00\00\da=\00\00\e8\04\00\00\00\00\00\00\f8%\00\00\f0=\00\00\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00\f0\08\00\00\02\00\00\00\90%\00\00\02>\00\00\f8%\00\00\17>\00\00"
    "\00\00\00\00\02\00\00\00\e8\04\00\00\02\00\00\00\f0\08\00\00\02\00\00\00\b8%\00\00)>\00\00\e8\04\00\00\00\00\00\00\b8%\00\00I>\00\00\e8\04\00\00\00\00\00\00\90%\00\00\c2>\00\00"
    "\90%\00\00\e2@\00\00\b8%\00\00\c0@\00\00h\09\00\00\00\00\00\00\b8%\00\00m@\00\00H\09\00\00\00\00\00\00\b8%\00\00\92@\00\00x\09\00\00\00\00\00\00\90%\00\00\b3@\00\00"
    "\b8%\00\00\a8A\00\00@\09\00\00\00\00\00\00\b8%\00\00\e8A\00\00h\09\00\00\00\00\00\00\b8%\00\00\c4A\00\00\90\09\00\00\00\00\00\00\b8%\00\00\nB\00\00H\09\00\00\00\00\00\00"
    "\02\00\00\c0\03\00\00\c0\04\00\00\c0\05\00\00\c0\06\00\00\c0\07\00\00\c0\08\00\00\c0\09\00\00\c0\n\00\00\c0\0b\00\00\c0\0c\00\00\c0\0d\00\00\c0\0e\00\00\c0\0f\00\00\c0\10\00\00\c0\11\00\00\c0"
    "\12\00\00\c0\13\00\00\c0\14\00\00\c0\15\00\00\c0\16\00\00\c0\17\00\00\c0\18\00\00\c0\19\00\00\c0\1a\00\00\c0\1b\00\00\c0\1c\00\00\c0\1d\00\00\c0\1e\00\00\c0\1f\00\00\c0\00\00\00\b3\01\00\00\c3"
    "\02\00\00\c3\03\00\00\c3\04\00\00\c3\05\00\00\c3\06\00\00\c3\07\00\00\c3\08\00\00\c3\09\00\00\c3\n\00\00\c3\0b\00\00\c3\0c\00\00\c3\0d\00\00\d3\0e\00\00\c3\0f\00\00\c3\00\00\0c\bb\01\00\0c\c3"
    "\02\00\0c\c3\03\00\0c\c3\04\00\0c\d3\90\n\00\00\05\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\98R\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\04\0b\00\00\09\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\02\00\00\00\a0R\00\00\00\04\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00x\0b\00\00\05\00\00\00\00\00\00\00"
    "\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\02\00\00\00\a8V\00\00\00\04\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\n\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00x\0b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\18'\00\00d\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00"
    "\07\00\00\00\08\00\00\00\09\00\00\00\n\00\00\00\0b\00\00\00\0c\00\00\00\0d\00\00\00\0e\00\00\00\0f\00\00\00\10\00\00\00\11\00\00\00\12\00\00\00\13\00\00\00\14\00\00\00\15\00\00\00\16\00\00\00"
    "\17\00\00\00\18\00\00\00\19\00\00\00\1a\00\00\00\1b\00\00\00\1c\00\00\00\1d\00\00\00\1e\00\00\00\1f\00\00\00 \00\00\00!\00\00\00\"\00\00\00#\00\00\00$\00\00\00%\00\00\00&\00\00\00"
    "'\00\00\00(\00\00\00)\00\00\00*\00\00\00+\00\00\00,\00\00\00-\00\00\00.\00\00\00/\00\00\000\00\00\001\00\00\002\00\00\003\00\00\004\00\00\005\00\00\006\00\00\00"
    "7\00\00\008\00\00\009\00\00\00:\00\00\00;\00\00\00<\00\00\00=\00\00\00>\00\00\00?\00\00\00@\00\00\00a\00\00\00b\00\00\00c\00\00\00d\00\00\00e\00\00\00f\00\00\00"
    "g\00\00\00h\00\00\00i\00\00\00j\00\00\00k\00\00\00l\00\00\00m\00\00\00n\00\00\00o\00\00\00p\00\00\00q\00\00\00r\00\00\00s\00\00\00t\00\00\00u\00\00\00v\00\00\00"
    "w\00\00\00x\00\00\00y\00\00\00z\00\00\00[\00\00\00\\\00\00\00]\00\00\00^\00\00\00_\00\00\00`\00\00\00a\00\00\00b\00\00\00c\00\00\00d\00\00\00e\00\00\00f\00\00\00"
    "g\00\00\00h\00\00\00i\00\00\00j\00\00\00k\00\00\00l\00\00\00m\00\00\00n\00\00\00o\00\00\00p\00\00\00q\00\00\00r\00\00\00s\00\00\00t\00\00\00u\00\00\00v\00\00\00"
    "w\00\00\00x\00\00\00y\00\00\00z\00\00\00{\00\00\00|\00\00\00}\00\00\00~\00\00\00\7f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00h\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00"
    "\06\00\00\00\07\00\00\00\08\00\00\00\09\00\00\00\n\00\00\00\0b\00\00\00\0c\00\00\00\0d\00\00\00\0e\00\00\00\0f\00\00\00\10\00\00\00\11\00\00\00\12\00\00\00\13\00\00\00\14\00\00\00\15\00\00\00"
    "\16\00\00\00\17\00\00\00\18\00\00\00\19\00\00\00\1a\00\00\00\1b\00\00\00\1c\00\00\00\1d\00\00\00\1e\00\00\00\1f\00\00\00 \00\00\00!\00\00\00\"\00\00\00#\00\00\00$\00\00\00%\00\00\00"
    "&\00\00\00'\00\00\00(\00\00\00)\00\00\00*\00\00\00+\00\00\00,\00\00\00-\00\00\00.\00\00\00/\00\00\000\00\00\001\00\00\002\00\00\003\00\00\004\00\00\005\00\00\00"
    "6\00\00\007\00\00\008\00\00\009\00\00\00:\00\00\00;\00\00\00<\00\00\00=\00\00\00>\00\00\00?\00\00\00@\00\00\00A\00\00\00B\00\00\00C\00\00\00D\00\00\00E\00\00\00"
    "F\00\00\00G\00\00\00H\00\00\00I\00\00\00J\00\00\00K\00\00\00L\00\00\00M\00\00\00N\00\00\00O\00\00\00P\00\00\00Q\00\00\00R\00\00\00S\00\00\00T\00\00\00U\00\00\00"
    "V\00\00\00W\00\00\00X\00\00\00Y\00\00\00Z\00\00\00[\00\00\00\\\00\00\00]\00\00\00^\00\00\00_\00\00\00`\00\00\00A\00\00\00B\00\00\00C\00\00\00D\00\00\00E\00\00\00"
    "F\00\00\00G\00\00\00H\00\00\00I\00\00\00J\00\00\00K\00\00\00L\00\00\00M\00\00\00N\00\00\00O\00\00\00P\00\00\00Q\00\00\00R\00\00\00S\00\00\00T\00\00\00U\00\00\00"
    "V\00\00\00W\00\00\00X\00\00\00Y\00\00\00Z\00\00\00{\00\00\00|\00\00\00}\00\00\00~\00\00\00\7f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10'\00\00\a0\86\01\00@B\0f\00"
    "\80\96\98\00\00\e1\f5\05\00\00\00\00\10\04\00\00\01\00\00\00\02\00\00\00\00\00\00\00(\04\00\00\03\00\00\00\04\00\00\00\01\00\00\00\06\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00"
    "\07\00\00\00\04\00\00\00\05\00\00\00\01\00\00\00\08\00\00\00\02\00\00\00\00\00\00\000\04\00\00\05\00\00\00\06\00\00\00\02\00\00\00\09\00\00\00\02\00\00\00\02\00\00\00\06\00\00\00\07\00\00\00"
    "\n\00\00\00\08\00\00\00\09\00\00\00\03\00\00\00\0b\00\00\00\04\00\00\00\08\00\00\00\00\00\00\008\04\00\00\07\00\00\00\08\00\00\00\f8\ff\ff\ff\f8\ff\ff\ff8\04\00\00\09\00\00\00\n\00\00\00"
    "\08\00\00\00\00\00\00\00P\04\00\00\0b\00\00\00\0c\00\00\00\f8\ff\ff\ff\f8\ff\ff\ffP\04\00\00\0d\00\00\00\0e\00\00\00\04\00\00\00\00\00\00\00h\04\00\00\0f\00\00\00\10\00\00\00\fc\ff\ff\ff"
    "\fc\ff\ff\ffh\04\00\00\11\00\00\00\12\00\00\00\04\00\00\00\00\00\00\00\80\04\00\00\13\00\00\00\14\00\00\00\fc\ff\ff\ff\fc\ff\ff\ff\80\04\00\00\15\00\00\00\16\00\00\00\00\00\00\00\98\04\00\00"
    "\03\00\00\00\17\00\00\00\03\00\00\00\06\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\07\00\00\00\n\00\00\00\0b\00\00\00\05\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\a8\04\00\00"
    "\05\00\00\00\18\00\00\00\04\00\00\00\09\00\00\00\02\00\00\00\02\00\00\00\06\00\00\00\07\00\00\00\n\00\00\00\0c\00\00\00\0d\00\00\00\06\00\00\00\0b\00\00\00\04\00\00\00\00\00\00\00\b8\04\00\00"
    "\03\00\00\00\19\00\00\00\05\00\00\00\06\00\00\00\01\00\00\00\01\00\00\00\0e\00\00\00\03\00\00\00\07\00\00\00\04\00\00\00\05\00\00\00\01\00\00\00\0c\00\00\00\07\00\00\00\00\00\00\00\c8\04\00\00"
    "\05\00\00\00\1a\00\00\00\06\00\00\00\09\00\00\00\02\00\00\00\02\00\00\00\0f\00\00\00\07\00\00\00\n\00\00\00\08\00\00\00\09\00\00\00\03\00\00\00\0d\00\00\00\08\00\00\00\00\00\00\00\d8\04\00\00"
    "\1b\00\00\00\1c\00\00\00\1d\00\00\00\01\00\00\00\03\00\00\00\0e\00\00\00\00\00\00\00\f8\04\00\00\1e\00\00\00\1f\00\00\00\1d\00\00\00\02\00\00\00\04\00\00\00\0f\00\00\00\00\00\00\00\08\05\00\00"
    " \00\00\00!\00\00\00\1d\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\09\00\00\00\n\00\00\00\0b\00\00\00\00\00\00\00H\05\00\00"
    "\"\00\00\00#\00\00\00\1d\00\00\00\0c\00\00\00\0d\00\00\00\0e\00\00\00\0f\00\00\00\10\00\00\00\11\00\00\00\12\00\00\00\13\00\00\00\14\00\00\00\15\00\00\00\16\00\00\00\00\00\00\00\80\05\00\00"
    "$\00\00\00%\00\00\00\1d\00\00\00\03\00\00\00\04\00\00\00\17\00\00\00\05\00\00\00\18\00\00\00\01\00\00\00\02\00\00\00\06\00\00\00\00\00\00\00\c0\05\00\00&\00\00\00'\00\00\00\1d\00\00\00"
    "\07\00\00\00\08\00\00\00\19\00\00\00\09\00\00\00\1a\00\00\00\03\00\00\00\04\00\00\00\n\00\00\00\00\00\00\00\f8\05\00\00(\00\00\00)\00\00\00\1d\00\00\00\10\00\00\00\1b\00\00\00\1c\00\00\00"
    "\1d\00\00\00\1e\00\00\00\1f\00\00\00\01\00\00\00\f8\ff\ff\ff\f8\05\00\00\11\00\00\00\12\00\00\00\13\00\00\00\14\00\00\00\15\00\00\00\16\00\00\00\17\00\00\00\00\00\00\000\06\00\00*\00\00\00"
    "+\00\00\00\1d\00\00\00\18\00\00\00 \00\00\00!\00\00\00\"\00\00\00#\00\00\00$\00\00\00\02\00\00\00\f8\ff\ff\ff0\06\00\00\19\00\00\00\1a\00\00\00\1b\00\00\00\1c\00\00\00\1d\00\00\00"
    "\1e\00\00\00\1f\00\00\00%\00\00\00H\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00S\00\00\00%\00\00\00m\00\00\00/\00\00\00%\00\00\00d\00\00\00/\00\00\00"
    "%\00\00\00y\00\00\00%\00\00\00Y\00\00\00-\00\00\00%\00\00\00m\00\00\00-\00\00\00%\00\00\00d\00\00\00%\00\00\00I\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00"
    "%\00\00\00S\00\00\00 \00\00\00%\00\00\00p\00\00\00%\00\00\00H\00\00\00:\00\00\00%\00\00\00M\00\00\00%\00\00\00H\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00"
    "%\00\00\00S\00\00\00S\00\00\00u\00\00\00n\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00M\00\00\00o\00\00\00n\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00"
    "T\00\00\00u\00\00\00e\00\00\00s\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00W\00\00\00e\00\00\00d\00\00\00n\00\00\00e\00\00\00s\00\00\00d\00\00\00a\00\00\00"
    "y\00\00\00\00\00\00\00T\00\00\00h\00\00\00u\00\00\00r\00\00\00s\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00F\00\00\00r\00\00\00i\00\00\00d\00\00\00a\00\00\00"
    "y\00\00\00\00\00\00\00S\00\00\00a\00\00\00t\00\00\00u\00\00\00r\00\00\00d\00\00\00a\00\00\00y\00\00\00\00\00\00\00S\00\00\00u\00\00\00n\00\00\00\00\00\00\00M\00\00\00"
    "o\00\00\00n\00\00\00\00\00\00\00T\00\00\00u\00\00\00e\00\00\00\00\00\00\00W\00\00\00e\00\00\00d\00\00\00\00\00\00\00T\00\00\00h\00\00\00u\00\00\00\00\00\00\00F\00\00\00"
    "r\00\00\00i\00\00\00\00\00\00\00S\00\00\00a\00\00\00t\00\00\00\00\00\00\00J\00\00\00a\00\00\00n\00\00\00u\00\00\00a\00\00\00r\00\00\00y\00\00\00\00\00\00\00F\00\00\00"
    "e\00\00\00b\00\00\00r\00\00\00u\00\00\00a\00\00\00r\00\00\00y\00\00\00\00\00\00\00M\00\00\00a\00\00\00r\00\00\00c\00\00\00h\00\00\00\00\00\00\00A\00\00\00p\00\00\00"
    "r\00\00\00i\00\00\00l\00\00\00\00\00\00\00M\00\00\00a\00\00\00y\00\00\00\00\00\00\00J\00\00\00u\00\00\00n\00\00\00e\00\00\00\00\00\00\00J\00\00\00u\00\00\00l\00\00\00"
    "y\00\00\00\00\00\00\00A\00\00\00u\00\00\00g\00\00\00u\00\00\00s\00\00\00t\00\00\00\00\00\00\00S\00\00\00e\00\00\00p\00\00\00t\00\00\00e\00\00\00m\00\00\00b\00\00\00"
    "e\00\00\00r\00\00\00\00\00\00\00O\00\00\00c\00\00\00t\00\00\00o\00\00\00b\00\00\00e\00\00\00r\00\00\00\00\00\00\00N\00\00\00o\00\00\00v\00\00\00e\00\00\00m\00\00\00"
    "b\00\00\00e\00\00\00r\00\00\00\00\00\00\00D\00\00\00e\00\00\00c\00\00\00e\00\00\00m\00\00\00b\00\00\00e\00\00\00r\00\00\00\00\00\00\00J\00\00\00a\00\00\00n\00\00\00"
    "\00\00\00\00F\00\00\00e\00\00\00b\00\00\00\00\00\00\00M\00\00\00a\00\00\00r\00\00\00\00\00\00\00A\00\00\00p\00\00\00r\00\00\00\00\00\00\00J\00\00\00u\00\00\00n\00\00\00"
    "\00\00\00\00J\00\00\00u\00\00\00l\00\00\00\00\00\00\00A\00\00\00u\00\00\00g\00\00\00\00\00\00\00S\00\00\00e\00\00\00p\00\00\00\00\00\00\00O\00\00\00c\00\00\00t\00\00\00"
    "\00\00\00\00N\00\00\00o\00\00\00v\00\00\00\00\00\00\00D\00\00\00e\00\00\00c\00\00\00\00\00\00\00A\00\00\00M\00\00\00\00\00\00\00P\00\00\00M\00\00\00\00\00\00\00%\00\00\00"
    "a\00\00\00 \00\00\00%\00\00\00b\00\00\00 \00\00\00%\00\00\00d\00\00\00 \00\00\00%\00\00\00H\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00S\00\00\00"
    " \00\00\00%\00\00\00Y\00\00\00\00\00\00\00%\00\00\00I\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00S\00\00\00 \00\00\00%\00\00\00p\00\00\00\00\00\00\00"
    "%\00\00\00m\00\00\00/\00\00\00%\00\00\00d\00\00\00/\00\00\00%\00\00\00y\00\00\00\00\00\00\00%\00\00\00H\00\00\00:\00\00\00%\00\00\00M\00\00\00:\00\00\00%\00\00\00"
    "S\00\00\00\00\00\00\00\00\00\00\00`\06\00\00,\00\00\00-\00\00\00\1d\00\00\00\01\00\00\00\00\00\00\00\88\06\00\00.\00\00\00/\00\00\00\1d\00\00\00\02\00\00\00\00\00\00\00\a8\06\00\00"
    "0\00\00\001\00\00\00\1d\00\00\00 \00\00\00!\00\00\00\07\00\00\00\08\00\00\00\09\00\00\00\n\00\00\00\"\00\00\00\0b\00\00\00\0c\00\00\00\00\00\00\00\d0\06\00\002\00\00\003\00\00\00"
    "\1d\00\00\00#\00\00\00$\00\00\00\0d\00\00\00\0e\00\00\00\0f\00\00\00\10\00\00\00%\00\00\00\11\00\00\00\12\00\00\00\00\00\00\00\f0\06\00\004\00\00\005\00\00\00\1d\00\00\00&\00\00\00"
    "'\00\00\00\13\00\00\00\14\00\00\00\15\00\00\00\16\00\00\00(\00\00\00\17\00\00\00\18\00\00\00\00\00\00\00\10\07\00\006\00\00\007\00\00\00\1d\00\00\00)\00\00\00*\00\00\00\19\00\00\00"
    "\1a\00\00\00\1b\00\00\00\1c\00\00\00+\00\00\00\1d\00\00\00\1e\00\00\00\00\00\00\000\07\00\008\00\00\009\00\00\00\1d\00\00\00\03\00\00\00\04\00\00\00\00\00\00\00X\07\00\00:\00\00\00"
    ";\00\00\00\1d\00\00\00\05\00\00\00\06\00\00\00\00\00\00\00\80\07\00\00<\00\00\00=\00\00\00\1d\00\00\00\01\00\00\00%\00\00\00\00\00\00\00\a8\07\00\00>\00\00\00?\00\00\00\1d\00\00\00"
    "\02\00\00\00&\00\00\00\00\00\00\00\d0\07\00\00@\00\00\00A\00\00\00\1d\00\00\00\10\00\00\00\03\00\00\00\1f\00\00\00\00\00\00\00\f8\07\00\00B\00\00\00C\00\00\00\1d\00\00\00\11\00\00\00"
    "\04\00\00\00 \00\00\00\00\00\00\00\18\08\00\00D\00\00\00E\00\00\00\1d\00\00\00\03\00\00\00\04\00\00\00\0b\00\00\00,\00\00\00-\00\00\00\0c\00\00\00.\00\00\00\00\00\00\00P\08\00\00"
    "D\00\00\00F\00\00\00\1d\00\00\00\03\00\00\00\04\00\00\00\0b\00\00\00,\00\00\00-\00\00\00\0c\00\00\00.\00\00\00\00\00\00\00\80\08\00\00G\00\00\00H\00\00\00\1d\00\00\00\05\00\00\00"
    "\06\00\00\00\0d\00\00\00/\00\00\000\00\00\00\0e\00\00\001\00\00\00\00\00\00\00\c0\08\00\00I\00\00\00J\00\00\00\1d\00\00\00\00\00\00\00\d0\08\00\00K\00\00\00L\00\00\00\1d\00\00\00"
    "\09\00\00\00\12\00\00\00\n\00\00\00\13\00\00\00\0b\00\00\00\01\00\00\00\14\00\00\00\0f\00\00\00\00\00\00\00\18\09\00\00M\00\00\00N\00\00\00\1d\00\00\002\00\00\003\00\00\00!\00\00\00"
    "\"\00\00\00#\00\00\00\00\00\00\00(\09\00\00O\00\00\00P\00\00\00\1d\00\00\004\00\00\005\00\00\00$\00\00\00%\00\00\00&\00\00\00t\00\00\00r\00\00\00u\00\00\00e\00\00\00"
    "\00\00\00\00f\00\00\00a\00\00\00l\00\00\00s\00\00\00e\00\00\00\00\00\00\00\00\00\00\00\e8\04\00\00D\00\00\00Q\00\00\00\1d\00\00\00\00\00\00\00\f8\08\00\00D\00\00\00R\00\00\00"
    "\1d\00\00\00\15\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\0c\00\00\00\16\00\00\00\0d\00\00\00\17\00\00\00\0e\00\00\00\05\00\00\00\18\00\00\00\10\00\00\00\00\00\00\00`\08\00\00D\00\00\00"
    "S\00\00\00\1d\00\00\00\07\00\00\00\08\00\00\00\11\00\00\006\00\00\007\00\00\00\12\00\00\008\00\00\00\00\00\00\00\a0\08\00\00D\00\00\00T\00\00\00\1d\00\00\00\09\00\00\00\n\00\00\00"
    "\13\00\00\009\00\00\00:\00\00\00\14\00\00\00;\00\00\00\00\00\00\00(\08\00\00D\00\00\00U\00\00\00\1d\00\00\00\03\00\00\00\04\00\00\00\0b\00\00\00,\00\00\00-\00\00\00\0c\00\00\00"
    ".\00\00\00\01\00\00\00\00\00\00\00H\09\00\00V\00\00\00W\00\00\00X\00\00\00Y\00\00\00\19\00\00\00\05\00\00\00\01\00\00\00\05\00\00\00\00\00\00\00X\09\00\00V\00\00\00Z\00\00\00"
    "X\00\00\00Y\00\00\00\19\00\00\00\06\00\00\00\02\00\00\00\06\00\00\00\ef@\00\00\00\00\00\00\80\09\00\00[\00\00\00\\\00\00\00<\00\00\00\00\00\00\00\b0\09\00\00V\00\00\00]\00\00\00"
    "X\00\00\00Y\00\00\00\19\00\00\00\07\00\00\00\03\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\03 \02 \02 \02 \02 \02\00\02\00\02\00\02\00\02\00\02\00"
    "\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\02\00\01`\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\08\d8\08\d8\08\d8\08\d8"
    "\08\d8\08\d8\08\d8\08\d8\08\d8\08\d8\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\08\d5\08\d5\08\d5\08\d5\08\d5\08\d5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5"
    "\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\08\c5\04\c0\04\c0\04\c0\04\c0\04\c0\04\c0\08\d6\08\d6\08\d6\08\d6\08\d6\08\d6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6"
    "\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\08\c6\04\c0\04\c0\04\c0\04\c0\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00result: \00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff"
    "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\09\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff"
    "\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff"
    "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff"
    "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\04\07\03\06\05\00\11\00\n\00\11\11\11\00\00\00\00\05\00\00\00\00\00\00\09\00\00"
    "\00\00\0b\00\00\00\00\00\00\00\00\11\00\0f\n\11\11\11\03\n\07\00\01\13\09\0b\0b\00\00\09\06\0b\00\00\0b\00\06\11\00\00\00\11\11\11\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0b\00\00\00"
    "\00\00\00\00\00\11\00\n\n\11\11\11\00\n\00\00\02\00\09\0b\00\00\00\09\00\0b\00\00\0b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00"
    "\00\00\0c\00\00\00\00\0c\00\00\00\00\09\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00"
    "\04\0d\00\00\00\00\09\0e\00\00\00\00\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\00\0f\00\00\00\00"
    "\09\10\00\00\00\00\00\10\00\00\10\00\00\12\00\00\00\12\12\12\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\12\12\12\00\00\00\00\00\00\09\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\00\n\00\00\00\00\09\0b\00\00\00\00\00\0b\00\00\0b\00"
    "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\0c\00\00\00\00\09\0c\00\00\00\00\00\0c\00\00\0c\00\0001234"
    "56789ABCDEF-+   0X0x\00T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\09\n\0e"
    "\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00Illegal byte sequen"
    "ce\00Domain error\00Result not representable\00Not a tty\00Permission de"
    "nied\00Operation not permitted\00No such file or directory\00No such p"
    "rocess\00File exists\00Value too large for data type\00No space left o"
    "n device\00Out of memory\00Resource busy\00Interrupted system call\00Res"
    "ource temporarily unavailable\00Invalid seek\00Cross-device link\00Rea"
    "d-only file system\00Directory not empty\00Connection reset by peer\00"
    "Operation timed out\00Connection refused\00Host is down\00Host is unre"
    "achable\00Address in use\00Broken pipe\00I/O error\00No such device or a"
    "ddress\00Block device required\00No such device\00Not a directory\00Is a"
    " directory\00Text file busy\00Exec format error\00Invalid argument\00Arg"
    "ument list too long\00Symbolic link loop\00Filename too long\00Too man"
    "y open files in system\00No file descriptors available\00Bad file de"
    "scriptor\00No child process\00Bad address\00File too large\00Too many li"
    "nks\00No locks available\00Resource deadlock would occur\00State not r"
    "ecoverable\00Previous owner died\00Operation canceled\00Function not i"
    "mplemented\00No message of desired type\00Identifier removed\00Device "
    "not a stream\00No data available\00Device timeout\00Out of streams res"
    "ources\00Link has been severed\00Protocol error\00Bad message\00File des"
    "criptor in bad state\00Not a socket\00Destination address required\00M"
    "essage too large\00Protocol wrong type for socket\00Protocol not ava"
    "ilable\00Protocol not supported\00Socket type not supported\00Not supp"
    "orted\00Protocol family not supported\00Address family not supported"
    " by protocol\00Address not available\00Network is down\00Network unrea"
    "chable\00Connection reset by network\00Connection aborted\00No buffer "
    "space available\00Socket is connected\00Socket not connected\00Cannot "
    "send after socket shutdown\00Operation already in progress\00Operati"
    "on in progress\00Stale file handle\00Remote I/O error\00Quota exceeded"
    "\00No medium found\00Wrong medium type\00No error information\00\00(null)\00"
    "-0X+0X 0X-0x+0x 0x\00inf\00INF\00NAN\00.\00infinity\00nan\00POSIX\00NSt3__29basi"
    "c_iosIcNS_11char_traitsIcEEEE\00NSt3__28ios_baseE\00NSt3__29basic_io"
    "sIwNS_11char_traitsIwEEEE\00NSt3__215basic_streambufIcNS_11char_tr"
    "aitsIcEEEE\00NSt3__215basic_streambufIwNS_11char_traitsIwEEEE\00NSt3"
    "__213basic_istreamIcNS_11char_traitsIcEEEE\00NSt3__213basic_istrea"
    "mIwNS_11char_traitsIwEEEE\00NSt3__213basic_ostreamIcNS_11char_trai"
    "tsIcEEEE\00NSt3__213basic_ostreamIwNS_11char_traitsIwEEEE\00NSt3__21"
    "0__stdinbufIcEE\00unsupported locale for standard input\00NSt3__210_"
    "_stdinbufIwEE\00NSt3__211__stdoutbufIcEE\00NSt3__211__stdoutbufIwEE\00"
    "NSt3__27collateIcEE\00NSt3__26locale5facetE\00NSt3__27collateIwEE\00NS"
    "t3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE"
    "E\00NSt3__29__num_getIcEE\00NSt3__214__num_get_baseE\000123456789abcde"
    "fABCDEFxX+-pPiInN\00C\00%p\00NSt3__27num_getIwNS_19istreambuf_iterator"
    "IwNS_11char_traitsIwEEEEEE\00NSt3__29__num_getIwEE\00NSt3__27num_put"
    "IcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE\00NSt3__29__n"
    "um_putIcEE\00NSt3__214__num_put_baseE\00%\00\00\00\00\00l\00ll\00L\00%p\00\00\00\00NSt3__27n"
    "um_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEE\00NSt3_"
    "_29__num_putIwEE\00NSt3__28time_getIcNS_19istreambuf_iteratorIcNS_"
    "11char_traitsIcEEEEEE\00NSt3__29time_baseE\00NSt3__220__time_get_c_s"
    "torageIcEE\00%H:%M:%S%m/%d/%y%Y-%m-%d%I:%M:%S %p%H:%M%H:%M:%SSunda"
    "y\00Monday\00Tuesday\00Wednesday\00Thursday\00Friday\00Saturday\00Sun\00Mon\00Tue\00"
    "Wed\00Thu\00Fri\00Sat\00January\00February\00March\00April\00May\00June\00July\00Augus"
    "t\00September\00October\00November\00December\00Jan\00Feb\00Mar\00Apr\00Jun\00Jul\00Au"
    "g\00Sep\00Oct\00Nov\00Dec\00AM\00PM\00%a %b %d %H:%M:%S %Y\00%I:%M:%S %p\00%m/%d/%"
    "y\00%H:%M:%S\00NSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char"
    "_traitsIwEEEEEE\00NSt3__220__time_get_c_storageIwEE\00NSt3__28time_p"
    "utIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE\00NSt3__210"
    "__time_putE\00NSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11cha"
    "r_traitsIwEEEEEE\00NSt3__210moneypunctIcLb0EEE\00NSt3__210money_base"
    "E\00NSt3__210moneypunctIcLb1EEE\00NSt3__210moneypunctIwLb0EEE\00NSt3__"
    "210moneypunctIwLb1EEE\00NSt3__29money_getIcNS_19istreambuf_iterato"
    "rIcNS_11char_traitsIcEEEEEE\00NSt3__211__money_getIcEE\000123456789\00"
    "%Lf\00NSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_trait"
    "sIwEEEEEE\00NSt3__211__money_getIwEE\000123456789\00NSt3__29money_putI"
    "cNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE\00NSt3__211__m"
    "oney_putIcEE\00%.0Lf\00NSt3__29money_putIwNS_19ostreambuf_iteratorIw"
    "NS_11char_traitsIwEEEEEE\00NSt3__211__money_putIwEE\00NSt3__28messag"
    "esIcEE\00NSt3__213messages_baseE\00NSt3__28messagesIwEE\00NSt3__216__n"
    "arrow_to_utf8ILj32EEE\00NSt3__27codecvtIDic11__mbstate_tEE\00NSt3__2"
    "12codecvt_baseE\00NSt3__217__widen_from_utf8ILj32EEE\00NSt3__27codec"
    "vtIcc11__mbstate_tEE\00NSt3__27codecvtIwc11__mbstate_tEE\00NSt3__27c"
    "odecvtIDsc11__mbstate_tEE\00NSt3__26locale5__impE\00NSt3__25ctypeIcE"
    "E\00NSt3__210ctype_baseE\00NSt3__25ctypeIwEE\00NSt3__28numpunctIcEE\00tr"
    "ue\00false\00NSt3__28numpunctIwEE\00!\"vector length_error\"\00C:\\Program "
    "Files\\Emscripten\\emscripten\\incoming\\system\\include\\libcxx\\vecto"
    "r\00NSt3__214__shared_countE\00!\"basic_string length_error\"\00C:\\Progr"
    "am Files\\Emscripten\\emscripten\\incoming\\system\\include\\libcxx\\st"
    "ring\00__throw_length_error\00!\"allocator<T>::allocate::bad_alloc\"\00C"
    ":\\Program Files\\Emscripten\\emscripten\\incoming\\system\\include\\li"
    "bcxx\\memory\00allocate\00cannot zero out thread value for __cxa_get_"
    "globals()\00cannot create pthread key for __cxa_get_globals()\00pthr"
    "ead_once failure in __cxa_get_globals_fast()\00N10__cxxabiv120__si"
    "_class_type_infoE\00N10__cxxabiv116__shim_type_infoE\00St9type_info\00"
    "N10__cxxabiv117__class_type_infoE\00St9exception\00uncaught\00terminat"
    "ing with %s exception of type %s: %s\00terminating with %s excepti"
    "on of type %s\00terminating with %s foreign exception\00terminating\00"
    "terminate_handler unexpectedly returned\00St9bad_alloc\00std::bad_al"
    "loc\00N10__cxxabiv119__pointer_type_infoE\00N10__cxxabiv117__pbase_t"
    "ype_infoE\00N10__cxxabiv121__vmi_class_type_infoE")
  
  (func $___floatscan (type $_1)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result f64)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 f64)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 f64)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 f64)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    (local $25 i32)
    (local $26 f64)
    (local $27 i32)
    (local $28 i32)
    (local $29 f64)
    (local $30 f64)
    get_global $STACKTOP
    set_local $24
    get_global $STACKTOP
    i32.const 512
    i32.add
    set_global $STACKTOP
    get_local $24
    set_local $12
    block $label$break$L4
      block $__rjti$13
        block $switch-default
          block $switch-case1
            block $switch-case0
              block $switch-case
                get_local $1
                br_table
                  $switch-case $switch-case0 $switch-case1
                  $switch-default ;; default
              end ;; $switch-case
              i32.const 24
              set_local $18
              i32.const -149
              set_local $21
              br $__rjti$13
            end ;; $switch-case0
            i32.const 53
            set_local $18
            i32.const -1074
            set_local $21
            br $__rjti$13
          end ;; $switch-case1
          i32.const 53
          set_local $18
          i32.const -1074
          set_local $21
          br $__rjti$13
        end ;; $switch-default
        f64.const 0x0.0000000000000p+0
        set_local $7
        br $label$break$L4
      end ;; $__rjti$13
      get_local $0
      i32.const 4
      i32.add
      set_local $6
      get_local $0
      i32.const 100
      i32.add
      set_local $11
      loop $do-in
        get_local $6
        i32.load
        tee_local $1
        get_local $11
        i32.load
        i32.lt_u
        if $_1 (result i32)
          block $_2 (result i32)
            get_local $6
            get_local $1
            i32.const 1
            i32.add
            i32.store
            get_local $1
            i32.load8_u
          end ;; $_2
        else
          get_local $0
          call $___shgetc
        end ;; $_1
        tee_local $1
        call $_isspace
        br_if $do-in
      end ;; $do-in
      block $label$break$L13
        block $switch-default6
          block $switch-case4
            get_local $1
            i32.const 43
            i32.sub
            br_table
              $switch-case4 $switch-default6 $switch-case4
              $switch-default6 ;; default
          end ;; $switch-case4
          i32.const 1
          get_local $1
          i32.const 45
          i32.eq
          i32.const 1
          i32.shl
          i32.sub
          set_local $17
          get_local $6
          i32.load
          tee_local $1
          get_local $11
          i32.load
          i32.lt_u
          if $_3
            block $_4
              get_local $6
              get_local $1
              i32.const 1
              i32.add
              i32.store
              get_local $1
              i32.load8_u
              set_local $1
              br $label$break$L13
            end ;; $_4
          else
            block $_5
              get_local $0
              call $___shgetc
              set_local $1
              br $label$break$L13
            end ;; $_5
          end ;; $_3
        end ;; $switch-default6
        i32.const 1
        set_local $17
      end ;; $label$break$L13
      i32.const 0
      set_local $4
      loop $while-in
        block $while-out
          get_local $1
          i32.const 32
          i32.or
          get_local $4
          i32.const 13217
          i32.add
          i32.load8_s
          i32.ne
          if $_6
            block $_7
              get_local $1
              set_local $3
              get_local $4
              set_local $1
              br $while-out
            end ;; $_7
          end ;; $_6
          get_local $4
          i32.const 7
          i32.lt_u
          if $_8
            get_local $6
            i32.load
            tee_local $1
            get_local $11
            i32.load
            i32.lt_u
            if $_9 (result i32)
              block $_10 (result i32)
                get_local $6
                get_local $1
                i32.const 1
                i32.add
                i32.store
                get_local $1
                i32.load8_u
              end ;; $_10
            else
              get_local $0
              call $___shgetc
            end ;; $_9
            set_local $1
          end ;; $_8
          get_local $4
          i32.const 1
          i32.add
          tee_local $4
          i32.const 8
          i32.lt_u
          br_if $while-in
          get_local $1
          set_local $3
          get_local $4
          set_local $1
        end ;; $while-out
      end ;; $while-in
      block $__rjto$12
        block $__rjti$12
          block $switch-default76
            block $switch-case11
              block $switch-case10
                get_local $1
                i32.const 3
                i32.sub
                br_table
                  $switch-case11 $switch-default76 $switch-default76 $switch-default76 $switch-default76 $switch-case10
                  $switch-default76 ;; default
              end ;; $switch-case10
              br $__rjto$12
            end ;; $switch-case11
            br $__rjti$12
          end ;; $switch-default76
          get_local $2
          i32.const 0
          i32.ne
          tee_local $5
          get_local $1
          i32.const 3
          i32.gt_u
          i32.and
          if $_11
            get_local $1
            i32.const 8
            i32.eq
            if $_12
              br $__rjto$12
            else
              br $__rjti$12
            end ;; $_12
          end ;; $_11
          block $label$break$L34
            get_local $1
            i32.eqz
            if $_13
              block $_14
                get_local $3
                set_local $1
                i32.const 0
                set_local $4
                loop $while-in14
                  get_local $1
                  i32.const 32
                  i32.or
                  get_local $4
                  i32.const 13226
                  i32.add
                  i32.load8_s
                  i32.ne
                  if $_15
                    block $_16
                      get_local $1
                      set_local $3
                      get_local $4
                      set_local $1
                      br $label$break$L34
                    end ;; $_16
                  end ;; $_15
                  get_local $4
                  i32.const 2
                  i32.lt_u
                  if $_17
                    get_local $6
                    i32.load
                    tee_local $1
                    get_local $11
                    i32.load
                    i32.lt_u
                    if $_18 (result i32)
                      block $_19 (result i32)
                        get_local $6
                        get_local $1
                        i32.const 1
                        i32.add
                        i32.store
                        get_local $1
                        i32.load8_u
                      end ;; $_19
                    else
                      get_local $0
                      call $___shgetc
                    end ;; $_18
                    set_local $1
                  end ;; $_17
                  get_local $4
                  i32.const 1
                  i32.add
                  tee_local $4
                  i32.const 3
                  i32.lt_u
                  br_if $while-in14
                  get_local $1
                  set_local $3
                  get_local $4
                  set_local $1
                end ;; $while-in14
              end ;; $_14
            end ;; $_13
          end ;; $label$break$L34
          block $switch-default75
            block $switch-case74
              block $switch-case22
                get_local $1
                br_table
                  $switch-case74 $switch-default75 $switch-default75 $switch-case22
                  $switch-default75 ;; default
              end ;; $switch-case22
              get_local $6
              i32.load
              tee_local $1
              get_local $11
              i32.load
              i32.lt_u
              if $_20 (result i32)
                block $_21 (result i32)
                  get_local $6
                  get_local $1
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $1
                  i32.load8_u
                end ;; $_21
              else
                get_local $0
                call $___shgetc
              end ;; $_20
              tee_local $1
              i32.const 40
              i32.eq
              if $_22
                i32.const 1
                set_local $2
              else
                block $_23
                  get_local $11
                  i32.load
                  i32.eqz
                  if $_24
                    block $_25
                      get_global $nan
                      set_local $7
                      br $label$break$L4
                    end ;; $_25
                  end ;; $_24
                  get_local $6
                  get_local $6
                  i32.load
                  i32.const -1
                  i32.add
                  i32.store
                  get_global $nan
                  set_local $7
                  br $label$break$L4
                end ;; $_23
              end ;; $_22
              loop $while-in19
                block $while-out18
                  get_local $6
                  i32.load
                  tee_local $1
                  get_local $11
                  i32.load
                  i32.lt_u
                  if $_26 (result i32)
                    block $_27 (result i32)
                      get_local $6
                      get_local $1
                      i32.const 1
                      i32.add
                      i32.store
                      get_local $1
                      i32.load8_u
                    end ;; $_27
                  else
                    get_local $0
                    call $___shgetc
                  end ;; $_26
                  tee_local $1
                  i32.const -48
                  i32.add
                  i32.const 10
                  i32.lt_u
                  get_local $1
                  i32.const -65
                  i32.add
                  i32.const 26
                  i32.lt_u
                  i32.or
                  i32.eqz
                  if $_28
                    get_local $1
                    i32.const 95
                    i32.eq
                    get_local $1
                    i32.const -97
                    i32.add
                    i32.const 26
                    i32.lt_u
                    i32.or
                    i32.eqz
                    if $_29
                      block $_30
                        get_local $1
                        set_local $3
                        get_local $2
                        set_local $1
                        br $while-out18
                      end ;; $_30
                    end ;; $_29
                  end ;; $_28
                  get_local $2
                  i32.const 1
                  i32.add
                  set_local $2
                  br $while-in19
                end ;; $while-out18
              end ;; $while-in19
              get_local $3
              i32.const 41
              i32.eq
              if $_31
                block $_32
                  get_global $nan
                  set_local $7
                  br $label$break$L4
                end ;; $_32
              end ;; $_31
              get_local $11
              i32.load
              i32.eqz
              tee_local $2
              i32.eqz
              if $_33
                get_local $6
                get_local $6
                i32.load
                i32.const -1
                i32.add
                i32.store
              end ;; $_33
              get_local $5
              i32.eqz
              if $_34
                block $_35
                  call $___errno_location
                  i32.const 22
                  i32.store
                  get_local $0
                  i32.const 0
                  call $___shlim
                  f64.const 0x0.0000000000000p+0
                  set_local $7
                  br $label$break$L4
                end ;; $_35
              end ;; $_34
              get_local $1
              i32.eqz
              if $_36
                block $_37
                  get_global $nan
                  set_local $7
                  br $label$break$L4
                end ;; $_37
              end ;; $_36
              loop $while-in21
                get_local $1
                i32.const -1
                i32.add
                set_local $1
                get_local $2
                i32.eqz
                if $_38
                  get_local $6
                  get_local $6
                  i32.load
                  i32.const -1
                  i32.add
                  i32.store
                end ;; $_38
                get_local $1
                br_if $while-in21
                get_global $nan
                set_local $7
                br $label$break$L4
              end ;; $while-in21
            end ;; $switch-case74
            block $do-once23
              get_local $3
              i32.const 48
              i32.eq
              if $_39
                block $_40
                  get_local $6
                  i32.load
                  tee_local $1
                  get_local $11
                  i32.load
                  i32.lt_u
                  if $_41 (result i32)
                    block $_42 (result i32)
                      get_local $6
                      get_local $1
                      i32.const 1
                      i32.add
                      i32.store
                      get_local $1
                      i32.load8_u
                    end ;; $_42
                  else
                    get_local $0
                    call $___shgetc
                  end ;; $_41
                  tee_local $1
                  i32.const 32
                  i32.or
                  i32.const 120
                  i32.ne
                  if $_43
                    block $_44
                      get_local $11
                      i32.load
                      i32.eqz
                      if $_45
                        block $_46
                          i32.const 48
                          set_local $1
                          br $do-once23
                        end ;; $_46
                      end ;; $_45
                      get_local $6
                      get_local $6
                      i32.load
                      i32.const -1
                      i32.add
                      i32.store
                      i32.const 48
                      set_local $1
                      br $do-once23
                    end ;; $_44
                  end ;; $_43
                  get_local $6
                  i32.load
                  tee_local $1
                  get_local $11
                  i32.load
                  i32.lt_u
                  if $_47 (result i32)
                    block $_48 (result i32)
                      get_local $6
                      get_local $1
                      i32.const 1
                      i32.add
                      i32.store
                      get_local $1
                      i32.load8_u
                      set_local $10
                      i32.const 0
                    end ;; $_48
                  else
                    block $_49 (result i32)
                      get_local $0
                      call $___shgetc
                      set_local $10
                      i32.const 0
                    end ;; $_49
                  end ;; $_47
                  set_local $3
                  block $__rjto$1
                    block $__rjti$1
                      loop $label$continue$L94
                        block $label$break$L94
                          block $switch25
                            block $switch-default28
                              block $switch-case27
                                block $switch-case26
                                  get_local $10
                                  i32.const 46
                                  i32.sub
                                  br_table
                                    $switch-case26 $switch-default28 $switch-case27
                                    $switch-default28 ;; default
                                end ;; $switch-case26
                                br $__rjti$1
                              end ;; $switch-case27
                              br $switch25
                            end ;; $switch-default28
                            i32.const 0
                            set_local $4
                            i32.const 0
                            set_local $5
                            i32.const 0
                            set_local $8
                            i32.const 0
                            set_local $16
                            i32.const 0
                            set_local $15
                            i32.const 0
                            set_local $9
                            f64.const 0x1.0000000000000p+0
                            set_local $13
                            i32.const 0
                            set_local $1
                            f64.const 0x0.0000000000000p+0
                            set_local $7
                            br $label$break$L94
                          end ;; $switch25
                          get_local $6
                          i32.load
                          tee_local $1
                          get_local $11
                          i32.load
                          i32.lt_u
                          if $_50
                            block $_51
                              get_local $6
                              get_local $1
                              i32.const 1
                              i32.add
                              i32.store
                              get_local $1
                              i32.load8_u
                              set_local $10
                              i32.const 1
                              set_local $3
                              br $label$continue$L94
                            end ;; $_51
                          else
                            block $_52
                              get_local $0
                              call $___shgetc
                              set_local $10
                              i32.const 1
                              set_local $3
                              br $label$continue$L94
                            end ;; $_52
                          end ;; $_50
                        end ;; $label$break$L94
                      end ;; $label$continue$L94
                      br $__rjto$1
                    end ;; $__rjti$1
                    get_local $6
                    i32.load
                    tee_local $1
                    get_local $11
                    i32.load
                    i32.lt_u
                    if $_53 (result i32)
                      block $_54 (result i32)
                        get_local $6
                        get_local $1
                        i32.const 1
                        i32.add
                        i32.store
                        get_local $1
                        i32.load8_u
                      end ;; $_54
                    else
                      get_local $0
                      call $___shgetc
                    end ;; $_53
                    tee_local $10
                    i32.const 48
                    i32.eq
                    if $_55
                      block $_56
                        i32.const 0
                        set_local $8
                        i32.const 0
                        set_local $16
                        loop $while-in30
                          get_local $6
                          i32.load
                          tee_local $1
                          get_local $11
                          i32.load
                          i32.lt_u
                          if $_57 (result i32)
                            block $_58 (result i32)
                              get_local $6
                              get_local $1
                              i32.const 1
                              i32.add
                              i32.store
                              get_local $1
                              i32.load8_u
                            end ;; $_58
                          else
                            get_local $0
                            call $___shgetc
                          end ;; $_57
                          set_local $10
                          get_local $8
                          get_local $16
                          i32.const -1
                          i32.const -1
                          call $_i64Add
                          set_local $8
                          get_global $tempRet0
                          set_local $16
                          get_local $10
                          i32.const 48
                          i32.eq
                          br_if $while-in30
                          i32.const 0
                          set_local $4
                          i32.const 0
                          set_local $5
                          i32.const 1
                          set_local $3
                          i32.const 1
                          set_local $15
                          i32.const 0
                          set_local $9
                          f64.const 0x1.0000000000000p+0
                          set_local $13
                          i32.const 0
                          set_local $1
                          f64.const 0x0.0000000000000p+0
                          set_local $7
                        end ;; $while-in30
                      end ;; $_56
                    else
                      block $_59
                        i32.const 0
                        set_local $4
                        i32.const 0
                        set_local $5
                        i32.const 0
                        set_local $8
                        i32.const 0
                        set_local $16
                        i32.const 1
                        set_local $15
                        i32.const 0
                        set_local $9
                        f64.const 0x1.0000000000000p+0
                        set_local $13
                        i32.const 0
                        set_local $1
                        f64.const 0x0.0000000000000p+0
                        set_local $7
                      end ;; $_59
                    end ;; $_55
                  end ;; $__rjto$1
                  loop $while-in32
                    block $while-out31
                      get_local $10
                      i32.const 32
                      i32.or
                      set_local $19
                      block $__rjto$0
                        block $__rjti$0
                          get_local $10
                          i32.const -48
                          i32.add
                          tee_local $14
                          i32.const 10
                          i32.lt_u
                          br_if $__rjti$0
                          get_local $10
                          i32.const 46
                          i32.eq
                          tee_local $22
                          get_local $19
                          i32.const -97
                          i32.add
                          i32.const 6
                          i32.lt_u
                          i32.or
                          i32.eqz
                          br_if $while-out31
                          get_local $22
                          i32.eqz
                          br_if $__rjti$0
                          get_local $15
                          if $_60
                            block $_61
                              i32.const 46
                              set_local $10
                              br $while-out31
                            end ;; $_61
                          else
                            block $_62
                              get_local $5
                              set_local $8
                              get_local $4
                              set_local $16
                              i32.const 1
                              set_local $15
                            end ;; $_62
                          end ;; $_60
                          br $__rjto$0
                        end ;; $__rjti$0
                        get_local $10
                        i32.const 57
                        i32.gt_s
                        if $_63 (result i32)
                          get_local $19
                          i32.const -87
                          i32.add
                        else
                          get_local $14
                        end ;; $_63
                        set_local $3
                        block $do-once33
                          get_local $4
                          i32.const 0
                          i32.lt_s
                          get_local $4
                          i32.eqz
                          get_local $5
                          i32.const 8
                          i32.lt_u
                          i32.and
                          i32.or
                          if $_64 (result f64)
                            block $_65 (result f64)
                              get_local $3
                              get_local $1
                              i32.const 4
                              i32.shl
                              i32.add
                              set_local $1
                              get_local $13
                            end ;; $_65
                          else
                            block $_66 (result f64)
                              get_local $4
                              i32.const 0
                              i32.lt_s
                              get_local $4
                              i32.eqz
                              get_local $5
                              i32.const 14
                              i32.lt_u
                              i32.and
                              i32.or
                              if $_67
                                block $_68
                                  get_local $13
                                  f64.const 0x1.0000000000000p-4
                                  f64.mul
                                  tee_local $13
                                  set_local $20
                                  get_local $7
                                  get_local $13
                                  get_local $3
                                  f64.convert_s/i32
                                  f64.mul
                                  f64.add
                                  set_local $7
                                  br $do-once33
                                end ;; $_68
                              end ;; $_67
                              get_local $9
                              get_local $3
                              i32.eqz
                              i32.or
                              if $_69 (result f64)
                                get_local $13
                              else
                                block $_70 (result f64)
                                  i32.const 1
                                  set_local $9
                                  get_local $7
                                  get_local $13
                                  f64.const 0x1.0000000000000p-1
                                  f64.mul
                                  f64.add
                                  set_local $7
                                  get_local $13
                                end ;; $_70
                              end ;; $_69
                            end ;; $_66
                          end ;; $_64
                          set_local $20
                        end ;; $do-once33
                        get_local $5
                        get_local $4
                        i32.const 1
                        i32.const 0
                        call $_i64Add
                        set_local $5
                        get_global $tempRet0
                        set_local $4
                        i32.const 1
                        set_local $3
                        get_local $20
                        set_local $13
                      end ;; $__rjto$0
                      get_local $6
                      i32.load
                      tee_local $10
                      get_local $11
                      i32.load
                      i32.lt_u
                      if $_71
                        block $_72
                          get_local $6
                          get_local $10
                          i32.const 1
                          i32.add
                          i32.store
                          get_local $10
                          i32.load8_u
                          set_local $10
                          br $while-in32
                        end ;; $_72
                      else
                        block $_73
                          get_local $0
                          call $___shgetc
                          set_local $10
                          br $while-in32
                        end ;; $_73
                      end ;; $_71
                    end ;; $while-out31
                  end ;; $while-in32
                  get_local $3
                  i32.eqz
                  if $_74
                    block $_75
                      get_local $11
                      i32.load
                      i32.eqz
                      tee_local $1
                      i32.eqz
                      if $_76
                        get_local $6
                        get_local $6
                        i32.load
                        i32.const -1
                        i32.add
                        i32.store
                      end ;; $_76
                      get_local $2
                      if $_77
                        get_local $1
                        i32.eqz
                        if $_78
                          block $_79
                            get_local $6
                            get_local $6
                            i32.load
                            tee_local $0
                            i32.const -1
                            i32.add
                            i32.store
                            get_local $15
                            if $_80
                              get_local $6
                              get_local $0
                              i32.const -2
                              i32.add
                              i32.store
                            end ;; $_80
                          end ;; $_79
                        end ;; $_78
                      else
                        get_local $0
                        i32.const 0
                        call $___shlim
                      end ;; $_77
                      get_local $17
                      f64.convert_s/i32
                      f64.const 0x0.0000000000000p+0
                      f64.mul
                      set_local $7
                      br $label$break$L4
                    end ;; $_75
                  end ;; $_74
                  get_local $4
                  i32.const 0
                  i32.lt_s
                  get_local $4
                  i32.eqz
                  get_local $5
                  i32.const 8
                  i32.lt_u
                  i32.and
                  i32.or
                  if $_81
                    block $_82
                      get_local $5
                      set_local $3
                      get_local $4
                      set_local $9
                      loop $while-in36
                        get_local $1
                        i32.const 4
                        i32.shl
                        set_local $1
                        get_local $3
                        get_local $9
                        i32.const 1
                        i32.const 0
                        call $_i64Add
                        set_local $3
                        get_global $tempRet0
                        tee_local $9
                        i32.const 0
                        i32.lt_s
                        get_local $9
                        i32.eqz
                        get_local $3
                        i32.const 8
                        i32.lt_u
                        i32.and
                        i32.or
                        br_if $while-in36
                      end ;; $while-in36
                    end ;; $_82
                  end ;; $_81
                  get_local $10
                  i32.const 32
                  i32.or
                  i32.const 112
                  i32.eq
                  if $_83 (result i32)
                    get_local $0
                    get_local $2
                    call $_scanexp
                    tee_local $3
                    i32.eqz
                    get_global $tempRet0
                    tee_local $9
                    i32.const -2147483648
                    i32.eq
                    i32.and
                    if $_84 (result i32)
                      block $_85 (result i32)
                        get_local $2
                        i32.eqz
                        if $_86
                          block $_87
                            get_local $0
                            i32.const 0
                            call $___shlim
                            f64.const 0x0.0000000000000p+0
                            set_local $7
                            br $label$break$L4
                          end ;; $_87
                        end ;; $_86
                        get_local $11
                        i32.load
                        if $_88 (result i32)
                          block $_89 (result i32)
                            get_local $6
                            get_local $6
                            i32.load
                            i32.const -1
                            i32.add
                            i32.store
                            i32.const 0
                            set_local $2
                            i32.const 0
                          end ;; $_89
                        else
                          block $_90 (result i32)
                            i32.const 0
                            set_local $2
                            i32.const 0
                          end ;; $_90
                        end ;; $_88
                      end ;; $_85
                    else
                      block $_91 (result i32)
                        get_local $9
                        set_local $2
                        get_local $3
                      end ;; $_91
                    end ;; $_84
                  else
                    get_local $11
                    i32.load
                    if $_92 (result i32)
                      block $_93 (result i32)
                        get_local $6
                        get_local $6
                        i32.load
                        i32.const -1
                        i32.add
                        i32.store
                        i32.const 0
                        set_local $2
                        i32.const 0
                      end ;; $_93
                    else
                      block $_94 (result i32)
                        i32.const 0
                        set_local $2
                        i32.const 0
                      end ;; $_94
                    end ;; $_92
                  end ;; $_83
                  set_local $0
                  get_local $15
                  i32.eqz
                  tee_local $3
                  if $_95 (result i32)
                    get_local $5
                  else
                    get_local $8
                  end ;; $_95
                  get_local $3
                  if $_96 (result i32)
                    get_local $4
                  else
                    get_local $16
                  end ;; $_96
                  i32.const 2
                  call $_bitshift64Shl
                  get_global $tempRet0
                  i32.const -32
                  i32.const -1
                  call $_i64Add
                  get_global $tempRet0
                  get_local $0
                  get_local $2
                  call $_i64Add
                  set_local $0
                  get_local $1
                  i32.eqz
                  if $_97
                    block $_98
                      get_local $17
                      f64.convert_s/i32
                      f64.const 0x0.0000000000000p+0
                      f64.mul
                      set_local $7
                      br $label$break$L4
                    end ;; $_98
                  end ;; $_97
                  get_global $tempRet0
                  tee_local $2
                  i32.const 0
                  i32.gt_s
                  get_local $2
                  i32.eqz
                  get_local $0
                  i32.const 0
                  get_local $21
                  i32.sub
                  i32.gt_u
                  i32.and
                  i32.or
                  if $_99
                    block $_100
                      call $___errno_location
                      i32.const 34
                      i32.store
                      get_local $17
                      f64.convert_s/i32
                      f64.const 0x1.fffffffffffffp+1023
                      f64.mul
                      f64.const 0x1.fffffffffffffp+1023
                      f64.mul
                      set_local $7
                      br $label$break$L4
                    end ;; $_100
                  end ;; $_99
                  get_local $2
                  get_local $21
                  i32.const -106
                  i32.add
                  tee_local $3
                  i32.const 0
                  i32.lt_s
                  i32.const 31
                  i32.shl
                  i32.const 31
                  i32.shr_s
                  tee_local $4
                  i32.lt_s
                  get_local $2
                  get_local $4
                  i32.eq
                  get_local $0
                  get_local $3
                  i32.lt_u
                  i32.and
                  i32.or
                  if $_101
                    block $_102
                      call $___errno_location
                      i32.const 34
                      i32.store
                      get_local $17
                      f64.convert_s/i32
                      f64.const 0x1.0000000000000p-1022
                      f64.mul
                      f64.const 0x1.0000000000000p-1022
                      f64.mul
                      set_local $7
                      br $label$break$L4
                    end ;; $_102
                  end ;; $_101
                  get_local $1
                  i32.const -1
                  i32.gt_s
                  if $_103
                    loop $while-in38
                      get_local $7
                      f64.const 0x1.0000000000000p-1
                      f64.ge
                      i32.eqz
                      tee_local $3
                      get_local $1
                      i32.const 1
                      i32.shl
                      i32.or
                      tee_local $4
                      i32.const 1
                      i32.xor
                      set_local $1
                      get_local $7
                      get_local $3
                      if $_104 (result f64)
                        get_local $7
                      else
                        get_local $7
                        f64.const -0x1.0000000000000p+0
                        f64.add
                      end ;; $_104
                      f64.add
                      set_local $7
                      get_local $0
                      get_local $2
                      i32.const -1
                      i32.const -1
                      call $_i64Add
                      set_local $0
                      get_global $tempRet0
                      set_local $2
                      get_local $4
                      i32.const -1
                      i32.gt_s
                      br_if $while-in38
                      get_local $0
                      set_local $3
                    end ;; $while-in38
                  else
                    get_local $0
                    set_local $3
                  end ;; $_103
                  get_local $3
                  get_local $2
                  i32.const 32
                  i32.const 0
                  get_local $21
                  get_local $21
                  i32.const 0
                  i32.lt_s
                  i32.const 31
                  i32.shl
                  i32.const 31
                  i32.shr_s
                  call $_i64Subtract
                  get_global $tempRet0
                  call $_i64Add
                  set_local $0
                  block $__rjto$3
                    block $__rjti$3
                      i32.const 0
                      get_global $tempRet0
                      tee_local $2
                      i32.gt_s
                      get_local $2
                      i32.eqz
                      get_local $18
                      get_local $0
                      i32.gt_u
                      i32.and
                      i32.or
                      if $_105
                        get_local $0
                        i32.const 0
                        i32.lt_s
                        if $_106
                          block $_107
                            i32.const 0
                            set_local $0
                            br $__rjti$3
                          end ;; $_107
                        end ;; $_106
                      else
                        get_local $18
                        set_local $0
                      end ;; $_105
                      get_local $0
                      i32.const 53
                      i32.lt_s
                      br_if $__rjti$3
                      get_local $0
                      set_local $2
                      get_local $17
                      f64.convert_s/i32
                      set_local $13
                      f64.const 0x0.0000000000000p+0
                      set_local $20
                      br $__rjto$3
                    end ;; $__rjti$3
                    get_local $0
                    set_local $2
                    get_local $17
                    f64.convert_s/i32
                    tee_local $20
                    set_local $13
                    f64.const 0x1.0000000000000p+0
                    i32.const 84
                    get_local $0
                    i32.sub
                    call $_scalbn
                    get_local $20
                    call $_copysignl
                    set_local $20
                  end ;; $__rjto$3
                  get_local $13
                  get_local $1
                  i32.const 1
                  i32.and
                  i32.eqz
                  get_local $7
                  f64.const 0x0.0000000000000p+0
                  f64.ne
                  get_local $2
                  i32.const 32
                  i32.lt_s
                  i32.and
                  i32.and
                  tee_local $0
                  if $_108 (result f64)
                    f64.const 0x0.0000000000000p+0
                  else
                    get_local $7
                  end ;; $_108
                  f64.mul
                  get_local $20
                  get_local $13
                  get_local $0
                  get_local $1
                  i32.add
                  f64.convert_u/i32
                  f64.mul
                  f64.add
                  f64.add
                  get_local $20
                  f64.sub
                  tee_local $7
                  f64.const 0x0.0000000000000p+0
                  f64.eq
                  if $_109
                    call $___errno_location
                    i32.const 34
                    i32.store
                  end ;; $_109
                  get_local $7
                  get_local $3
                  call $_scalbnl
                  set_local $7
                  br $label$break$L4
                end ;; $_40
              else
                get_local $3
                set_local $1
              end ;; $_39
            end ;; $do-once23
            i32.const 0
            get_local $21
            get_local $18
            i32.add
            tee_local $27
            i32.sub
            set_local $28
            i32.const 0
            set_local $4
            block $__rjto$6
              block $__rjti$6
                loop $label$continue$L184
                  block $label$break$L184
                    block $switch39
                      block $switch-default42
                        block $switch-case41
                          block $switch-case40
                            get_local $1
                            i32.const 46
                            i32.sub
                            br_table
                              $switch-case40 $switch-default42 $switch-case41
                              $switch-default42 ;; default
                          end ;; $switch-case40
                          br $__rjti$6
                        end ;; $switch-case41
                        br $switch39
                      end ;; $switch-default42
                      i32.const 0
                      set_local $3
                      i32.const 0
                      set_local $8
                      i32.const 0
                      set_local $10
                      br $label$break$L184
                    end ;; $switch39
                    get_local $6
                    i32.load
                    tee_local $1
                    get_local $11
                    i32.load
                    i32.lt_u
                    if $_110
                      block $_111
                        get_local $6
                        get_local $1
                        i32.const 1
                        i32.add
                        i32.store
                        get_local $1
                        i32.load8_u
                        set_local $1
                        i32.const 1
                        set_local $4
                        br $label$continue$L184
                      end ;; $_111
                    else
                      block $_112
                        get_local $0
                        call $___shgetc
                        set_local $1
                        i32.const 1
                        set_local $4
                        br $label$continue$L184
                      end ;; $_112
                    end ;; $_110
                  end ;; $label$break$L184
                end ;; $label$continue$L184
                br $__rjto$6
              end ;; $__rjti$6
              get_local $6
              i32.load
              tee_local $1
              get_local $11
              i32.load
              i32.lt_u
              if $_113 (result i32)
                block $_114 (result i32)
                  get_local $6
                  get_local $1
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $1
                  i32.load8_u
                end ;; $_114
              else
                get_local $0
                call $___shgetc
              end ;; $_113
              tee_local $1
              i32.const 48
              i32.eq
              if $_115
                block $_116
                  i32.const 0
                  set_local $3
                  i32.const 0
                  set_local $8
                  loop $while-in44
                    get_local $3
                    get_local $8
                    i32.const -1
                    i32.const -1
                    call $_i64Add
                    set_local $3
                    get_global $tempRet0
                    set_local $8
                    get_local $6
                    i32.load
                    tee_local $1
                    get_local $11
                    i32.load
                    i32.lt_u
                    if $_117 (result i32)
                      block $_118 (result i32)
                        get_local $6
                        get_local $1
                        i32.const 1
                        i32.add
                        i32.store
                        get_local $1
                        i32.load8_u
                      end ;; $_118
                    else
                      get_local $0
                      call $___shgetc
                    end ;; $_117
                    tee_local $1
                    i32.const 48
                    i32.eq
                    br_if $while-in44
                    i32.const 1
                    set_local $4
                    i32.const 1
                    set_local $10
                  end ;; $while-in44
                end ;; $_116
              else
                block $_119
                  i32.const 0
                  set_local $3
                  i32.const 0
                  set_local $8
                  i32.const 1
                  set_local $10
                end ;; $_119
              end ;; $_115
            end ;; $__rjto$6
            get_local $12
            i32.const 0
            i32.store
            block $do-once50
              block $__rjti$11
                block $__rjti$10
                  block $__rjti$9
                    block $__rjti$8
                      block $__rjti$7
                        get_local $1
                        i32.const 46
                        i32.eq
                        tee_local $23
                        get_local $1
                        i32.const -48
                        i32.add
                        tee_local $22
                        i32.const 10
                        i32.lt_u
                        i32.or
                        if $_120
                          block $_121
                            get_local $12
                            i32.const 496
                            i32.add
                            set_local $25
                            get_local $1
                            set_local $19
                            i32.const 0
                            set_local $5
                            i32.const 0
                            set_local $9
                            get_local $3
                            set_local $1
                            get_local $8
                            set_local $3
                            i32.const 0
                            set_local $8
                            i32.const 0
                            set_local $15
                            i32.const 0
                            set_local $16
                            loop $label$continue$L205
                              block $label$break$L205
                                block $do-once46
                                  get_local $23
                                  if $_122
                                    get_local $10
                                    if $_123
                                      br $label$break$L205
                                    else
                                      block $_124
                                        get_local $5
                                        set_local $1
                                        get_local $9
                                        set_local $3
                                        i32.const 1
                                        set_local $10
                                      end ;; $_124
                                    end ;; $_123
                                  else
                                    block $_125
                                      get_local $5
                                      get_local $9
                                      i32.const 1
                                      i32.const 0
                                      call $_i64Add
                                      set_local $14
                                      get_global $tempRet0
                                      set_local $9
                                      get_local $19
                                      i32.const 48
                                      i32.ne
                                      set_local $23
                                      get_local $15
                                      i32.const 125
                                      i32.ge_s
                                      if $_126
                                        block $_127
                                          get_local $23
                                          i32.eqz
                                          if $_128
                                            block $_129
                                              get_local $14
                                              set_local $5
                                              br $do-once46
                                            end ;; $_129
                                          end ;; $_128
                                          get_local $25
                                          get_local $25
                                          i32.load
                                          i32.const 1
                                          i32.or
                                          i32.store
                                          get_local $14
                                          set_local $5
                                          br $do-once46
                                        end ;; $_127
                                      end ;; $_126
                                      get_local $12
                                      get_local $15
                                      i32.const 2
                                      i32.shl
                                      i32.add
                                      set_local $4
                                      get_local $8
                                      if $_130
                                        get_local $19
                                        i32.const -48
                                        i32.add
                                        get_local $4
                                        i32.load
                                        i32.const 10
                                        i32.mul
                                        i32.add
                                        set_local $22
                                      end ;; $_130
                                      get_local $4
                                      get_local $22
                                      i32.store
                                      get_local $14
                                      set_local $5
                                      i32.const 1
                                      set_local $4
                                      get_local $8
                                      i32.const 1
                                      i32.add
                                      tee_local $8
                                      i32.const 9
                                      i32.eq
                                      tee_local $19
                                      if $_131
                                        i32.const 0
                                        set_local $8
                                      end ;; $_131
                                      get_local $19
                                      get_local $15
                                      i32.add
                                      set_local $15
                                      get_local $23
                                      if $_132
                                        get_local $14
                                        set_local $16
                                      end ;; $_132
                                    end ;; $_125
                                  end ;; $_122
                                end ;; $do-once46
                                get_local $6
                                i32.load
                                tee_local $14
                                get_local $11
                                i32.load
                                i32.lt_u
                                if $_133 (result i32)
                                  block $_134 (result i32)
                                    get_local $6
                                    get_local $14
                                    i32.const 1
                                    i32.add
                                    i32.store
                                    get_local $14
                                    i32.load8_u
                                  end ;; $_134
                                else
                                  get_local $0
                                  call $___shgetc
                                end ;; $_133
                                tee_local $14
                                i32.const 46
                                i32.eq
                                tee_local $23
                                get_local $14
                                i32.const -48
                                i32.add
                                tee_local $22
                                i32.const 10
                                i32.lt_u
                                i32.or
                                if $_135
                                  block $_136
                                    get_local $14
                                    set_local $19
                                    br $label$continue$L205
                                  end ;; $_136
                                else
                                  block $_137
                                    get_local $1
                                    set_local $19
                                    get_local $3
                                    set_local $22
                                    get_local $4
                                    set_local $23
                                    get_local $8
                                    set_local $1
                                    br $__rjti$7
                                  end ;; $_137
                                end ;; $_135
                              end ;; $label$break$L205
                            end ;; $label$continue$L205
                            get_local $1
                            set_local $2
                            get_local $4
                            i32.const 0
                            i32.ne
                            set_local $4
                            get_local $8
                            set_local $1
                            br $__rjti$8
                          end ;; $_121
                        else
                          block $_138
                            get_local $1
                            set_local $14
                            get_local $3
                            set_local $19
                            i32.const 0
                            set_local $5
                            get_local $8
                            set_local $22
                            i32.const 0
                            set_local $9
                            get_local $4
                            set_local $23
                            i32.const 0
                            set_local $1
                            i32.const 0
                            set_local $15
                            i32.const 0
                            set_local $16
                          end ;; $_138
                        end ;; $_120
                      end ;; $__rjti$7
                      get_local $10
                      i32.eqz
                      tee_local $4
                      if $_139 (result i32)
                        get_local $5
                      else
                        get_local $19
                      end ;; $_139
                      set_local $3
                      get_local $4
                      if $_140 (result i32)
                        get_local $9
                      else
                        get_local $22
                      end ;; $_140
                      set_local $4
                      get_local $14
                      i32.const 32
                      i32.or
                      i32.const 101
                      i32.eq
                      get_local $23
                      i32.const 0
                      i32.ne
                      tee_local $8
                      i32.and
                      i32.eqz
                      if $_141
                        get_local $14
                        i32.const -1
                        i32.gt_s
                        if $_142
                          block $_143
                            get_local $3
                            set_local $2
                            get_local $4
                            set_local $3
                            get_local $8
                            set_local $4
                            br $__rjti$8
                          end ;; $_143
                        else
                          block $_144
                            get_local $3
                            set_local $2
                            get_local $4
                            set_local $3
                            br $__rjti$9
                          end ;; $_144
                        end ;; $_142
                      end ;; $_141
                      get_local $0
                      get_local $2
                      call $_scanexp
                      tee_local $8
                      i32.eqz
                      get_global $tempRet0
                      tee_local $10
                      i32.const -2147483648
                      i32.eq
                      i32.and
                      if $_145 (result i32)
                        block $_146 (result i32)
                          get_local $2
                          i32.eqz
                          if $_147
                            block $_148
                              get_local $0
                              i32.const 0
                              call $___shlim
                              f64.const 0x0.0000000000000p+0
                              set_local $7
                              br $do-once50
                            end ;; $_148
                          end ;; $_147
                          get_local $11
                          i32.load
                          if $_149 (result i32)
                            block $_150 (result i32)
                              get_local $6
                              get_local $6
                              i32.load
                              i32.const -1
                              i32.add
                              i32.store
                              i32.const 0
                              set_local $2
                              i32.const 0
                            end ;; $_150
                          else
                            block $_151 (result i32)
                              i32.const 0
                              set_local $2
                              i32.const 0
                            end ;; $_151
                          end ;; $_149
                        end ;; $_146
                      else
                        block $_152 (result i32)
                          get_local $10
                          set_local $2
                          get_local $8
                        end ;; $_152
                      end ;; $_145
                      tee_local $0
                      get_local $2
                      get_local $3
                      get_local $4
                      call $_i64Add
                      set_local $0
                      get_global $tempRet0
                      set_local $3
                      get_local $15
                      set_local $2
                      br $__rjti$11
                    end ;; $__rjti$8
                    get_local $11
                    i32.load
                    if $_153
                      block $_154
                        get_local $6
                        get_local $6
                        i32.load
                        i32.const -1
                        i32.add
                        i32.store
                        get_local $4
                        i32.eqz
                        br_if $__rjti$10
                        get_local $2
                        set_local $0
                        get_local $15
                        set_local $2
                        br $__rjti$11
                      end ;; $_154
                    else
                      block $_155
                        get_local $4
                        set_local $8
                        br $__rjti$9
                      end ;; $_155
                    end ;; $_153
                    br $do-once50
                  end ;; $__rjti$9
                  get_local $8
                  i32.eqz
                  br_if $__rjti$10
                  get_local $2
                  set_local $0
                  get_local $15
                  set_local $2
                  br $__rjti$11
                end ;; $__rjti$10
                call $___errno_location
                i32.const 22
                i32.store
                get_local $0
                i32.const 0
                call $___shlim
                f64.const 0x0.0000000000000p+0
                set_local $7
                br $do-once50
              end ;; $__rjti$11
              get_local $12
              i32.load
              tee_local $4
              i32.eqz
              if $_156
                block $_157
                  get_local $17
                  f64.convert_s/i32
                  f64.const 0x0.0000000000000p+0
                  f64.mul
                  set_local $7
                  br $do-once50
                end ;; $_157
              end ;; $_156
              get_local $9
              i32.const 0
              i32.lt_s
              get_local $9
              i32.eqz
              get_local $5
              i32.const 10
              i32.lt_u
              i32.and
              i32.or
              get_local $0
              get_local $5
              i32.eq
              get_local $3
              get_local $9
              i32.eq
              i32.and
              i32.and
              if $_158
                get_local $18
                i32.const 30
                i32.gt_u
                get_local $4
                get_local $18
                i32.shr_u
                i32.eqz
                i32.or
                if $_159
                  block $_160
                    get_local $17
                    f64.convert_s/i32
                    get_local $4
                    f64.convert_u/i32
                    f64.mul
                    set_local $7
                    br $do-once50
                  end ;; $_160
                end ;; $_159
              end ;; $_158
              get_local $3
              get_local $21
              i32.const -2
              i32.div_s
              tee_local $4
              i32.const 0
              i32.lt_s
              i32.const 31
              i32.shl
              i32.const 31
              i32.shr_s
              tee_local $5
              i32.gt_s
              get_local $3
              get_local $5
              i32.eq
              get_local $0
              get_local $4
              i32.gt_u
              i32.and
              i32.or
              if $_161
                block $_162
                  call $___errno_location
                  i32.const 34
                  i32.store
                  get_local $17
                  f64.convert_s/i32
                  f64.const 0x1.fffffffffffffp+1023
                  f64.mul
                  f64.const 0x1.fffffffffffffp+1023
                  f64.mul
                  set_local $7
                  br $do-once50
                end ;; $_162
              end ;; $_161
              get_local $3
              get_local $21
              i32.const -106
              i32.add
              tee_local $4
              i32.const 0
              i32.lt_s
              i32.const 31
              i32.shl
              i32.const 31
              i32.shr_s
              tee_local $5
              i32.lt_s
              get_local $3
              get_local $5
              i32.eq
              get_local $0
              get_local $4
              i32.lt_u
              i32.and
              i32.or
              if $_163
                block $_164
                  call $___errno_location
                  i32.const 34
                  i32.store
                  get_local $17
                  f64.convert_s/i32
                  f64.const 0x1.0000000000000p-1022
                  f64.mul
                  f64.const 0x1.0000000000000p-1022
                  f64.mul
                  set_local $7
                  br $do-once50
                end ;; $_164
              end ;; $_163
              get_local $1
              if $_165
                block $_166
                  get_local $1
                  i32.const 9
                  i32.lt_s
                  if $_167
                    block $_168
                      get_local $12
                      get_local $2
                      i32.const 2
                      i32.shl
                      i32.add
                      tee_local $5
                      i32.load
                      set_local $3
                      get_local $1
                      set_local $4
                      loop $while-in53
                        get_local $3
                        i32.const 10
                        i32.mul
                        set_local $1
                        get_local $4
                        i32.const 1
                        i32.add
                        tee_local $4
                        i32.const 9
                        i32.ne
                        if $_169
                          block $_170
                            get_local $1
                            set_local $3
                            br $while-in53
                          end ;; $_170
                        end ;; $_169
                      end ;; $while-in53
                      get_local $5
                      get_local $1
                      i32.store
                    end ;; $_168
                  end ;; $_167
                  get_local $2
                  i32.const 1
                  i32.add
                  set_local $2
                end ;; $_166
              end ;; $_165
              get_local $16
              i32.const 9
              i32.lt_s
              if $_171
                get_local $16
                get_local $0
                i32.le_s
                get_local $0
                i32.const 18
                i32.lt_s
                i32.and
                if $_172
                  block $_173
                    get_local $0
                    i32.const 9
                    i32.eq
                    if $_174
                      block $_175
                        get_local $17
                        f64.convert_s/i32
                        get_local $12
                        i32.load
                        f64.convert_u/i32
                        f64.mul
                        set_local $7
                        br $do-once50
                      end ;; $_175
                    end ;; $_174
                    get_local $0
                    i32.const 9
                    i32.lt_s
                    if $_176
                      block $_177
                        get_local $17
                        f64.convert_s/i32
                        get_local $12
                        i32.load
                        f64.convert_u/i32
                        f64.mul
                        i32.const 0
                        get_local $0
                        i32.sub
                        i32.const 2
                        i32.shl
                        i32.const 6280
                        i32.add
                        i32.load
                        f64.convert_s/i32
                        f64.div
                        set_local $7
                        br $do-once50
                      end ;; $_177
                    end ;; $_176
                    get_local $18
                    i32.const 27
                    i32.add
                    get_local $0
                    i32.const -3
                    i32.mul
                    i32.add
                    tee_local $1
                    i32.const 30
                    i32.gt_s
                    get_local $12
                    i32.load
                    tee_local $3
                    get_local $1
                    i32.shr_u
                    i32.eqz
                    i32.or
                    if $_178
                      block $_179
                        get_local $17
                        f64.convert_s/i32
                        get_local $3
                        f64.convert_u/i32
                        f64.mul
                        get_local $0
                        i32.const 2
                        i32.shl
                        i32.const 6208
                        i32.add
                        i32.load
                        f64.convert_s/i32
                        f64.mul
                        set_local $7
                        br $do-once50
                      end ;; $_179
                    end ;; $_178
                  end ;; $_173
                end ;; $_172
              end ;; $_171
              get_local $0
              i32.const 9
              i32.rem_s
              tee_local $1
              if $_180 (result i32)
                block $_181 (result i32)
                  i32.const 0
                  get_local $0
                  i32.const -1
                  i32.gt_s
                  if $_182 (result i32)
                    get_local $1
                  else
                    get_local $1
                    i32.const 9
                    i32.add
                  end ;; $_182
                  tee_local $4
                  i32.sub
                  i32.const 2
                  i32.shl
                  i32.const 6280
                  i32.add
                  i32.load
                  set_local $9
                  get_local $2
                  if $_183
                    block $_184
                      i32.const 1000000000
                      get_local $9
                      i32.div_s
                      set_local $16
                      i32.const 0
                      set_local $1
                      i32.const 0
                      set_local $3
                      i32.const 0
                      set_local $5
                      loop $while-in55
                        get_local $12
                        get_local $5
                        i32.const 2
                        i32.shl
                        i32.add
                        tee_local $15
                        i32.load
                        tee_local $10
                        get_local $9
                        i32.div_u
                        get_local $3
                        i32.add
                        set_local $8
                        get_local $15
                        get_local $8
                        i32.store
                        get_local $10
                        get_local $9
                        i32.rem_u
                        get_local $16
                        i32.mul
                        set_local $3
                        get_local $5
                        get_local $1
                        i32.eq
                        get_local $8
                        i32.eqz
                        i32.and
                        set_local $8
                        get_local $5
                        i32.const 1
                        i32.add
                        set_local $5
                        get_local $8
                        if $_185
                          get_local $0
                          i32.const -9
                          i32.add
                          set_local $0
                        end ;; $_185
                        get_local $8
                        if $_186
                          get_local $5
                          i32.const 127
                          i32.and
                          set_local $1
                        end ;; $_186
                        get_local $5
                        get_local $2
                        i32.ne
                        br_if $while-in55
                      end ;; $while-in55
                      get_local $3
                      if $_187
                        block $_188
                          get_local $12
                          get_local $2
                          i32.const 2
                          i32.shl
                          i32.add
                          get_local $3
                          i32.store
                          get_local $2
                          i32.const 1
                          i32.add
                          set_local $2
                        end ;; $_188
                      end ;; $_187
                    end ;; $_184
                  else
                    block $_189
                      i32.const 0
                      set_local $1
                      i32.const 0
                      set_local $2
                    end ;; $_189
                  end ;; $_183
                  i32.const 0
                  set_local $3
                  i32.const 9
                  get_local $4
                  i32.sub
                  get_local $0
                  i32.add
                  set_local $4
                  get_local $2
                end ;; $_181
              else
                block $_190 (result i32)
                  i32.const 0
                  set_local $1
                  i32.const 0
                  set_local $3
                  get_local $0
                  set_local $4
                  get_local $2
                end ;; $_190
              end ;; $_180
              set_local $0
              loop $label$continue$L284
                block $label$break$L284
                  get_local $4
                  i32.const 18
                  i32.lt_s
                  set_local $16
                  get_local $4
                  i32.const 18
                  i32.eq
                  set_local $15
                  get_local $12
                  get_local $1
                  i32.const 2
                  i32.shl
                  i32.add
                  set_local $10
                  get_local $3
                  set_local $2
                  loop $while-in57
                    get_local $16
                    i32.eqz
                    if $_191
                      block $_192
                        get_local $15
                        i32.eqz
                        if $_193
                          block $_194
                            get_local $4
                            set_local $3
                            br $label$break$L284
                          end ;; $_194
                        end ;; $_193
                        get_local $10
                        i32.load
                        i32.const 9007199
                        i32.ge_u
                        if $_195
                          block $_196
                            i32.const 18
                            set_local $3
                            br $label$break$L284
                          end ;; $_196
                        end ;; $_195
                      end ;; $_192
                    end ;; $_191
                    i32.const 0
                    set_local $3
                    get_local $0
                    i32.const 127
                    i32.add
                    set_local $5
                    loop $while-in59
                      get_local $12
                      get_local $5
                      i32.const 127
                      i32.and
                      tee_local $8
                      i32.const 2
                      i32.shl
                      i32.add
                      tee_local $14
                      i32.load
                      i32.const 0
                      i32.const 29
                      call $_bitshift64Shl
                      get_global $tempRet0
                      get_local $3
                      i32.const 0
                      call $_i64Add
                      set_local $3
                      get_global $tempRet0
                      tee_local $5
                      i32.const 0
                      i32.gt_u
                      get_local $5
                      i32.eqz
                      get_local $3
                      i32.const 1000000000
                      i32.gt_u
                      i32.and
                      i32.or
                      if $_197 (result i32)
                        block $_198 (result i32)
                          get_local $3
                          get_local $5
                          i32.const 1000000000
                          i32.const 0
                          call $___udivdi3
                          set_local $9
                          get_local $3
                          get_local $5
                          i32.const 1000000000
                          i32.const 0
                          call $___uremdi3
                          set_local $5
                          get_local $9
                        end ;; $_198
                      else
                        block $_199 (result i32)
                          get_local $3
                          set_local $5
                          i32.const 0
                        end ;; $_199
                      end ;; $_197
                      set_local $3
                      get_local $14
                      get_local $5
                      i32.store
                      get_local $8
                      get_local $0
                      i32.const 127
                      i32.add
                      i32.const 127
                      i32.and
                      i32.ne
                      get_local $8
                      get_local $1
                      i32.eq
                      tee_local $9
                      i32.or
                      i32.eqz
                      if $_200
                        get_local $5
                        if $_201 (result i32)
                          get_local $0
                        else
                          get_local $8
                        end ;; $_201
                        set_local $0
                      end ;; $_200
                      get_local $9
                      if $_202
                        get_local $3
                        set_local $5
                      else
                        block $_203
                          get_local $8
                          i32.const -1
                          i32.add
                          set_local $5
                          br $while-in59
                        end ;; $_203
                      end ;; $_202
                    end ;; $while-in59
                    get_local $2
                    i32.const -29
                    i32.add
                    set_local $2
                    get_local $5
                    i32.eqz
                    br_if $while-in57
                    get_local $2
                    set_local $3
                  end ;; $while-in57
                  get_local $1
                  i32.const 127
                  i32.add
                  i32.const 127
                  i32.and
                  tee_local $1
                  get_local $0
                  i32.eq
                  if $_204
                    get_local $12
                    get_local $0
                    i32.const 126
                    i32.add
                    i32.const 127
                    i32.and
                    i32.const 2
                    i32.shl
                    i32.add
                    tee_local $2
                    get_local $2
                    i32.load
                    get_local $12
                    get_local $0
                    i32.const 127
                    i32.add
                    i32.const 127
                    i32.and
                    tee_local $0
                    i32.const 2
                    i32.shl
                    i32.add
                    i32.load
                    i32.or
                    i32.store
                  end ;; $_204
                  get_local $12
                  get_local $1
                  i32.const 2
                  i32.shl
                  i32.add
                  get_local $5
                  i32.store
                  get_local $4
                  i32.const 9
                  i32.add
                  set_local $4
                  br $label$continue$L284
                end ;; $label$break$L284
              end ;; $label$continue$L284
              block $__rjto$5
                block $__rjti$5
                  loop $label$continue$L302
                    block $label$break$L302
                      get_local $0
                      i32.const 1
                      i32.add
                      i32.const 127
                      i32.and
                      set_local $4
                      get_local $12
                      get_local $0
                      i32.const 127
                      i32.add
                      i32.const 127
                      i32.and
                      i32.const 2
                      i32.shl
                      i32.add
                      set_local $15
                      loop $while-in61
                        get_local $3
                        i32.const 18
                        i32.eq
                        set_local $9
                        get_local $3
                        i32.const 27
                        i32.gt_s
                        if $_205 (result i32)
                          i32.const 9
                        else
                          i32.const 1
                        end ;; $_205
                        set_local $16
                        get_local $9
                        i32.const 1
                        i32.xor
                        set_local $8
                        loop $while-in63
                          block $__rjto$4
                            block $__rjti$4
                              get_local $1
                              i32.const 127
                              i32.and
                              tee_local $5
                              get_local $0
                              i32.eq
                              tee_local $10
                              br_if $__rjti$4
                              get_local $12
                              get_local $5
                              i32.const 2
                              i32.shl
                              i32.add
                              i32.load
                              tee_local $14
                              i32.const 9007199
                              i32.lt_u
                              br_if $__rjti$4
                              get_local $14
                              i32.const 9007199
                              i32.gt_u
                              br_if $__rjto$4
                              get_local $1
                              i32.const 1
                              i32.add
                              i32.const 127
                              i32.and
                              tee_local $14
                              get_local $0
                              i32.eq
                              br_if $__rjti$4
                              get_local $12
                              get_local $14
                              i32.const 2
                              i32.shl
                              i32.add
                              i32.load
                              tee_local $14
                              i32.const 254740991
                              i32.lt_u
                              br_if $__rjti$4
                              get_local $14
                              i32.const 254740991
                              i32.gt_u
                              get_local $8
                              i32.or
                              i32.eqz
                              if $_206
                                block $_207
                                  get_local $5
                                  set_local $3
                                  br $label$break$L302
                                end ;; $_207
                              end ;; $_206
                              br $__rjto$4
                            end ;; $__rjti$4
                            get_local $9
                            br_if $__rjti$5
                          end ;; $__rjto$4
                          get_local $2
                          get_local $16
                          i32.add
                          set_local $2
                          get_local $1
                          get_local $0
                          i32.eq
                          if $_208
                            block $_209
                              get_local $0
                              set_local $1
                              br $while-in63
                            end ;; $_209
                          end ;; $_208
                        end ;; $while-in63
                        i32.const 1
                        get_local $16
                        i32.shl
                        i32.const -1
                        i32.add
                        set_local $10
                        i32.const 1000000000
                        get_local $16
                        i32.shr_u
                        set_local $14
                        get_local $1
                        set_local $5
                        i32.const 0
                        set_local $9
                        get_local $1
                        set_local $8
                        loop $while-in67
                          get_local $12
                          get_local $8
                          i32.const 2
                          i32.shl
                          i32.add
                          tee_local $19
                          i32.load
                          tee_local $22
                          get_local $16
                          i32.shr_u
                          get_local $9
                          i32.add
                          set_local $1
                          get_local $19
                          get_local $1
                          i32.store
                          get_local $22
                          get_local $10
                          i32.and
                          get_local $14
                          i32.mul
                          set_local $9
                          get_local $8
                          get_local $5
                          i32.eq
                          get_local $1
                          i32.eqz
                          i32.and
                          set_local $1
                          get_local $8
                          i32.const 1
                          i32.add
                          i32.const 127
                          i32.and
                          set_local $8
                          get_local $1
                          if $_210
                            get_local $3
                            i32.const -9
                            i32.add
                            set_local $3
                          end ;; $_210
                          get_local $1
                          if $_211 (result i32)
                            get_local $8
                          else
                            get_local $5
                          end ;; $_211
                          set_local $1
                          get_local $8
                          get_local $0
                          i32.ne
                          if $_212
                            block $_213
                              get_local $1
                              set_local $5
                              br $while-in67
                            end ;; $_213
                          end ;; $_212
                        end ;; $while-in67
                        get_local $9
                        i32.eqz
                        br_if $while-in61
                        get_local $4
                        get_local $1
                        i32.eq
                        if $_214
                          block $_215
                            get_local $15
                            get_local $15
                            i32.load
                            i32.const 1
                            i32.or
                            i32.store
                            br $while-in61
                          end ;; $_215
                        end ;; $_214
                      end ;; $while-in61
                      get_local $12
                      get_local $0
                      i32.const 2
                      i32.shl
                      i32.add
                      get_local $9
                      i32.store
                      get_local $4
                      set_local $0
                      br $label$continue$L302
                    end ;; $label$break$L302
                  end ;; $label$continue$L302
                  br $__rjto$5
                end ;; $__rjti$5
                get_local $10
                if $_216
                  block $_217
                    get_local $12
                    get_local $4
                    i32.const -1
                    i32.add
                    i32.const 2
                    i32.shl
                    i32.add
                    i32.const 0
                    i32.store
                    get_local $0
                    set_local $3
                    get_local $4
                    set_local $0
                  end ;; $_217
                else
                  get_local $5
                  set_local $3
                end ;; $_216
              end ;; $__rjto$5
              get_local $12
              get_local $3
              i32.const 2
              i32.shl
              i32.add
              i32.load
              f64.convert_u/i32
              set_local $7
              get_local $1
              i32.const 1
              i32.add
              i32.const 127
              i32.and
              tee_local $4
              get_local $0
              i32.eq
              if $_218
                get_local $12
                get_local $1
                i32.const 2
                i32.add
                i32.const 127
                i32.and
                tee_local $3
                i32.const -1
                i32.add
                i32.const 2
                i32.shl
                i32.add
                i32.const 0
                i32.store
              else
                get_local $0
                set_local $3
              end ;; $_218
              get_local $17
              f64.convert_s/i32
              tee_local $20
              get_local $7
              f64.const 0x1.dcd6500000000p+29
              f64.mul
              get_local $12
              get_local $4
              i32.const 2
              i32.shl
              i32.add
              i32.load
              f64.convert_u/i32
              f64.add
              f64.mul
              set_local $13
              get_local $2
              i32.const 53
              i32.add
              tee_local $8
              get_local $21
              i32.sub
              tee_local $5
              get_local $18
              i32.lt_s
              tee_local $4
              if $_219 (result i32)
                get_local $5
                i32.const 0
                i32.lt_s
                if $_220 (result i32)
                  i32.const 0
                else
                  get_local $5
                end ;; $_220
                tee_local $18
              else
                get_local $18
              end ;; $_219
              i32.const 53
              i32.lt_s
              if $_221
                block $_222
                  f64.const 0x1.0000000000000p+0
                  i32.const 105
                  get_local $18
                  i32.sub
                  call $_scalbn
                  get_local $13
                  call $_copysignl
                  tee_local $29
                  set_local $26
                  get_local $13
                  f64.const 0x1.0000000000000p+0
                  i32.const 53
                  get_local $18
                  i32.sub
                  call $_scalbn
                  call $_fmodl
                  tee_local $30
                  set_local $7
                  get_local $29
                  get_local $13
                  get_local $30
                  f64.sub
                  f64.add
                  set_local $13
                end ;; $_222
              else
                block $_223
                  f64.const 0x0.0000000000000p+0
                  set_local $26
                  f64.const 0x0.0000000000000p+0
                  set_local $7
                end ;; $_223
              end ;; $_221
              get_local $4
              set_local $0
              block $do-once68
                get_local $1
                i32.const 2
                i32.add
                i32.const 127
                i32.and
                tee_local $9
                get_local $3
                i32.ne
                if $_224
                  block $_225
                    block $do-once70
                      get_local $12
                      get_local $9
                      i32.const 2
                      i32.shl
                      i32.add
                      i32.load
                      tee_local $9
                      i32.const 500000000
                      i32.lt_u
                      if $_226 (result f64)
                        block $_227 (result f64)
                          get_local $9
                          i32.eqz
                          if $_228
                            get_local $1
                            i32.const 3
                            i32.add
                            i32.const 127
                            i32.and
                            get_local $3
                            i32.eq
                            br_if $do-once70
                          end ;; $_228
                          get_local $20
                          f64.const 0x1.0000000000000p-2
                          f64.mul
                          get_local $7
                          f64.add
                        end ;; $_227
                      else
                        block $_229 (result f64)
                          get_local $9
                          i32.const 500000000
                          i32.gt_u
                          if $_230
                            block $_231
                              get_local $20
                              f64.const 0x1.8000000000000p-1
                              f64.mul
                              get_local $7
                              f64.add
                              set_local $7
                              br $do-once70
                            end ;; $_231
                          end ;; $_230
                          get_local $1
                          i32.const 3
                          i32.add
                          i32.const 127
                          i32.and
                          get_local $3
                          i32.eq
                          if $_232 (result f64)
                            get_local $20
                            f64.const 0x1.0000000000000p-1
                            f64.mul
                            get_local $7
                            f64.add
                          else
                            get_local $20
                            f64.const 0x1.8000000000000p-1
                            f64.mul
                            get_local $7
                            f64.add
                          end ;; $_232
                        end ;; $_229
                      end ;; $_226
                      set_local $7
                    end ;; $do-once70
                    i32.const 53
                    get_local $18
                    i32.sub
                    i32.const 1
                    i32.le_s
                    br_if $do-once68
                    get_local $7
                    f64.const 0x1.0000000000000p+0
                    call $_fmodl
                    f64.const 0x0.0000000000000p+0
                    f64.ne
                    br_if $do-once68
                    get_local $7
                    f64.const 0x1.0000000000000p+0
                    f64.add
                    set_local $7
                  end ;; $_225
                end ;; $_224
              end ;; $do-once68
              get_local $13
              get_local $7
              f64.add
              get_local $26
              f64.sub
              set_local $13
              block $do-once72
                get_local $8
                i32.const 2147483647
                i32.and
                i32.const -2
                get_local $27
                i32.sub
                i32.gt_s
                if $_233
                  block $_234
                    get_local $13
                    f64.abs
                    f64.const 0x1.0000000000000p+53
                    f64.ge
                    if $_235
                      block $_236
                        get_local $4
                        get_local $18
                        get_local $5
                        i32.eq
                        i32.and
                        if $_237
                          i32.const 0
                          set_local $0
                        end ;; $_237
                        get_local $2
                        i32.const 1
                        i32.add
                        set_local $2
                        get_local $13
                        f64.const 0x1.0000000000000p-1
                        f64.mul
                        set_local $13
                      end ;; $_236
                    end ;; $_235
                    get_local $2
                    i32.const 50
                    i32.add
                    get_local $28
                    i32.le_s
                    if $_238
                      get_local $7
                      f64.const 0x0.0000000000000p+0
                      f64.ne
                      get_local $0
                      i32.const 0
                      i32.ne
                      i32.and
                      i32.eqz
                      br_if $do-once72
                    end ;; $_238
                    call $___errno_location
                    i32.const 34
                    i32.store
                  end ;; $_234
                end ;; $_233
              end ;; $do-once72
              get_local $13
              get_local $2
              call $_scalbnl
              set_local $7
            end ;; $do-once50
            br $label$break$L4
          end ;; $switch-default75
          get_local $11
          i32.load
          if $_239
            get_local $6
            get_local $6
            i32.load
            i32.const -1
            i32.add
            i32.store
          end ;; $_239
          call $___errno_location
          i32.const 22
          i32.store
          get_local $0
          i32.const 0
          call $___shlim
          f64.const 0x0.0000000000000p+0
          set_local $7
          br $label$break$L4
        end ;; $__rjti$12
        get_local $11
        i32.load
        i32.eqz
        tee_local $0
        i32.eqz
        if $_240
          get_local $6
          get_local $6
          i32.load
          i32.const -1
          i32.add
          i32.store
        end ;; $_240
        get_local $2
        i32.const 0
        i32.ne
        get_local $1
        i32.const 3
        i32.gt_u
        i32.and
        if $_241
          loop $do-in78
            get_local $0
            i32.eqz
            if $if
              get_local $6
              get_local $6
              i32.load
              i32.const -1
              i32.add
              i32.store
            end ;; $if
            get_local $1
            i32.const -1
            i32.add
            tee_local $1
            i32.const 3
            i32.gt_u
            br_if $do-in78
          end ;; $do-in78
        end ;; $_241
      end ;; $__rjto$12
      get_local $17
      f64.convert_s/i32
      get_global $inf
      f64.mul
      set_local $7
    end ;; $label$break$L4
    get_local $24
    set_global $STACKTOP
    get_local $7
    )
  
  (func $_malloc (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    get_global $STACKTOP
    set_local $13
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $13
    set_local $18
    block $do-once
      get_local $0
      i32.const 245
      i32.lt_u
      if $_1
        block $_2
          i32.const 17664
          i32.load
          tee_local $6
          get_local $0
          i32.const 11
          i32.lt_u
          if $_3 (result i32)
            i32.const 16
          else
            get_local $0
            i32.const 11
            i32.add
            i32.const -8
            i32.and
          end ;; $_3
          tee_local $5
          i32.const 3
          i32.shr_u
          tee_local $14
          i32.shr_u
          tee_local $12
          i32.const 3
          i32.and
          if $_4
            block $_5
              get_local $12
              i32.const 1
              i32.and
              i32.const 1
              i32.xor
              get_local $14
              i32.add
              tee_local $4
              i32.const 3
              i32.shl
              i32.const 17704
              i32.add
              tee_local $3
              i32.const 8
              i32.add
              tee_local $2
              i32.load
              tee_local $5
              i32.const 8
              i32.add
              tee_local $1
              i32.load
              set_local $7
              get_local $3
              get_local $7
              i32.eq
              if $_6
                i32.const 17664
                get_local $6
                i32.const 1
                get_local $4
                i32.shl
                i32.const -1
                i32.xor
                i32.and
                i32.store
              else
                block $_7
                  get_local $7
                  i32.const 17680
                  i32.load
                  i32.lt_u
                  if $_8
                    call $_abort
                  end ;; $_8
                  get_local $7
                  i32.const 12
                  i32.add
                  tee_local $0
                  i32.load
                  get_local $5
                  i32.eq
                  if $_9
                    block $_10
                      get_local $0
                      get_local $3
                      i32.store
                      get_local $2
                      get_local $7
                      i32.store
                    end ;; $_10
                  else
                    call $_abort
                  end ;; $_9
                end ;; $_7
              end ;; $_6
              get_local $5
              get_local $4
              i32.const 3
              i32.shl
              tee_local $0
              i32.const 3
              i32.or
              i32.store offset=4
              get_local $5
              get_local $0
              i32.add
              i32.const 4
              i32.add
              tee_local $0
              get_local $0
              i32.load
              i32.const 1
              i32.or
              i32.store
              get_local $13
              set_global $STACKTOP
              get_local $1
              return
            end ;; $_5
          end ;; $_4
          get_local $5
          i32.const 17672
          i32.load
          tee_local $0
          i32.gt_u
          if $_11
            block $_12
              get_local $12
              if $_13
                block $_14
                  get_local $12
                  get_local $14
                  i32.shl
                  i32.const 2
                  get_local $14
                  i32.shl
                  tee_local $2
                  i32.const 0
                  get_local $2
                  i32.sub
                  i32.or
                  i32.and
                  tee_local $2
                  i32.const 0
                  get_local $2
                  i32.sub
                  i32.and
                  i32.const -1
                  i32.add
                  tee_local $2
                  i32.const 12
                  i32.shr_u
                  i32.const 16
                  i32.and
                  set_local $9
                  get_local $2
                  get_local $9
                  i32.shr_u
                  tee_local $7
                  i32.const 5
                  i32.shr_u
                  i32.const 8
                  i32.and
                  tee_local $2
                  get_local $9
                  i32.or
                  get_local $7
                  get_local $2
                  i32.shr_u
                  tee_local $7
                  i32.const 2
                  i32.shr_u
                  i32.const 4
                  i32.and
                  tee_local $2
                  i32.or
                  get_local $7
                  get_local $2
                  i32.shr_u
                  tee_local $7
                  i32.const 1
                  i32.shr_u
                  i32.const 2
                  i32.and
                  tee_local $2
                  i32.or
                  get_local $7
                  get_local $2
                  i32.shr_u
                  tee_local $7
                  i32.const 1
                  i32.shr_u
                  i32.const 1
                  i32.and
                  tee_local $2
                  i32.or
                  get_local $7
                  get_local $2
                  i32.shr_u
                  i32.add
                  tee_local $12
                  i32.const 3
                  i32.shl
                  i32.const 17704
                  i32.add
                  tee_local $9
                  i32.const 8
                  i32.add
                  tee_local $2
                  i32.load
                  tee_local $10
                  i32.const 8
                  i32.add
                  tee_local $7
                  i32.load
                  set_local $8
                  get_local $9
                  get_local $8
                  i32.eq
                  if $_15
                    block $_16
                      i32.const 17664
                      get_local $6
                      i32.const 1
                      get_local $12
                      i32.shl
                      i32.const -1
                      i32.xor
                      i32.and
                      i32.store
                      get_local $0
                      set_local $4
                    end ;; $_16
                  else
                    block $_17
                      get_local $8
                      i32.const 17680
                      i32.load
                      i32.lt_u
                      if $_18
                        call $_abort
                      end ;; $_18
                      get_local $8
                      i32.const 12
                      i32.add
                      tee_local $0
                      i32.load
                      get_local $10
                      i32.eq
                      if $_19
                        block $_20
                          get_local $0
                          get_local $9
                          i32.store
                          get_local $2
                          get_local $8
                          i32.store
                          i32.const 17672
                          i32.load
                          set_local $4
                        end ;; $_20
                      else
                        call $_abort
                      end ;; $_19
                    end ;; $_17
                  end ;; $_15
                  get_local $10
                  get_local $5
                  i32.const 3
                  i32.or
                  i32.store offset=4
                  get_local $10
                  get_local $5
                  i32.add
                  tee_local $9
                  get_local $12
                  i32.const 3
                  i32.shl
                  get_local $5
                  i32.sub
                  tee_local $5
                  i32.const 1
                  i32.or
                  i32.store offset=4
                  get_local $9
                  get_local $5
                  i32.add
                  get_local $5
                  i32.store
                  get_local $4
                  if $_21
                    block $_22
                      i32.const 17684
                      i32.load
                      set_local $12
                      get_local $4
                      i32.const 3
                      i32.shr_u
                      tee_local $0
                      i32.const 3
                      i32.shl
                      i32.const 17704
                      i32.add
                      set_local $4
                      i32.const 17664
                      i32.load
                      tee_local $2
                      i32.const 1
                      get_local $0
                      i32.shl
                      tee_local $0
                      i32.and
                      if $_23
                        get_local $4
                        i32.const 8
                        i32.add
                        tee_local $2
                        i32.load
                        tee_local $0
                        i32.const 17680
                        i32.load
                        i32.lt_u
                        if $_24
                          call $_abort
                        else
                          block $_25
                            get_local $2
                            set_local $3
                            get_local $0
                            set_local $1
                          end ;; $_25
                        end ;; $_24
                      else
                        block $_26
                          i32.const 17664
                          get_local $2
                          get_local $0
                          i32.or
                          i32.store
                          get_local $4
                          i32.const 8
                          i32.add
                          set_local $3
                          get_local $4
                          set_local $1
                        end ;; $_26
                      end ;; $_23
                      get_local $3
                      get_local $12
                      i32.store
                      get_local $1
                      get_local $12
                      i32.store offset=12
                      get_local $12
                      get_local $1
                      i32.store offset=8
                      get_local $12
                      get_local $4
                      i32.store offset=12
                    end ;; $_22
                  end ;; $_21
                  i32.const 17672
                  get_local $5
                  i32.store
                  i32.const 17684
                  get_local $9
                  i32.store
                  get_local $13
                  set_global $STACKTOP
                  get_local $7
                  return
                end ;; $_14
              end ;; $_13
              i32.const 17668
              i32.load
              tee_local $0
              if $_27
                block $_28
                  get_local $0
                  i32.const 0
                  get_local $0
                  i32.sub
                  i32.and
                  i32.const -1
                  i32.add
                  tee_local $0
                  i32.const 12
                  i32.shr_u
                  i32.const 16
                  i32.and
                  set_local $3
                  get_local $0
                  get_local $3
                  i32.shr_u
                  tee_local $1
                  i32.const 5
                  i32.shr_u
                  i32.const 8
                  i32.and
                  tee_local $0
                  get_local $3
                  i32.or
                  get_local $1
                  get_local $0
                  i32.shr_u
                  tee_local $1
                  i32.const 2
                  i32.shr_u
                  i32.const 4
                  i32.and
                  tee_local $0
                  i32.or
                  get_local $1
                  get_local $0
                  i32.shr_u
                  tee_local $1
                  i32.const 1
                  i32.shr_u
                  i32.const 2
                  i32.and
                  tee_local $0
                  i32.or
                  get_local $1
                  get_local $0
                  i32.shr_u
                  tee_local $1
                  i32.const 1
                  i32.shr_u
                  i32.const 1
                  i32.and
                  tee_local $0
                  i32.or
                  get_local $1
                  get_local $0
                  i32.shr_u
                  i32.add
                  i32.const 2
                  i32.shl
                  i32.const 17968
                  i32.add
                  i32.load
                  tee_local $1
                  i32.load offset=4
                  i32.const -8
                  i32.and
                  get_local $5
                  i32.sub
                  set_local $4
                  get_local $1
                  set_local $3
                  loop $while-in
                    block $while-out
                      get_local $3
                      i32.load offset=16
                      tee_local $0
                      i32.eqz
                      if $_29
                        get_local $3
                        i32.load offset=20
                        tee_local $0
                        i32.eqz
                        if $_30
                          block $_31
                            get_local $4
                            set_local $7
                            get_local $1
                            set_local $9
                            br $while-out
                          end ;; $_31
                        end ;; $_30
                      end ;; $_29
                      get_local $0
                      i32.load offset=4
                      i32.const -8
                      i32.and
                      get_local $5
                      i32.sub
                      tee_local $3
                      get_local $4
                      i32.lt_u
                      tee_local $7
                      if $_32
                        get_local $3
                        set_local $4
                      end ;; $_32
                      get_local $0
                      set_local $3
                      get_local $7
                      if $_33
                        get_local $0
                        set_local $1
                      end ;; $_33
                      br $while-in
                    end ;; $while-out
                  end ;; $while-in
                  get_local $9
                  i32.const 17680
                  i32.load
                  tee_local $12
                  i32.lt_u
                  if $_34
                    call $_abort
                  end ;; $_34
                  get_local $9
                  get_local $9
                  get_local $5
                  i32.add
                  tee_local $10
                  i32.ge_u
                  if $_35
                    call $_abort
                  end ;; $_35
                  get_local $9
                  i32.load offset=24
                  set_local $6
                  block $do-once4
                    get_local $9
                    i32.load offset=12
                    tee_local $0
                    get_local $9
                    i32.eq
                    if $_36
                      block $_37
                        get_local $9
                        i32.const 20
                        i32.add
                        tee_local $0
                        i32.load
                        tee_local $1
                        i32.eqz
                        if $_38
                          get_local $9
                          i32.const 16
                          i32.add
                          tee_local $0
                          i32.load
                          tee_local $1
                          i32.eqz
                          if $_39
                            block $_40
                              i32.const 0
                              set_local $8
                              br $do-once4
                            end ;; $_40
                          end ;; $_39
                        end ;; $_38
                        loop $while-in7
                          get_local $1
                          i32.const 20
                          i32.add
                          tee_local $4
                          i32.load
                          tee_local $3
                          if $_41
                            block $_42
                              get_local $3
                              set_local $1
                              get_local $4
                              set_local $0
                              br $while-in7
                            end ;; $_42
                          end ;; $_41
                          get_local $1
                          i32.const 16
                          i32.add
                          tee_local $4
                          i32.load
                          tee_local $3
                          if $_43
                            block $_44
                              get_local $3
                              set_local $1
                              get_local $4
                              set_local $0
                              br $while-in7
                            end ;; $_44
                          end ;; $_43
                        end ;; $while-in7
                        get_local $0
                        get_local $12
                        i32.lt_u
                        if $_45
                          call $_abort
                        else
                          block $_46
                            get_local $0
                            i32.const 0
                            i32.store
                            get_local $1
                            set_local $8
                          end ;; $_46
                        end ;; $_45
                      end ;; $_37
                    else
                      block $_47
                        get_local $9
                        i32.load offset=8
                        tee_local $4
                        get_local $12
                        i32.lt_u
                        if $_48
                          call $_abort
                        end ;; $_48
                        get_local $4
                        i32.const 12
                        i32.add
                        tee_local $3
                        i32.load
                        get_local $9
                        i32.ne
                        if $_49
                          call $_abort
                        end ;; $_49
                        get_local $0
                        i32.const 8
                        i32.add
                        tee_local $1
                        i32.load
                        get_local $9
                        i32.eq
                        if $_50
                          block $_51
                            get_local $3
                            get_local $0
                            i32.store
                            get_local $1
                            get_local $4
                            i32.store
                            get_local $0
                            set_local $8
                          end ;; $_51
                        else
                          call $_abort
                        end ;; $_50
                      end ;; $_47
                    end ;; $_36
                  end ;; $do-once4
                  block $do-once8
                    get_local $6
                    if $_52
                      block $_53
                        get_local $9
                        get_local $9
                        i32.load offset=28
                        tee_local $1
                        i32.const 2
                        i32.shl
                        i32.const 17968
                        i32.add
                        tee_local $0
                        i32.load
                        i32.eq
                        if $_54
                          block $_55
                            get_local $0
                            get_local $8
                            i32.store
                            get_local $8
                            i32.eqz
                            if $_56
                              block $_57
                                i32.const 17668
                                i32.const 17668
                                i32.load
                                i32.const 1
                                get_local $1
                                i32.shl
                                i32.const -1
                                i32.xor
                                i32.and
                                i32.store
                                br $do-once8
                              end ;; $_57
                            end ;; $_56
                          end ;; $_55
                        else
                          block $_58
                            get_local $6
                            i32.const 17680
                            i32.load
                            i32.lt_u
                            if $_59
                              call $_abort
                            end ;; $_59
                            get_local $6
                            i32.const 16
                            i32.add
                            tee_local $0
                            i32.load
                            get_local $9
                            i32.eq
                            if $_60
                              get_local $0
                              get_local $8
                              i32.store
                            else
                              get_local $6
                              get_local $8
                              i32.store offset=20
                            end ;; $_60
                            get_local $8
                            i32.eqz
                            br_if $do-once8
                          end ;; $_58
                        end ;; $_54
                        get_local $8
                        i32.const 17680
                        i32.load
                        tee_local $0
                        i32.lt_u
                        if $_61
                          call $_abort
                        end ;; $_61
                        get_local $8
                        get_local $6
                        i32.store offset=24
                        get_local $9
                        i32.load offset=16
                        tee_local $1
                        if $_62
                          get_local $1
                          get_local $0
                          i32.lt_u
                          if $_63
                            call $_abort
                          else
                            block $_64
                              get_local $8
                              get_local $1
                              i32.store offset=16
                              get_local $1
                              get_local $8
                              i32.store offset=24
                            end ;; $_64
                          end ;; $_63
                        end ;; $_62
                        get_local $9
                        i32.load offset=20
                        tee_local $0
                        if $_65
                          get_local $0
                          i32.const 17680
                          i32.load
                          i32.lt_u
                          if $_66
                            call $_abort
                          else
                            block $_67
                              get_local $8
                              get_local $0
                              i32.store offset=20
                              get_local $0
                              get_local $8
                              i32.store offset=24
                            end ;; $_67
                          end ;; $_66
                        end ;; $_65
                      end ;; $_53
                    end ;; $_52
                  end ;; $do-once8
                  get_local $7
                  i32.const 16
                  i32.lt_u
                  if $_68
                    block $_69
                      get_local $9
                      get_local $7
                      get_local $5
                      i32.add
                      tee_local $0
                      i32.const 3
                      i32.or
                      i32.store offset=4
                      get_local $9
                      get_local $0
                      i32.add
                      i32.const 4
                      i32.add
                      tee_local $0
                      get_local $0
                      i32.load
                      i32.const 1
                      i32.or
                      i32.store
                    end ;; $_69
                  else
                    block $_70
                      get_local $9
                      get_local $5
                      i32.const 3
                      i32.or
                      i32.store offset=4
                      get_local $10
                      get_local $7
                      i32.const 1
                      i32.or
                      i32.store offset=4
                      get_local $10
                      get_local $7
                      i32.add
                      get_local $7
                      i32.store
                      i32.const 17672
                      i32.load
                      tee_local $0
                      if $_71
                        block $_72
                          i32.const 17684
                          i32.load
                          set_local $4
                          get_local $0
                          i32.const 3
                          i32.shr_u
                          tee_local $0
                          i32.const 3
                          i32.shl
                          i32.const 17704
                          i32.add
                          set_local $3
                          i32.const 17664
                          i32.load
                          tee_local $1
                          i32.const 1
                          get_local $0
                          i32.shl
                          tee_local $0
                          i32.and
                          if $_73
                            get_local $3
                            i32.const 8
                            i32.add
                            tee_local $1
                            i32.load
                            tee_local $0
                            i32.const 17680
                            i32.load
                            i32.lt_u
                            if $_74
                              call $_abort
                            else
                              block $_75
                                get_local $1
                                set_local $15
                                get_local $0
                                set_local $2
                              end ;; $_75
                            end ;; $_74
                          else
                            block $_76
                              i32.const 17664
                              get_local $1
                              get_local $0
                              i32.or
                              i32.store
                              get_local $3
                              i32.const 8
                              i32.add
                              set_local $15
                              get_local $3
                              set_local $2
                            end ;; $_76
                          end ;; $_73
                          get_local $15
                          get_local $4
                          i32.store
                          get_local $2
                          get_local $4
                          i32.store offset=12
                          get_local $4
                          get_local $2
                          i32.store offset=8
                          get_local $4
                          get_local $3
                          i32.store offset=12
                        end ;; $_72
                      end ;; $_71
                      i32.const 17672
                      get_local $7
                      i32.store
                      i32.const 17684
                      get_local $10
                      i32.store
                    end ;; $_70
                  end ;; $_68
                  get_local $13
                  set_global $STACKTOP
                  get_local $9
                  i32.const 8
                  i32.add
                  return
                end ;; $_28
              else
                get_local $5
                set_local $0
              end ;; $_27
            end ;; $_12
          else
            get_local $5
            set_local $0
          end ;; $_11
        end ;; $_2
      else
        get_local $0
        i32.const -65
        i32.gt_u
        if $_77
          i32.const -1
          set_local $0
        else
          block $_78
            get_local $0
            i32.const 11
            i32.add
            tee_local $0
            i32.const -8
            i32.and
            set_local $4
            i32.const 17668
            i32.load
            tee_local $15
            if $_79
              block $_80
                get_local $0
                i32.const 8
                i32.shr_u
                tee_local $0
                if $_81 (result i32)
                  get_local $4
                  i32.const 16777215
                  i32.gt_u
                  if $_82 (result i32)
                    i32.const 31
                  else
                    get_local $4
                    i32.const 14
                    get_local $0
                    get_local $0
                    i32.const 1048320
                    i32.add
                    i32.const 16
                    i32.shr_u
                    i32.const 8
                    i32.and
                    tee_local $2
                    i32.shl
                    tee_local $1
                    i32.const 520192
                    i32.add
                    i32.const 16
                    i32.shr_u
                    i32.const 4
                    i32.and
                    tee_local $0
                    get_local $2
                    i32.or
                    get_local $1
                    get_local $0
                    i32.shl
                    tee_local $1
                    i32.const 245760
                    i32.add
                    i32.const 16
                    i32.shr_u
                    i32.const 2
                    i32.and
                    tee_local $0
                    i32.or
                    i32.sub
                    get_local $1
                    get_local $0
                    i32.shl
                    i32.const 15
                    i32.shr_u
                    i32.add
                    tee_local $0
                    i32.const 7
                    i32.add
                    i32.shr_u
                    i32.const 1
                    i32.and
                    get_local $0
                    i32.const 1
                    i32.shl
                    i32.or
                  end ;; $_82
                else
                  i32.const 0
                end ;; $_81
                set_local $16
                i32.const 0
                get_local $4
                i32.sub
                set_local $1
                block $__rjto$3
                  block $__rjti$3
                    block $__rjti$2
                      get_local $16
                      i32.const 2
                      i32.shl
                      i32.const 17968
                      i32.add
                      i32.load
                      tee_local $3
                      if $_83
                        block $_84
                          i32.const 0
                          set_local $2
                          get_local $4
                          get_local $16
                          i32.const 31
                          i32.eq
                          if $_85 (result i32)
                            i32.const 0
                          else
                            i32.const 25
                            get_local $16
                            i32.const 1
                            i32.shr_u
                            i32.sub
                          end ;; $_85
                          i32.shl
                          set_local $17
                          i32.const 0
                          set_local $0
                          loop $while-in14
                            get_local $3
                            i32.load offset=4
                            i32.const -8
                            i32.and
                            tee_local $8
                            get_local $4
                            i32.sub
                            tee_local $5
                            get_local $1
                            i32.lt_u
                            if $_86
                              get_local $8
                              get_local $4
                              i32.eq
                              if $_87
                                block $_88
                                  get_local $5
                                  set_local $1
                                  get_local $3
                                  set_local $2
                                  get_local $3
                                  set_local $0
                                  br $__rjti$3
                                end ;; $_88
                              else
                                block $_89
                                  get_local $5
                                  set_local $1
                                  get_local $3
                                  set_local $0
                                end ;; $_89
                              end ;; $_87
                            end ;; $_86
                            get_local $3
                            i32.load offset=20
                            tee_local $5
                            i32.eqz
                            get_local $5
                            get_local $3
                            i32.const 16
                            i32.add
                            get_local $17
                            i32.const 31
                            i32.shr_u
                            i32.const 2
                            i32.shl
                            i32.add
                            i32.load
                            tee_local $3
                            i32.eq
                            i32.or
                            i32.eqz
                            if $_90
                              get_local $5
                              set_local $2
                            end ;; $_90
                            get_local $3
                            i32.eqz
                            tee_local $5
                            br_if $__rjti$2
                            get_local $17
                            get_local $5
                            i32.const 1
                            i32.xor
                            i32.shl
                            set_local $17
                            br $while-in14
                          end ;; $while-in14
                        end ;; $_84
                      else
                        block $_91
                          i32.const 0
                          set_local $2
                          i32.const 0
                          set_local $0
                        end ;; $_91
                      end ;; $_83
                    end ;; $__rjti$2
                    get_local $2
                    i32.eqz
                    get_local $0
                    i32.eqz
                    i32.and
                    if $_92
                      block $_93
                        get_local $15
                        i32.const 2
                        get_local $16
                        i32.shl
                        tee_local $2
                        i32.const 0
                        get_local $2
                        i32.sub
                        i32.or
                        i32.and
                        tee_local $2
                        i32.eqz
                        if $_94
                          block $_95
                            get_local $4
                            set_local $0
                            br $do-once
                          end ;; $_95
                        end ;; $_94
                        get_local $2
                        i32.const 0
                        get_local $2
                        i32.sub
                        i32.and
                        i32.const -1
                        i32.add
                        tee_local $2
                        i32.const 12
                        i32.shr_u
                        i32.const 16
                        i32.and
                        set_local $5
                        get_local $2
                        get_local $5
                        i32.shr_u
                        tee_local $3
                        i32.const 5
                        i32.shr_u
                        i32.const 8
                        i32.and
                        tee_local $2
                        get_local $5
                        i32.or
                        get_local $3
                        get_local $2
                        i32.shr_u
                        tee_local $3
                        i32.const 2
                        i32.shr_u
                        i32.const 4
                        i32.and
                        tee_local $2
                        i32.or
                        get_local $3
                        get_local $2
                        i32.shr_u
                        tee_local $3
                        i32.const 1
                        i32.shr_u
                        i32.const 2
                        i32.and
                        tee_local $2
                        i32.or
                        get_local $3
                        get_local $2
                        i32.shr_u
                        tee_local $3
                        i32.const 1
                        i32.shr_u
                        i32.const 1
                        i32.and
                        tee_local $2
                        i32.or
                        get_local $3
                        get_local $2
                        i32.shr_u
                        i32.add
                        i32.const 2
                        i32.shl
                        i32.const 17968
                        i32.add
                        i32.load
                        set_local $2
                      end ;; $_93
                    end ;; $_92
                    get_local $2
                    br_if $__rjti$3
                    get_local $1
                    set_local $2
                    get_local $0
                    set_local $3
                    br $__rjto$3
                  end ;; $__rjti$3
                  loop $while-in16
                    get_local $2
                    i32.load offset=4
                    i32.const -8
                    i32.and
                    get_local $4
                    i32.sub
                    tee_local $3
                    get_local $1
                    i32.lt_u
                    tee_local $5
                    if $_96
                      get_local $3
                      set_local $1
                    end ;; $_96
                    get_local $5
                    if $_97
                      get_local $2
                      set_local $0
                    end ;; $_97
                    get_local $2
                    i32.load offset=16
                    tee_local $3
                    if $_98
                      block $_99
                        get_local $3
                        set_local $2
                        br $while-in16
                      end ;; $_99
                    end ;; $_98
                    get_local $2
                    i32.load offset=20
                    tee_local $2
                    br_if $while-in16
                    get_local $1
                    set_local $2
                    get_local $0
                    set_local $3
                  end ;; $while-in16
                end ;; $__rjto$3
                get_local $3
                if $_100
                  get_local $2
                  i32.const 17672
                  i32.load
                  get_local $4
                  i32.sub
                  i32.lt_u
                  if $_101
                    block $_102
                      get_local $3
                      i32.const 17680
                      i32.load
                      tee_local $9
                      i32.lt_u
                      if $_103
                        call $_abort
                      end ;; $_103
                      get_local $3
                      get_local $3
                      get_local $4
                      i32.add
                      tee_local $8
                      i32.ge_u
                      if $_104
                        call $_abort
                      end ;; $_104
                      get_local $3
                      i32.load offset=24
                      set_local $10
                      block $do-once17
                        get_local $3
                        i32.load offset=12
                        tee_local $0
                        get_local $3
                        i32.eq
                        if $_105
                          block $_106
                            get_local $3
                            i32.const 20
                            i32.add
                            tee_local $0
                            i32.load
                            tee_local $1
                            i32.eqz
                            if $_107
                              get_local $3
                              i32.const 16
                              i32.add
                              tee_local $0
                              i32.load
                              tee_local $1
                              i32.eqz
                              if $_108
                                block $_109
                                  i32.const 0
                                  set_local $6
                                  br $do-once17
                                end ;; $_109
                              end ;; $_108
                            end ;; $_107
                            loop $while-in20
                              get_local $1
                              i32.const 20
                              i32.add
                              tee_local $7
                              i32.load
                              tee_local $5
                              if $_110
                                block $_111
                                  get_local $5
                                  set_local $1
                                  get_local $7
                                  set_local $0
                                  br $while-in20
                                end ;; $_111
                              end ;; $_110
                              get_local $1
                              i32.const 16
                              i32.add
                              tee_local $7
                              i32.load
                              tee_local $5
                              if $_112
                                block $_113
                                  get_local $5
                                  set_local $1
                                  get_local $7
                                  set_local $0
                                  br $while-in20
                                end ;; $_113
                              end ;; $_112
                            end ;; $while-in20
                            get_local $0
                            get_local $9
                            i32.lt_u
                            if $_114
                              call $_abort
                            else
                              block $_115
                                get_local $0
                                i32.const 0
                                i32.store
                                get_local $1
                                set_local $6
                              end ;; $_115
                            end ;; $_114
                          end ;; $_106
                        else
                          block $_116
                            get_local $3
                            i32.load offset=8
                            tee_local $7
                            get_local $9
                            i32.lt_u
                            if $_117
                              call $_abort
                            end ;; $_117
                            get_local $7
                            i32.const 12
                            i32.add
                            tee_local $5
                            i32.load
                            get_local $3
                            i32.ne
                            if $_118
                              call $_abort
                            end ;; $_118
                            get_local $0
                            i32.const 8
                            i32.add
                            tee_local $1
                            i32.load
                            get_local $3
                            i32.eq
                            if $_119
                              block $_120
                                get_local $5
                                get_local $0
                                i32.store
                                get_local $1
                                get_local $7
                                i32.store
                                get_local $0
                                set_local $6
                              end ;; $_120
                            else
                              call $_abort
                            end ;; $_119
                          end ;; $_116
                        end ;; $_105
                      end ;; $do-once17
                      block $do-once21
                        get_local $10
                        if $_121
                          block $_122
                            get_local $3
                            get_local $3
                            i32.load offset=28
                            tee_local $1
                            i32.const 2
                            i32.shl
                            i32.const 17968
                            i32.add
                            tee_local $0
                            i32.load
                            i32.eq
                            if $_123
                              block $_124
                                get_local $0
                                get_local $6
                                i32.store
                                get_local $6
                                i32.eqz
                                if $_125
                                  block $_126
                                    i32.const 17668
                                    i32.const 17668
                                    i32.load
                                    i32.const 1
                                    get_local $1
                                    i32.shl
                                    i32.const -1
                                    i32.xor
                                    i32.and
                                    i32.store
                                    br $do-once21
                                  end ;; $_126
                                end ;; $_125
                              end ;; $_124
                            else
                              block $_127
                                get_local $10
                                i32.const 17680
                                i32.load
                                i32.lt_u
                                if $_128
                                  call $_abort
                                end ;; $_128
                                get_local $10
                                i32.const 16
                                i32.add
                                tee_local $0
                                i32.load
                                get_local $3
                                i32.eq
                                if $_129
                                  get_local $0
                                  get_local $6
                                  i32.store
                                else
                                  get_local $10
                                  get_local $6
                                  i32.store offset=20
                                end ;; $_129
                                get_local $6
                                i32.eqz
                                br_if $do-once21
                              end ;; $_127
                            end ;; $_123
                            get_local $6
                            i32.const 17680
                            i32.load
                            tee_local $0
                            i32.lt_u
                            if $_130
                              call $_abort
                            end ;; $_130
                            get_local $6
                            get_local $10
                            i32.store offset=24
                            get_local $3
                            i32.load offset=16
                            tee_local $1
                            if $_131
                              get_local $1
                              get_local $0
                              i32.lt_u
                              if $_132
                                call $_abort
                              else
                                block $_133
                                  get_local $6
                                  get_local $1
                                  i32.store offset=16
                                  get_local $1
                                  get_local $6
                                  i32.store offset=24
                                end ;; $_133
                              end ;; $_132
                            end ;; $_131
                            get_local $3
                            i32.load offset=20
                            tee_local $0
                            if $_134
                              get_local $0
                              i32.const 17680
                              i32.load
                              i32.lt_u
                              if $_135
                                call $_abort
                              else
                                block $_136
                                  get_local $6
                                  get_local $0
                                  i32.store offset=20
                                  get_local $0
                                  get_local $6
                                  i32.store offset=24
                                end ;; $_136
                              end ;; $_135
                            end ;; $_134
                          end ;; $_122
                        end ;; $_121
                      end ;; $do-once21
                      block $do-once25
                        get_local $2
                        i32.const 16
                        i32.lt_u
                        if $_137
                          block $_138
                            get_local $3
                            get_local $2
                            get_local $4
                            i32.add
                            tee_local $0
                            i32.const 3
                            i32.or
                            i32.store offset=4
                            get_local $3
                            get_local $0
                            i32.add
                            i32.const 4
                            i32.add
                            tee_local $0
                            get_local $0
                            i32.load
                            i32.const 1
                            i32.or
                            i32.store
                          end ;; $_138
                        else
                          block $_139
                            get_local $3
                            get_local $4
                            i32.const 3
                            i32.or
                            i32.store offset=4
                            get_local $8
                            get_local $2
                            i32.const 1
                            i32.or
                            i32.store offset=4
                            get_local $8
                            get_local $2
                            i32.add
                            get_local $2
                            i32.store
                            get_local $2
                            i32.const 3
                            i32.shr_u
                            set_local $0
                            get_local $2
                            i32.const 256
                            i32.lt_u
                            if $_140
                              block $_141
                                get_local $0
                                i32.const 3
                                i32.shl
                                i32.const 17704
                                i32.add
                                set_local $2
                                i32.const 17664
                                i32.load
                                tee_local $1
                                i32.const 1
                                get_local $0
                                i32.shl
                                tee_local $0
                                i32.and
                                if $_142
                                  get_local $2
                                  i32.const 8
                                  i32.add
                                  tee_local $1
                                  i32.load
                                  tee_local $0
                                  i32.const 17680
                                  i32.load
                                  i32.lt_u
                                  if $_143
                                    call $_abort
                                  else
                                    block $_144
                                      get_local $1
                                      set_local $14
                                      get_local $0
                                      set_local $12
                                    end ;; $_144
                                  end ;; $_143
                                else
                                  block $_145
                                    i32.const 17664
                                    get_local $1
                                    get_local $0
                                    i32.or
                                    i32.store
                                    get_local $2
                                    i32.const 8
                                    i32.add
                                    set_local $14
                                    get_local $2
                                    set_local $12
                                  end ;; $_145
                                end ;; $_142
                                get_local $14
                                get_local $8
                                i32.store
                                get_local $12
                                get_local $8
                                i32.store offset=12
                                get_local $8
                                get_local $12
                                i32.store offset=8
                                get_local $8
                                get_local $2
                                i32.store offset=12
                                br $do-once25
                              end ;; $_141
                            end ;; $_140
                            get_local $2
                            i32.const 8
                            i32.shr_u
                            tee_local $0
                            if $_146 (result i32)
                              get_local $2
                              i32.const 16777215
                              i32.gt_u
                              if $_147 (result i32)
                                i32.const 31
                              else
                                get_local $2
                                i32.const 14
                                get_local $0
                                get_local $0
                                i32.const 1048320
                                i32.add
                                i32.const 16
                                i32.shr_u
                                i32.const 8
                                i32.and
                                tee_local $4
                                i32.shl
                                tee_local $1
                                i32.const 520192
                                i32.add
                                i32.const 16
                                i32.shr_u
                                i32.const 4
                                i32.and
                                tee_local $0
                                get_local $4
                                i32.or
                                get_local $1
                                get_local $0
                                i32.shl
                                tee_local $1
                                i32.const 245760
                                i32.add
                                i32.const 16
                                i32.shr_u
                                i32.const 2
                                i32.and
                                tee_local $0
                                i32.or
                                i32.sub
                                get_local $1
                                get_local $0
                                i32.shl
                                i32.const 15
                                i32.shr_u
                                i32.add
                                tee_local $0
                                i32.const 7
                                i32.add
                                i32.shr_u
                                i32.const 1
                                i32.and
                                get_local $0
                                i32.const 1
                                i32.shl
                                i32.or
                              end ;; $_147
                            else
                              i32.const 0
                            end ;; $_146
                            tee_local $5
                            i32.const 2
                            i32.shl
                            i32.const 17968
                            i32.add
                            set_local $4
                            get_local $8
                            get_local $5
                            i32.store offset=28
                            get_local $8
                            i32.const 16
                            i32.add
                            tee_local $0
                            i32.const 0
                            i32.store offset=4
                            get_local $0
                            i32.const 0
                            i32.store
                            i32.const 17668
                            i32.load
                            tee_local $1
                            i32.const 1
                            get_local $5
                            i32.shl
                            tee_local $0
                            i32.and
                            i32.eqz
                            if $_148
                              block $_149
                                i32.const 17668
                                get_local $1
                                get_local $0
                                i32.or
                                i32.store
                                get_local $4
                                get_local $8
                                i32.store
                                get_local $8
                                get_local $4
                                i32.store offset=24
                                get_local $8
                                get_local $8
                                i32.store offset=12
                                get_local $8
                                get_local $8
                                i32.store offset=8
                                br $do-once25
                              end ;; $_149
                            end ;; $_148
                            get_local $2
                            get_local $5
                            i32.const 31
                            i32.eq
                            if $_150 (result i32)
                              i32.const 0
                            else
                              i32.const 25
                              get_local $5
                              i32.const 1
                              i32.shr_u
                              i32.sub
                            end ;; $_150
                            i32.shl
                            set_local $5
                            get_local $4
                            i32.load
                            set_local $0
                            block $__rjto$1
                              block $__rjti$1
                                block $__rjti$0
                                  loop $while-in28
                                    get_local $0
                                    i32.load offset=4
                                    i32.const -8
                                    i32.and
                                    get_local $2
                                    i32.eq
                                    br_if $__rjti$1
                                    get_local $0
                                    i32.const 16
                                    i32.add
                                    get_local $5
                                    i32.const 31
                                    i32.shr_u
                                    i32.const 2
                                    i32.shl
                                    i32.add
                                    tee_local $4
                                    i32.load
                                    tee_local $1
                                    i32.eqz
                                    br_if $__rjti$0
                                    get_local $5
                                    i32.const 1
                                    i32.shl
                                    set_local $5
                                    get_local $1
                                    set_local $0
                                    br $while-in28
                                  end ;; $while-in28
                                end ;; $__rjti$0
                                get_local $4
                                i32.const 17680
                                i32.load
                                i32.lt_u
                                if $_151
                                  call $_abort
                                else
                                  block $_152
                                    get_local $4
                                    get_local $8
                                    i32.store
                                    get_local $8
                                    get_local $0
                                    i32.store offset=24
                                    get_local $8
                                    get_local $8
                                    i32.store offset=12
                                    get_local $8
                                    get_local $8
                                    i32.store offset=8
                                    br $do-once25
                                  end ;; $_152
                                end ;; $_151
                                br $__rjto$1
                              end ;; $__rjti$1
                              get_local $0
                              i32.const 8
                              i32.add
                              tee_local $2
                              i32.load
                              tee_local $4
                              i32.const 17680
                              i32.load
                              tee_local $1
                              i32.ge_u
                              get_local $0
                              get_local $1
                              i32.ge_u
                              i32.and
                              if $_153
                                block $_154
                                  get_local $4
                                  get_local $8
                                  i32.store offset=12
                                  get_local $2
                                  get_local $8
                                  i32.store
                                  get_local $8
                                  get_local $4
                                  i32.store offset=8
                                  get_local $8
                                  get_local $0
                                  i32.store offset=12
                                  get_local $8
                                  i32.const 0
                                  i32.store offset=24
                                end ;; $_154
                              else
                                call $_abort
                              end ;; $_153
                            end ;; $__rjto$1
                          end ;; $_139
                        end ;; $_137
                      end ;; $do-once25
                      get_local $13
                      set_global $STACKTOP
                      get_local $3
                      i32.const 8
                      i32.add
                      return
                    end ;; $_102
                  else
                    get_local $4
                    set_local $0
                  end ;; $_101
                else
                  get_local $4
                  set_local $0
                end ;; $_100
              end ;; $_80
            else
              get_local $4
              set_local $0
            end ;; $_79
          end ;; $_78
        end ;; $_77
      end ;; $_1
    end ;; $do-once
    i32.const 17672
    i32.load
    tee_local $1
    get_local $0
    i32.ge_u
    if $_155
      block $_156
        i32.const 17684
        i32.load
        set_local $3
        get_local $1
        get_local $0
        i32.sub
        tee_local $2
        i32.const 15
        i32.gt_u
        if $_157
          block $_158
            i32.const 17684
            get_local $3
            get_local $0
            i32.add
            tee_local $1
            i32.store
            i32.const 17672
            get_local $2
            i32.store
            get_local $1
            get_local $2
            i32.const 1
            i32.or
            i32.store offset=4
            get_local $1
            get_local $2
            i32.add
            get_local $2
            i32.store
            get_local $3
            get_local $0
            i32.const 3
            i32.or
            i32.store offset=4
          end ;; $_158
        else
          block $_159
            i32.const 17672
            i32.const 0
            i32.store
            i32.const 17684
            i32.const 0
            i32.store
            get_local $3
            get_local $1
            i32.const 3
            i32.or
            i32.store offset=4
            get_local $3
            get_local $1
            i32.add
            i32.const 4
            i32.add
            tee_local $0
            get_local $0
            i32.load
            i32.const 1
            i32.or
            i32.store
          end ;; $_159
        end ;; $_157
        get_local $13
        set_global $STACKTOP
        get_local $3
        i32.const 8
        i32.add
        return
      end ;; $_156
    end ;; $_155
    i32.const 17676
    i32.load
    tee_local $1
    get_local $0
    i32.gt_u
    if $_160
      block $_161
        i32.const 17676
        get_local $1
        get_local $0
        i32.sub
        tee_local $2
        i32.store
        i32.const 17688
        i32.const 17688
        i32.load
        tee_local $3
        get_local $0
        i32.add
        tee_local $1
        i32.store
        get_local $1
        get_local $2
        i32.const 1
        i32.or
        i32.store offset=4
        get_local $3
        get_local $0
        i32.const 3
        i32.or
        i32.store offset=4
        get_local $13
        set_global $STACKTOP
        get_local $3
        i32.const 8
        i32.add
        return
      end ;; $_161
    end ;; $_160
    i32.const 18136
    i32.load
    i32.eqz
    if $_162
      block $_163
        i32.const 18144
        i32.const 4096
        i32.store
        i32.const 18140
        i32.const 4096
        i32.store
        i32.const 18148
        i32.const -1
        i32.store
        i32.const 18152
        i32.const -1
        i32.store
        i32.const 18156
        i32.const 0
        i32.store
        i32.const 18108
        i32.const 0
        i32.store
        get_local $18
        get_local $18
        i32.const -16
        i32.and
        i32.const 1431655768
        i32.xor
        tee_local $1
        i32.store
        i32.const 18136
        get_local $1
        i32.store
      end ;; $_163
    end ;; $_162
    i32.const 18144
    i32.load
    tee_local $1
    get_local $0
    i32.const 47
    i32.add
    tee_local $14
    i32.add
    tee_local $8
    i32.const 0
    get_local $1
    i32.sub
    tee_local $6
    i32.and
    tee_local $5
    get_local $0
    i32.le_u
    if $_164
      block $_165
        get_local $13
        set_global $STACKTOP
        i32.const 0
        return
      end ;; $_165
    end ;; $_164
    i32.const 18104
    i32.load
    tee_local $3
    if $_166
      i32.const 18096
      i32.load
      tee_local $2
      get_local $5
      i32.add
      tee_local $1
      get_local $2
      i32.le_u
      get_local $1
      get_local $3
      i32.gt_u
      i32.or
      if $_167
        block $_168
          get_local $13
          set_global $STACKTOP
          i32.const 0
          return
        end ;; $_168
      end ;; $_167
    end ;; $_166
    get_local $0
    i32.const 48
    i32.add
    set_local $12
    block $__rjto$13
      block $__rjti$13
        i32.const 18108
        i32.load
        i32.const 4
        i32.and
        i32.eqz
        if $_169
          block $_170
            block $label$break$L276
              block $__rjti$5
                block $__rjti$4
                  i32.const 17688
                  i32.load
                  tee_local $2
                  i32.eqz
                  br_if $__rjti$4
                  i32.const 18112
                  set_local $4
                  loop $while-in32
                    block $while-out31
                      get_local $4
                      i32.load
                      tee_local $1
                      get_local $2
                      i32.le_u
                      if $_171
                        get_local $1
                        get_local $4
                        i32.const 4
                        i32.add
                        tee_local $3
                        i32.load
                        i32.add
                        get_local $2
                        i32.gt_u
                        br_if $while-out31
                      end ;; $_171
                      get_local $4
                      i32.load offset=8
                      tee_local $4
                      br_if $while-in32
                      br $__rjti$4
                    end ;; $while-out31
                  end ;; $while-in32
                  get_local $8
                  i32.const 17676
                  i32.load
                  i32.sub
                  get_local $6
                  i32.and
                  tee_local $2
                  i32.const 2147483647
                  i32.lt_u
                  if $_172
                    get_local $2
                    call $_sbrk
                    tee_local $1
                    get_local $4
                    i32.load
                    get_local $3
                    i32.load
                    i32.add
                    i32.eq
                    if $_173
                      get_local $1
                      i32.const -1
                      i32.ne
                      br_if $__rjti$13
                    else
                      block $_174
                        get_local $1
                        set_local $3
                        get_local $2
                        set_local $1
                        br $__rjti$5
                      end ;; $_174
                    end ;; $_173
                  end ;; $_172
                  br $label$break$L276
                end ;; $__rjti$4
                i32.const 0
                call $_sbrk
                tee_local $1
                i32.const -1
                i32.ne
                if $_175
                  block $_176
                    i32.const 18140
                    i32.load
                    tee_local $4
                    i32.const -1
                    i32.add
                    tee_local $3
                    get_local $1
                    tee_local $2
                    i32.and
                    if $_177 (result i32)
                      get_local $5
                      get_local $2
                      i32.sub
                      get_local $3
                      get_local $2
                      i32.add
                      i32.const 0
                      get_local $4
                      i32.sub
                      i32.and
                      i32.add
                    else
                      get_local $5
                    end ;; $_177
                    set_local $2
                    i32.const 18096
                    i32.load
                    tee_local $4
                    get_local $2
                    i32.add
                    set_local $6
                    get_local $2
                    get_local $0
                    i32.gt_u
                    get_local $2
                    i32.const 2147483647
                    i32.lt_u
                    i32.and
                    if $_178
                      block $_179
                        i32.const 18104
                        i32.load
                        tee_local $3
                        if $_180
                          get_local $6
                          get_local $4
                          i32.le_u
                          get_local $6
                          get_local $3
                          i32.gt_u
                          i32.or
                          br_if $label$break$L276
                        end ;; $_180
                        get_local $2
                        call $_sbrk
                        tee_local $3
                        get_local $1
                        i32.eq
                        br_if $__rjti$13
                        get_local $2
                        set_local $1
                        br $__rjti$5
                      end ;; $_179
                    end ;; $_178
                  end ;; $_176
                end ;; $_175
                br $label$break$L276
              end ;; $__rjti$5
              i32.const 0
              get_local $1
              i32.sub
              set_local $4
              get_local $12
              get_local $1
              i32.gt_u
              get_local $1
              i32.const 2147483647
              i32.lt_u
              get_local $3
              i32.const -1
              i32.ne
              i32.and
              i32.and
              if $_181
                get_local $14
                get_local $1
                i32.sub
                i32.const 18144
                i32.load
                tee_local $2
                i32.add
                i32.const 0
                get_local $2
                i32.sub
                i32.and
                tee_local $2
                i32.const 2147483647
                i32.lt_u
                if $_182
                  get_local $2
                  call $_sbrk
                  i32.const -1
                  i32.eq
                  if $_183
                    block $_184
                      get_local $4
                      call $_sbrk
                      drop
                      br $label$break$L276
                    end ;; $_184
                  else
                    get_local $2
                    get_local $1
                    i32.add
                    set_local $2
                  end ;; $_183
                else
                  get_local $1
                  set_local $2
                end ;; $_182
              else
                get_local $1
                set_local $2
              end ;; $_181
              get_local $3
              i32.const -1
              i32.ne
              if $_185
                block $_186
                  get_local $3
                  set_local $1
                  br $__rjti$13
                end ;; $_186
              end ;; $_185
            end ;; $label$break$L276
            i32.const 18108
            i32.const 18108
            i32.load
            i32.const 4
            i32.or
            i32.store
          end ;; $_170
        end ;; $_169
        get_local $5
        i32.const 2147483647
        i32.lt_u
        if $_187
          get_local $5
          call $_sbrk
          tee_local $1
          i32.const 0
          call $_sbrk
          tee_local $2
          i32.lt_u
          get_local $1
          i32.const -1
          i32.ne
          get_local $2
          i32.const -1
          i32.ne
          i32.and
          i32.and
          if $_188
            get_local $2
            get_local $1
            i32.sub
            tee_local $2
            get_local $0
            i32.const 40
            i32.add
            i32.gt_u
            br_if $__rjti$13
          end ;; $_188
        end ;; $_187
        br $__rjto$13
      end ;; $__rjti$13
      i32.const 18096
      i32.const 18096
      i32.load
      get_local $2
      i32.add
      tee_local $3
      i32.store
      get_local $3
      i32.const 18100
      i32.load
      i32.gt_u
      if $_189
        i32.const 18100
        get_local $3
        i32.store
      end ;; $_189
      block $do-once38
        i32.const 17688
        i32.load
        tee_local $6
        if $_190
          block $_191
            i32.const 18112
            set_local $3
            block $__rjto$10
              block $__rjti$10
                loop $do-in41
                  get_local $1
                  get_local $3
                  i32.load
                  tee_local $12
                  get_local $3
                  i32.const 4
                  i32.add
                  tee_local $5
                  i32.load
                  tee_local $4
                  i32.add
                  i32.eq
                  br_if $__rjti$10
                  get_local $3
                  i32.load offset=8
                  tee_local $3
                  br_if $do-in41
                end ;; $do-in41
                br $__rjto$10
              end ;; $__rjti$10
              get_local $3
              i32.load offset=12
              i32.const 8
              i32.and
              i32.eqz
              if $_192
                get_local $6
                get_local $1
                i32.lt_u
                get_local $6
                get_local $12
                i32.ge_u
                i32.and
                if $_193
                  block $_194
                    get_local $5
                    get_local $4
                    get_local $2
                    i32.add
                    i32.store
                    get_local $6
                    get_local $6
                    i32.const 8
                    i32.add
                    tee_local $1
                    i32.const 7
                    i32.and
                    if $_195 (result i32)
                      i32.const 0
                      get_local $1
                      i32.sub
                      i32.const 7
                      i32.and
                    else
                      i32.const 0
                    end ;; $_195
                    tee_local $1
                    i32.add
                    set_local $3
                    get_local $2
                    get_local $1
                    i32.sub
                    i32.const 17676
                    i32.load
                    i32.add
                    set_local $1
                    i32.const 17688
                    get_local $3
                    i32.store
                    i32.const 17676
                    get_local $1
                    i32.store
                    get_local $3
                    get_local $1
                    i32.const 1
                    i32.or
                    i32.store offset=4
                    get_local $3
                    get_local $1
                    i32.add
                    i32.const 40
                    i32.store offset=4
                    i32.const 17692
                    i32.const 18152
                    i32.load
                    i32.store
                    br $do-once38
                  end ;; $_194
                end ;; $_193
              end ;; $_192
            end ;; $__rjto$10
            get_local $1
            i32.const 17680
            i32.load
            tee_local $4
            i32.lt_u
            if $_196
              block $_197
                i32.const 17680
                get_local $1
                i32.store
                get_local $1
                set_local $4
              end ;; $_197
            end ;; $_196
            get_local $1
            get_local $2
            i32.add
            set_local $12
            i32.const 18112
            set_local $3
            block $__rjto$11
              block $__rjti$11
                loop $while-in43
                  get_local $3
                  i32.load
                  get_local $12
                  i32.eq
                  if $_198
                    block $_199
                      get_local $3
                      set_local $5
                      br $__rjti$11
                    end ;; $_199
                  end ;; $_198
                  get_local $3
                  i32.load offset=8
                  tee_local $3
                  br_if $while-in43
                  i32.const 18112
                  set_local $4
                end ;; $while-in43
                br $__rjto$11
              end ;; $__rjti$11
              get_local $3
              i32.load offset=12
              i32.const 8
              i32.and
              if $_200
                i32.const 18112
                set_local $4
              else
                block $_201
                  get_local $5
                  get_local $1
                  i32.store
                  get_local $3
                  i32.const 4
                  i32.add
                  tee_local $3
                  get_local $3
                  i32.load
                  get_local $2
                  i32.add
                  i32.store
                  get_local $1
                  get_local $1
                  i32.const 8
                  i32.add
                  tee_local $1
                  i32.const 7
                  i32.and
                  if $_202 (result i32)
                    i32.const 0
                    get_local $1
                    i32.sub
                    i32.const 7
                    i32.and
                  else
                    i32.const 0
                  end ;; $_202
                  i32.add
                  tee_local $8
                  get_local $0
                  i32.add
                  set_local $11
                  get_local $12
                  get_local $12
                  i32.const 8
                  i32.add
                  tee_local $1
                  i32.const 7
                  i32.and
                  if $_203 (result i32)
                    i32.const 0
                    get_local $1
                    i32.sub
                    i32.const 7
                    i32.and
                  else
                    i32.const 0
                  end ;; $_203
                  i32.add
                  tee_local $7
                  get_local $8
                  i32.sub
                  get_local $0
                  i32.sub
                  set_local $5
                  get_local $8
                  get_local $0
                  i32.const 3
                  i32.or
                  i32.store offset=4
                  block $do-once44
                    get_local $7
                    get_local $6
                    i32.eq
                    if $_204
                      block $_205
                        i32.const 17676
                        i32.const 17676
                        i32.load
                        get_local $5
                        i32.add
                        tee_local $0
                        i32.store
                        i32.const 17688
                        get_local $11
                        i32.store
                        get_local $11
                        get_local $0
                        i32.const 1
                        i32.or
                        i32.store offset=4
                      end ;; $_205
                    else
                      block $_206
                        get_local $7
                        i32.const 17684
                        i32.load
                        i32.eq
                        if $_207
                          block $_208
                            i32.const 17672
                            i32.const 17672
                            i32.load
                            get_local $5
                            i32.add
                            tee_local $0
                            i32.store
                            i32.const 17684
                            get_local $11
                            i32.store
                            get_local $11
                            get_local $0
                            i32.const 1
                            i32.or
                            i32.store offset=4
                            get_local $11
                            get_local $0
                            i32.add
                            get_local $0
                            i32.store
                            br $do-once44
                          end ;; $_208
                        end ;; $_207
                        get_local $7
                        i32.load offset=4
                        tee_local $0
                        i32.const 3
                        i32.and
                        i32.const 1
                        i32.eq
                        if $_209 (result i32)
                          block $_210 (result i32)
                            get_local $0
                            i32.const -8
                            i32.and
                            set_local $12
                            get_local $0
                            i32.const 3
                            i32.shr_u
                            set_local $1
                            block $label$break$L328
                              get_local $0
                              i32.const 256
                              i32.lt_u
                              if $_211
                                block $_212
                                  get_local $7
                                  i32.load offset=12
                                  set_local $3
                                  block $do-once47
                                    get_local $7
                                    i32.load offset=8
                                    tee_local $2
                                    get_local $1
                                    i32.const 3
                                    i32.shl
                                    i32.const 17704
                                    i32.add
                                    tee_local $0
                                    i32.ne
                                    if $_213
                                      block $_214
                                        get_local $2
                                        get_local $4
                                        i32.lt_u
                                        if $_215
                                          call $_abort
                                        end ;; $_215
                                        get_local $2
                                        i32.load offset=12
                                        get_local $7
                                        i32.eq
                                        br_if $do-once47
                                        call $_abort
                                      end ;; $_214
                                    end ;; $_213
                                  end ;; $do-once47
                                  get_local $3
                                  get_local $2
                                  i32.eq
                                  if $_216
                                    block $_217
                                      i32.const 17664
                                      i32.const 17664
                                      i32.load
                                      i32.const 1
                                      get_local $1
                                      i32.shl
                                      i32.const -1
                                      i32.xor
                                      i32.and
                                      i32.store
                                      br $label$break$L328
                                    end ;; $_217
                                  end ;; $_216
                                  block $do-once49
                                    get_local $3
                                    get_local $0
                                    i32.eq
                                    if $_218
                                      get_local $3
                                      i32.const 8
                                      i32.add
                                      set_local $19
                                    else
                                      block $_219
                                        get_local $3
                                        get_local $4
                                        i32.lt_u
                                        if $_220
                                          call $_abort
                                        end ;; $_220
                                        get_local $3
                                        i32.const 8
                                        i32.add
                                        tee_local $0
                                        i32.load
                                        get_local $7
                                        i32.eq
                                        if $_221
                                          block $_222
                                            get_local $0
                                            set_local $19
                                            br $do-once49
                                          end ;; $_222
                                        end ;; $_221
                                        call $_abort
                                      end ;; $_219
                                    end ;; $_218
                                  end ;; $do-once49
                                  get_local $2
                                  get_local $3
                                  i32.store offset=12
                                  get_local $19
                                  get_local $2
                                  i32.store
                                end ;; $_212
                              else
                                block $_223
                                  get_local $7
                                  i32.load offset=24
                                  set_local $6
                                  block $do-once51
                                    get_local $7
                                    i32.load offset=12
                                    tee_local $0
                                    get_local $7
                                    i32.eq
                                    if $_224
                                      block $_225
                                        get_local $7
                                        i32.const 16
                                        i32.add
                                        tee_local $2
                                        i32.const 4
                                        i32.add
                                        tee_local $0
                                        i32.load
                                        tee_local $1
                                        i32.eqz
                                        if $_226
                                          get_local $2
                                          i32.load
                                          tee_local $1
                                          if $_227
                                            get_local $2
                                            set_local $0
                                          else
                                            block $_228
                                              i32.const 0
                                              set_local $10
                                              br $do-once51
                                            end ;; $_228
                                          end ;; $_227
                                        end ;; $_226
                                        loop $while-in54
                                          get_local $1
                                          i32.const 20
                                          i32.add
                                          tee_local $3
                                          i32.load
                                          tee_local $2
                                          if $_229
                                            block $_230
                                              get_local $2
                                              set_local $1
                                              get_local $3
                                              set_local $0
                                              br $while-in54
                                            end ;; $_230
                                          end ;; $_229
                                          get_local $1
                                          i32.const 16
                                          i32.add
                                          tee_local $3
                                          i32.load
                                          tee_local $2
                                          if $_231
                                            block $_232
                                              get_local $2
                                              set_local $1
                                              get_local $3
                                              set_local $0
                                              br $while-in54
                                            end ;; $_232
                                          end ;; $_231
                                        end ;; $while-in54
                                        get_local $0
                                        get_local $4
                                        i32.lt_u
                                        if $_233
                                          call $_abort
                                        else
                                          block $_234
                                            get_local $0
                                            i32.const 0
                                            i32.store
                                            get_local $1
                                            set_local $10
                                          end ;; $_234
                                        end ;; $_233
                                      end ;; $_225
                                    else
                                      block $_235
                                        get_local $7
                                        i32.load offset=8
                                        tee_local $3
                                        get_local $4
                                        i32.lt_u
                                        if $_236
                                          call $_abort
                                        end ;; $_236
                                        get_local $3
                                        i32.const 12
                                        i32.add
                                        tee_local $2
                                        i32.load
                                        get_local $7
                                        i32.ne
                                        if $_237
                                          call $_abort
                                        end ;; $_237
                                        get_local $0
                                        i32.const 8
                                        i32.add
                                        tee_local $1
                                        i32.load
                                        get_local $7
                                        i32.eq
                                        if $_238
                                          block $_239
                                            get_local $2
                                            get_local $0
                                            i32.store
                                            get_local $1
                                            get_local $3
                                            i32.store
                                            get_local $0
                                            set_local $10
                                          end ;; $_239
                                        else
                                          call $_abort
                                        end ;; $_238
                                      end ;; $_235
                                    end ;; $_224
                                  end ;; $do-once51
                                  get_local $6
                                  i32.eqz
                                  br_if $label$break$L328
                                  block $do-once55
                                    get_local $7
                                    get_local $7
                                    i32.load offset=28
                                    tee_local $1
                                    i32.const 2
                                    i32.shl
                                    i32.const 17968
                                    i32.add
                                    tee_local $0
                                    i32.load
                                    i32.eq
                                    if $_240
                                      block $_241
                                        get_local $0
                                        get_local $10
                                        i32.store
                                        get_local $10
                                        br_if $do-once55
                                        i32.const 17668
                                        i32.const 17668
                                        i32.load
                                        i32.const 1
                                        get_local $1
                                        i32.shl
                                        i32.const -1
                                        i32.xor
                                        i32.and
                                        i32.store
                                        br $label$break$L328
                                      end ;; $_241
                                    else
                                      block $_242
                                        get_local $6
                                        i32.const 17680
                                        i32.load
                                        i32.lt_u
                                        if $_243
                                          call $_abort
                                        end ;; $_243
                                        get_local $6
                                        i32.const 16
                                        i32.add
                                        tee_local $0
                                        i32.load
                                        get_local $7
                                        i32.eq
                                        if $_244
                                          get_local $0
                                          get_local $10
                                          i32.store
                                        else
                                          get_local $6
                                          get_local $10
                                          i32.store offset=20
                                        end ;; $_244
                                        get_local $10
                                        i32.eqz
                                        br_if $label$break$L328
                                      end ;; $_242
                                    end ;; $_240
                                  end ;; $do-once55
                                  get_local $10
                                  i32.const 17680
                                  i32.load
                                  tee_local $1
                                  i32.lt_u
                                  if $_245
                                    call $_abort
                                  end ;; $_245
                                  get_local $10
                                  get_local $6
                                  i32.store offset=24
                                  get_local $7
                                  i32.const 16
                                  i32.add
                                  tee_local $0
                                  i32.load
                                  tee_local $2
                                  if $_246
                                    get_local $2
                                    get_local $1
                                    i32.lt_u
                                    if $_247
                                      call $_abort
                                    else
                                      block $_248
                                        get_local $10
                                        get_local $2
                                        i32.store offset=16
                                        get_local $2
                                        get_local $10
                                        i32.store offset=24
                                      end ;; $_248
                                    end ;; $_247
                                  end ;; $_246
                                  get_local $0
                                  i32.load offset=4
                                  tee_local $0
                                  i32.eqz
                                  br_if $label$break$L328
                                  get_local $0
                                  i32.const 17680
                                  i32.load
                                  i32.lt_u
                                  if $_249
                                    call $_abort
                                  else
                                    block $_250
                                      get_local $10
                                      get_local $0
                                      i32.store offset=20
                                      get_local $0
                                      get_local $10
                                      i32.store offset=24
                                    end ;; $_250
                                  end ;; $_249
                                end ;; $_223
                              end ;; $_211
                            end ;; $label$break$L328
                            get_local $12
                            get_local $5
                            i32.add
                            set_local $5
                            get_local $7
                            get_local $12
                            i32.add
                          end ;; $_210
                        else
                          get_local $7
                        end ;; $_209
                        tee_local $0
                        i32.const 4
                        i32.add
                        tee_local $0
                        get_local $0
                        i32.load
                        i32.const -2
                        i32.and
                        i32.store
                        get_local $11
                        get_local $5
                        i32.const 1
                        i32.or
                        i32.store offset=4
                        get_local $11
                        get_local $5
                        i32.add
                        get_local $5
                        i32.store
                        get_local $5
                        i32.const 3
                        i32.shr_u
                        set_local $0
                        get_local $5
                        i32.const 256
                        i32.lt_u
                        if $_251
                          block $_252
                            get_local $0
                            i32.const 3
                            i32.shl
                            i32.const 17704
                            i32.add
                            set_local $2
                            block $do-once59
                              i32.const 17664
                              i32.load
                              tee_local $1
                              i32.const 1
                              get_local $0
                              i32.shl
                              tee_local $0
                              i32.and
                              if $_253
                                block $_254
                                  get_local $2
                                  i32.const 8
                                  i32.add
                                  tee_local $1
                                  i32.load
                                  tee_local $0
                                  i32.const 17680
                                  i32.load
                                  i32.ge_u
                                  if $_255
                                    block $_256
                                      get_local $1
                                      set_local $20
                                      get_local $0
                                      set_local $9
                                      br $do-once59
                                    end ;; $_256
                                  end ;; $_255
                                  call $_abort
                                end ;; $_254
                              else
                                block $_257
                                  i32.const 17664
                                  get_local $1
                                  get_local $0
                                  i32.or
                                  i32.store
                                  get_local $2
                                  i32.const 8
                                  i32.add
                                  set_local $20
                                  get_local $2
                                  set_local $9
                                end ;; $_257
                              end ;; $_253
                            end ;; $do-once59
                            get_local $20
                            get_local $11
                            i32.store
                            get_local $9
                            get_local $11
                            i32.store offset=12
                            get_local $11
                            get_local $9
                            i32.store offset=8
                            get_local $11
                            get_local $2
                            i32.store offset=12
                            br $do-once44
                          end ;; $_252
                        end ;; $_251
                        block $do-once61 (result i32)
                          get_local $5
                          i32.const 8
                          i32.shr_u
                          tee_local $0
                          if $_258 (result i32)
                            block $_259 (result i32)
                              i32.const 31
                              get_local $5
                              i32.const 16777215
                              i32.gt_u
                              br_if $do-once61
                              drop
                              get_local $5
                              i32.const 14
                              get_local $0
                              get_local $0
                              i32.const 1048320
                              i32.add
                              i32.const 16
                              i32.shr_u
                              i32.const 8
                              i32.and
                              tee_local $2
                              i32.shl
                              tee_local $1
                              i32.const 520192
                              i32.add
                              i32.const 16
                              i32.shr_u
                              i32.const 4
                              i32.and
                              tee_local $0
                              get_local $2
                              i32.or
                              get_local $1
                              get_local $0
                              i32.shl
                              tee_local $1
                              i32.const 245760
                              i32.add
                              i32.const 16
                              i32.shr_u
                              i32.const 2
                              i32.and
                              tee_local $0
                              i32.or
                              i32.sub
                              get_local $1
                              get_local $0
                              i32.shl
                              i32.const 15
                              i32.shr_u
                              i32.add
                              tee_local $0
                              i32.const 7
                              i32.add
                              i32.shr_u
                              i32.const 1
                              i32.and
                              get_local $0
                              i32.const 1
                              i32.shl
                              i32.or
                            end ;; $_259
                          else
                            i32.const 0
                          end ;; $_258
                        end ;; $do-once61
                        tee_local $3
                        i32.const 2
                        i32.shl
                        i32.const 17968
                        i32.add
                        set_local $2
                        get_local $11
                        get_local $3
                        i32.store offset=28
                        get_local $11
                        i32.const 16
                        i32.add
                        tee_local $0
                        i32.const 0
                        i32.store offset=4
                        get_local $0
                        i32.const 0
                        i32.store
                        i32.const 17668
                        i32.load
                        tee_local $1
                        i32.const 1
                        get_local $3
                        i32.shl
                        tee_local $0
                        i32.and
                        i32.eqz
                        if $_260
                          block $_261
                            i32.const 17668
                            get_local $1
                            get_local $0
                            i32.or
                            i32.store
                            get_local $2
                            get_local $11
                            i32.store
                            get_local $11
                            get_local $2
                            i32.store offset=24
                            get_local $11
                            get_local $11
                            i32.store offset=12
                            get_local $11
                            get_local $11
                            i32.store offset=8
                            br $do-once44
                          end ;; $_261
                        end ;; $_260
                        get_local $5
                        get_local $3
                        i32.const 31
                        i32.eq
                        if $_262 (result i32)
                          i32.const 0
                        else
                          i32.const 25
                          get_local $3
                          i32.const 1
                          i32.shr_u
                          i32.sub
                        end ;; $_262
                        i32.shl
                        set_local $3
                        get_local $2
                        i32.load
                        set_local $0
                        block $__rjto$7
                          block $__rjti$7
                            block $__rjti$6
                              loop $while-in64
                                get_local $0
                                i32.load offset=4
                                i32.const -8
                                i32.and
                                get_local $5
                                i32.eq
                                br_if $__rjti$7
                                get_local $0
                                i32.const 16
                                i32.add
                                get_local $3
                                i32.const 31
                                i32.shr_u
                                i32.const 2
                                i32.shl
                                i32.add
                                tee_local $2
                                i32.load
                                tee_local $1
                                i32.eqz
                                br_if $__rjti$6
                                get_local $3
                                i32.const 1
                                i32.shl
                                set_local $3
                                get_local $1
                                set_local $0
                                br $while-in64
                              end ;; $while-in64
                            end ;; $__rjti$6
                            get_local $2
                            i32.const 17680
                            i32.load
                            i32.lt_u
                            if $_263
                              call $_abort
                            else
                              block $_264
                                get_local $2
                                get_local $11
                                i32.store
                                get_local $11
                                get_local $0
                                i32.store offset=24
                                get_local $11
                                get_local $11
                                i32.store offset=12
                                get_local $11
                                get_local $11
                                i32.store offset=8
                                br $do-once44
                              end ;; $_264
                            end ;; $_263
                            br $__rjto$7
                          end ;; $__rjti$7
                          get_local $0
                          i32.const 8
                          i32.add
                          tee_local $2
                          i32.load
                          tee_local $3
                          i32.const 17680
                          i32.load
                          tee_local $1
                          i32.ge_u
                          get_local $0
                          get_local $1
                          i32.ge_u
                          i32.and
                          if $_265
                            block $_266
                              get_local $3
                              get_local $11
                              i32.store offset=12
                              get_local $2
                              get_local $11
                              i32.store
                              get_local $11
                              get_local $3
                              i32.store offset=8
                              get_local $11
                              get_local $0
                              i32.store offset=12
                              get_local $11
                              i32.const 0
                              i32.store offset=24
                            end ;; $_266
                          else
                            call $_abort
                          end ;; $_265
                        end ;; $__rjto$7
                      end ;; $_206
                    end ;; $_204
                  end ;; $do-once44
                  get_local $13
                  set_global $STACKTOP
                  get_local $8
                  i32.const 8
                  i32.add
                  return
                end ;; $_201
              end ;; $_200
            end ;; $__rjto$11
            loop $while-in66
              block $while-out65
                get_local $4
                i32.load
                tee_local $3
                get_local $6
                i32.le_u
                if $_267
                  get_local $3
                  get_local $4
                  i32.load offset=4
                  i32.add
                  tee_local $3
                  get_local $6
                  i32.gt_u
                  br_if $while-out65
                end ;; $_267
                get_local $4
                i32.load offset=8
                set_local $4
                br $while-in66
              end ;; $while-out65
            end ;; $while-in66
            get_local $3
            i32.const -47
            i32.add
            tee_local $4
            i32.const 8
            i32.add
            set_local $5
            get_local $4
            get_local $5
            i32.const 7
            i32.and
            if $_268 (result i32)
              i32.const 0
              get_local $5
              i32.sub
              i32.const 7
              i32.and
            else
              i32.const 0
            end ;; $_268
            i32.add
            tee_local $4
            get_local $6
            i32.const 16
            i32.add
            tee_local $9
            i32.lt_u
            if $_269 (result i32)
              get_local $6
              tee_local $4
            else
              get_local $4
            end ;; $_269
            i32.const 8
            i32.add
            set_local $10
            i32.const 17688
            get_local $1
            get_local $1
            i32.const 8
            i32.add
            tee_local $5
            i32.const 7
            i32.and
            if $_270 (result i32)
              i32.const 0
              get_local $5
              i32.sub
              i32.const 7
              i32.and
            else
              i32.const 0
            end ;; $_270
            tee_local $5
            i32.add
            tee_local $12
            i32.store
            i32.const 17676
            get_local $2
            i32.const -40
            i32.add
            get_local $5
            i32.sub
            tee_local $5
            i32.store
            get_local $12
            get_local $5
            i32.const 1
            i32.or
            i32.store offset=4
            get_local $12
            get_local $5
            i32.add
            i32.const 40
            i32.store offset=4
            i32.const 17692
            i32.const 18152
            i32.load
            i32.store
            get_local $4
            i32.const 4
            i32.add
            tee_local $5
            i32.const 27
            i32.store
            get_local $10
            i32.const 18112
            i32.load
            i32.store
            get_local $10
            i32.const 18116
            i32.load
            i32.store offset=4
            get_local $10
            i32.const 18120
            i32.load
            i32.store offset=8
            get_local $10
            i32.const 18124
            i32.load
            i32.store offset=12
            i32.const 18112
            get_local $1
            i32.store
            i32.const 18116
            get_local $2
            i32.store
            i32.const 18124
            i32.const 0
            i32.store
            i32.const 18120
            get_local $10
            i32.store
            get_local $4
            i32.const 24
            i32.add
            set_local $1
            loop $do-in68
              get_local $1
              i32.const 4
              i32.add
              tee_local $1
              i32.const 7
              i32.store
              get_local $1
              i32.const 4
              i32.add
              get_local $3
              i32.lt_u
              br_if $do-in68
            end ;; $do-in68
            get_local $4
            get_local $6
            i32.ne
            if $_271
              block $_272
                get_local $5
                get_local $5
                i32.load
                i32.const -2
                i32.and
                i32.store
                get_local $6
                get_local $4
                get_local $6
                i32.sub
                tee_local $5
                i32.const 1
                i32.or
                i32.store offset=4
                get_local $4
                get_local $5
                i32.store
                get_local $5
                i32.const 3
                i32.shr_u
                set_local $1
                get_local $5
                i32.const 256
                i32.lt_u
                if $_273
                  block $_274
                    get_local $1
                    i32.const 3
                    i32.shl
                    i32.const 17704
                    i32.add
                    set_local $3
                    i32.const 17664
                    i32.load
                    tee_local $2
                    i32.const 1
                    get_local $1
                    i32.shl
                    tee_local $1
                    i32.and
                    if $_275
                      get_local $3
                      i32.const 8
                      i32.add
                      tee_local $2
                      i32.load
                      tee_local $1
                      i32.const 17680
                      i32.load
                      i32.lt_u
                      if $_276
                        call $_abort
                      else
                        block $_277
                          get_local $2
                          set_local $11
                          get_local $1
                          set_local $7
                        end ;; $_277
                      end ;; $_276
                    else
                      block $_278
                        i32.const 17664
                        get_local $2
                        get_local $1
                        i32.or
                        i32.store
                        get_local $3
                        i32.const 8
                        i32.add
                        set_local $11
                        get_local $3
                        set_local $7
                      end ;; $_278
                    end ;; $_275
                    get_local $11
                    get_local $6
                    i32.store
                    get_local $7
                    get_local $6
                    i32.store offset=12
                    get_local $6
                    get_local $7
                    i32.store offset=8
                    get_local $6
                    get_local $3
                    i32.store offset=12
                    br $do-once38
                  end ;; $_274
                end ;; $_273
                get_local $5
                i32.const 8
                i32.shr_u
                tee_local $1
                if $_279 (result i32)
                  get_local $5
                  i32.const 16777215
                  i32.gt_u
                  if $_280 (result i32)
                    i32.const 31
                  else
                    get_local $5
                    i32.const 14
                    get_local $1
                    get_local $1
                    i32.const 1048320
                    i32.add
                    i32.const 16
                    i32.shr_u
                    i32.const 8
                    i32.and
                    tee_local $3
                    i32.shl
                    tee_local $2
                    i32.const 520192
                    i32.add
                    i32.const 16
                    i32.shr_u
                    i32.const 4
                    i32.and
                    tee_local $1
                    get_local $3
                    i32.or
                    get_local $2
                    get_local $1
                    i32.shl
                    tee_local $2
                    i32.const 245760
                    i32.add
                    i32.const 16
                    i32.shr_u
                    i32.const 2
                    i32.and
                    tee_local $1
                    i32.or
                    i32.sub
                    get_local $2
                    get_local $1
                    i32.shl
                    i32.const 15
                    i32.shr_u
                    i32.add
                    tee_local $1
                    i32.const 7
                    i32.add
                    i32.shr_u
                    i32.const 1
                    i32.and
                    get_local $1
                    i32.const 1
                    i32.shl
                    i32.or
                  end ;; $_280
                else
                  i32.const 0
                end ;; $_279
                tee_local $4
                i32.const 2
                i32.shl
                i32.const 17968
                i32.add
                set_local $3
                get_local $6
                get_local $4
                i32.store offset=28
                get_local $6
                i32.const 0
                i32.store offset=20
                get_local $9
                i32.const 0
                i32.store
                i32.const 17668
                i32.load
                tee_local $2
                i32.const 1
                get_local $4
                i32.shl
                tee_local $1
                i32.and
                i32.eqz
                if $_281
                  block $_282
                    i32.const 17668
                    get_local $2
                    get_local $1
                    i32.or
                    i32.store
                    get_local $3
                    get_local $6
                    i32.store
                    get_local $6
                    get_local $3
                    i32.store offset=24
                    get_local $6
                    get_local $6
                    i32.store offset=12
                    get_local $6
                    get_local $6
                    i32.store offset=8
                    br $do-once38
                  end ;; $_282
                end ;; $_281
                get_local $5
                get_local $4
                i32.const 31
                i32.eq
                if $_283 (result i32)
                  i32.const 0
                else
                  i32.const 25
                  get_local $4
                  i32.const 1
                  i32.shr_u
                  i32.sub
                end ;; $_283
                i32.shl
                set_local $4
                get_local $3
                i32.load
                set_local $1
                block $__rjto$9
                  block $__rjti$9
                    block $__rjti$8
                      loop $while-in70
                        get_local $1
                        i32.load offset=4
                        i32.const -8
                        i32.and
                        get_local $5
                        i32.eq
                        br_if $__rjti$9
                        get_local $1
                        i32.const 16
                        i32.add
                        get_local $4
                        i32.const 31
                        i32.shr_u
                        i32.const 2
                        i32.shl
                        i32.add
                        tee_local $3
                        i32.load
                        tee_local $2
                        i32.eqz
                        br_if $__rjti$8
                        get_local $4
                        i32.const 1
                        i32.shl
                        set_local $4
                        get_local $2
                        set_local $1
                        br $while-in70
                      end ;; $while-in70
                    end ;; $__rjti$8
                    get_local $3
                    i32.const 17680
                    i32.load
                    i32.lt_u
                    if $_284
                      call $_abort
                    else
                      block $_285
                        get_local $3
                        get_local $6
                        i32.store
                        get_local $6
                        get_local $1
                        i32.store offset=24
                        get_local $6
                        get_local $6
                        i32.store offset=12
                        get_local $6
                        get_local $6
                        i32.store offset=8
                        br $do-once38
                      end ;; $_285
                    end ;; $_284
                    br $__rjto$9
                  end ;; $__rjti$9
                  get_local $1
                  i32.const 8
                  i32.add
                  tee_local $3
                  i32.load
                  tee_local $4
                  i32.const 17680
                  i32.load
                  tee_local $2
                  i32.ge_u
                  get_local $1
                  get_local $2
                  i32.ge_u
                  i32.and
                  if $_286
                    block $_287
                      get_local $4
                      get_local $6
                      i32.store offset=12
                      get_local $3
                      get_local $6
                      i32.store
                      get_local $6
                      get_local $4
                      i32.store offset=8
                      get_local $6
                      get_local $1
                      i32.store offset=12
                      get_local $6
                      i32.const 0
                      i32.store offset=24
                    end ;; $_287
                  else
                    call $_abort
                  end ;; $_286
                end ;; $__rjto$9
              end ;; $_272
            end ;; $_271
          end ;; $_191
        else
          block $_288
            i32.const 17680
            i32.load
            tee_local $3
            i32.eqz
            get_local $1
            get_local $3
            i32.lt_u
            i32.or
            if $_289
              i32.const 17680
              get_local $1
              i32.store
            end ;; $_289
            i32.const 18112
            get_local $1
            i32.store
            i32.const 18116
            get_local $2
            i32.store
            i32.const 18124
            i32.const 0
            i32.store
            i32.const 17700
            i32.const 18136
            i32.load
            i32.store
            i32.const 17696
            i32.const -1
            i32.store
            i32.const 0
            set_local $4
            loop $do-in
              get_local $4
              i32.const 3
              i32.shl
              i32.const 17704
              i32.add
              tee_local $3
              get_local $3
              i32.store offset=12
              get_local $3
              get_local $3
              i32.store offset=8
              get_local $4
              i32.const 1
              i32.add
              tee_local $4
              i32.const 32
              i32.ne
              br_if $do-in
            end ;; $do-in
            i32.const 17688
            get_local $1
            get_local $1
            i32.const 8
            i32.add
            tee_local $1
            i32.const 7
            i32.and
            if $if (result i32)
              i32.const 0
              get_local $1
              i32.sub
              i32.const 7
              i32.and
            else
              i32.const 0
            end ;; $if
            tee_local $1
            i32.add
            tee_local $3
            i32.store
            i32.const 17676
            get_local $2
            i32.const -40
            i32.add
            get_local $1
            i32.sub
            tee_local $1
            i32.store
            get_local $3
            get_local $1
            i32.const 1
            i32.or
            i32.store offset=4
            get_local $3
            get_local $1
            i32.add
            i32.const 40
            i32.store offset=4
            i32.const 17692
            i32.const 18152
            i32.load
            i32.store
          end ;; $_288
        end ;; $_190
      end ;; $do-once38
      i32.const 17676
      i32.load
      tee_local $1
      get_local $0
      i32.gt_u
      if $if_1
        block $block
          i32.const 17676
          get_local $1
          get_local $0
          i32.sub
          tee_local $2
          i32.store
          i32.const 17688
          i32.const 17688
          i32.load
          tee_local $3
          get_local $0
          i32.add
          tee_local $1
          i32.store
          get_local $1
          get_local $2
          i32.const 1
          i32.or
          i32.store offset=4
          get_local $3
          get_local $0
          i32.const 3
          i32.or
          i32.store offset=4
          get_local $13
          set_global $STACKTOP
          get_local $3
          i32.const 8
          i32.add
          return
        end ;; $block
      end ;; $if_1
    end ;; $__rjto$13
    call $___errno_location
    i32.const 12
    i32.store
    get_local $13
    set_global $STACKTOP
    i32.const 0
    )
  
  (func $_printf_core (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 f64)
    (local $20 f64)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    (local $25 i32)
    (local $26 i32)
    (local $27 i32)
    (local $28 i32)
    (local $29 i32)
    (local $30 i32)
    (local $31 i32)
    (local $32 i32)
    (local $33 i32)
    (local $34 i32)
    (local $35 i32)
    (local $36 i32)
    (local $37 i32)
    (local $38 i32)
    (local $39 i32)
    (local $40 i32)
    (local $41 i32)
    (local $42 i32)
    (local $43 i32)
    (local $44 i32)
    (local $45 i32)
    (local $46 i32)
    (local $47 i32)
    (local $48 i32)
    (local $49 i32)
    (local $50 i32)
    (local $51 i32)
    get_global $STACKTOP
    set_local $25
    get_global $STACKTOP
    i32.const 624
    i32.add
    set_global $STACKTOP
    get_local $25
    i32.const 16
    i32.add
    set_local $21
    get_local $25
    set_local $17
    get_local $25
    i32.const 528
    i32.add
    set_local $38
    get_local $0
    i32.const 0
    i32.ne
    set_local $32
    get_local $25
    i32.const 536
    i32.add
    tee_local $16
    i32.const 40
    i32.add
    tee_local $24
    set_local $40
    get_local $16
    i32.const 39
    i32.add
    set_local $41
    get_local $25
    i32.const 8
    i32.add
    tee_local $39
    i32.const 4
    i32.add
    set_local $44
    i32.const 0
    get_local $25
    i32.const 588
    i32.add
    tee_local $22
    tee_local $30
    i32.sub
    set_local $45
    get_local $25
    i32.const 576
    i32.add
    tee_local $16
    i32.const 12
    i32.add
    set_local $34
    get_local $16
    i32.const 11
    i32.add
    set_local $42
    get_local $34
    tee_local $31
    get_local $30
    i32.sub
    set_local $46
    i32.const -2
    get_local $30
    i32.sub
    set_local $47
    get_local $31
    i32.const 2
    i32.add
    set_local $48
    get_local $25
    i32.const 24
    i32.add
    tee_local $49
    i32.const 288
    i32.add
    set_local $50
    get_local $22
    i32.const 9
    i32.add
    tee_local $33
    set_local $43
    get_local $22
    i32.const 8
    i32.add
    set_local $35
    i32.const 0
    set_local $15
    i32.const 0
    set_local $6
    i32.const 0
    set_local $16
    block $label$break$L345
      block $__rjti$9
        loop $label$continue$L1
          block $label$break$L1
            get_local $15
            i32.const -1
            i32.gt_s
            if $_1
              get_local $6
              i32.const 2147483647
              get_local $15
              i32.sub
              i32.gt_s
              if $_2 (result i32)
                block $_3 (result i32)
                  call $___errno_location
                  i32.const 75
                  i32.store
                  i32.const -1
                end ;; $_3
              else
                get_local $6
                get_local $15
                i32.add
              end ;; $_2
              set_local $15
            end ;; $_1
            get_local $1
            i32.load8_s
            tee_local $11
            i32.eqz
            br_if $__rjti$9
            get_local $1
            set_local $6
            block $label$break$L12
              block $__rjti$1
                loop $label$continue$L9
                  block $label$break$L9
                    block $switch-default
                      block $switch-case0
                        block $switch-case
                          get_local $11
                          i32.const 24
                          i32.shl
                          i32.const 24
                          i32.shr_s
                          br_table
                            $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                            $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                            $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case
                            $switch-default ;; default
                        end ;; $switch-case
                        get_local $6
                        set_local $11
                        br $__rjti$1
                      end ;; $switch-case0
                      get_local $6
                      set_local $11
                      get_local $6
                      set_local $5
                      br $label$break$L9
                    end ;; $switch-default
                    get_local $6
                    i32.const 1
                    i32.add
                    tee_local $6
                    i32.load8_s
                    set_local $11
                    br $label$continue$L9
                  end ;; $label$break$L9
                end ;; $label$continue$L9
                br $label$break$L12
              end ;; $__rjti$1
              loop $while-in
                get_local $11
                i32.load8_s offset=1
                i32.const 37
                i32.ne
                if $_4
                  block $_5
                    get_local $6
                    set_local $5
                    br $label$break$L12
                  end ;; $_5
                end ;; $_4
                get_local $6
                i32.const 1
                i32.add
                set_local $6
                get_local $11
                i32.const 2
                i32.add
                tee_local $11
                i32.load8_s
                i32.const 37
                i32.eq
                br_if $while-in
                get_local $6
                set_local $5
              end ;; $while-in
            end ;; $label$break$L12
            get_local $5
            get_local $1
            i32.sub
            set_local $6
            get_local $32
            if $_6
              get_local $0
              i32.load
              i32.const 32
              i32.and
              i32.eqz
              if $_7
                get_local $1
                get_local $6
                get_local $0
                call $___fwritex
                drop
              end ;; $_7
            end ;; $_6
            get_local $5
            get_local $1
            i32.ne
            if $_8
              block $_9
                get_local $11
                set_local $1
                br $label$continue$L1
              end ;; $_9
            end ;; $_8
            get_local $11
            i32.const 1
            i32.add
            tee_local $10
            i32.load8_s
            tee_local $13
            i32.const -48
            i32.add
            tee_local $12
            i32.const 10
            i32.lt_u
            if $_10 (result i32)
              block $_11 (result i32)
                get_local $11
                i32.load8_s offset=2
                i32.const 36
                i32.eq
                tee_local $5
                if $_12 (result i32)
                  get_local $11
                  i32.const 3
                  i32.add
                else
                  get_local $10
                end ;; $_12
                tee_local $11
                i32.load8_s
                set_local $13
                get_local $5
                i32.eqz
                if $_13
                  i32.const -1
                  set_local $12
                end ;; $_13
                get_local $5
                if $_14 (result i32)
                  i32.const 1
                else
                  get_local $16
                end ;; $_14
              end ;; $_11
            else
              block $_15 (result i32)
                i32.const -1
                set_local $12
                get_local $10
                set_local $11
                get_local $16
              end ;; $_15
            end ;; $_10
            set_local $5
            block $label$break$L25
              get_local $13
              i32.const 24
              i32.shl
              i32.const 24
              i32.shr_s
              tee_local $7
              i32.const -32
              i32.and
              i32.const 32
              i32.eq
              if $_16
                block $_17
                  get_local $13
                  set_local $16
                  i32.const 0
                  set_local $10
                  loop $while-in4
                    i32.const 1
                    get_local $7
                    i32.const -32
                    i32.add
                    i32.shl
                    i32.const 75913
                    i32.and
                    i32.eqz
                    if $_18
                      block $_19
                        get_local $16
                        set_local $13
                        get_local $10
                        set_local $16
                        br $label$break$L25
                      end ;; $_19
                    end ;; $_18
                    i32.const 1
                    get_local $16
                    i32.const 24
                    i32.shl
                    i32.const 24
                    i32.shr_s
                    i32.const -32
                    i32.add
                    i32.shl
                    get_local $10
                    i32.or
                    set_local $10
                    get_local $11
                    i32.const 1
                    i32.add
                    tee_local $11
                    i32.load8_s
                    tee_local $16
                    tee_local $7
                    i32.const -32
                    i32.and
                    i32.const 32
                    i32.eq
                    br_if $while-in4
                    get_local $16
                    set_local $13
                    get_local $10
                    set_local $16
                  end ;; $while-in4
                end ;; $_17
              else
                i32.const 0
                set_local $16
              end ;; $_16
            end ;; $label$break$L25
            block $do-once5
              get_local $13
              i32.const 255
              i32.and
              i32.const 42
              i32.eq
              if $_20
                block $_21
                  block $__rjto$0 (result i32)
                    block $__rjti$0
                      get_local $11
                      i32.const 1
                      i32.add
                      tee_local $13
                      i32.load8_s
                      i32.const -48
                      i32.add
                      tee_local $10
                      i32.const 10
                      i32.ge_u
                      br_if $__rjti$0
                      get_local $11
                      i32.load8_s offset=2
                      i32.const 36
                      i32.ne
                      br_if $__rjti$0
                      get_local $4
                      get_local $10
                      i32.const 2
                      i32.shl
                      i32.add
                      i32.const 10
                      i32.store
                      get_local $11
                      i32.const 3
                      i32.add
                      set_local $11
                      get_local $3
                      get_local $13
                      i32.load8_s
                      i32.const -48
                      i32.add
                      i32.const 3
                      i32.shl
                      i32.add
                      i32.load
                      set_local $13
                      i32.const 1
                      br $__rjto$0
                    end ;; $__rjti$0
                    get_local $5
                    if $_22
                      block $_23
                        i32.const -1
                        set_local $15
                        br $label$break$L1
                      end ;; $_23
                    end ;; $_22
                    get_local $32
                    i32.eqz
                    if $_24
                      block $_25
                        get_local $16
                        set_local $10
                        i32.const 0
                        set_local $16
                        get_local $13
                        set_local $11
                        i32.const 0
                        set_local $13
                        br $do-once5
                      end ;; $_25
                    end ;; $_24
                    get_local $2
                    i32.load
                    i32.const 3
                    i32.add
                    i32.const -4
                    i32.and
                    tee_local $11
                    i32.load
                    set_local $10
                    get_local $2
                    get_local $11
                    i32.const 4
                    i32.add
                    i32.store
                    get_local $13
                    set_local $11
                    get_local $10
                    set_local $13
                    i32.const 0
                  end ;; $__rjto$0
                  set_local $5
                  get_local $13
                  i32.const 0
                  i32.lt_s
                  if $_26 (result i32)
                    block $_27 (result i32)
                      get_local $16
                      i32.const 8192
                      i32.or
                      set_local $10
                      i32.const 0
                      get_local $13
                      i32.sub
                      set_local $13
                      get_local $5
                    end ;; $_27
                  else
                    block $_28 (result i32)
                      get_local $16
                      set_local $10
                      get_local $5
                    end ;; $_28
                  end ;; $_26
                  set_local $16
                end ;; $_21
              else
                get_local $13
                i32.const 24
                i32.shl
                i32.const 24
                i32.shr_s
                i32.const -48
                i32.add
                tee_local $10
                i32.const 10
                i32.lt_u
                if $_29
                  block $_30
                    i32.const 0
                    set_local $13
                    loop $while-in8
                      get_local $13
                      i32.const 10
                      i32.mul
                      get_local $10
                      i32.add
                      set_local $13
                      get_local $11
                      i32.const 1
                      i32.add
                      tee_local $11
                      i32.load8_s
                      i32.const -48
                      i32.add
                      tee_local $10
                      i32.const 10
                      i32.lt_u
                      br_if $while-in8
                    end ;; $while-in8
                    get_local $13
                    i32.const 0
                    i32.lt_s
                    if $_31
                      block $_32
                        i32.const -1
                        set_local $15
                        br $label$break$L1
                      end ;; $_32
                    else
                      block $_33
                        get_local $16
                        set_local $10
                        get_local $5
                        set_local $16
                      end ;; $_33
                    end ;; $_31
                  end ;; $_30
                else
                  block $_34
                    get_local $16
                    set_local $10
                    get_local $5
                    set_local $16
                    i32.const 0
                    set_local $13
                  end ;; $_34
                end ;; $_29
              end ;; $_20
            end ;; $do-once5
            block $label$break$L46
              get_local $11
              i32.load8_s
              i32.const 46
              i32.eq
              if $_35
                block $_36
                  get_local $11
                  i32.const 1
                  i32.add
                  tee_local $7
                  i32.load8_s
                  tee_local $5
                  i32.const 42
                  i32.ne
                  if $_37
                    block $_38
                      get_local $5
                      i32.const -48
                      i32.add
                      tee_local $8
                      i32.const 10
                      i32.lt_u
                      if $_39
                        block $_40
                          get_local $7
                          set_local $11
                          i32.const 0
                          set_local $5
                          get_local $8
                          set_local $7
                        end ;; $_40
                      else
                        block $_41
                          i32.const 0
                          set_local $5
                          get_local $7
                          set_local $11
                          br $label$break$L46
                        end ;; $_41
                      end ;; $_39
                      loop $while-in11
                        get_local $5
                        i32.const 10
                        i32.mul
                        get_local $7
                        i32.add
                        set_local $5
                        get_local $11
                        i32.const 1
                        i32.add
                        tee_local $11
                        i32.load8_s
                        i32.const -48
                        i32.add
                        tee_local $7
                        i32.const 10
                        i32.lt_u
                        br_if $while-in11
                        br $label$break$L46
                      end ;; $while-in11
                    end ;; $_38
                  end ;; $_37
                  get_local $11
                  i32.const 2
                  i32.add
                  tee_local $7
                  i32.load8_s
                  i32.const -48
                  i32.add
                  tee_local $5
                  i32.const 10
                  i32.lt_u
                  if $_42
                    get_local $11
                    i32.load8_s offset=3
                    i32.const 36
                    i32.eq
                    if $_43
                      block $_44
                        get_local $4
                        get_local $5
                        i32.const 2
                        i32.shl
                        i32.add
                        i32.const 10
                        i32.store
                        get_local $3
                        get_local $7
                        i32.load8_s
                        i32.const -48
                        i32.add
                        i32.const 3
                        i32.shl
                        i32.add
                        i32.load
                        set_local $5
                        get_local $11
                        i32.const 4
                        i32.add
                        set_local $11
                        br $label$break$L46
                      end ;; $_44
                    end ;; $_43
                  end ;; $_42
                  get_local $16
                  if $_45
                    block $_46
                      i32.const -1
                      set_local $15
                      br $label$break$L1
                    end ;; $_46
                  end ;; $_45
                  get_local $32
                  if $_47 (result i32)
                    block $_48 (result i32)
                      get_local $2
                      i32.load
                      i32.const 3
                      i32.add
                      i32.const -4
                      i32.and
                      tee_local $11
                      i32.load
                      set_local $5
                      get_local $2
                      get_local $11
                      i32.const 4
                      i32.add
                      i32.store
                      get_local $7
                    end ;; $_48
                  else
                    block $_49 (result i32)
                      i32.const 0
                      set_local $5
                      get_local $7
                    end ;; $_49
                  end ;; $_47
                  set_local $11
                end ;; $_36
              else
                i32.const -1
                set_local $5
              end ;; $_35
            end ;; $label$break$L46
            get_local $11
            set_local $7
            i32.const 0
            set_local $8
            loop $while-in13
              get_local $7
              i32.load8_s
              i32.const -65
              i32.add
              tee_local $9
              i32.const 57
              i32.gt_u
              if $_50
                block $_51
                  i32.const -1
                  set_local $15
                  br $label$break$L1
                end ;; $_51
              end ;; $_50
              get_local $7
              i32.const 1
              i32.add
              set_local $11
              get_local $8
              i32.const 58
              i32.mul
              i32.const 10795
              i32.add
              get_local $9
              i32.add
              i32.load8_s
              tee_local $14
              i32.const 255
              i32.and
              tee_local $9
              i32.const -1
              i32.add
              i32.const 8
              i32.lt_u
              if $_52
                block $_53
                  get_local $11
                  set_local $7
                  get_local $9
                  set_local $8
                  br $while-in13
                end ;; $_53
              end ;; $_52
            end ;; $while-in13
            get_local $14
            i32.const 255
            i32.and
            i32.eqz
            if $_54
              block $_55
                i32.const -1
                set_local $15
                br $label$break$L1
              end ;; $_55
            end ;; $_54
            get_local $12
            i32.const -1
            i32.gt_s
            set_local $18
            block $__rjto$2
              block $__rjti$2
                get_local $14
                i32.const 255
                i32.and
                i32.const 19
                i32.eq
                if $_56
                  get_local $18
                  if $_57
                    block $_58
                      i32.const -1
                      set_local $15
                      br $label$break$L1
                    end ;; $_58
                  else
                    br $__rjti$2
                  end ;; $_57
                else
                  block $_59
                    get_local $18
                    if $_60
                      block $_61
                        get_local $4
                        get_local $12
                        i32.const 2
                        i32.shl
                        i32.add
                        get_local $9
                        i32.store
                        get_local $3
                        get_local $12
                        i32.const 3
                        i32.shl
                        i32.add
                        tee_local $12
                        i32.load offset=4
                        set_local $14
                        get_local $17
                        tee_local $9
                        get_local $12
                        i32.load
                        i32.store
                        get_local $9
                        get_local $14
                        i32.store offset=4
                        br $__rjti$2
                      end ;; $_61
                    end ;; $_60
                    get_local $32
                    i32.eqz
                    if $_62
                      block $_63
                        i32.const 0
                        set_local $15
                        br $label$break$L1
                      end ;; $_63
                    end ;; $_62
                    get_local $17
                    get_local $9
                    get_local $2
                    call $_pop_arg
                  end ;; $_59
                end ;; $_56
                br $__rjto$2
              end ;; $__rjti$2
              get_local $32
              i32.eqz
              if $_64
                block $_65
                  get_local $11
                  set_local $1
                  br $label$continue$L1
                end ;; $_65
              end ;; $_64
            end ;; $__rjto$2
            get_local $8
            i32.const 0
            i32.ne
            get_local $7
            i32.load8_s
            tee_local $9
            i32.const 15
            i32.and
            i32.const 3
            i32.eq
            i32.and
            if $_66
              get_local $9
              i32.const -33
              i32.and
              set_local $9
            end ;; $_66
            get_local $10
            i32.const -65537
            i32.and
            set_local $7
            get_local $10
            i32.const 8192
            i32.and
            if $_67
              get_local $7
              set_local $10
            end ;; $_67
            block $__rjto$8
              block $__rjti$8
                block $__rjti$7
                  block $__rjti$6
                    block $__rjti$5
                      block $__rjti$4
                        block $__rjti$3
                          block $switch-default120
                            block $switch-case42
                              block $switch-case41
                                block $switch-case40
                                  block $switch-case39
                                    block $switch-case38
                                      block $switch-case37
                                        block $switch-case36
                                          block $switch-case34
                                            block $switch-case33
                                              block $switch-case29
                                                block $switch-case28
                                                  block $switch-case27
                                                    get_local $9
                                                    i32.const 65
                                                    i32.sub
                                                    br_table
                                                      $switch-case42 $switch-default120 $switch-case40 $switch-default120 $switch-case42 $switch-case42 $switch-case42 $switch-default120 $switch-default120 $switch-default120 $switch-default120 $switch-default120 $switch-default120 $switch-default120 $switch-default120 $switch-default120
                                                      $switch-default120 $switch-default120 $switch-case41 $switch-default120 $switch-default120 $switch-default120 $switch-default120 $switch-case29 $switch-default120 $switch-default120 $switch-default120 $switch-default120 $switch-default120 $switch-default120 $switch-default120 $switch-default120
                                                      $switch-case42 $switch-default120 $switch-case37 $switch-case34 $switch-case42 $switch-case42 $switch-case42 $switch-default120 $switch-case34 $switch-default120 $switch-default120 $switch-default120 $switch-case38 $switch-case27 $switch-case33 $switch-case28
                                                      $switch-default120 $switch-default120 $switch-case39 $switch-default120 $switch-case36 $switch-default120 $switch-default120 $switch-case29
                                                      $switch-default120 ;; default
                                                  end ;; $switch-case27
                                                  block $switch-default26
                                                    block $switch-case25
                                                      block $switch-case24
                                                        block $switch-case23
                                                          block $switch-case22
                                                            block $switch-case21
                                                              block $switch-case20
                                                                block $switch-case19
                                                                  get_local $8
                                                                  br_table
                                                                    $switch-case19 $switch-case20 $switch-case21 $switch-case22 $switch-case23 $switch-default26 $switch-case24 $switch-case25
                                                                    $switch-default26 ;; default
                                                                end ;; $switch-case19
                                                                get_local $17
                                                                i32.load
                                                                get_local $15
                                                                i32.store
                                                                get_local $11
                                                                set_local $1
                                                                br $label$continue$L1
                                                              end ;; $switch-case20
                                                              get_local $17
                                                              i32.load
                                                              get_local $15
                                                              i32.store
                                                              get_local $11
                                                              set_local $1
                                                              br $label$continue$L1
                                                            end ;; $switch-case21
                                                            get_local $17
                                                            i32.load
                                                            tee_local $1
                                                            get_local $15
                                                            i32.store
                                                            get_local $1
                                                            get_local $15
                                                            i32.const 0
                                                            i32.lt_s
                                                            i32.const 31
                                                            i32.shl
                                                            i32.const 31
                                                            i32.shr_s
                                                            i32.store offset=4
                                                            get_local $11
                                                            set_local $1
                                                            br $label$continue$L1
                                                          end ;; $switch-case22
                                                          get_local $17
                                                          i32.load
                                                          get_local $15
                                                          i32.store16
                                                          get_local $11
                                                          set_local $1
                                                          br $label$continue$L1
                                                        end ;; $switch-case23
                                                        get_local $17
                                                        i32.load
                                                        get_local $15
                                                        i32.store8
                                                        get_local $11
                                                        set_local $1
                                                        br $label$continue$L1
                                                      end ;; $switch-case24
                                                      get_local $17
                                                      i32.load
                                                      get_local $15
                                                      i32.store
                                                      get_local $11
                                                      set_local $1
                                                      br $label$continue$L1
                                                    end ;; $switch-case25
                                                    get_local $17
                                                    i32.load
                                                    tee_local $1
                                                    get_local $15
                                                    i32.store
                                                    get_local $1
                                                    get_local $15
                                                    i32.const 0
                                                    i32.lt_s
                                                    i32.const 31
                                                    i32.shl
                                                    i32.const 31
                                                    i32.shr_s
                                                    i32.store offset=4
                                                    get_local $11
                                                    set_local $1
                                                    br $label$continue$L1
                                                  end ;; $switch-default26
                                                  get_local $11
                                                  set_local $1
                                                  br $label$continue$L1
                                                end ;; $switch-case28
                                                get_local $10
                                                i32.const 8
                                                i32.or
                                                set_local $1
                                                get_local $5
                                                i32.const 8
                                                i32.le_u
                                                if $_68
                                                  i32.const 8
                                                  set_local $5
                                                end ;; $_68
                                                i32.const 120
                                                set_local $9
                                                br $__rjti$3
                                              end ;; $switch-case29
                                              get_local $10
                                              set_local $1
                                              br $__rjti$3
                                            end ;; $switch-case33
                                            get_local $17
                                            tee_local $1
                                            i32.load
                                            tee_local $6
                                            i32.eqz
                                            get_local $1
                                            i32.load offset=4
                                            tee_local $7
                                            i32.eqz
                                            i32.and
                                            if $_69
                                              get_local $24
                                              set_local $7
                                            else
                                              block $_70
                                                get_local $24
                                                set_local $1
                                                loop $while-in32
                                                  get_local $1
                                                  i32.const -1
                                                  i32.add
                                                  tee_local $1
                                                  get_local $6
                                                  i32.const 7
                                                  i32.and
                                                  i32.const 48
                                                  i32.or
                                                  i32.store8
                                                  get_local $6
                                                  get_local $7
                                                  i32.const 3
                                                  call $_bitshift64Lshr
                                                  tee_local $6
                                                  i32.eqz
                                                  get_global $tempRet0
                                                  tee_local $7
                                                  i32.eqz
                                                  i32.and
                                                  i32.eqz
                                                  br_if $while-in32
                                                  get_local $1
                                                  set_local $7
                                                end ;; $while-in32
                                              end ;; $_70
                                            end ;; $_69
                                            get_local $10
                                            i32.const 8
                                            i32.and
                                            if $_71
                                              block $_72
                                                get_local $7
                                                set_local $6
                                                get_local $10
                                                set_local $1
                                                get_local $5
                                                get_local $40
                                                get_local $7
                                                i32.sub
                                                tee_local $10
                                                i32.le_s
                                                if $_73
                                                  get_local $10
                                                  i32.const 1
                                                  i32.add
                                                  set_local $5
                                                end ;; $_73
                                                i32.const 0
                                                set_local $7
                                                i32.const 11275
                                                set_local $8
                                                br $__rjti$8
                                              end ;; $_72
                                            else
                                              block $_74
                                                get_local $7
                                                set_local $6
                                                get_local $10
                                                set_local $1
                                                i32.const 0
                                                set_local $7
                                                i32.const 11275
                                                set_local $8
                                                br $__rjti$8
                                              end ;; $_74
                                            end ;; $_71
                                          end ;; $switch-case34
                                          get_local $17
                                          tee_local $6
                                          i32.load
                                          set_local $1
                                          get_local $6
                                          i32.load offset=4
                                          tee_local $6
                                          i32.const 0
                                          i32.lt_s
                                          if $_75
                                            block $_76
                                              get_local $17
                                              tee_local $7
                                              i32.const 0
                                              i32.const 0
                                              get_local $1
                                              get_local $6
                                              call $_i64Subtract
                                              tee_local $1
                                              i32.store
                                              get_local $7
                                              get_global $tempRet0
                                              tee_local $6
                                              i32.store offset=4
                                              i32.const 1
                                              set_local $7
                                              i32.const 11275
                                              set_local $8
                                              br $__rjti$4
                                            end ;; $_76
                                          end ;; $_75
                                          get_local $10
                                          i32.const 2048
                                          i32.and
                                          if $_77
                                            block $_78
                                              i32.const 1
                                              set_local $7
                                              i32.const 11276
                                              set_local $8
                                              br $__rjti$4
                                            end ;; $_78
                                          else
                                            block $_79
                                              get_local $10
                                              i32.const 1
                                              i32.and
                                              tee_local $8
                                              set_local $7
                                              get_local $8
                                              if $_80 (result i32)
                                                i32.const 11277
                                              else
                                                i32.const 11275
                                              end ;; $_80
                                              set_local $8
                                              br $__rjti$4
                                            end ;; $_79
                                          end ;; $_77
                                        end ;; $switch-case36
                                        get_local $17
                                        tee_local $6
                                        i32.load
                                        set_local $1
                                        get_local $6
                                        i32.load offset=4
                                        set_local $6
                                        i32.const 0
                                        set_local $7
                                        i32.const 11275
                                        set_local $8
                                        br $__rjti$4
                                      end ;; $switch-case37
                                      get_local $41
                                      get_local $17
                                      i32.load
                                      i32.store8
                                      get_local $41
                                      set_local $1
                                      get_local $7
                                      set_local $10
                                      i32.const 1
                                      set_local $9
                                      i32.const 0
                                      set_local $7
                                      i32.const 11275
                                      set_local $8
                                      get_local $24
                                      set_local $6
                                      br $__rjto$8
                                    end ;; $switch-case38
                                    call $___errno_location
                                    i32.load
                                    call $_strerror
                                    set_local $6
                                    br $__rjti$5
                                  end ;; $switch-case39
                                  get_local $17
                                  i32.load
                                  tee_local $6
                                  i32.eqz
                                  if $_81
                                    i32.const 13177
                                    set_local $6
                                  end ;; $_81
                                  br $__rjti$5
                                end ;; $switch-case40
                                get_local $39
                                get_local $17
                                i32.load
                                i32.store
                                get_local $44
                                i32.const 0
                                i32.store
                                get_local $17
                                get_local $39
                                i32.store
                                get_local $39
                                set_local $6
                                i32.const -1
                                set_local $7
                                br $__rjti$6
                              end ;; $switch-case41
                              get_local $17
                              i32.load
                              set_local $6
                              get_local $5
                              if $_82
                                block $_83
                                  get_local $5
                                  set_local $7
                                  br $__rjti$6
                                end ;; $_83
                              else
                                block $_84
                                  get_local $0
                                  i32.const 32
                                  get_local $13
                                  i32.const 0
                                  get_local $10
                                  call $_pad
                                  i32.const 0
                                  set_local $1
                                  br $__rjti$7
                                end ;; $_84
                              end ;; $_82
                            end ;; $switch-case42
                            get_local $17
                            f64.load
                            set_local $19
                            get_local $21
                            i32.const 0
                            i32.store
                            get_global $tempDoublePtr
                            get_local $19
                            f64.store
                            get_global $tempDoublePtr
                            i32.load offset=4
                            i32.const 0
                            i32.lt_s
                            if $_85 (result i32)
                              block $_86 (result i32)
                                get_local $19
                                f64.neg
                                set_local $19
                                i32.const 1
                                set_local $26
                                i32.const 13184
                              end ;; $_86
                            else
                              get_local $10
                              i32.const 2048
                              i32.and
                              if $_87 (result i32)
                                block $_88 (result i32)
                                  i32.const 1
                                  set_local $26
                                  i32.const 13187
                                end ;; $_88
                              else
                                block $_89 (result i32)
                                  get_local $10
                                  i32.const 1
                                  i32.and
                                  tee_local $1
                                  set_local $26
                                  get_local $1
                                  if $_90 (result i32)
                                    i32.const 13190
                                  else
                                    i32.const 13185
                                  end ;; $_90
                                end ;; $_89
                              end ;; $_87
                            end ;; $_85
                            set_local $28
                            get_global $tempDoublePtr
                            get_local $19
                            f64.store
                            block $do-once49
                              get_global $tempDoublePtr
                              i32.load offset=4
                              i32.const 2146435072
                              i32.and
                              tee_local $1
                              i32.const 2146435072
                              i32.lt_u
                              get_local $1
                              i32.const 2146435072
                              i32.eq
                              i32.const 0
                              i32.and
                              i32.or
                              if $_91
                                block $_92
                                  get_local $19
                                  get_local $21
                                  call $_frexpl
                                  f64.const 0x1.0000000000000p+1
                                  f64.mul
                                  tee_local $20
                                  f64.const 0x0.0000000000000p+0
                                  f64.ne
                                  tee_local $1
                                  if $_93
                                    get_local $21
                                    get_local $21
                                    i32.load
                                    i32.const -1
                                    i32.add
                                    i32.store
                                  end ;; $_93
                                  get_local $9
                                  i32.const 32
                                  i32.or
                                  tee_local $23
                                  i32.const 97
                                  i32.eq
                                  if $_94
                                    block $_95
                                      get_local $9
                                      i32.const 32
                                      i32.and
                                      tee_local $12
                                      if $_96
                                        get_local $28
                                        i32.const 9
                                        i32.add
                                        set_local $28
                                      end ;; $_96
                                      get_local $5
                                      i32.const 11
                                      i32.gt_u
                                      i32.const 12
                                      get_local $5
                                      i32.sub
                                      tee_local $1
                                      i32.eqz
                                      i32.or
                                      i32.eqz
                                      if $_97
                                        block $_98
                                          f64.const 0x1.0000000000000p+3
                                          set_local $19
                                          loop $while-in54
                                            get_local $19
                                            f64.const 0x1.0000000000000p+4
                                            f64.mul
                                            set_local $19
                                            get_local $1
                                            i32.const -1
                                            i32.add
                                            tee_local $1
                                            br_if $while-in54
                                          end ;; $while-in54
                                          get_local $28
                                          i32.load8_s
                                          i32.const 45
                                          i32.eq
                                          if $_99 (result f64)
                                            get_local $19
                                            get_local $20
                                            f64.neg
                                            get_local $19
                                            f64.sub
                                            f64.add
                                            f64.neg
                                          else
                                            get_local $20
                                            get_local $19
                                            f64.add
                                            get_local $19
                                            f64.sub
                                          end ;; $_99
                                          set_local $20
                                        end ;; $_98
                                      end ;; $_97
                                      get_local $21
                                      i32.load
                                      tee_local $6
                                      i32.const 0
                                      i32.lt_s
                                      if $_100 (result i32)
                                        i32.const 0
                                        get_local $6
                                        i32.sub
                                      else
                                        get_local $6
                                      end ;; $_100
                                      tee_local $1
                                      get_local $1
                                      i32.const 0
                                      i32.lt_s
                                      i32.const 31
                                      i32.shl
                                      i32.const 31
                                      i32.shr_s
                                      get_local $34
                                      call $_fmt_u
                                      tee_local $1
                                      get_local $34
                                      i32.eq
                                      if $_101
                                        block $_102
                                          get_local $42
                                          i32.const 48
                                          i32.store8
                                          get_local $42
                                          set_local $1
                                        end ;; $_102
                                      end ;; $_101
                                      get_local $26
                                      i32.const 2
                                      i32.or
                                      set_local $8
                                      get_local $1
                                      i32.const -1
                                      i32.add
                                      get_local $6
                                      i32.const 31
                                      i32.shr_s
                                      i32.const 2
                                      i32.and
                                      i32.const 43
                                      i32.add
                                      i32.store8
                                      get_local $1
                                      i32.const -2
                                      i32.add
                                      tee_local $7
                                      get_local $9
                                      i32.const 15
                                      i32.add
                                      i32.store8
                                      get_local $5
                                      i32.const 1
                                      i32.lt_s
                                      set_local $9
                                      get_local $10
                                      i32.const 8
                                      i32.and
                                      i32.eqz
                                      set_local $14
                                      get_local $22
                                      set_local $1
                                      loop $while-in56
                                        get_local $1
                                        get_local $20
                                        i32.trunc_s/f64
                                        tee_local $6
                                        i32.const 11259
                                        i32.add
                                        i32.load8_u
                                        get_local $12
                                        i32.or
                                        i32.store8
                                        get_local $20
                                        get_local $6
                                        f64.convert_s/i32
                                        f64.sub
                                        f64.const 0x1.0000000000000p+4
                                        f64.mul
                                        set_local $20
                                        block $do-once57 (result i32)
                                          get_local $1
                                          i32.const 1
                                          i32.add
                                          tee_local $6
                                          get_local $30
                                          i32.sub
                                          i32.const 1
                                          i32.eq
                                          if $_103 (result i32)
                                            block $_104 (result i32)
                                              get_local $6
                                              get_local $14
                                              get_local $9
                                              get_local $20
                                              f64.const 0x0.0000000000000p+0
                                              f64.eq
                                              i32.and
                                              i32.and
                                              br_if $do-once57
                                              drop
                                              get_local $6
                                              i32.const 46
                                              i32.store8
                                              get_local $1
                                              i32.const 2
                                              i32.add
                                            end ;; $_104
                                          else
                                            get_local $6
                                          end ;; $_103
                                        end ;; $do-once57
                                        set_local $1
                                        get_local $20
                                        f64.const 0x0.0000000000000p+0
                                        f64.ne
                                        br_if $while-in56
                                      end ;; $while-in56
                                      get_local $7
                                      set_local $6
                                      get_local $0
                                      i32.const 32
                                      get_local $13
                                      get_local $5
                                      i32.const 0
                                      i32.ne
                                      get_local $47
                                      get_local $1
                                      i32.add
                                      get_local $5
                                      i32.lt_s
                                      i32.and
                                      if $_105 (result i32)
                                        get_local $48
                                        get_local $5
                                        i32.add
                                        get_local $6
                                        i32.sub
                                      else
                                        get_local $46
                                        get_local $6
                                        i32.sub
                                        get_local $1
                                        i32.add
                                      end ;; $_105
                                      tee_local $9
                                      get_local $8
                                      i32.add
                                      tee_local $5
                                      get_local $10
                                      call $_pad
                                      get_local $0
                                      i32.load
                                      i32.const 32
                                      i32.and
                                      i32.eqz
                                      if $_106
                                        get_local $28
                                        get_local $8
                                        get_local $0
                                        call $___fwritex
                                        drop
                                      end ;; $_106
                                      get_local $0
                                      i32.const 48
                                      get_local $13
                                      get_local $5
                                      get_local $10
                                      i32.const 65536
                                      i32.xor
                                      call $_pad
                                      get_local $1
                                      get_local $30
                                      i32.sub
                                      set_local $1
                                      get_local $0
                                      i32.load
                                      i32.const 32
                                      i32.and
                                      i32.eqz
                                      if $_107
                                        get_local $22
                                        get_local $1
                                        get_local $0
                                        call $___fwritex
                                        drop
                                      end ;; $_107
                                      get_local $0
                                      i32.const 48
                                      get_local $9
                                      get_local $1
                                      get_local $31
                                      get_local $6
                                      i32.sub
                                      tee_local $1
                                      i32.add
                                      i32.sub
                                      i32.const 0
                                      i32.const 0
                                      call $_pad
                                      get_local $0
                                      i32.load
                                      i32.const 32
                                      i32.and
                                      i32.eqz
                                      if $_108
                                        get_local $7
                                        get_local $1
                                        get_local $0
                                        call $___fwritex
                                        drop
                                      end ;; $_108
                                      get_local $0
                                      i32.const 32
                                      get_local $13
                                      get_local $5
                                      get_local $10
                                      i32.const 8192
                                      i32.xor
                                      call $_pad
                                      get_local $5
                                      get_local $13
                                      i32.ge_s
                                      if $_109
                                        get_local $5
                                        set_local $13
                                      end ;; $_109
                                      br $do-once49
                                    end ;; $_95
                                  end ;; $_94
                                  get_local $1
                                  if $_110
                                    block $_111
                                      get_local $21
                                      get_local $21
                                      i32.load
                                      i32.const -28
                                      i32.add
                                      tee_local $1
                                      i32.store
                                      get_local $20
                                      f64.const 0x1.0000000000000p+28
                                      f64.mul
                                      set_local $20
                                    end ;; $_111
                                  else
                                    get_local $21
                                    i32.load
                                    set_local $1
                                  end ;; $_110
                                  get_local $1
                                  i32.const 0
                                  i32.lt_s
                                  if $_112 (result i32)
                                    get_local $49
                                  else
                                    get_local $50
                                  end ;; $_112
                                  tee_local $6
                                  set_local $7
                                  loop $while-in60
                                    get_local $7
                                    get_local $20
                                    i32.trunc_s/f64
                                    tee_local $1
                                    i32.store
                                    get_local $7
                                    i32.const 4
                                    i32.add
                                    set_local $7
                                    get_local $20
                                    get_local $1
                                    f64.convert_u/i32
                                    f64.sub
                                    f64.const 0x1.dcd6500000000p+29
                                    f64.mul
                                    tee_local $20
                                    f64.const 0x0.0000000000000p+0
                                    f64.ne
                                    br_if $while-in60
                                  end ;; $while-in60
                                  get_local $21
                                  i32.load
                                  tee_local $8
                                  i32.const 0
                                  i32.gt_s
                                  if $_113
                                    block $_114
                                      get_local $6
                                      set_local $1
                                      loop $while-in62
                                        get_local $8
                                        i32.const 29
                                        i32.gt_s
                                        if $_115 (result i32)
                                          i32.const 29
                                        else
                                          get_local $8
                                        end ;; $_115
                                        set_local $14
                                        block $do-once63
                                          get_local $7
                                          i32.const -4
                                          i32.add
                                          tee_local $12
                                          get_local $1
                                          i32.ge_u
                                          if $_116
                                            block $_117
                                              i32.const 0
                                              set_local $8
                                              loop $while-in66
                                                get_local $12
                                                get_local $12
                                                i32.load
                                                i32.const 0
                                                get_local $14
                                                call $_bitshift64Shl
                                                get_global $tempRet0
                                                get_local $8
                                                i32.const 0
                                                call $_i64Add
                                                tee_local $8
                                                get_global $tempRet0
                                                tee_local $18
                                                i32.const 1000000000
                                                i32.const 0
                                                call $___uremdi3
                                                i32.store
                                                get_local $8
                                                get_local $18
                                                i32.const 1000000000
                                                i32.const 0
                                                call $___udivdi3
                                                set_local $8
                                                get_local $12
                                                i32.const -4
                                                i32.add
                                                tee_local $12
                                                get_local $1
                                                i32.ge_u
                                                br_if $while-in66
                                              end ;; $while-in66
                                              get_local $8
                                              i32.eqz
                                              br_if $do-once63
                                              get_local $1
                                              i32.const -4
                                              i32.add
                                              tee_local $1
                                              get_local $8
                                              i32.store
                                            end ;; $_117
                                          end ;; $_116
                                        end ;; $do-once63
                                        loop $while-in68
                                          get_local $7
                                          get_local $1
                                          i32.gt_u
                                          if $_118
                                            get_local $7
                                            i32.const -4
                                            i32.add
                                            tee_local $8
                                            i32.load
                                            i32.eqz
                                            if $_119
                                              block $_120
                                                get_local $8
                                                set_local $7
                                                br $while-in68
                                              end ;; $_120
                                            end ;; $_119
                                          end ;; $_118
                                        end ;; $while-in68
                                        get_local $21
                                        get_local $21
                                        i32.load
                                        get_local $14
                                        i32.sub
                                        tee_local $8
                                        i32.store
                                        get_local $8
                                        i32.const 0
                                        i32.gt_s
                                        br_if $while-in62
                                      end ;; $while-in62
                                    end ;; $_114
                                  else
                                    get_local $6
                                    set_local $1
                                  end ;; $_113
                                  get_local $5
                                  i32.const 0
                                  i32.lt_s
                                  if $_121 (result i32)
                                    i32.const 6
                                  else
                                    get_local $5
                                  end ;; $_121
                                  set_local $18
                                  get_local $8
                                  i32.const 0
                                  i32.lt_s
                                  if $_122
                                    block $_123
                                      get_local $18
                                      i32.const 25
                                      i32.add
                                      i32.const 9
                                      i32.div_s
                                      i32.const 1
                                      i32.add
                                      set_local $14
                                      get_local $23
                                      i32.const 102
                                      i32.eq
                                      set_local $27
                                      get_local $7
                                      set_local $5
                                      loop $while-in70
                                        i32.const 0
                                        get_local $8
                                        i32.sub
                                        tee_local $8
                                        i32.const 9
                                        i32.gt_s
                                        if $_124
                                          i32.const 9
                                          set_local $8
                                        end ;; $_124
                                        block $do-once71
                                          get_local $1
                                          get_local $5
                                          i32.lt_u
                                          if $_125
                                            block $_126
                                              i32.const 1
                                              get_local $8
                                              i32.shl
                                              i32.const -1
                                              i32.add
                                              set_local $29
                                              i32.const 1000000000
                                              get_local $8
                                              i32.shr_u
                                              set_local $36
                                              i32.const 0
                                              set_local $7
                                              get_local $1
                                              set_local $12
                                              loop $while-in74
                                                get_local $12
                                                get_local $12
                                                i32.load
                                                tee_local $37
                                                get_local $8
                                                i32.shr_u
                                                get_local $7
                                                i32.add
                                                i32.store
                                                get_local $37
                                                get_local $29
                                                i32.and
                                                get_local $36
                                                i32.mul
                                                set_local $7
                                                get_local $12
                                                i32.const 4
                                                i32.add
                                                tee_local $12
                                                get_local $5
                                                i32.lt_u
                                                br_if $while-in74
                                              end ;; $while-in74
                                              get_local $1
                                              i32.load
                                              i32.eqz
                                              if $_127
                                                get_local $1
                                                i32.const 4
                                                i32.add
                                                set_local $1
                                              end ;; $_127
                                              get_local $7
                                              i32.eqz
                                              br_if $do-once71
                                              get_local $5
                                              get_local $7
                                              i32.store
                                              get_local $5
                                              i32.const 4
                                              i32.add
                                              set_local $5
                                            end ;; $_126
                                          else
                                            get_local $1
                                            i32.load
                                            i32.eqz
                                            if $_128
                                              get_local $1
                                              i32.const 4
                                              i32.add
                                              set_local $1
                                            end ;; $_128
                                          end ;; $_125
                                        end ;; $do-once71
                                        get_local $5
                                        get_local $27
                                        if $_129 (result i32)
                                          get_local $6
                                        else
                                          get_local $1
                                        end ;; $_129
                                        tee_local $7
                                        i32.sub
                                        i32.const 2
                                        i32.shr_s
                                        get_local $14
                                        i32.gt_s
                                        if $_130
                                          get_local $7
                                          get_local $14
                                          i32.const 2
                                          i32.shl
                                          i32.add
                                          set_local $5
                                        end ;; $_130
                                        get_local $21
                                        get_local $21
                                        i32.load
                                        get_local $8
                                        i32.add
                                        tee_local $8
                                        i32.store
                                        get_local $8
                                        i32.const 0
                                        i32.lt_s
                                        br_if $while-in70
                                        get_local $5
                                        set_local $12
                                      end ;; $while-in70
                                    end ;; $_123
                                  else
                                    get_local $7
                                    set_local $12
                                  end ;; $_122
                                  get_local $6
                                  set_local $27
                                  block $do-once75
                                    get_local $1
                                    get_local $12
                                    i32.lt_u
                                    if $_131
                                      block $_132
                                        get_local $27
                                        get_local $1
                                        i32.sub
                                        i32.const 2
                                        i32.shr_s
                                        i32.const 9
                                        i32.mul
                                        set_local $5
                                        get_local $1
                                        i32.load
                                        tee_local $8
                                        i32.const 10
                                        i32.lt_u
                                        br_if $do-once75
                                        i32.const 10
                                        set_local $7
                                        loop $while-in78
                                          get_local $5
                                          i32.const 1
                                          i32.add
                                          set_local $5
                                          get_local $8
                                          get_local $7
                                          i32.const 10
                                          i32.mul
                                          tee_local $7
                                          i32.ge_u
                                          br_if $while-in78
                                        end ;; $while-in78
                                      end ;; $_132
                                    else
                                      i32.const 0
                                      set_local $5
                                    end ;; $_131
                                  end ;; $do-once75
                                  get_local $23
                                  i32.const 103
                                  i32.eq
                                  set_local $36
                                  get_local $18
                                  i32.const 0
                                  i32.ne
                                  set_local $37
                                  get_local $18
                                  get_local $23
                                  i32.const 102
                                  i32.ne
                                  if $_133 (result i32)
                                    get_local $5
                                  else
                                    i32.const 0
                                  end ;; $_133
                                  i32.sub
                                  get_local $37
                                  get_local $36
                                  i32.and
                                  i32.const 31
                                  i32.shl
                                  i32.const 31
                                  i32.shr_s
                                  i32.add
                                  tee_local $7
                                  get_local $12
                                  get_local $27
                                  i32.sub
                                  i32.const 2
                                  i32.shr_s
                                  i32.const 9
                                  i32.mul
                                  i32.const -9
                                  i32.add
                                  i32.lt_s
                                  if $_134
                                    block $_135
                                      get_local $6
                                      get_local $7
                                      i32.const 9216
                                      i32.add
                                      tee_local $8
                                      i32.const 9
                                      i32.div_s
                                      i32.const 2
                                      i32.shl
                                      i32.add
                                      i32.const -4092
                                      i32.add
                                      set_local $7
                                      get_local $8
                                      i32.const 9
                                      i32.rem_s
                                      i32.const 1
                                      i32.add
                                      tee_local $14
                                      i32.const 9
                                      i32.lt_s
                                      if $_136
                                        block $_137
                                          i32.const 10
                                          set_local $8
                                          loop $while-in80
                                            get_local $8
                                            i32.const 10
                                            i32.mul
                                            set_local $8
                                            get_local $14
                                            i32.const 1
                                            i32.add
                                            tee_local $14
                                            i32.const 9
                                            i32.ne
                                            br_if $while-in80
                                          end ;; $while-in80
                                        end ;; $_137
                                      else
                                        i32.const 10
                                        set_local $8
                                      end ;; $_136
                                      block $do-once81
                                        get_local $7
                                        i32.const 4
                                        i32.add
                                        get_local $12
                                        i32.eq
                                        tee_local $29
                                        get_local $7
                                        i32.load
                                        tee_local $23
                                        get_local $8
                                        i32.rem_u
                                        tee_local $14
                                        i32.eqz
                                        i32.and
                                        i32.eqz
                                        if $_138
                                          block $_139
                                            get_local $23
                                            get_local $8
                                            i32.div_u
                                            i32.const 1
                                            i32.and
                                            if $_140 (result f64)
                                              f64.const 0x1.0000000000001p+53
                                            else
                                              f64.const 0x1.0000000000000p+53
                                            end ;; $_140
                                            set_local $20
                                            get_local $14
                                            get_local $8
                                            i32.const 2
                                            i32.div_s
                                            tee_local $51
                                            i32.lt_u
                                            if $_141 (result f64)
                                              f64.const 0x1.0000000000000p-1
                                            else
                                              get_local $29
                                              get_local $14
                                              get_local $51
                                              i32.eq
                                              i32.and
                                              if $_142 (result f64)
                                                f64.const 0x1.0000000000000p+0
                                              else
                                                f64.const 0x1.8000000000000p+0
                                              end ;; $_142
                                            end ;; $_141
                                            set_local $19
                                            block $do-once83
                                              get_local $26
                                              if $_143
                                                block $_144
                                                  get_local $28
                                                  i32.load8_s
                                                  i32.const 45
                                                  i32.ne
                                                  br_if $do-once83
                                                  get_local $20
                                                  f64.neg
                                                  set_local $20
                                                  get_local $19
                                                  f64.neg
                                                  set_local $19
                                                end ;; $_144
                                              end ;; $_143
                                            end ;; $do-once83
                                            get_local $7
                                            get_local $23
                                            get_local $14
                                            i32.sub
                                            tee_local $14
                                            i32.store
                                            get_local $20
                                            get_local $19
                                            f64.add
                                            get_local $20
                                            f64.eq
                                            br_if $do-once81
                                            get_local $7
                                            get_local $14
                                            get_local $8
                                            i32.add
                                            tee_local $5
                                            i32.store
                                            get_local $5
                                            i32.const 999999999
                                            i32.gt_u
                                            if $_145
                                              loop $while-in86
                                                get_local $7
                                                i32.const 0
                                                i32.store
                                                get_local $7
                                                i32.const -4
                                                i32.add
                                                tee_local $7
                                                get_local $1
                                                i32.lt_u
                                                if $_146
                                                  get_local $1
                                                  i32.const -4
                                                  i32.add
                                                  tee_local $1
                                                  i32.const 0
                                                  i32.store
                                                end ;; $_146
                                                get_local $7
                                                get_local $7
                                                i32.load
                                                i32.const 1
                                                i32.add
                                                tee_local $5
                                                i32.store
                                                get_local $5
                                                i32.const 999999999
                                                i32.gt_u
                                                br_if $while-in86
                                              end ;; $while-in86
                                            end ;; $_145
                                            get_local $27
                                            get_local $1
                                            i32.sub
                                            i32.const 2
                                            i32.shr_s
                                            i32.const 9
                                            i32.mul
                                            set_local $5
                                            get_local $1
                                            i32.load
                                            tee_local $14
                                            i32.const 10
                                            i32.lt_u
                                            br_if $do-once81
                                            i32.const 10
                                            set_local $8
                                            loop $while-in88
                                              get_local $5
                                              i32.const 1
                                              i32.add
                                              set_local $5
                                              get_local $14
                                              get_local $8
                                              i32.const 10
                                              i32.mul
                                              tee_local $8
                                              i32.ge_u
                                              br_if $while-in88
                                            end ;; $while-in88
                                          end ;; $_139
                                        end ;; $_138
                                      end ;; $do-once81
                                      get_local $1
                                      set_local $14
                                      get_local $5
                                      set_local $8
                                      get_local $12
                                      get_local $7
                                      i32.const 4
                                      i32.add
                                      tee_local $1
                                      i32.le_u
                                      if $_147
                                        get_local $12
                                        set_local $1
                                      end ;; $_147
                                    end ;; $_135
                                  else
                                    block $_148
                                      get_local $1
                                      set_local $14
                                      get_local $5
                                      set_local $8
                                      get_local $12
                                      set_local $1
                                    end ;; $_148
                                  end ;; $_134
                                  i32.const 0
                                  get_local $8
                                  i32.sub
                                  set_local $23
                                  loop $while-in90
                                    block $while-out89
                                      get_local $1
                                      get_local $14
                                      i32.le_u
                                      if $_149
                                        block $_150
                                          i32.const 0
                                          set_local $29
                                          get_local $1
                                          set_local $7
                                          br $while-out89
                                        end ;; $_150
                                      end ;; $_149
                                      get_local $1
                                      i32.const -4
                                      i32.add
                                      tee_local $5
                                      i32.load
                                      if $_151
                                        block $_152
                                          i32.const 1
                                          set_local $29
                                          get_local $1
                                          set_local $7
                                        end ;; $_152
                                      else
                                        block $_153
                                          get_local $5
                                          set_local $1
                                          br $while-in90
                                        end ;; $_153
                                      end ;; $_151
                                    end ;; $while-out89
                                  end ;; $while-in90
                                  block $do-once91
                                    get_local $36
                                    if $_154 (result i32)
                                      block $_155 (result i32)
                                        get_local $37
                                        i32.const 1
                                        i32.xor
                                        get_local $18
                                        i32.add
                                        tee_local $1
                                        get_local $8
                                        i32.gt_s
                                        get_local $8
                                        i32.const -5
                                        i32.gt_s
                                        i32.and
                                        if $_156 (result i32)
                                          block $_157 (result i32)
                                            get_local $9
                                            i32.const -1
                                            i32.add
                                            set_local $5
                                            get_local $1
                                            i32.const -1
                                            i32.add
                                            get_local $8
                                            i32.sub
                                          end ;; $_157
                                        else
                                          block $_158 (result i32)
                                            get_local $9
                                            i32.const -2
                                            i32.add
                                            set_local $5
                                            get_local $1
                                            i32.const -1
                                            i32.add
                                          end ;; $_158
                                        end ;; $_156
                                        set_local $1
                                        get_local $10
                                        i32.const 8
                                        i32.and
                                        tee_local $12
                                        br_if $do-once91
                                        block $do-once93
                                          get_local $29
                                          if $_159
                                            block $_160
                                              get_local $7
                                              i32.const -4
                                              i32.add
                                              i32.load
                                              tee_local $12
                                              i32.eqz
                                              if $_161
                                                block $_162
                                                  i32.const 9
                                                  set_local $9
                                                  br $do-once93
                                                end ;; $_162
                                              end ;; $_161
                                              get_local $12
                                              i32.const 10
                                              i32.rem_u
                                              if $_163
                                                block $_164
                                                  i32.const 0
                                                  set_local $9
                                                  br $do-once93
                                                end ;; $_164
                                              else
                                                block $_165
                                                  i32.const 10
                                                  set_local $18
                                                  i32.const 0
                                                  set_local $9
                                                end ;; $_165
                                              end ;; $_163
                                              loop $while-in96
                                                get_local $9
                                                i32.const 1
                                                i32.add
                                                set_local $9
                                                get_local $12
                                                get_local $18
                                                i32.const 10
                                                i32.mul
                                                tee_local $18
                                                i32.rem_u
                                                i32.eqz
                                                br_if $while-in96
                                              end ;; $while-in96
                                            end ;; $_160
                                          else
                                            i32.const 9
                                            set_local $9
                                          end ;; $_159
                                        end ;; $do-once93
                                        get_local $7
                                        get_local $27
                                        i32.sub
                                        i32.const 2
                                        i32.shr_s
                                        i32.const 9
                                        i32.mul
                                        i32.const -9
                                        i32.add
                                        set_local $12
                                        get_local $5
                                        i32.const 32
                                        i32.or
                                        i32.const 102
                                        i32.eq
                                        if $_166 (result i32)
                                          block $_167 (result i32)
                                            get_local $1
                                            get_local $12
                                            get_local $9
                                            i32.sub
                                            tee_local $9
                                            i32.const 0
                                            i32.lt_s
                                            if $_168 (result i32)
                                              i32.const 0
                                              tee_local $9
                                            else
                                              get_local $9
                                            end ;; $_168
                                            i32.ge_s
                                            if $_169
                                              get_local $9
                                              set_local $1
                                            end ;; $_169
                                            i32.const 0
                                          end ;; $_167
                                        else
                                          block $_170 (result i32)
                                            get_local $1
                                            get_local $12
                                            get_local $8
                                            i32.add
                                            get_local $9
                                            i32.sub
                                            tee_local $9
                                            i32.const 0
                                            i32.lt_s
                                            if $_171 (result i32)
                                              i32.const 0
                                              tee_local $9
                                            else
                                              get_local $9
                                            end ;; $_171
                                            i32.ge_s
                                            if $_172
                                              get_local $9
                                              set_local $1
                                            end ;; $_172
                                            i32.const 0
                                          end ;; $_170
                                        end ;; $_166
                                      end ;; $_155
                                    else
                                      block $_173 (result i32)
                                        get_local $9
                                        set_local $5
                                        get_local $18
                                        set_local $1
                                        get_local $10
                                        i32.const 8
                                        i32.and
                                      end ;; $_173
                                    end ;; $_154
                                    set_local $12
                                  end ;; $do-once91
                                  get_local $5
                                  i32.const 32
                                  i32.or
                                  i32.const 102
                                  i32.eq
                                  tee_local $27
                                  if $_174
                                    block $_175
                                      get_local $8
                                      i32.const 0
                                      i32.gt_s
                                      if $_176 (result i32)
                                        get_local $8
                                      else
                                        i32.const 0
                                      end ;; $_176
                                      set_local $5
                                      i32.const 0
                                      set_local $8
                                    end ;; $_175
                                  else
                                    block $_177
                                      get_local $31
                                      get_local $8
                                      i32.const 0
                                      i32.lt_s
                                      if $_178 (result i32)
                                        get_local $23
                                      else
                                        get_local $8
                                        tee_local $23
                                      end ;; $_178
                                      get_local $23
                                      i32.const 0
                                      i32.lt_s
                                      i32.const 31
                                      i32.shl
                                      i32.const 31
                                      i32.shr_s
                                      get_local $34
                                      call $_fmt_u
                                      tee_local $9
                                      i32.sub
                                      i32.const 2
                                      i32.lt_s
                                      if $_179
                                        loop $while-in98
                                          get_local $9
                                          i32.const -1
                                          i32.add
                                          tee_local $9
                                          i32.const 48
                                          i32.store8
                                          get_local $31
                                          get_local $9
                                          i32.sub
                                          i32.const 2
                                          i32.lt_s
                                          br_if $while-in98
                                        end ;; $while-in98
                                      end ;; $_179
                                      get_local $9
                                      i32.const -1
                                      i32.add
                                      get_local $8
                                      i32.const 31
                                      i32.shr_s
                                      i32.const 2
                                      i32.and
                                      i32.const 43
                                      i32.add
                                      i32.store8
                                      get_local $9
                                      i32.const -2
                                      i32.add
                                      tee_local $8
                                      get_local $5
                                      i32.store8
                                      get_local $31
                                      get_local $8
                                      i32.sub
                                      set_local $5
                                    end ;; $_177
                                  end ;; $_174
                                  get_local $0
                                  i32.const 32
                                  get_local $13
                                  get_local $26
                                  i32.const 1
                                  i32.add
                                  get_local $1
                                  i32.add
                                  get_local $1
                                  get_local $12
                                  i32.or
                                  tee_local $23
                                  i32.const 0
                                  i32.ne
                                  i32.add
                                  get_local $5
                                  i32.add
                                  tee_local $18
                                  get_local $10
                                  call $_pad
                                  get_local $0
                                  i32.load
                                  i32.const 32
                                  i32.and
                                  i32.eqz
                                  if $_180
                                    get_local $28
                                    get_local $26
                                    get_local $0
                                    call $___fwritex
                                    drop
                                  end ;; $_180
                                  get_local $0
                                  i32.const 48
                                  get_local $13
                                  get_local $18
                                  get_local $10
                                  i32.const 65536
                                  i32.xor
                                  call $_pad
                                  block $do-once99
                                    get_local $27
                                    if $_181
                                      block $_182
                                        get_local $14
                                        get_local $6
                                        i32.gt_u
                                        if $_183 (result i32)
                                          get_local $6
                                        else
                                          get_local $14
                                        end ;; $_183
                                        tee_local $9
                                        set_local $8
                                        loop $while-in102
                                          get_local $8
                                          i32.load
                                          i32.const 0
                                          get_local $33
                                          call $_fmt_u
                                          set_local $5
                                          block $do-once103
                                            get_local $8
                                            get_local $9
                                            i32.eq
                                            if $_184
                                              block $_185
                                                get_local $5
                                                get_local $33
                                                i32.ne
                                                br_if $do-once103
                                                get_local $35
                                                i32.const 48
                                                i32.store8
                                                get_local $35
                                                set_local $5
                                              end ;; $_185
                                            else
                                              block $_186
                                                get_local $5
                                                get_local $22
                                                i32.le_u
                                                br_if $do-once103
                                                get_local $22
                                                i32.const 48
                                                get_local $5
                                                get_local $30
                                                i32.sub
                                                call $_memset
                                                drop
                                                loop $while-in106
                                                  get_local $5
                                                  i32.const -1
                                                  i32.add
                                                  tee_local $5
                                                  get_local $22
                                                  i32.gt_u
                                                  br_if $while-in106
                                                end ;; $while-in106
                                              end ;; $_186
                                            end ;; $_184
                                          end ;; $do-once103
                                          get_local $0
                                          i32.load
                                          i32.const 32
                                          i32.and
                                          i32.eqz
                                          if $_187
                                            get_local $5
                                            get_local $43
                                            get_local $5
                                            i32.sub
                                            get_local $0
                                            call $___fwritex
                                            drop
                                          end ;; $_187
                                          get_local $8
                                          i32.const 4
                                          i32.add
                                          tee_local $5
                                          get_local $6
                                          i32.le_u
                                          if $_188
                                            block $_189
                                              get_local $5
                                              set_local $8
                                              br $while-in102
                                            end ;; $_189
                                          end ;; $_188
                                        end ;; $while-in102
                                        block $do-once107
                                          get_local $23
                                          if $_190
                                            block $_191
                                              get_local $0
                                              i32.load
                                              i32.const 32
                                              i32.and
                                              br_if $do-once107
                                              i32.const 13215
                                              i32.const 1
                                              get_local $0
                                              call $___fwritex
                                              drop
                                            end ;; $_191
                                          end ;; $_190
                                        end ;; $do-once107
                                        get_local $1
                                        i32.const 0
                                        i32.gt_s
                                        get_local $5
                                        get_local $7
                                        i32.lt_u
                                        i32.and
                                        if $_192
                                          loop $while-in110
                                            get_local $5
                                            i32.load
                                            i32.const 0
                                            get_local $33
                                            call $_fmt_u
                                            tee_local $6
                                            get_local $22
                                            i32.gt_u
                                            if $_193
                                              block $_194
                                                get_local $22
                                                i32.const 48
                                                get_local $6
                                                get_local $30
                                                i32.sub
                                                call $_memset
                                                drop
                                                loop $while-in112
                                                  get_local $6
                                                  i32.const -1
                                                  i32.add
                                                  tee_local $6
                                                  get_local $22
                                                  i32.gt_u
                                                  br_if $while-in112
                                                end ;; $while-in112
                                              end ;; $_194
                                            end ;; $_193
                                            get_local $0
                                            i32.load
                                            i32.const 32
                                            i32.and
                                            i32.eqz
                                            if $_195
                                              get_local $6
                                              get_local $1
                                              i32.const 9
                                              i32.gt_s
                                              if $_196 (result i32)
                                                i32.const 9
                                              else
                                                get_local $1
                                              end ;; $_196
                                              get_local $0
                                              call $___fwritex
                                              drop
                                            end ;; $_195
                                            get_local $1
                                            i32.const -9
                                            i32.add
                                            set_local $6
                                            get_local $1
                                            i32.const 9
                                            i32.gt_s
                                            get_local $5
                                            i32.const 4
                                            i32.add
                                            tee_local $5
                                            get_local $7
                                            i32.lt_u
                                            i32.and
                                            if $_197
                                              block $_198
                                                get_local $6
                                                set_local $1
                                                br $while-in110
                                              end ;; $_198
                                            else
                                              get_local $6
                                              set_local $1
                                            end ;; $_197
                                          end ;; $while-in110
                                        end ;; $_192
                                        get_local $0
                                        i32.const 48
                                        get_local $1
                                        i32.const 9
                                        i32.add
                                        i32.const 9
                                        i32.const 0
                                        call $_pad
                                      end ;; $_182
                                    else
                                      block $_199
                                        get_local $29
                                        i32.eqz
                                        if $_200
                                          get_local $14
                                          i32.const 4
                                          i32.add
                                          set_local $7
                                        end ;; $_200
                                        get_local $1
                                        i32.const -1
                                        i32.gt_s
                                        if $_201
                                          block $_202
                                            get_local $12
                                            i32.eqz
                                            set_local $12
                                            get_local $1
                                            set_local $6
                                            get_local $14
                                            set_local $5
                                            loop $while-in114
                                              get_local $5
                                              i32.load
                                              i32.const 0
                                              get_local $33
                                              call $_fmt_u
                                              tee_local $1
                                              get_local $33
                                              i32.eq
                                              if $_203
                                                block $_204
                                                  get_local $35
                                                  i32.const 48
                                                  i32.store8
                                                  get_local $35
                                                  set_local $1
                                                end ;; $_204
                                              end ;; $_203
                                              block $do-once115
                                                get_local $5
                                                get_local $14
                                                i32.eq
                                                if $_205
                                                  block $_206
                                                    get_local $0
                                                    i32.load
                                                    i32.const 32
                                                    i32.and
                                                    i32.eqz
                                                    if $_207
                                                      get_local $1
                                                      i32.const 1
                                                      get_local $0
                                                      call $___fwritex
                                                      drop
                                                    end ;; $_207
                                                    get_local $1
                                                    i32.const 1
                                                    i32.add
                                                    set_local $1
                                                    get_local $12
                                                    get_local $6
                                                    i32.const 1
                                                    i32.lt_s
                                                    i32.and
                                                    br_if $do-once115
                                                    get_local $0
                                                    i32.load
                                                    i32.const 32
                                                    i32.and
                                                    br_if $do-once115
                                                    i32.const 13215
                                                    i32.const 1
                                                    get_local $0
                                                    call $___fwritex
                                                    drop
                                                  end ;; $_206
                                                else
                                                  block $_208
                                                    get_local $1
                                                    get_local $22
                                                    i32.le_u
                                                    br_if $do-once115
                                                    get_local $22
                                                    i32.const 48
                                                    get_local $1
                                                    get_local $45
                                                    i32.add
                                                    call $_memset
                                                    drop
                                                    loop $while-in118
                                                      get_local $1
                                                      i32.const -1
                                                      i32.add
                                                      tee_local $1
                                                      get_local $22
                                                      i32.gt_u
                                                      br_if $while-in118
                                                    end ;; $while-in118
                                                  end ;; $_208
                                                end ;; $_205
                                              end ;; $do-once115
                                              get_local $43
                                              get_local $1
                                              i32.sub
                                              set_local $9
                                              get_local $0
                                              i32.load
                                              i32.const 32
                                              i32.and
                                              i32.eqz
                                              if $_209
                                                get_local $1
                                                get_local $6
                                                get_local $9
                                                i32.gt_s
                                                if $_210 (result i32)
                                                  get_local $9
                                                else
                                                  get_local $6
                                                end ;; $_210
                                                get_local $0
                                                call $___fwritex
                                                drop
                                              end ;; $_209
                                              get_local $5
                                              i32.const 4
                                              i32.add
                                              tee_local $5
                                              get_local $7
                                              i32.lt_u
                                              get_local $6
                                              get_local $9
                                              i32.sub
                                              tee_local $6
                                              i32.const -1
                                              i32.gt_s
                                              i32.and
                                              br_if $while-in114
                                              get_local $6
                                              set_local $1
                                            end ;; $while-in114
                                          end ;; $_202
                                        end ;; $_201
                                        get_local $0
                                        i32.const 48
                                        get_local $1
                                        i32.const 18
                                        i32.add
                                        i32.const 18
                                        i32.const 0
                                        call $_pad
                                        get_local $0
                                        i32.load
                                        i32.const 32
                                        i32.and
                                        br_if $do-once99
                                        get_local $8
                                        get_local $31
                                        get_local $8
                                        i32.sub
                                        get_local $0
                                        call $___fwritex
                                        drop
                                      end ;; $_199
                                    end ;; $_181
                                  end ;; $do-once99
                                  get_local $0
                                  i32.const 32
                                  get_local $13
                                  get_local $18
                                  get_local $10
                                  i32.const 8192
                                  i32.xor
                                  call $_pad
                                  get_local $18
                                  get_local $13
                                  i32.ge_s
                                  if $_211
                                    get_local $18
                                    set_local $13
                                  end ;; $_211
                                end ;; $_92
                              else
                                block $_212
                                  get_local $0
                                  i32.const 32
                                  get_local $13
                                  get_local $19
                                  get_local $19
                                  f64.ne
                                  i32.const 0
                                  i32.or
                                  tee_local $8
                                  if $_213 (result i32)
                                    i32.const 0
                                    tee_local $26
                                  else
                                    get_local $26
                                  end ;; $_213
                                  i32.const 3
                                  i32.add
                                  tee_local $6
                                  get_local $7
                                  call $_pad
                                  get_local $0
                                  i32.load
                                  tee_local $1
                                  i32.const 32
                                  i32.and
                                  i32.eqz
                                  if $_214
                                    block $_215
                                      get_local $28
                                      get_local $26
                                      get_local $0
                                      call $___fwritex
                                      drop
                                      get_local $0
                                      i32.load
                                      set_local $1
                                    end ;; $_215
                                  end ;; $_214
                                  get_local $9
                                  i32.const 32
                                  i32.and
                                  i32.const 0
                                  i32.ne
                                  set_local $5
                                  get_local $1
                                  i32.const 32
                                  i32.and
                                  i32.eqz
                                  if $_216
                                    get_local $8
                                    if $_217 (result i32)
                                      get_local $5
                                      if $_218 (result i32)
                                        i32.const 13226
                                      else
                                        i32.const 13211
                                      end ;; $_218
                                    else
                                      get_local $5
                                      if $_219 (result i32)
                                        i32.const 13203
                                      else
                                        i32.const 13207
                                      end ;; $_219
                                    end ;; $_217
                                    i32.const 3
                                    get_local $0
                                    call $___fwritex
                                    drop
                                  end ;; $_216
                                  get_local $0
                                  i32.const 32
                                  get_local $13
                                  get_local $6
                                  get_local $10
                                  i32.const 8192
                                  i32.xor
                                  call $_pad
                                  get_local $6
                                  get_local $13
                                  i32.ge_s
                                  if $_220
                                    get_local $6
                                    set_local $13
                                  end ;; $_220
                                end ;; $_212
                              end ;; $_91
                            end ;; $do-once49
                            get_local $13
                            set_local $6
                            get_local $11
                            set_local $1
                            br $label$continue$L1
                          end ;; $switch-default120
                          get_local $5
                          set_local $9
                          i32.const 0
                          set_local $7
                          i32.const 11275
                          set_local $8
                          get_local $24
                          set_local $6
                          br $__rjto$8
                        end ;; $__rjti$3
                        get_local $9
                        i32.const 32
                        i32.and
                        set_local $8
                        get_local $17
                        tee_local $6
                        i32.load
                        tee_local $10
                        i32.eqz
                        get_local $6
                        i32.load offset=4
                        tee_local $7
                        i32.eqz
                        i32.and
                        if $_221
                          block $_222
                            get_local $24
                            set_local $6
                            i32.const 0
                            set_local $7
                            i32.const 11275
                            set_local $8
                            br $__rjti$8
                          end ;; $_222
                        else
                          block $_223
                            get_local $24
                            set_local $6
                            loop $while-in123
                              get_local $6
                              i32.const -1
                              i32.add
                              tee_local $6
                              get_local $10
                              i32.const 15
                              i32.and
                              i32.const 11259
                              i32.add
                              i32.load8_u
                              get_local $8
                              i32.or
                              i32.store8
                              get_local $10
                              get_local $7
                              i32.const 4
                              call $_bitshift64Lshr
                              tee_local $10
                              i32.eqz
                              get_global $tempRet0
                              tee_local $7
                              i32.eqz
                              i32.and
                              i32.eqz
                              br_if $while-in123
                            end ;; $while-in123
                            get_local $1
                            i32.const 8
                            i32.and
                            i32.eqz
                            get_local $17
                            tee_local $10
                            i32.load
                            i32.eqz
                            get_local $10
                            i32.load offset=4
                            i32.eqz
                            i32.and
                            i32.or
                            if $_224
                              block $_225
                                i32.const 0
                                set_local $7
                                i32.const 11275
                                set_local $8
                                br $__rjti$8
                              end ;; $_225
                            else
                              block $_226
                                i32.const 2
                                set_local $7
                                get_local $9
                                i32.const 4
                                i32.shr_s
                                i32.const 11275
                                i32.add
                                set_local $8
                                br $__rjti$8
                              end ;; $_226
                            end ;; $_224
                          end ;; $_223
                        end ;; $_221
                        br $__rjto$8
                      end ;; $__rjti$4
                      get_local $1
                      get_local $6
                      get_local $24
                      call $_fmt_u
                      set_local $6
                      get_local $10
                      set_local $1
                      br $__rjti$8
                    end ;; $__rjti$5
                    get_local $6
                    set_local $1
                    get_local $7
                    set_local $10
                    get_local $6
                    i32.const 0
                    get_local $5
                    call $_memchr
                    tee_local $12
                    i32.eqz
                    tee_local $14
                    if $_227 (result i32)
                      get_local $5
                    else
                      get_local $12
                      get_local $6
                      i32.sub
                    end ;; $_227
                    set_local $9
                    i32.const 0
                    set_local $7
                    i32.const 11275
                    set_local $8
                    get_local $14
                    if $_228 (result i32)
                      get_local $6
                      get_local $5
                      i32.add
                    else
                      get_local $12
                    end ;; $_228
                    set_local $6
                    br $__rjto$8
                  end ;; $__rjti$6
                  i32.const 0
                  set_local $1
                  i32.const 0
                  set_local $5
                  get_local $6
                  set_local $8
                  loop $while-in125
                    block $while-out124
                      get_local $8
                      i32.load
                      tee_local $9
                      i32.eqz
                      br_if $while-out124
                      get_local $38
                      get_local $9
                      call $_wctomb
                      tee_local $5
                      i32.const 0
                      i32.lt_s
                      get_local $5
                      get_local $7
                      get_local $1
                      i32.sub
                      i32.gt_u
                      i32.or
                      br_if $while-out124
                      get_local $7
                      get_local $5
                      get_local $1
                      i32.add
                      tee_local $1
                      i32.gt_u
                      if $_229
                        block $_230
                          get_local $8
                          i32.const 4
                          i32.add
                          set_local $8
                          br $while-in125
                        end ;; $_230
                      end ;; $_229
                    end ;; $while-out124
                  end ;; $while-in125
                  get_local $5
                  i32.const 0
                  i32.lt_s
                  if $_231
                    block $_232
                      i32.const -1
                      set_local $15
                      br $label$break$L1
                    end ;; $_232
                  end ;; $_231
                  get_local $0
                  i32.const 32
                  get_local $13
                  get_local $1
                  get_local $10
                  call $_pad
                  get_local $1
                  if $_233
                    block $_234
                      i32.const 0
                      set_local $5
                      loop $while-in127
                        get_local $6
                        i32.load
                        tee_local $7
                        i32.eqz
                        br_if $__rjti$7
                        get_local $38
                        get_local $7
                        call $_wctomb
                        tee_local $7
                        get_local $5
                        i32.add
                        tee_local $5
                        get_local $1
                        i32.gt_s
                        br_if $__rjti$7
                        get_local $0
                        i32.load
                        i32.const 32
                        i32.and
                        i32.eqz
                        if $_235
                          get_local $38
                          get_local $7
                          get_local $0
                          call $___fwritex
                          drop
                        end ;; $_235
                        get_local $5
                        get_local $1
                        i32.ge_u
                        br_if $__rjti$7
                        get_local $6
                        i32.const 4
                        i32.add
                        set_local $6
                        br $while-in127
                      end ;; $while-in127
                    end ;; $_234
                  else
                    block $_236
                      i32.const 0
                      set_local $1
                      br $__rjti$7
                    end ;; $_236
                  end ;; $_233
                  br $__rjto$8
                end ;; $__rjti$7
                get_local $0
                i32.const 32
                get_local $13
                get_local $1
                get_local $10
                i32.const 8192
                i32.xor
                call $_pad
                get_local $13
                get_local $1
                i32.gt_s
                if $_237 (result i32)
                  get_local $13
                else
                  get_local $1
                end ;; $_237
                set_local $6
                get_local $11
                set_local $1
                br $label$continue$L1
              end ;; $__rjti$8
              get_local $5
              i32.const -1
              i32.gt_s
              if $_238 (result i32)
                get_local $1
                i32.const -65537
                i32.and
              else
                get_local $1
              end ;; $_238
              set_local $10
              get_local $5
              get_local $17
              tee_local $1
              i32.load
              i32.const 0
              i32.ne
              get_local $1
              i32.load offset=4
              i32.const 0
              i32.ne
              i32.or
              tee_local $9
              i32.or
              if $_239 (result i32)
                block $_240 (result i32)
                  get_local $6
                  set_local $1
                  get_local $5
                  get_local $9
                  i32.const 1
                  i32.xor
                  get_local $40
                  get_local $6
                  i32.sub
                  i32.add
                  tee_local $6
                  i32.gt_s
                  if $_241 (result i32)
                    get_local $5
                  else
                    get_local $6
                  end ;; $_241
                  set_local $9
                  get_local $24
                end ;; $_240
              else
                block $_242 (result i32)
                  get_local $24
                  set_local $1
                  i32.const 0
                  set_local $9
                  get_local $24
                end ;; $_242
              end ;; $_239
              set_local $6
            end ;; $__rjto$8
            get_local $0
            i32.const 32
            get_local $13
            get_local $7
            get_local $9
            get_local $6
            get_local $1
            i32.sub
            tee_local $12
            i32.lt_s
            if $_243 (result i32)
              get_local $12
              tee_local $9
            else
              get_local $9
            end ;; $_243
            i32.add
            tee_local $5
            i32.lt_s
            if $_244 (result i32)
              get_local $5
            else
              get_local $13
            end ;; $_244
            tee_local $6
            get_local $5
            get_local $10
            call $_pad
            get_local $0
            i32.load
            i32.const 32
            i32.and
            i32.eqz
            if $_245
              get_local $8
              get_local $7
              get_local $0
              call $___fwritex
              drop
            end ;; $_245
            get_local $0
            i32.const 48
            get_local $6
            get_local $5
            get_local $10
            i32.const 65536
            i32.xor
            call $_pad
            get_local $0
            i32.const 48
            get_local $9
            get_local $12
            i32.const 0
            call $_pad
            get_local $0
            i32.load
            i32.const 32
            i32.and
            i32.eqz
            if $_246
              get_local $1
              get_local $12
              get_local $0
              call $___fwritex
              drop
            end ;; $_246
            get_local $0
            i32.const 32
            get_local $6
            get_local $5
            get_local $10
            i32.const 8192
            i32.xor
            call $_pad
            get_local $11
            set_local $1
            br $label$continue$L1
          end ;; $label$break$L1
        end ;; $label$continue$L1
        br $label$break$L345
      end ;; $__rjti$9
      get_local $0
      i32.eqz
      if $_247
        get_local $16
        if $_248
          block $_249
            i32.const 1
            set_local $0
            loop $while-in130
              get_local $4
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.load
              tee_local $1
              if $_250
                block $_251
                  get_local $3
                  get_local $0
                  i32.const 3
                  i32.shl
                  i32.add
                  get_local $1
                  get_local $2
                  call $_pop_arg
                  get_local $0
                  i32.const 1
                  i32.add
                  tee_local $0
                  i32.const 10
                  i32.lt_s
                  br_if $while-in130
                  i32.const 1
                  set_local $15
                  br $label$break$L345
                end ;; $_251
              end ;; $_250
            end ;; $while-in130
            get_local $0
            i32.const 10
            i32.lt_s
            if $_252
              loop $while-in132
                get_local $4
                get_local $0
                i32.const 2
                i32.shl
                i32.add
                i32.load
                if $if
                  block $block
                    i32.const -1
                    set_local $15
                    br $label$break$L345
                  end ;; $block
                end ;; $if
                get_local $0
                i32.const 1
                i32.add
                tee_local $0
                i32.const 10
                i32.lt_s
                br_if $while-in132
                i32.const 1
                set_local $15
              end ;; $while-in132
            else
              i32.const 1
              set_local $15
            end ;; $_252
          end ;; $_249
        else
          i32.const 0
          set_local $15
        end ;; $_248
      end ;; $_247
    end ;; $label$break$L345
    get_local $25
    set_global $STACKTOP
    get_local $15
    )
  
  (func $__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_ (type $_2)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (param $8 i32)
    (param $9 i32)
    (param $10 i32)
    (result i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    (local $25 i32)
    (local $26 i32)
    (local $27 i32)
    (local $28 i32)
    (local $29 i32)
    (local $30 i32)
    (local $31 i32)
    (local $32 i32)
    (local $33 i32)
    (local $34 i32)
    (local $35 i32)
    (local $36 i32)
    (local $37 i32)
    (local $38 i32)
    (local $39 i32)
    (local $40 i32)
    (local $41 i32)
    (local $42 i32)
    (local $43 i32)
    (local $44 i32)
    (local $45 i32)
    (local $46 i32)
    get_global $STACKTOP
    set_local $16
    get_global $STACKTOP
    i32.const 512
    i32.add
    set_global $STACKTOP
    get_local $16
    i32.const 500
    i32.add
    set_local $29
    get_local $16
    i32.const 72
    i32.add
    set_local $37
    get_local $16
    i32.const 68
    i32.add
    set_local $38
    get_local $16
    i32.const 44
    i32.add
    set_local $15
    get_local $16
    i32.const 32
    i32.add
    set_local $17
    get_local $16
    i32.const 20
    i32.add
    set_local $18
    get_local $16
    i32.const 8
    i32.add
    set_local $19
    get_local $16
    i32.const 4
    i32.add
    set_local $32
    get_local $16
    set_local $33
    get_local $16
    i32.const 496
    i32.add
    tee_local $30
    get_local $10
    i32.store
    get_local $16
    i32.const 88
    i32.add
    tee_local $23
    get_local $16
    i32.const 96
    i32.add
    tee_local $10
    i32.store
    get_local $23
    i32.const 4
    i32.add
    tee_local $40
    i32.const 107
    i32.store
    get_local $16
    i32.const 80
    i32.add
    tee_local $24
    get_local $10
    i32.store
    get_local $16
    i32.const 76
    i32.add
    tee_local $31
    get_local $10
    i32.const 400
    i32.add
    i32.store
    get_local $16
    i32.const 56
    i32.add
    tee_local $22
    i32.const 0
    i32.store
    get_local $22
    i32.const 0
    i32.store offset=4
    get_local $22
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $11
    loop $while-in
      get_local $11
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $22
          get_local $11
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $11
          i32.const 1
          i32.add
          set_local $11
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $15
    i32.const 0
    i32.store
    get_local $15
    i32.const 0
    i32.store offset=4
    get_local $15
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $11
    loop $while-in1
      get_local $11
      i32.const 3
      i32.ne
      if $_3
        block $_4
          get_local $15
          get_local $11
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $11
          i32.const 1
          i32.add
          set_local $11
          br $while-in1
        end ;; $_4
      end ;; $_3
    end ;; $while-in1
    get_local $17
    i32.const 0
    i32.store
    get_local $17
    i32.const 0
    i32.store offset=4
    get_local $17
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $11
    loop $while-in3
      get_local $11
      i32.const 3
      i32.ne
      if $_5
        block $_6
          get_local $17
          get_local $11
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $11
          i32.const 1
          i32.add
          set_local $11
          br $while-in3
        end ;; $_6
      end ;; $_5
    end ;; $while-in3
    get_local $18
    i32.const 0
    i32.store
    get_local $18
    i32.const 0
    i32.store offset=4
    get_local $18
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $11
    loop $while-in5
      get_local $11
      i32.const 3
      i32.ne
      if $_7
        block $_8
          get_local $18
          get_local $11
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $11
          i32.const 1
          i32.add
          set_local $11
          br $while-in5
        end ;; $_8
      end ;; $_7
    end ;; $while-in5
    get_local $19
    i32.const 0
    i32.store
    get_local $19
    i32.const 0
    i32.store offset=4
    get_local $19
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $11
    loop $while-in7
      get_local $11
      i32.const 3
      i32.ne
      if $_9
        block $_10
          get_local $19
          get_local $11
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $11
          i32.const 1
          i32.add
          set_local $11
          br $while-in7
        end ;; $_10
      end ;; $_9
    end ;; $while-in7
    get_local $2
    get_local $3
    get_local $29
    get_local $37
    get_local $38
    get_local $22
    get_local $15
    get_local $17
    get_local $18
    get_local $32
    call $__ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri
    get_local $9
    get_local $8
    i32.load
    i32.store
    get_local $17
    i32.const 11
    i32.add
    set_local $25
    get_local $17
    i32.const 4
    i32.add
    set_local $34
    get_local $18
    i32.const 11
    i32.add
    set_local $26
    get_local $18
    i32.const 4
    i32.add
    set_local $35
    get_local $4
    i32.const 512
    i32.and
    i32.const 0
    i32.ne
    set_local $39
    get_local $15
    i32.const 11
    i32.add
    set_local $27
    get_local $15
    i32.const 4
    i32.add
    set_local $36
    get_local $19
    i32.const 11
    i32.add
    set_local $41
    get_local $19
    i32.const 4
    i32.add
    set_local $42
    get_local $29
    i32.const 3
    i32.add
    set_local $43
    get_local $22
    i32.const 11
    i32.add
    set_local $44
    get_local $22
    i32.const 4
    i32.add
    set_local $45
    get_local $10
    set_local $2
    i32.const 0
    set_local $20
    i32.const 0
    set_local $4
    block $label$break$L315 (result i32)
      block $__rjti$15
        block $__rjti$14
          block $__rjti$13
            block $__rjti$12
              block $__rjti$11
                block $__rjti$10
                  block $__rjti$9
                    loop $label$continue$L21
                      get_local $20
                      i32.const 4
                      i32.ge_u
                      if $_11
                        block $_12
                          get_local $2
                          set_local $3
                          br $__rjti$15
                        end ;; $_12
                      end ;; $_11
                      get_local $0
                      i32.load
                      tee_local $3
                      if $_13 (result i32)
                        get_local $3
                        i32.load offset=12
                        tee_local $10
                        get_local $3
                        i32.load offset=16
                        i32.eq
                        if $_14 (result i32)
                          get_local $3
                          get_local $3
                          i32.load
                          i32.load offset=36
                          i32.const 63
                          i32.and
                          i32.const 312
                          i32.add
                          call_indirect (type $FUNCSIG$ii)
                        else
                          get_local $10
                          i32.load
                        end ;; $_14
                        tee_local $3
                        i32.const -1
                        i32.eq
                        if $_15 (result i32)
                          block $_16 (result i32)
                            get_local $0
                            i32.const 0
                            i32.store
                            i32.const 1
                          end ;; $_16
                        else
                          get_local $0
                          i32.load
                          i32.eqz
                        end ;; $_15
                      else
                        i32.const 1
                      end ;; $_13
                      set_local $10
                      block $__rjto$6
                        block $__rjti$6
                          get_local $1
                          i32.load
                          tee_local $3
                          i32.eqz
                          br_if $__rjti$6
                          get_local $3
                          i32.load offset=12
                          tee_local $11
                          get_local $3
                          i32.load offset=16
                          i32.eq
                          if $_17 (result i32)
                            get_local $3
                            get_local $3
                            i32.load
                            i32.load offset=36
                            i32.const 63
                            i32.and
                            i32.const 312
                            i32.add
                            call_indirect (type $FUNCSIG$ii)
                          else
                            get_local $11
                            i32.load
                          end ;; $_17
                          tee_local $11
                          i32.const -1
                          i32.eq
                          if $_18
                            block $_19
                              get_local $1
                              i32.const 0
                              i32.store
                              br $__rjti$6
                            end ;; $_19
                          else
                            get_local $10
                            i32.eqz
                            if $_20
                              block $_21
                                get_local $2
                                set_local $3
                                br $__rjti$15
                              end ;; $_21
                            end ;; $_20
                          end ;; $_18
                          br $__rjto$6
                        end ;; $__rjti$6
                        get_local $10
                        if $_22
                          block $_23
                            get_local $2
                            set_local $3
                            br $__rjti$15
                          end ;; $_23
                        else
                          i32.const 0
                          set_local $3
                        end ;; $_22
                      end ;; $__rjto$6
                      block $label$break$L280
                        block $__rjti$7
                          block $switch-default
                            block $switch-case38
                              block $switch-case22
                                block $switch-case12
                                  block $switch-case11
                                    block $switch-case
                                      get_local $29
                                      get_local $20
                                      i32.add
                                      i32.load8_s
                                      br_table
                                        $switch-case11 $switch-case $switch-case22 $switch-case12 $switch-case38
                                        $switch-default ;; default
                                    end ;; $switch-case
                                    get_local $20
                                    i32.const 3
                                    i32.eq
                                    if $_24
                                      get_local $4
                                      set_local $3
                                    else
                                      block $_25
                                        get_local $7
                                        i32.const 8192
                                        get_local $0
                                        i32.load
                                        tee_local $10
                                        i32.load offset=12
                                        tee_local $11
                                        get_local $10
                                        i32.load offset=16
                                        i32.eq
                                        if $_26 (result i32)
                                          get_local $10
                                          get_local $10
                                          i32.load
                                          i32.load offset=36
                                          i32.const 63
                                          i32.and
                                          i32.const 312
                                          i32.add
                                          call_indirect (type $FUNCSIG$ii)
                                        else
                                          get_local $11
                                          i32.load
                                        end ;; $_26
                                        tee_local $10
                                        get_local $7
                                        i32.load
                                        i32.load offset=12
                                        i32.const 31
                                        i32.and
                                        i32.const 8
                                        i32.add
                                        call_indirect (type $FUNCSIG$iiii)
                                        i32.eqz
                                        br_if $__rjti$9
                                        get_local $19
                                        get_local $0
                                        i32.load
                                        tee_local $10
                                        i32.const 12
                                        i32.add
                                        tee_local $12
                                        i32.load
                                        tee_local $11
                                        get_local $10
                                        i32.load offset=16
                                        i32.eq
                                        if $_27 (result i32)
                                          get_local $10
                                          get_local $10
                                          i32.load
                                          i32.load offset=40
                                          i32.const 63
                                          i32.and
                                          i32.const 312
                                          i32.add
                                          call_indirect (type $FUNCSIG$ii)
                                        else
                                          block $_28 (result i32)
                                            get_local $12
                                            get_local $11
                                            i32.const 4
                                            i32.add
                                            i32.store
                                            get_local $11
                                            i32.load
                                          end ;; $_28
                                        end ;; $_27
                                        tee_local $10
                                        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw
                                        get_local $3
                                        set_local $10
                                        br $__rjti$7
                                      end ;; $_25
                                    end ;; $_24
                                    br $label$break$L280
                                  end ;; $switch-case11
                                  get_local $20
                                  i32.const 3
                                  i32.eq
                                  if $_29
                                    get_local $4
                                    set_local $3
                                  else
                                    block $_30
                                      get_local $3
                                      set_local $10
                                      br $__rjti$7
                                    end ;; $_30
                                  end ;; $_29
                                  br $label$break$L280
                                end ;; $switch-case12
                                get_local $25
                                i32.load8_s
                                tee_local $3
                                i32.const 0
                                i32.lt_s
                                if $_31 (result i32)
                                  get_local $34
                                  i32.load
                                else
                                  get_local $3
                                  i32.const 255
                                  i32.and
                                end ;; $_31
                                tee_local $14
                                i32.const 0
                                get_local $26
                                i32.load8_s
                                tee_local $10
                                i32.const 0
                                i32.lt_s
                                if $_32 (result i32)
                                  get_local $35
                                  i32.load
                                else
                                  get_local $10
                                  i32.const 255
                                  i32.and
                                end ;; $_32
                                tee_local $21
                                i32.sub
                                i32.eq
                                if $_33 (result i32)
                                  get_local $4
                                else
                                  block $_34 (result i32)
                                    get_local $0
                                    i32.load
                                    tee_local $10
                                    i32.load offset=12
                                    tee_local $11
                                    get_local $10
                                    i32.load offset=16
                                    tee_local $12
                                    i32.eq
                                    set_local $13
                                    get_local $14
                                    i32.eqz
                                    tee_local $14
                                    get_local $21
                                    i32.eqz
                                    i32.or
                                    if $_35
                                      block $_36
                                        get_local $13
                                        if $_37 (result i32)
                                          get_local $10
                                          get_local $10
                                          i32.load
                                          i32.load offset=36
                                          i32.const 63
                                          i32.and
                                          i32.const 312
                                          i32.add
                                          call_indirect (type $FUNCSIG$ii)
                                        else
                                          get_local $11
                                          i32.load
                                        end ;; $_37
                                        set_local $3
                                        get_local $14
                                        if $_38
                                          block $_39
                                            get_local $3
                                            get_local $26
                                            i32.load8_s
                                            tee_local $3
                                            i32.const 0
                                            i32.lt_s
                                            if $_40 (result i32)
                                              get_local $18
                                              i32.load
                                            else
                                              get_local $18
                                            end ;; $_40
                                            i32.load
                                            i32.ne
                                            if $_41
                                              block $_42
                                                get_local $4
                                                set_local $3
                                                br $label$break$L280
                                              end ;; $_42
                                            end ;; $_41
                                            get_local $0
                                            i32.load
                                            tee_local $10
                                            i32.const 12
                                            i32.add
                                            tee_local $11
                                            i32.load
                                            tee_local $12
                                            get_local $10
                                            i32.load offset=16
                                            i32.eq
                                            if $_43
                                              block $_44
                                                get_local $10
                                                get_local $10
                                                i32.load
                                                i32.load offset=40
                                                i32.const 63
                                                i32.and
                                                i32.const 312
                                                i32.add
                                                call_indirect (type $FUNCSIG$ii)
                                                drop
                                                get_local $26
                                                i32.load8_s
                                                set_local $3
                                              end ;; $_44
                                            else
                                              get_local $11
                                              get_local $12
                                              i32.const 4
                                              i32.add
                                              i32.store
                                            end ;; $_43
                                            get_local $6
                                            i32.const 1
                                            i32.store8
                                            get_local $3
                                            i32.const 24
                                            i32.shl
                                            i32.const 24
                                            i32.shr_s
                                            i32.const 0
                                            i32.lt_s
                                            if $_45 (result i32)
                                              get_local $35
                                              i32.load
                                            else
                                              get_local $3
                                              i32.const 255
                                              i32.and
                                            end ;; $_45
                                            i32.const 1
                                            i32.gt_u
                                            if $_46 (result i32)
                                              get_local $18
                                            else
                                              get_local $4
                                            end ;; $_46
                                            set_local $3
                                            br $label$break$L280
                                          end ;; $_39
                                        end ;; $_38
                                        get_local $3
                                        get_local $25
                                        i32.load8_s
                                        tee_local $3
                                        i32.const 0
                                        i32.lt_s
                                        if $_47 (result i32)
                                          get_local $17
                                          i32.load
                                        else
                                          get_local $17
                                        end ;; $_47
                                        i32.load
                                        i32.ne
                                        if $_48
                                          block $_49
                                            get_local $6
                                            i32.const 1
                                            i32.store8
                                            get_local $4
                                            set_local $3
                                            br $label$break$L280
                                          end ;; $_49
                                        end ;; $_48
                                        get_local $0
                                        i32.load
                                        tee_local $10
                                        i32.const 12
                                        i32.add
                                        tee_local $11
                                        i32.load
                                        tee_local $12
                                        get_local $10
                                        i32.load offset=16
                                        i32.eq
                                        if $_50
                                          block $_51
                                            get_local $10
                                            get_local $10
                                            i32.load
                                            i32.load offset=40
                                            i32.const 63
                                            i32.and
                                            i32.const 312
                                            i32.add
                                            call_indirect (type $FUNCSIG$ii)
                                            drop
                                            get_local $25
                                            i32.load8_s
                                            set_local $3
                                          end ;; $_51
                                        else
                                          get_local $11
                                          get_local $12
                                          i32.const 4
                                          i32.add
                                          i32.store
                                        end ;; $_50
                                        get_local $3
                                        i32.const 24
                                        i32.shl
                                        i32.const 24
                                        i32.shr_s
                                        i32.const 0
                                        i32.lt_s
                                        if $_52 (result i32)
                                          get_local $34
                                          i32.load
                                        else
                                          get_local $3
                                          i32.const 255
                                          i32.and
                                        end ;; $_52
                                        i32.const 1
                                        i32.gt_u
                                        if $_53 (result i32)
                                          get_local $17
                                        else
                                          get_local $4
                                        end ;; $_53
                                        set_local $3
                                        br $label$break$L280
                                      end ;; $_36
                                    end ;; $_35
                                    get_local $13
                                    if $_54
                                      block $_55
                                        get_local $10
                                        get_local $10
                                        i32.load
                                        i32.load offset=36
                                        i32.const 63
                                        i32.and
                                        i32.const 312
                                        i32.add
                                        call_indirect (type $FUNCSIG$ii)
                                        set_local $13
                                        get_local $25
                                        i32.load8_s
                                        set_local $3
                                        get_local $0
                                        i32.load
                                        tee_local $12
                                        set_local $10
                                        get_local $12
                                        i32.load offset=12
                                        set_local $11
                                        get_local $12
                                        i32.load offset=16
                                        set_local $12
                                      end ;; $_55
                                    else
                                      get_local $11
                                      i32.load
                                      set_local $13
                                    end ;; $_54
                                    get_local $10
                                    i32.const 12
                                    i32.add
                                    set_local $14
                                    get_local $11
                                    get_local $12
                                    i32.eq
                                    set_local $12
                                    get_local $13
                                    get_local $3
                                    i32.const 24
                                    i32.shl
                                    i32.const 24
                                    i32.shr_s
                                    i32.const 0
                                    i32.lt_s
                                    if $_56 (result i32)
                                      get_local $17
                                      i32.load
                                    else
                                      get_local $17
                                    end ;; $_56
                                    i32.load
                                    i32.eq
                                    if $_57
                                      block $_58
                                        get_local $12
                                        if $_59
                                          block $_60
                                            get_local $10
                                            get_local $10
                                            i32.load
                                            i32.load offset=40
                                            i32.const 63
                                            i32.and
                                            i32.const 312
                                            i32.add
                                            call_indirect (type $FUNCSIG$ii)
                                            drop
                                            get_local $25
                                            i32.load8_s
                                            set_local $3
                                          end ;; $_60
                                        else
                                          get_local $14
                                          get_local $11
                                          i32.const 4
                                          i32.add
                                          i32.store
                                        end ;; $_59
                                        get_local $3
                                        i32.const 24
                                        i32.shl
                                        i32.const 24
                                        i32.shr_s
                                        i32.const 0
                                        i32.lt_s
                                        if $_61 (result i32)
                                          get_local $34
                                          i32.load
                                        else
                                          get_local $3
                                          i32.const 255
                                          i32.and
                                        end ;; $_61
                                        i32.const 1
                                        i32.gt_u
                                        if $_62 (result i32)
                                          get_local $17
                                        else
                                          get_local $4
                                        end ;; $_62
                                        set_local $3
                                        br $label$break$L280
                                      end ;; $_58
                                    end ;; $_57
                                    get_local $12
                                    if $_63 (result i32)
                                      get_local $10
                                      get_local $10
                                      i32.load
                                      i32.load offset=36
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                    else
                                      get_local $11
                                      i32.load
                                    end ;; $_63
                                    tee_local $3
                                    get_local $26
                                    i32.load8_s
                                    tee_local $3
                                    i32.const 0
                                    i32.lt_s
                                    if $_64 (result i32)
                                      get_local $18
                                      i32.load
                                    else
                                      get_local $18
                                    end ;; $_64
                                    i32.load
                                    i32.ne
                                    br_if $__rjti$10
                                    get_local $0
                                    i32.load
                                    tee_local $10
                                    i32.const 12
                                    i32.add
                                    tee_local $11
                                    i32.load
                                    tee_local $12
                                    get_local $10
                                    i32.load offset=16
                                    i32.eq
                                    if $_65
                                      block $_66
                                        get_local $10
                                        get_local $10
                                        i32.load
                                        i32.load offset=40
                                        i32.const 63
                                        i32.and
                                        i32.const 312
                                        i32.add
                                        call_indirect (type $FUNCSIG$ii)
                                        drop
                                        get_local $26
                                        i32.load8_s
                                        set_local $3
                                      end ;; $_66
                                    else
                                      get_local $11
                                      get_local $12
                                      i32.const 4
                                      i32.add
                                      i32.store
                                    end ;; $_65
                                    get_local $6
                                    i32.const 1
                                    i32.store8
                                    get_local $3
                                    i32.const 24
                                    i32.shl
                                    i32.const 24
                                    i32.shr_s
                                    i32.const 0
                                    i32.lt_s
                                    if $_67 (result i32)
                                      get_local $35
                                      i32.load
                                    else
                                      get_local $3
                                      i32.const 255
                                      i32.and
                                    end ;; $_67
                                    i32.const 1
                                    i32.gt_u
                                    if $_68 (result i32)
                                      get_local $18
                                    else
                                      get_local $4
                                    end ;; $_68
                                  end ;; $_34
                                end ;; $_33
                                set_local $3
                                br $label$break$L280
                              end ;; $switch-case22
                              get_local $20
                              i32.const 2
                              i32.lt_u
                              get_local $4
                              i32.const 0
                              i32.ne
                              i32.or
                              i32.eqz
                              if $_69
                                get_local $39
                                get_local $20
                                i32.const 2
                                i32.eq
                                get_local $43
                                i32.load8_s
                                i32.const 0
                                i32.ne
                                i32.and
                                i32.or
                                i32.eqz
                                if $_70
                                  block $_71
                                    i32.const 0
                                    set_local $3
                                    br $label$break$L280
                                  end ;; $_71
                                end ;; $_70
                              end ;; $_69
                              get_local $15
                              i32.load
                              set_local $13
                              get_local $27
                              i32.load8_s
                              tee_local $12
                              i32.const 0
                              i32.lt_s
                              if $_72 (result i32)
                                get_local $13
                              else
                                get_local $15
                              end ;; $_72
                              set_local $11
                              block $label$break$L107
                                get_local $20
                                if $_73
                                  get_local $29
                                  get_local $20
                                  i32.const -1
                                  i32.add
                                  i32.add
                                  i32.load8_u
                                  i32.const 2
                                  i32.lt_s
                                  if $_74
                                    block $_75
                                      get_local $11
                                      set_local $10
                                      block $__rjto$0
                                        block $__rjti$0
                                          loop $while-in15
                                            block $while-out14
                                              get_local $10
                                              tee_local $11
                                              get_local $12
                                              i32.const 24
                                              i32.shl
                                              i32.const 24
                                              i32.shr_s
                                              i32.const 0
                                              i32.lt_s
                                              tee_local $14
                                              if $_76 (result i32)
                                                get_local $13
                                              else
                                                get_local $15
                                              end ;; $_76
                                              get_local $14
                                              if $_77 (result i32)
                                                get_local $36
                                                i32.load
                                              else
                                                get_local $12
                                                i32.const 255
                                                i32.and
                                              end ;; $_77
                                              i32.const 2
                                              i32.shl
                                              i32.add
                                              i32.eq
                                              if $_78
                                                block $_79
                                                  get_local $10
                                                  set_local $11
                                                  br $while-out14
                                                end ;; $_79
                                              end ;; $_78
                                              get_local $7
                                              i32.const 8192
                                              get_local $11
                                              i32.load
                                              get_local $7
                                              i32.load
                                              i32.load offset=12
                                              i32.const 31
                                              i32.and
                                              i32.const 8
                                              i32.add
                                              call_indirect (type $FUNCSIG$iiii)
                                              i32.eqz
                                              br_if $__rjti$0
                                              get_local $27
                                              i32.load8_s
                                              set_local $12
                                              get_local $15
                                              i32.load
                                              set_local $13
                                              get_local $11
                                              i32.const 4
                                              i32.add
                                              set_local $10
                                              br $while-in15
                                            end ;; $while-out14
                                          end ;; $while-in15
                                          br $__rjto$0
                                        end ;; $__rjti$0
                                        get_local $27
                                        i32.load8_s
                                        set_local $12
                                        get_local $15
                                        i32.load
                                        set_local $13
                                        get_local $10
                                        set_local $11
                                      end ;; $__rjto$0
                                      get_local $11
                                      get_local $12
                                      i32.const 24
                                      i32.shl
                                      i32.const 24
                                      i32.shr_s
                                      i32.const 0
                                      i32.lt_s
                                      if $_80 (result i32)
                                        get_local $13
                                      else
                                        get_local $15
                                      end ;; $_80
                                      tee_local $10
                                      tee_local $14
                                      i32.sub
                                      i32.const 2
                                      i32.shr_s
                                      tee_local $21
                                      get_local $41
                                      i32.load8_s
                                      tee_local $28
                                      i32.const 0
                                      i32.lt_s
                                      tee_local $46
                                      if $_81 (result i32)
                                        get_local $42
                                        i32.load
                                      else
                                        get_local $28
                                        i32.const 255
                                        i32.and
                                      end ;; $_81
                                      tee_local $28
                                      i32.gt_u
                                      if $_82
                                        block $_83
                                          get_local $3
                                          set_local $10
                                          get_local $14
                                          set_local $11
                                        end ;; $_83
                                      else
                                        block $_84
                                          get_local $46
                                          if $_85 (result i32)
                                            get_local $19
                                            i32.load
                                          else
                                            get_local $19
                                          end ;; $_85
                                          get_local $28
                                          i32.const 2
                                          i32.shl
                                          i32.add
                                          tee_local $28
                                          i32.const 0
                                          get_local $21
                                          i32.sub
                                          i32.const 2
                                          i32.shl
                                          i32.add
                                          set_local $21
                                          loop $while-in17
                                            get_local $21
                                            get_local $28
                                            i32.eq
                                            if $_86
                                              block $_87
                                                get_local $3
                                                set_local $10
                                                br $label$break$L107
                                              end ;; $_87
                                            end ;; $_86
                                            get_local $21
                                            i32.load
                                            get_local $10
                                            i32.load
                                            i32.ne
                                            if $_88
                                              block $_89
                                                get_local $3
                                                set_local $10
                                                get_local $14
                                                set_local $11
                                                br $label$break$L107
                                              end ;; $_89
                                            else
                                              block $_90
                                                get_local $10
                                                i32.const 4
                                                i32.add
                                                set_local $10
                                                get_local $21
                                                i32.const 4
                                                i32.add
                                                set_local $21
                                                br $while-in17
                                              end ;; $_90
                                            end ;; $_88
                                          end ;; $while-in17
                                        end ;; $_84
                                      end ;; $_82
                                    end ;; $_75
                                  else
                                    get_local $3
                                    set_local $10
                                  end ;; $_74
                                else
                                  get_local $3
                                  set_local $10
                                end ;; $_73
                              end ;; $label$break$L107
                              loop $label$continue$L121
                                block $label$break$L121
                                  get_local $11
                                  get_local $12
                                  i32.const 24
                                  i32.shl
                                  i32.const 24
                                  i32.shr_s
                                  i32.const 0
                                  i32.lt_s
                                  tee_local $14
                                  if $_91 (result i32)
                                    get_local $13
                                  else
                                    get_local $15
                                  end ;; $_91
                                  get_local $14
                                  if $_92 (result i32)
                                    get_local $36
                                    i32.load
                                  else
                                    get_local $12
                                    i32.const 255
                                    i32.and
                                  end ;; $_92
                                  i32.const 2
                                  i32.shl
                                  i32.add
                                  tee_local $12
                                  i32.eq
                                  if $_93
                                    block $_94
                                      get_local $12
                                      set_local $11
                                      br $label$break$L121
                                    end ;; $_94
                                  end ;; $_93
                                  get_local $0
                                  i32.load
                                  tee_local $12
                                  if $_95 (result i32)
                                    get_local $12
                                    i32.load offset=12
                                    tee_local $13
                                    get_local $12
                                    i32.load offset=16
                                    i32.eq
                                    if $_96 (result i32)
                                      get_local $12
                                      get_local $12
                                      i32.load
                                      i32.load offset=36
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                    else
                                      get_local $13
                                      i32.load
                                    end ;; $_96
                                    tee_local $12
                                    i32.const -1
                                    i32.eq
                                    if $_97 (result i32)
                                      block $_98 (result i32)
                                        get_local $0
                                        i32.const 0
                                        i32.store
                                        i32.const 1
                                      end ;; $_98
                                    else
                                      get_local $0
                                      i32.load
                                      i32.eqz
                                    end ;; $_97
                                  else
                                    i32.const 1
                                  end ;; $_95
                                  set_local $12
                                  block $__rjto$1
                                    block $__rjti$1
                                      get_local $3
                                      if $_99
                                        get_local $3
                                        i32.load offset=12
                                        tee_local $13
                                        get_local $3
                                        i32.load offset=16
                                        i32.eq
                                        if $_100 (result i32)
                                          get_local $3
                                          get_local $3
                                          i32.load
                                          i32.load offset=36
                                          i32.const 63
                                          i32.and
                                          i32.const 312
                                          i32.add
                                          call_indirect (type $FUNCSIG$ii)
                                        else
                                          get_local $13
                                          i32.load
                                        end ;; $_100
                                        tee_local $3
                                        i32.const -1
                                        i32.eq
                                        if $_101
                                          block $_102
                                            get_local $1
                                            i32.const 0
                                            i32.store
                                            i32.const 0
                                            set_local $3
                                            br $__rjti$1
                                          end ;; $_102
                                        else
                                          get_local $12
                                          get_local $10
                                          i32.eqz
                                          i32.xor
                                          if $_103
                                            block $_104
                                              get_local $10
                                              set_local $3
                                              get_local $10
                                              set_local $14
                                            end ;; $_104
                                          else
                                            br $label$break$L121
                                          end ;; $_103
                                        end ;; $_101
                                      else
                                        block $_105
                                          get_local $10
                                          set_local $3
                                          br $__rjti$1
                                        end ;; $_105
                                      end ;; $_99
                                      br $__rjto$1
                                    end ;; $__rjti$1
                                    get_local $12
                                    br_if $label$break$L121
                                    i32.const 0
                                    set_local $14
                                  end ;; $__rjto$1
                                  get_local $0
                                  i32.load
                                  tee_local $10
                                  i32.load offset=12
                                  tee_local $12
                                  get_local $10
                                  i32.load offset=16
                                  i32.eq
                                  if $_106 (result i32)
                                    get_local $10
                                    get_local $10
                                    i32.load
                                    i32.load offset=36
                                    i32.const 63
                                    i32.and
                                    i32.const 312
                                    i32.add
                                    call_indirect (type $FUNCSIG$ii)
                                  else
                                    get_local $12
                                    i32.load
                                  end ;; $_106
                                  tee_local $10
                                  get_local $11
                                  i32.load
                                  i32.ne
                                  br_if $label$break$L121
                                  get_local $0
                                  i32.load
                                  tee_local $10
                                  i32.const 12
                                  i32.add
                                  tee_local $12
                                  i32.load
                                  tee_local $13
                                  get_local $10
                                  i32.load offset=16
                                  i32.eq
                                  if $_107
                                    get_local $10
                                    get_local $10
                                    i32.load
                                    i32.load offset=40
                                    i32.const 63
                                    i32.and
                                    i32.const 312
                                    i32.add
                                    call_indirect (type $FUNCSIG$ii)
                                    drop
                                  else
                                    get_local $12
                                    get_local $13
                                    i32.const 4
                                    i32.add
                                    i32.store
                                  end ;; $_107
                                  get_local $3
                                  set_local $10
                                  get_local $27
                                  i32.load8_s
                                  set_local $12
                                  get_local $15
                                  i32.load
                                  set_local $13
                                  get_local $14
                                  set_local $3
                                  get_local $11
                                  i32.const 4
                                  i32.add
                                  set_local $11
                                  br $label$continue$L121
                                end ;; $label$break$L121
                              end ;; $label$continue$L121
                              get_local $39
                              if $_108
                                get_local $11
                                get_local $27
                                i32.load8_s
                                tee_local $3
                                i32.const 0
                                i32.lt_s
                                tee_local $10
                                if $_109 (result i32)
                                  get_local $15
                                  i32.load
                                else
                                  get_local $15
                                end ;; $_109
                                get_local $10
                                if $_110 (result i32)
                                  get_local $36
                                  i32.load
                                else
                                  get_local $3
                                  i32.const 255
                                  i32.and
                                end ;; $_110
                                i32.const 2
                                i32.shl
                                i32.add
                                i32.eq
                                if $_111
                                  get_local $4
                                  set_local $3
                                else
                                  br $__rjti$11
                                end ;; $_111
                              else
                                get_local $4
                                set_local $3
                              end ;; $_108
                              br $label$break$L280
                            end ;; $switch-case38
                            get_local $38
                            i32.load
                            set_local $14
                            get_local $3
                            set_local $10
                            get_local $3
                            set_local $11
                            i32.const 0
                            set_local $3
                            loop $label$continue$L158
                              block $label$break$L158
                                get_local $0
                                i32.load
                                tee_local $12
                                if $_112 (result i32)
                                  get_local $12
                                  i32.load offset=12
                                  tee_local $13
                                  get_local $12
                                  i32.load offset=16
                                  i32.eq
                                  if $_113 (result i32)
                                    get_local $12
                                    get_local $12
                                    i32.load
                                    i32.load offset=36
                                    i32.const 63
                                    i32.and
                                    i32.const 312
                                    i32.add
                                    call_indirect (type $FUNCSIG$ii)
                                  else
                                    get_local $13
                                    i32.load
                                  end ;; $_113
                                  tee_local $12
                                  i32.const -1
                                  i32.eq
                                  if $_114 (result i32)
                                    block $_115 (result i32)
                                      get_local $0
                                      i32.const 0
                                      i32.store
                                      i32.const 1
                                    end ;; $_115
                                  else
                                    get_local $0
                                    i32.load
                                    i32.eqz
                                  end ;; $_114
                                else
                                  i32.const 1
                                end ;; $_112
                                set_local $12
                                block $__rjto$2
                                  block $__rjti$2
                                    get_local $11
                                    i32.eqz
                                    br_if $__rjti$2
                                    get_local $11
                                    i32.load offset=12
                                    tee_local $13
                                    get_local $11
                                    i32.load offset=16
                                    i32.eq
                                    if $_116 (result i32)
                                      get_local $11
                                      get_local $11
                                      i32.load
                                      i32.load offset=36
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                    else
                                      get_local $13
                                      i32.load
                                    end ;; $_116
                                    tee_local $11
                                    i32.const -1
                                    i32.eq
                                    if $_117
                                      block $_118
                                        get_local $1
                                        i32.const 0
                                        i32.store
                                        i32.const 0
                                        set_local $10
                                        br $__rjti$2
                                      end ;; $_118
                                    else
                                      get_local $12
                                      get_local $10
                                      i32.eqz
                                      i32.xor
                                      if $_119
                                        block $_120
                                          get_local $10
                                          set_local $11
                                          get_local $10
                                          set_local $12
                                        end ;; $_120
                                      else
                                        br $label$break$L158
                                      end ;; $_119
                                    end ;; $_117
                                    br $__rjto$2
                                  end ;; $__rjti$2
                                  get_local $12
                                  br_if $label$break$L158
                                  get_local $10
                                  set_local $11
                                  i32.const 0
                                  set_local $12
                                end ;; $__rjto$2
                                get_local $7
                                i32.const 2048
                                get_local $0
                                i32.load
                                tee_local $10
                                i32.load offset=12
                                tee_local $13
                                get_local $10
                                i32.load offset=16
                                i32.eq
                                if $_121 (result i32)
                                  get_local $10
                                  get_local $10
                                  i32.load
                                  i32.load offset=36
                                  i32.const 63
                                  i32.and
                                  i32.const 312
                                  i32.add
                                  call_indirect (type $FUNCSIG$ii)
                                else
                                  get_local $13
                                  i32.load
                                end ;; $_121
                                tee_local $13
                                get_local $7
                                i32.load
                                i32.load offset=12
                                i32.const 31
                                i32.and
                                i32.const 8
                                i32.add
                                call_indirect (type $FUNCSIG$iiii)
                                if $_122 (result i32)
                                  block $_123 (result i32)
                                    get_local $9
                                    i32.load
                                    tee_local $10
                                    get_local $30
                                    i32.load
                                    i32.eq
                                    if $_124
                                      block $_125
                                        get_local $8
                                        get_local $9
                                        get_local $30
                                        call $__ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                                        get_local $9
                                        i32.load
                                        set_local $10
                                      end ;; $_125
                                    end ;; $_124
                                    get_local $9
                                    get_local $10
                                    i32.const 4
                                    i32.add
                                    i32.store
                                    get_local $10
                                    get_local $13
                                    i32.store
                                    get_local $3
                                    i32.const 1
                                    i32.add
                                  end ;; $_123
                                else
                                  block $_126 (result i32)
                                    get_local $44
                                    i32.load8_s
                                    set_local $10
                                    get_local $13
                                    get_local $14
                                    i32.eq
                                    get_local $3
                                    if $_127 (result i32)
                                      get_local $10
                                      i32.const 0
                                      i32.lt_s
                                      if $_128 (result i32)
                                        get_local $45
                                        i32.load
                                      else
                                        get_local $10
                                        i32.const 255
                                        i32.and
                                      end ;; $_128
                                      i32.const 0
                                      i32.ne
                                    else
                                      i32.const 0
                                    end ;; $_127
                                    i32.and
                                    i32.eqz
                                    if $_129
                                      block $_130
                                        get_local $11
                                        set_local $10
                                        br $label$break$L158
                                      end ;; $_130
                                    end ;; $_129
                                    get_local $2
                                    get_local $31
                                    i32.load
                                    i32.eq
                                    if $_131
                                      block $_132
                                        get_local $23
                                        get_local $24
                                        get_local $31
                                        call $__ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                                        get_local $24
                                        i32.load
                                        set_local $2
                                      end ;; $_132
                                    end ;; $_131
                                    get_local $24
                                    get_local $2
                                    i32.const 4
                                    i32.add
                                    tee_local $10
                                    i32.store
                                    get_local $2
                                    get_local $3
                                    i32.store
                                    get_local $10
                                    set_local $2
                                    i32.const 0
                                  end ;; $_126
                                end ;; $_122
                                set_local $3
                                get_local $0
                                i32.load
                                tee_local $10
                                i32.const 12
                                i32.add
                                tee_local $13
                                i32.load
                                tee_local $21
                                get_local $10
                                i32.load offset=16
                                i32.eq
                                if $_133
                                  block $_134
                                    get_local $10
                                    get_local $10
                                    i32.load
                                    i32.load offset=40
                                    i32.const 63
                                    i32.and
                                    i32.const 312
                                    i32.add
                                    call_indirect (type $FUNCSIG$ii)
                                    drop
                                    get_local $11
                                    set_local $10
                                    get_local $12
                                    set_local $11
                                    br $label$continue$L158
                                  end ;; $_134
                                else
                                  block $_135
                                    get_local $13
                                    get_local $21
                                    i32.const 4
                                    i32.add
                                    i32.store
                                    get_local $11
                                    set_local $10
                                    get_local $12
                                    set_local $11
                                    br $label$continue$L158
                                  end ;; $_135
                                end ;; $_133
                              end ;; $label$break$L158
                            end ;; $label$continue$L158
                            get_local $3
                            if $_136 (result i32)
                              get_local $23
                              i32.load
                              get_local $2
                              i32.ne
                            else
                              i32.const 0
                            end ;; $_136
                            if $_137
                              block $_138
                                get_local $2
                                get_local $31
                                i32.load
                                i32.eq
                                if $_139
                                  block $_140
                                    get_local $23
                                    get_local $24
                                    get_local $31
                                    call $__ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                                    get_local $24
                                    i32.load
                                    set_local $2
                                  end ;; $_140
                                end ;; $_139
                                get_local $24
                                get_local $2
                                i32.const 4
                                i32.add
                                tee_local $12
                                i32.store
                                get_local $2
                                get_local $3
                                i32.store
                              end ;; $_138
                            else
                              get_local $2
                              set_local $12
                            end ;; $_137
                            block $label$break$L207
                              get_local $32
                              i32.load
                              tee_local $11
                              i32.const 0
                              i32.gt_s
                              if $_141
                                block $_142
                                  get_local $0
                                  i32.load
                                  tee_local $2
                                  if $_143 (result i32)
                                    get_local $2
                                    i32.load offset=12
                                    tee_local $3
                                    get_local $2
                                    i32.load offset=16
                                    i32.eq
                                    if $_144 (result i32)
                                      get_local $2
                                      get_local $2
                                      i32.load
                                      i32.load offset=36
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                    else
                                      get_local $3
                                      i32.load
                                    end ;; $_144
                                    tee_local $2
                                    i32.const -1
                                    i32.eq
                                    if $_145 (result i32)
                                      block $_146 (result i32)
                                        get_local $0
                                        i32.const 0
                                        i32.store
                                        i32.const 1
                                      end ;; $_146
                                    else
                                      get_local $0
                                      i32.load
                                      i32.eqz
                                    end ;; $_145
                                  else
                                    i32.const 1
                                  end ;; $_143
                                  set_local $2
                                  block $__rjto$4
                                    block $__rjti$4
                                      get_local $10
                                      i32.eqz
                                      br_if $__rjti$4
                                      get_local $10
                                      i32.load offset=12
                                      tee_local $3
                                      get_local $10
                                      i32.load offset=16
                                      i32.eq
                                      if $_147 (result i32)
                                        get_local $10
                                        get_local $10
                                        i32.load
                                        i32.load offset=36
                                        i32.const 63
                                        i32.and
                                        i32.const 312
                                        i32.add
                                        call_indirect (type $FUNCSIG$ii)
                                      else
                                        get_local $3
                                        i32.load
                                      end ;; $_147
                                      tee_local $3
                                      i32.const -1
                                      i32.eq
                                      if $_148
                                        block $_149
                                          get_local $1
                                          i32.const 0
                                          i32.store
                                          br $__rjti$4
                                        end ;; $_149
                                      else
                                        get_local $2
                                        if $_150
                                          get_local $10
                                          set_local $3
                                        else
                                          br $__rjti$12
                                        end ;; $_150
                                      end ;; $_148
                                      br $__rjto$4
                                    end ;; $__rjti$4
                                    get_local $2
                                    br_if $__rjti$12
                                    i32.const 0
                                    set_local $3
                                  end ;; $__rjto$4
                                  get_local $0
                                  i32.load
                                  tee_local $2
                                  i32.load offset=12
                                  tee_local $10
                                  get_local $2
                                  i32.load offset=16
                                  i32.eq
                                  if $_151 (result i32)
                                    get_local $2
                                    get_local $2
                                    i32.load
                                    i32.load offset=36
                                    i32.const 63
                                    i32.and
                                    i32.const 312
                                    i32.add
                                    call_indirect (type $FUNCSIG$ii)
                                  else
                                    get_local $10
                                    i32.load
                                  end ;; $_151
                                  tee_local $2
                                  get_local $37
                                  i32.load
                                  i32.ne
                                  br_if $__rjti$12
                                  get_local $0
                                  i32.load
                                  tee_local $2
                                  i32.const 12
                                  i32.add
                                  tee_local $10
                                  i32.load
                                  tee_local $13
                                  get_local $2
                                  i32.load offset=16
                                  i32.eq
                                  if $_152 (result i32)
                                    block $_153 (result i32)
                                      get_local $2
                                      get_local $2
                                      i32.load
                                      i32.load offset=40
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                      drop
                                      get_local $11
                                      set_local $10
                                      get_local $3
                                    end ;; $_153
                                  else
                                    block $_154 (result i32)
                                      get_local $10
                                      get_local $13
                                      i32.const 4
                                      i32.add
                                      i32.store
                                      get_local $11
                                      set_local $10
                                      get_local $3
                                    end ;; $_154
                                  end ;; $_152
                                  set_local $2
                                  loop $while-in33
                                    get_local $10
                                    i32.const 0
                                    i32.le_s
                                    br_if $label$break$L207
                                    get_local $0
                                    i32.load
                                    tee_local $11
                                    if $_155 (result i32)
                                      get_local $11
                                      i32.load offset=12
                                      tee_local $13
                                      get_local $11
                                      i32.load offset=16
                                      i32.eq
                                      if $_156 (result i32)
                                        get_local $11
                                        get_local $11
                                        i32.load
                                        i32.load offset=36
                                        i32.const 63
                                        i32.and
                                        i32.const 312
                                        i32.add
                                        call_indirect (type $FUNCSIG$ii)
                                      else
                                        get_local $13
                                        i32.load
                                      end ;; $_156
                                      tee_local $11
                                      i32.const -1
                                      i32.eq
                                      if $_157 (result i32)
                                        block $_158 (result i32)
                                          get_local $0
                                          i32.const 0
                                          i32.store
                                          i32.const 1
                                        end ;; $_158
                                      else
                                        get_local $0
                                        i32.load
                                        i32.eqz
                                      end ;; $_157
                                    else
                                      i32.const 1
                                    end ;; $_155
                                    set_local $11
                                    block $__rjto$3
                                      block $__rjti$3
                                        get_local $3
                                        i32.eqz
                                        br_if $__rjti$3
                                        get_local $3
                                        i32.load offset=12
                                        tee_local $13
                                        get_local $3
                                        i32.load offset=16
                                        i32.eq
                                        if $_159 (result i32)
                                          get_local $3
                                          get_local $3
                                          i32.load
                                          i32.load offset=36
                                          i32.const 63
                                          i32.and
                                          i32.const 312
                                          i32.add
                                          call_indirect (type $FUNCSIG$ii)
                                        else
                                          get_local $13
                                          i32.load
                                        end ;; $_159
                                        tee_local $3
                                        i32.const -1
                                        i32.eq
                                        if $_160
                                          block $_161
                                            get_local $1
                                            i32.const 0
                                            i32.store
                                            i32.const 0
                                            set_local $2
                                            br $__rjti$3
                                          end ;; $_161
                                        else
                                          get_local $11
                                          get_local $2
                                          i32.eqz
                                          i32.xor
                                          if $_162
                                            block $_163
                                              get_local $2
                                              set_local $3
                                              get_local $2
                                              set_local $11
                                            end ;; $_163
                                          else
                                            br $__rjti$13
                                          end ;; $_162
                                        end ;; $_160
                                        br $__rjto$3
                                      end ;; $__rjti$3
                                      get_local $11
                                      br_if $__rjti$13
                                      get_local $2
                                      set_local $3
                                      i32.const 0
                                      set_local $11
                                    end ;; $__rjto$3
                                    get_local $7
                                    i32.const 2048
                                    get_local $0
                                    i32.load
                                    tee_local $2
                                    i32.load offset=12
                                    tee_local $13
                                    get_local $2
                                    i32.load offset=16
                                    i32.eq
                                    if $_164 (result i32)
                                      get_local $2
                                      get_local $2
                                      i32.load
                                      i32.load offset=36
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                    else
                                      get_local $13
                                      i32.load
                                    end ;; $_164
                                    tee_local $2
                                    get_local $7
                                    i32.load
                                    i32.load offset=12
                                    i32.const 31
                                    i32.and
                                    i32.const 8
                                    i32.add
                                    call_indirect (type $FUNCSIG$iiii)
                                    i32.eqz
                                    br_if $__rjti$13
                                    get_local $9
                                    i32.load
                                    get_local $30
                                    i32.load
                                    i32.eq
                                    if $_165
                                      get_local $8
                                      get_local $9
                                      get_local $30
                                      call $__ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                                    end ;; $_165
                                    get_local $0
                                    i32.load
                                    tee_local $2
                                    i32.load offset=12
                                    tee_local $13
                                    get_local $2
                                    i32.load offset=16
                                    i32.eq
                                    if $_166 (result i32)
                                      get_local $2
                                      get_local $2
                                      i32.load
                                      i32.load offset=36
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                    else
                                      get_local $13
                                      i32.load
                                    end ;; $_166
                                    set_local $2
                                    get_local $9
                                    get_local $9
                                    i32.load
                                    tee_local $13
                                    i32.const 4
                                    i32.add
                                    i32.store
                                    get_local $13
                                    get_local $2
                                    i32.store
                                    get_local $32
                                    get_local $10
                                    i32.const -1
                                    i32.add
                                    tee_local $10
                                    i32.store
                                    get_local $0
                                    i32.load
                                    tee_local $2
                                    i32.const 12
                                    i32.add
                                    tee_local $13
                                    i32.load
                                    tee_local $14
                                    get_local $2
                                    i32.load offset=16
                                    i32.eq
                                    if $_167
                                      block $_168
                                        get_local $2
                                        get_local $2
                                        i32.load
                                        i32.load offset=40
                                        i32.const 63
                                        i32.and
                                        i32.const 312
                                        i32.add
                                        call_indirect (type $FUNCSIG$ii)
                                        drop
                                        get_local $3
                                        set_local $2
                                        get_local $11
                                        set_local $3
                                        br $while-in33
                                      end ;; $_168
                                    else
                                      block $_169
                                        get_local $13
                                        get_local $14
                                        i32.const 4
                                        i32.add
                                        i32.store
                                        get_local $3
                                        set_local $2
                                        get_local $11
                                        set_local $3
                                        br $while-in33
                                      end ;; $_169
                                    end ;; $_167
                                  end ;; $while-in33
                                end ;; $_142
                              end ;; $_141
                            end ;; $label$break$L207
                            get_local $9
                            i32.load
                            get_local $8
                            i32.load
                            i32.eq
                            br_if $__rjti$14
                            get_local $12
                            set_local $2
                            get_local $4
                            set_local $3
                            br $label$break$L280
                          end ;; $switch-default
                          get_local $4
                          set_local $3
                          br $label$break$L280
                        end ;; $__rjti$7
                        loop $while-in41
                          get_local $0
                          i32.load
                          tee_local $11
                          if $_170 (result i32)
                            get_local $11
                            i32.load offset=12
                            tee_local $12
                            get_local $11
                            i32.load offset=16
                            i32.eq
                            if $_171 (result i32)
                              get_local $11
                              get_local $11
                              i32.load
                              i32.load offset=36
                              i32.const 63
                              i32.and
                              i32.const 312
                              i32.add
                              call_indirect (type $FUNCSIG$ii)
                            else
                              get_local $12
                              i32.load
                            end ;; $_171
                            tee_local $11
                            i32.const -1
                            i32.eq
                            if $_172 (result i32)
                              block $_173 (result i32)
                                get_local $0
                                i32.const 0
                                i32.store
                                i32.const 1
                              end ;; $_173
                            else
                              get_local $0
                              i32.load
                              i32.eqz
                            end ;; $_172
                          else
                            i32.const 1
                          end ;; $_170
                          set_local $11
                          block $__rjto$5
                            block $__rjti$5
                              get_local $3
                              if $_174
                                get_local $3
                                i32.load offset=12
                                tee_local $12
                                get_local $3
                                i32.load offset=16
                                i32.eq
                                if $_175 (result i32)
                                  get_local $3
                                  get_local $3
                                  i32.load
                                  i32.load offset=36
                                  i32.const 63
                                  i32.and
                                  i32.const 312
                                  i32.add
                                  call_indirect (type $FUNCSIG$ii)
                                else
                                  get_local $12
                                  i32.load
                                end ;; $_175
                                tee_local $3
                                i32.const -1
                                i32.eq
                                if $_176
                                  block $_177
                                    get_local $1
                                    i32.const 0
                                    i32.store
                                    i32.const 0
                                    set_local $3
                                    br $__rjti$5
                                  end ;; $_177
                                else
                                  get_local $11
                                  get_local $10
                                  i32.eqz
                                  i32.xor
                                  if $_178
                                    block $_179
                                      get_local $10
                                      set_local $3
                                      get_local $10
                                      set_local $11
                                    end ;; $_179
                                  else
                                    block $_180
                                      get_local $4
                                      set_local $3
                                      br $label$break$L280
                                    end ;; $_180
                                  end ;; $_178
                                end ;; $_176
                              else
                                block $_181
                                  get_local $10
                                  set_local $3
                                  br $__rjti$5
                                end ;; $_181
                              end ;; $_174
                              br $__rjto$5
                            end ;; $__rjti$5
                            get_local $11
                            if $_182
                              block $_183
                                get_local $4
                                set_local $3
                                br $label$break$L280
                              end ;; $_183
                            else
                              i32.const 0
                              set_local $11
                            end ;; $_182
                          end ;; $__rjto$5
                          get_local $7
                          i32.const 8192
                          get_local $0
                          i32.load
                          tee_local $10
                          i32.load offset=12
                          tee_local $12
                          get_local $10
                          i32.load offset=16
                          i32.eq
                          if $_184 (result i32)
                            get_local $10
                            get_local $10
                            i32.load
                            i32.load offset=36
                            i32.const 63
                            i32.and
                            i32.const 312
                            i32.add
                            call_indirect (type $FUNCSIG$ii)
                          else
                            get_local $12
                            i32.load
                          end ;; $_184
                          tee_local $10
                          get_local $7
                          i32.load
                          i32.load offset=12
                          i32.const 31
                          i32.and
                          i32.const 8
                          i32.add
                          call_indirect (type $FUNCSIG$iiii)
                          if $_185
                            block $_186
                              get_local $19
                              get_local $0
                              i32.load
                              tee_local $10
                              i32.const 12
                              i32.add
                              tee_local $13
                              i32.load
                              tee_local $12
                              get_local $10
                              i32.load offset=16
                              i32.eq
                              if $_187 (result i32)
                                get_local $10
                                get_local $10
                                i32.load
                                i32.load offset=40
                                i32.const 63
                                i32.and
                                i32.const 312
                                i32.add
                                call_indirect (type $FUNCSIG$ii)
                              else
                                block $_188 (result i32)
                                  get_local $13
                                  get_local $12
                                  i32.const 4
                                  i32.add
                                  i32.store
                                  get_local $12
                                  i32.load
                                end ;; $_188
                              end ;; $_187
                              tee_local $10
                              call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw
                              get_local $3
                              set_local $10
                              get_local $11
                              set_local $3
                              br $while-in41
                            end ;; $_186
                          else
                            block $_189
                              get_local $4
                              set_local $3
                              br $label$break$L280
                            end ;; $_189
                          end ;; $_185
                        end ;; $while-in41
                      end ;; $label$break$L280
                      get_local $20
                      i32.const 1
                      i32.add
                      set_local $20
                      get_local $3
                      set_local $4
                      br $label$continue$L21
                    end ;; $label$continue$L21
                  end ;; $__rjti$9
                  get_local $5
                  get_local $5
                  i32.load
                  i32.const 4
                  i32.or
                  i32.store
                  i32.const 0
                  br $label$break$L315
                end ;; $__rjti$10
                get_local $5
                get_local $5
                i32.load
                i32.const 4
                i32.or
                i32.store
                i32.const 0
                br $label$break$L315
              end ;; $__rjti$11
              get_local $5
              get_local $5
              i32.load
              i32.const 4
              i32.or
              i32.store
              i32.const 0
              br $label$break$L315
            end ;; $__rjti$12
            get_local $5
            get_local $5
            i32.load
            i32.const 4
            i32.or
            i32.store
            i32.const 0
            br $label$break$L315
          end ;; $__rjti$13
          get_local $5
          get_local $5
          i32.load
          i32.const 4
          i32.or
          i32.store
          i32.const 0
          br $label$break$L315
        end ;; $__rjti$14
        get_local $5
        get_local $5
        i32.load
        i32.const 4
        i32.or
        i32.store
        i32.const 0
        br $label$break$L315
      end ;; $__rjti$15
      block $label$break$L317
        get_local $4
        if $_190
          block $_191
            get_local $4
            i32.const 11
            i32.add
            set_local $8
            get_local $4
            i32.const 4
            i32.add
            set_local $9
            i32.const 1
            set_local $2
            loop $label$continue$L319
              block $label$break$L319
                get_local $2
                get_local $8
                i32.load8_s
                tee_local $6
                i32.const 0
                i32.lt_s
                if $_192 (result i32)
                  get_local $9
                  i32.load
                else
                  get_local $6
                  i32.const 255
                  i32.and
                end ;; $_192
                tee_local $6
                i32.ge_u
                br_if $label$break$L317
                get_local $0
                i32.load
                tee_local $6
                if $_193 (result i32)
                  get_local $6
                  i32.load offset=12
                  tee_local $7
                  get_local $6
                  i32.load offset=16
                  i32.eq
                  if $_194 (result i32)
                    get_local $6
                    get_local $6
                    i32.load
                    i32.load offset=36
                    i32.const 63
                    i32.and
                    i32.const 312
                    i32.add
                    call_indirect (type $FUNCSIG$ii)
                  else
                    get_local $7
                    i32.load
                  end ;; $_194
                  tee_local $6
                  i32.const -1
                  i32.eq
                  if $_195 (result i32)
                    block $_196 (result i32)
                      get_local $0
                      i32.const 0
                      i32.store
                      i32.const 1
                    end ;; $_196
                  else
                    get_local $0
                    i32.load
                    i32.eqz
                  end ;; $_195
                else
                  i32.const 1
                end ;; $_193
                set_local $6
                block $__rjto$8
                  block $__rjti$8
                    get_local $1
                    i32.load
                    tee_local $7
                    i32.eqz
                    br_if $__rjti$8
                    get_local $7
                    i32.load offset=12
                    tee_local $10
                    get_local $7
                    i32.load offset=16
                    i32.eq
                    if $if (result i32)
                      get_local $7
                      get_local $7
                      i32.load
                      i32.load offset=36
                      i32.const 63
                      i32.and
                      i32.const 312
                      i32.add
                      call_indirect (type $FUNCSIG$ii)
                    else
                      get_local $10
                      i32.load
                    end ;; $if
                    tee_local $7
                    i32.const -1
                    i32.eq
                    if $if_1
                      block $block
                        get_local $1
                        i32.const 0
                        i32.store
                        br $__rjti$8
                      end ;; $block
                    else
                      get_local $6
                      i32.eqz
                      br_if $label$break$L319
                    end ;; $if_1
                    br $__rjto$8
                  end ;; $__rjti$8
                  get_local $6
                  br_if $label$break$L319
                end ;; $__rjto$8
                get_local $0
                i32.load
                tee_local $6
                i32.load offset=12
                tee_local $7
                get_local $6
                i32.load offset=16
                i32.eq
                if $if_2 (result i32)
                  get_local $6
                  get_local $6
                  i32.load
                  i32.load offset=36
                  i32.const 63
                  i32.and
                  i32.const 312
                  i32.add
                  call_indirect (type $FUNCSIG$ii)
                else
                  get_local $7
                  i32.load
                end ;; $if_2
                tee_local $7
                get_local $8
                i32.load8_s
                i32.const 0
                i32.lt_s
                if $if_3 (result i32)
                  get_local $4
                  i32.load
                else
                  get_local $4
                end ;; $if_3
                tee_local $6
                get_local $2
                i32.const 2
                i32.shl
                i32.add
                i32.load
                i32.ne
                br_if $label$break$L319
                get_local $2
                i32.const 1
                i32.add
                set_local $2
                get_local $0
                i32.load
                tee_local $6
                i32.const 12
                i32.add
                tee_local $7
                i32.load
                tee_local $10
                get_local $6
                i32.load offset=16
                i32.eq
                if $if_4
                  block $block_1
                    get_local $6
                    get_local $6
                    i32.load
                    i32.load offset=40
                    i32.const 63
                    i32.and
                    i32.const 312
                    i32.add
                    call_indirect (type $FUNCSIG$ii)
                    drop
                    br $label$continue$L319
                  end ;; $block_1
                else
                  block $block_2
                    get_local $7
                    get_local $10
                    i32.const 4
                    i32.add
                    i32.store
                    br $label$continue$L319
                  end ;; $block_2
                end ;; $if_4
              end ;; $label$break$L319
            end ;; $label$continue$L319
            get_local $5
            get_local $5
            i32.load
            i32.const 4
            i32.or
            i32.store
            i32.const 0
            br $label$break$L315
          end ;; $_191
        end ;; $_190
      end ;; $label$break$L317
      get_local $23
      i32.load
      tee_local $0
      get_local $3
      i32.eq
      if $if_5 (result i32)
        i32.const 1
      else
        block $block_3 (result i32)
          get_local $33
          i32.const 0
          i32.store
          get_local $22
          get_local $0
          get_local $3
          get_local $33
          call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
          get_local $33
          i32.load
          if $if_6 (result i32)
            block $block_4 (result i32)
              get_local $5
              get_local $5
              i32.load
              i32.const 4
              i32.or
              i32.store
              i32.const 0
            end ;; $block_4
          else
            i32.const 1
          end ;; $if_6
        end ;; $block_3
      end ;; $if_5
    end ;; $label$break$L315
    set_local $0
    get_local $19
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $18
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $17
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $15
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $22
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $23
    i32.load
    set_local $1
    get_local $23
    i32.const 0
    i32.store
    get_local $1
    if $if_7
      get_local $1
      get_local $40
      i32.load
      i32.const 127
      i32.and
      i32.const 48
      i32.add
      call_indirect (type $FUNCSIG$vi)
    end ;; $if_7
    get_local $16
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_ (type $_2)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (param $8 i32)
    (param $9 i32)
    (param $10 i32)
    (result i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    (local $25 i32)
    (local $26 i32)
    (local $27 i32)
    (local $28 i32)
    (local $29 i32)
    (local $30 i32)
    (local $31 i32)
    (local $32 i32)
    (local $33 i32)
    (local $34 i32)
    (local $35 i32)
    (local $36 i32)
    (local $37 i32)
    (local $38 i32)
    (local $39 i32)
    (local $40 i32)
    (local $41 i32)
    (local $42 i32)
    (local $43 i32)
    (local $44 i32)
    (local $45 i32)
    (local $46 i32)
    get_global $STACKTOP
    set_local $14
    get_global $STACKTOP
    i32.const 512
    i32.add
    set_global $STACKTOP
    get_local $14
    i32.const 500
    i32.add
    set_local $28
    get_local $14
    i32.const 497
    i32.add
    set_local $38
    get_local $14
    i32.const 496
    i32.add
    set_local $39
    get_local $14
    i32.const 44
    i32.add
    set_local $15
    get_local $14
    i32.const 32
    i32.add
    set_local $16
    get_local $14
    i32.const 20
    i32.add
    set_local $17
    get_local $14
    i32.const 8
    i32.add
    set_local $18
    get_local $14
    i32.const 4
    i32.add
    set_local $31
    get_local $14
    set_local $32
    get_local $14
    i32.const 88
    i32.add
    tee_local $29
    get_local $10
    i32.store
    get_local $14
    i32.const 80
    i32.add
    tee_local $22
    get_local $14
    i32.const 96
    i32.add
    tee_local $10
    i32.store
    get_local $22
    i32.const 4
    i32.add
    tee_local $41
    i32.const 107
    i32.store
    get_local $14
    i32.const 72
    i32.add
    tee_local $24
    get_local $10
    i32.store
    get_local $14
    i32.const 68
    i32.add
    tee_local $30
    get_local $10
    i32.const 400
    i32.add
    i32.store
    get_local $14
    i32.const 56
    i32.add
    tee_local $21
    i32.const 0
    i32.store
    get_local $21
    i32.const 0
    i32.store offset=4
    get_local $21
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $11
    loop $while-in
      get_local $11
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $21
          get_local $11
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $11
          i32.const 1
          i32.add
          set_local $11
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $15
    i32.const 0
    i32.store
    get_local $15
    i32.const 0
    i32.store offset=4
    get_local $15
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $11
    loop $while-in1
      get_local $11
      i32.const 3
      i32.ne
      if $_3
        block $_4
          get_local $15
          get_local $11
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $11
          i32.const 1
          i32.add
          set_local $11
          br $while-in1
        end ;; $_4
      end ;; $_3
    end ;; $while-in1
    get_local $16
    i32.const 0
    i32.store
    get_local $16
    i32.const 0
    i32.store offset=4
    get_local $16
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $11
    loop $while-in3
      get_local $11
      i32.const 3
      i32.ne
      if $_5
        block $_6
          get_local $16
          get_local $11
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $11
          i32.const 1
          i32.add
          set_local $11
          br $while-in3
        end ;; $_6
      end ;; $_5
    end ;; $while-in3
    get_local $17
    i32.const 0
    i32.store
    get_local $17
    i32.const 0
    i32.store offset=4
    get_local $17
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $11
    loop $while-in5
      get_local $11
      i32.const 3
      i32.ne
      if $_7
        block $_8
          get_local $17
          get_local $11
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $11
          i32.const 1
          i32.add
          set_local $11
          br $while-in5
        end ;; $_8
      end ;; $_7
    end ;; $while-in5
    get_local $18
    i32.const 0
    i32.store
    get_local $18
    i32.const 0
    i32.store offset=4
    get_local $18
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $11
    loop $while-in7
      get_local $11
      i32.const 3
      i32.ne
      if $_9
        block $_10
          get_local $18
          get_local $11
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $11
          i32.const 1
          i32.add
          set_local $11
          br $while-in7
        end ;; $_10
      end ;; $_9
    end ;; $while-in7
    get_local $2
    get_local $3
    get_local $28
    get_local $38
    get_local $39
    get_local $21
    get_local $15
    get_local $16
    get_local $17
    get_local $31
    call $__ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri
    get_local $9
    get_local $8
    i32.load
    i32.store
    get_local $7
    i32.const 8
    i32.add
    set_local $25
    get_local $16
    i32.const 11
    i32.add
    set_local $26
    get_local $16
    i32.const 4
    i32.add
    set_local $33
    get_local $17
    i32.const 11
    i32.add
    set_local $27
    get_local $17
    i32.const 4
    i32.add
    set_local $34
    get_local $4
    i32.const 512
    i32.and
    i32.const 0
    i32.ne
    set_local $40
    get_local $15
    i32.const 11
    i32.add
    set_local $35
    get_local $15
    i32.const 4
    i32.add
    set_local $36
    get_local $18
    i32.const 11
    i32.add
    set_local $42
    get_local $18
    i32.const 4
    i32.add
    set_local $43
    get_local $28
    i32.const 3
    i32.add
    set_local $44
    get_local $21
    i32.const 11
    i32.add
    set_local $45
    get_local $21
    i32.const 4
    i32.add
    set_local $46
    get_local $10
    set_local $2
    i32.const 0
    set_local $20
    i32.const 0
    set_local $3
    block $label$break$L294 (result i32)
      block $__rjti$15
        block $__rjti$14
          block $__rjti$13
            block $__rjti$12
              block $__rjti$11
                block $__rjti$10
                  block $__rjti$9
                    loop $label$continue$L21
                      get_local $20
                      i32.const 4
                      i32.ge_u
                      br_if $__rjti$15
                      get_local $0
                      i32.load
                      tee_local $4
                      if $_11
                        get_local $4
                        i32.load offset=12
                        get_local $4
                        i32.load offset=16
                        i32.eq
                        if $_12
                          get_local $4
                          get_local $4
                          i32.load
                          i32.load offset=36
                          i32.const 63
                          i32.and
                          i32.const 312
                          i32.add
                          call_indirect (type $FUNCSIG$ii)
                          i32.const -1
                          i32.eq
                          if $_13 (result i32)
                            block $_14 (result i32)
                              get_local $0
                              i32.const 0
                              i32.store
                              i32.const 0
                            end ;; $_14
                          else
                            get_local $0
                            i32.load
                          end ;; $_13
                          set_local $4
                        end ;; $_12
                      else
                        i32.const 0
                        set_local $4
                      end ;; $_11
                      get_local $4
                      i32.eqz
                      set_local $7
                      block $__rjto$6
                        block $__rjti$6
                          get_local $1
                          i32.load
                          tee_local $4
                          i32.eqz
                          br_if $__rjti$6
                          get_local $4
                          i32.load offset=12
                          get_local $4
                          i32.load offset=16
                          i32.ne
                          if $_15
                            get_local $7
                            if $_16
                              br $__rjto$6
                            else
                              br $__rjti$15
                            end ;; $_16
                          end ;; $_15
                          get_local $4
                          get_local $4
                          i32.load
                          i32.load offset=36
                          i32.const 63
                          i32.and
                          i32.const 312
                          i32.add
                          call_indirect (type $FUNCSIG$ii)
                          i32.const -1
                          i32.eq
                          if $_17
                            block $_18
                              get_local $1
                              i32.const 0
                              i32.store
                              br $__rjti$6
                            end ;; $_18
                          else
                            get_local $7
                            i32.eqz
                            br_if $__rjti$15
                          end ;; $_17
                          br $__rjto$6
                        end ;; $__rjti$6
                        get_local $7
                        br_if $__rjti$15
                        i32.const 0
                        set_local $4
                      end ;; $__rjto$6
                      block $label$break$L262
                        block $__rjti$7
                          block $switch-default
                            block $switch-case38
                              block $switch-case22
                                block $switch-case12
                                  block $switch-case11
                                    block $switch-case
                                      get_local $28
                                      get_local $20
                                      i32.add
                                      i32.load8_s
                                      br_table
                                        $switch-case11 $switch-case $switch-case22 $switch-case12 $switch-case38
                                        $switch-default ;; default
                                    end ;; $switch-case
                                    get_local $20
                                    i32.const 3
                                    i32.ne
                                    if $_19
                                      block $_20
                                        get_local $0
                                        i32.load
                                        tee_local $7
                                        i32.load offset=12
                                        tee_local $10
                                        get_local $7
                                        i32.load offset=16
                                        i32.eq
                                        if $_21 (result i32)
                                          get_local $7
                                          get_local $7
                                          i32.load
                                          i32.load offset=36
                                          i32.const 63
                                          i32.and
                                          i32.const 312
                                          i32.add
                                          call_indirect (type $FUNCSIG$ii)
                                        else
                                          get_local $10
                                          i32.load8_s
                                        end ;; $_21
                                        tee_local $7
                                        i32.const 255
                                        i32.and
                                        i32.const 24
                                        i32.shl
                                        i32.const 24
                                        i32.shr_s
                                        i32.const -1
                                        i32.le_s
                                        br_if $__rjti$9
                                        get_local $25
                                        i32.load
                                        get_local $7
                                        i32.const 24
                                        i32.shl
                                        i32.const 24
                                        i32.shr_s
                                        i32.const 1
                                        i32.shl
                                        i32.add
                                        i32.load16_s
                                        i32.const 8192
                                        i32.and
                                        i32.eqz
                                        br_if $__rjti$9
                                        get_local $18
                                        get_local $0
                                        i32.load
                                        tee_local $7
                                        i32.const 12
                                        i32.add
                                        tee_local $11
                                        i32.load
                                        tee_local $10
                                        get_local $7
                                        i32.load offset=16
                                        i32.eq
                                        if $_22 (result i32)
                                          get_local $7
                                          get_local $7
                                          i32.load
                                          i32.load offset=40
                                          i32.const 63
                                          i32.and
                                          i32.const 312
                                          i32.add
                                          call_indirect (type $FUNCSIG$ii)
                                        else
                                          block $_23 (result i32)
                                            get_local $11
                                            get_local $10
                                            i32.const 1
                                            i32.add
                                            i32.store
                                            get_local $10
                                            i32.load8_u
                                          end ;; $_23
                                        end ;; $_22
                                        tee_local $7
                                        i32.const 255
                                        i32.and
                                        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
                                        get_local $4
                                        set_local $7
                                        br $__rjti$7
                                      end ;; $_20
                                    end ;; $_19
                                    br $label$break$L262
                                  end ;; $switch-case11
                                  get_local $20
                                  i32.const 3
                                  i32.ne
                                  if $_24
                                    block $_25
                                      get_local $4
                                      set_local $7
                                      br $__rjti$7
                                    end ;; $_25
                                  end ;; $_24
                                  br $label$break$L262
                                end ;; $switch-case12
                                get_local $26
                                i32.load8_s
                                tee_local $4
                                i32.const 0
                                i32.lt_s
                                if $_26 (result i32)
                                  get_local $33
                                  i32.load
                                else
                                  get_local $4
                                  i32.const 255
                                  i32.and
                                end ;; $_26
                                tee_local $13
                                i32.const 0
                                get_local $27
                                i32.load8_s
                                tee_local $7
                                i32.const 0
                                i32.lt_s
                                if $_27 (result i32)
                                  get_local $34
                                  i32.load
                                else
                                  get_local $7
                                  i32.const 255
                                  i32.and
                                end ;; $_27
                                tee_local $19
                                i32.sub
                                i32.ne
                                if $_28
                                  block $_29
                                    get_local $0
                                    i32.load
                                    tee_local $7
                                    i32.load offset=12
                                    tee_local $10
                                    get_local $7
                                    i32.load offset=16
                                    tee_local $11
                                    i32.eq
                                    set_local $12
                                    get_local $13
                                    i32.eqz
                                    tee_local $13
                                    get_local $19
                                    i32.eqz
                                    i32.or
                                    if $_30
                                      block $_31
                                        get_local $12
                                        if $_32 (result i32)
                                          get_local $7
                                          get_local $7
                                          i32.load
                                          i32.load offset=36
                                          i32.const 63
                                          i32.and
                                          i32.const 312
                                          i32.add
                                          call_indirect (type $FUNCSIG$ii)
                                        else
                                          get_local $10
                                          i32.load8_u
                                        end ;; $_32
                                        tee_local $4
                                        i32.const 255
                                        i32.and
                                        set_local $4
                                        get_local $13
                                        if $_33
                                          block $_34
                                            get_local $4
                                            i32.const 255
                                            i32.and
                                            get_local $27
                                            i32.load8_s
                                            tee_local $4
                                            i32.const 0
                                            i32.lt_s
                                            if $_35 (result i32)
                                              get_local $17
                                              i32.load
                                            else
                                              get_local $17
                                            end ;; $_35
                                            i32.load8_u
                                            i32.ne
                                            br_if $label$break$L262
                                            get_local $0
                                            i32.load
                                            tee_local $7
                                            i32.const 12
                                            i32.add
                                            tee_local $10
                                            i32.load
                                            tee_local $11
                                            get_local $7
                                            i32.load offset=16
                                            i32.eq
                                            if $_36
                                              block $_37
                                                get_local $7
                                                get_local $7
                                                i32.load
                                                i32.load offset=40
                                                i32.const 63
                                                i32.and
                                                i32.const 312
                                                i32.add
                                                call_indirect (type $FUNCSIG$ii)
                                                drop
                                                get_local $27
                                                i32.load8_s
                                                set_local $4
                                              end ;; $_37
                                            else
                                              get_local $10
                                              get_local $11
                                              i32.const 1
                                              i32.add
                                              i32.store
                                            end ;; $_36
                                            get_local $6
                                            i32.const 1
                                            i32.store8
                                            get_local $4
                                            i32.const 24
                                            i32.shl
                                            i32.const 24
                                            i32.shr_s
                                            i32.const 0
                                            i32.lt_s
                                            if $_38 (result i32)
                                              get_local $34
                                              i32.load
                                            else
                                              get_local $4
                                              i32.const 255
                                              i32.and
                                            end ;; $_38
                                            i32.const 1
                                            i32.gt_u
                                            if $_39
                                              get_local $17
                                              set_local $3
                                            end ;; $_39
                                            br $label$break$L262
                                          end ;; $_34
                                        end ;; $_33
                                        get_local $4
                                        i32.const 255
                                        i32.and
                                        get_local $26
                                        i32.load8_s
                                        tee_local $4
                                        i32.const 0
                                        i32.lt_s
                                        if $_40 (result i32)
                                          get_local $16
                                          i32.load
                                        else
                                          get_local $16
                                        end ;; $_40
                                        i32.load8_u
                                        i32.ne
                                        if $_41
                                          block $_42
                                            get_local $6
                                            i32.const 1
                                            i32.store8
                                            br $label$break$L262
                                          end ;; $_42
                                        end ;; $_41
                                        get_local $0
                                        i32.load
                                        tee_local $7
                                        i32.const 12
                                        i32.add
                                        tee_local $10
                                        i32.load
                                        tee_local $11
                                        get_local $7
                                        i32.load offset=16
                                        i32.eq
                                        if $_43
                                          block $_44
                                            get_local $7
                                            get_local $7
                                            i32.load
                                            i32.load offset=40
                                            i32.const 63
                                            i32.and
                                            i32.const 312
                                            i32.add
                                            call_indirect (type $FUNCSIG$ii)
                                            drop
                                            get_local $26
                                            i32.load8_s
                                            set_local $4
                                          end ;; $_44
                                        else
                                          get_local $10
                                          get_local $11
                                          i32.const 1
                                          i32.add
                                          i32.store
                                        end ;; $_43
                                        get_local $4
                                        i32.const 24
                                        i32.shl
                                        i32.const 24
                                        i32.shr_s
                                        i32.const 0
                                        i32.lt_s
                                        if $_45 (result i32)
                                          get_local $33
                                          i32.load
                                        else
                                          get_local $4
                                          i32.const 255
                                          i32.and
                                        end ;; $_45
                                        i32.const 1
                                        i32.gt_u
                                        if $_46
                                          get_local $16
                                          set_local $3
                                        end ;; $_46
                                        br $label$break$L262
                                      end ;; $_31
                                    end ;; $_30
                                    get_local $12
                                    if $_47
                                      block $_48
                                        get_local $7
                                        get_local $7
                                        i32.load
                                        i32.load offset=36
                                        i32.const 63
                                        i32.and
                                        i32.const 312
                                        i32.add
                                        call_indirect (type $FUNCSIG$ii)
                                        set_local $12
                                        get_local $26
                                        i32.load8_s
                                        set_local $4
                                        get_local $0
                                        i32.load
                                        tee_local $11
                                        set_local $7
                                        get_local $11
                                        i32.load offset=12
                                        set_local $10
                                        get_local $11
                                        i32.load offset=16
                                        set_local $11
                                      end ;; $_48
                                    else
                                      get_local $10
                                      i32.load8_u
                                      set_local $12
                                    end ;; $_47
                                    get_local $7
                                    i32.const 12
                                    i32.add
                                    set_local $13
                                    get_local $10
                                    get_local $11
                                    i32.eq
                                    set_local $11
                                    get_local $12
                                    i32.const 255
                                    i32.and
                                    get_local $4
                                    i32.const 24
                                    i32.shl
                                    i32.const 24
                                    i32.shr_s
                                    i32.const 0
                                    i32.lt_s
                                    if $_49 (result i32)
                                      get_local $16
                                      i32.load
                                    else
                                      get_local $16
                                    end ;; $_49
                                    i32.load8_u
                                    i32.eq
                                    if $_50
                                      block $_51
                                        get_local $11
                                        if $_52
                                          block $_53
                                            get_local $7
                                            get_local $7
                                            i32.load
                                            i32.load offset=40
                                            i32.const 63
                                            i32.and
                                            i32.const 312
                                            i32.add
                                            call_indirect (type $FUNCSIG$ii)
                                            drop
                                            get_local $26
                                            i32.load8_s
                                            set_local $4
                                          end ;; $_53
                                        else
                                          get_local $13
                                          get_local $10
                                          i32.const 1
                                          i32.add
                                          i32.store
                                        end ;; $_52
                                        get_local $4
                                        i32.const 24
                                        i32.shl
                                        i32.const 24
                                        i32.shr_s
                                        i32.const 0
                                        i32.lt_s
                                        if $_54 (result i32)
                                          get_local $33
                                          i32.load
                                        else
                                          get_local $4
                                          i32.const 255
                                          i32.and
                                        end ;; $_54
                                        i32.const 1
                                        i32.gt_u
                                        if $_55
                                          get_local $16
                                          set_local $3
                                        end ;; $_55
                                        br $label$break$L262
                                      end ;; $_51
                                    end ;; $_50
                                    get_local $11
                                    if $_56 (result i32)
                                      get_local $7
                                      get_local $7
                                      i32.load
                                      i32.load offset=36
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                    else
                                      get_local $10
                                      i32.load8_u
                                    end ;; $_56
                                    tee_local $4
                                    i32.const 255
                                    i32.and
                                    get_local $27
                                    i32.load8_s
                                    tee_local $4
                                    i32.const 0
                                    i32.lt_s
                                    if $_57 (result i32)
                                      get_local $17
                                      i32.load
                                    else
                                      get_local $17
                                    end ;; $_57
                                    i32.load8_u
                                    i32.ne
                                    br_if $__rjti$10
                                    get_local $0
                                    i32.load
                                    tee_local $7
                                    i32.const 12
                                    i32.add
                                    tee_local $10
                                    i32.load
                                    tee_local $11
                                    get_local $7
                                    i32.load offset=16
                                    i32.eq
                                    if $_58
                                      block $_59
                                        get_local $7
                                        get_local $7
                                        i32.load
                                        i32.load offset=40
                                        i32.const 63
                                        i32.and
                                        i32.const 312
                                        i32.add
                                        call_indirect (type $FUNCSIG$ii)
                                        drop
                                        get_local $27
                                        i32.load8_s
                                        set_local $4
                                      end ;; $_59
                                    else
                                      get_local $10
                                      get_local $11
                                      i32.const 1
                                      i32.add
                                      i32.store
                                    end ;; $_58
                                    get_local $6
                                    i32.const 1
                                    i32.store8
                                    get_local $4
                                    i32.const 24
                                    i32.shl
                                    i32.const 24
                                    i32.shr_s
                                    i32.const 0
                                    i32.lt_s
                                    if $_60 (result i32)
                                      get_local $34
                                      i32.load
                                    else
                                      get_local $4
                                      i32.const 255
                                      i32.and
                                    end ;; $_60
                                    i32.const 1
                                    i32.gt_u
                                    if $_61
                                      get_local $17
                                      set_local $3
                                    end ;; $_61
                                  end ;; $_29
                                end ;; $_28
                                br $label$break$L262
                              end ;; $switch-case22
                              get_local $20
                              i32.const 2
                              i32.lt_u
                              get_local $3
                              i32.const 0
                              i32.ne
                              i32.or
                              i32.eqz
                              if $_62
                                get_local $40
                                get_local $20
                                i32.const 2
                                i32.eq
                                get_local $44
                                i32.load8_s
                                i32.const 0
                                i32.ne
                                i32.and
                                i32.or
                                i32.eqz
                                if $_63
                                  block $_64
                                    i32.const 0
                                    set_local $3
                                    br $label$break$L262
                                  end ;; $_64
                                end ;; $_63
                              end ;; $_62
                              get_local $15
                              i32.load
                              set_local $10
                              get_local $35
                              i32.load8_s
                              tee_local $11
                              i32.const 0
                              i32.lt_s
                              tee_local $7
                              if $_65 (result i32)
                                get_local $10
                              else
                                get_local $15
                              end ;; $_65
                              tee_local $13
                              set_local $12
                              block $label$break$L104
                                get_local $20
                                if $_66
                                  get_local $28
                                  get_local $20
                                  i32.const -1
                                  i32.add
                                  i32.add
                                  i32.load8_u
                                  i32.const 2
                                  i32.lt_s
                                  if $_67
                                    block $_68
                                      get_local $13
                                      get_local $7
                                      if $_69 (result i32)
                                        get_local $36
                                        i32.load
                                      else
                                        get_local $11
                                        i32.const 255
                                        i32.and
                                      end ;; $_69
                                      i32.add
                                      set_local $23
                                      get_local $12
                                      set_local $7
                                      loop $while-in15
                                        block $while-out14
                                          get_local $7
                                          tee_local $19
                                          get_local $23
                                          i32.eq
                                          if $_70
                                            block $_71
                                              get_local $7
                                              set_local $19
                                              br $while-out14
                                            end ;; $_71
                                          end ;; $_70
                                          get_local $19
                                          i32.load8_s
                                          tee_local $37
                                          i32.const -1
                                          i32.le_s
                                          if $_72
                                            block $_73
                                              get_local $7
                                              set_local $19
                                              br $while-out14
                                            end ;; $_73
                                          end ;; $_72
                                          get_local $25
                                          i32.load
                                          get_local $37
                                          i32.const 1
                                          i32.shl
                                          i32.add
                                          i32.load16_s
                                          i32.const 8192
                                          i32.and
                                          if $_74
                                            block $_75
                                              get_local $19
                                              i32.const 1
                                              i32.add
                                              set_local $7
                                              br $while-in15
                                            end ;; $_75
                                          else
                                            get_local $7
                                            set_local $19
                                          end ;; $_74
                                        end ;; $while-out14
                                      end ;; $while-in15
                                      get_local $19
                                      get_local $12
                                      i32.sub
                                      tee_local $7
                                      get_local $42
                                      i32.load8_s
                                      tee_local $23
                                      i32.const 0
                                      i32.lt_s
                                      tee_local $37
                                      if $_76 (result i32)
                                        get_local $43
                                        i32.load
                                      else
                                        get_local $23
                                        i32.const 255
                                        i32.and
                                      end ;; $_76
                                      tee_local $23
                                      i32.gt_u
                                      if $_77
                                        block $_78
                                          get_local $4
                                          set_local $7
                                          get_local $10
                                          set_local $13
                                          get_local $12
                                          set_local $10
                                        end ;; $_78
                                      else
                                        block $_79
                                          get_local $37
                                          if $_80 (result i32)
                                            get_local $18
                                            i32.load
                                          else
                                            get_local $18
                                          end ;; $_80
                                          get_local $23
                                          i32.add
                                          tee_local $23
                                          i32.const 0
                                          get_local $7
                                          i32.sub
                                          i32.add
                                          set_local $7
                                          loop $while-in17
                                            get_local $7
                                            get_local $23
                                            i32.eq
                                            if $_81
                                              block $_82
                                                get_local $4
                                                set_local $7
                                                get_local $10
                                                set_local $13
                                                get_local $19
                                                set_local $10
                                                br $label$break$L104
                                              end ;; $_82
                                            end ;; $_81
                                            get_local $7
                                            i32.load8_s
                                            get_local $13
                                            i32.load8_s
                                            i32.ne
                                            if $_83
                                              block $_84
                                                get_local $4
                                                set_local $7
                                                get_local $10
                                                set_local $13
                                                get_local $12
                                                set_local $10
                                                br $label$break$L104
                                              end ;; $_84
                                            else
                                              block $_85
                                                get_local $13
                                                i32.const 1
                                                i32.add
                                                set_local $13
                                                get_local $7
                                                i32.const 1
                                                i32.add
                                                set_local $7
                                                br $while-in17
                                              end ;; $_85
                                            end ;; $_83
                                          end ;; $while-in17
                                        end ;; $_79
                                      end ;; $_77
                                    end ;; $_68
                                  else
                                    block $_86
                                      get_local $4
                                      set_local $7
                                      get_local $10
                                      set_local $13
                                      get_local $12
                                      set_local $10
                                    end ;; $_86
                                  end ;; $_67
                                else
                                  block $_87
                                    get_local $4
                                    set_local $7
                                    get_local $10
                                    set_local $13
                                    get_local $12
                                    set_local $10
                                  end ;; $_87
                                end ;; $_66
                              end ;; $label$break$L104
                              loop $label$continue$L118
                                block $label$break$L118
                                  get_local $10
                                  get_local $11
                                  i32.const 24
                                  i32.shl
                                  i32.const 24
                                  i32.shr_s
                                  i32.const 0
                                  i32.lt_s
                                  tee_local $12
                                  if $_88 (result i32)
                                    get_local $13
                                  else
                                    get_local $15
                                  end ;; $_88
                                  get_local $12
                                  if $_89 (result i32)
                                    get_local $36
                                    i32.load
                                  else
                                    get_local $11
                                    i32.const 255
                                    i32.and
                                  end ;; $_89
                                  i32.add
                                  tee_local $11
                                  i32.eq
                                  if $_90
                                    block $_91
                                      get_local $11
                                      set_local $10
                                      br $label$break$L118
                                    end ;; $_91
                                  end ;; $_90
                                  get_local $0
                                  i32.load
                                  tee_local $11
                                  if $_92
                                    get_local $11
                                    i32.load offset=12
                                    get_local $11
                                    i32.load offset=16
                                    i32.eq
                                    if $_93
                                      get_local $11
                                      get_local $11
                                      i32.load
                                      i32.load offset=36
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                      i32.const -1
                                      i32.eq
                                      if $_94 (result i32)
                                        block $_95 (result i32)
                                          get_local $0
                                          i32.const 0
                                          i32.store
                                          i32.const 0
                                        end ;; $_95
                                      else
                                        get_local $0
                                        i32.load
                                      end ;; $_94
                                      set_local $11
                                    end ;; $_93
                                  else
                                    i32.const 0
                                    set_local $11
                                  end ;; $_92
                                  get_local $11
                                  i32.eqz
                                  set_local $11
                                  block $__rjto$0
                                    block $__rjti$0
                                      get_local $4
                                      i32.eqz
                                      br_if $__rjti$0
                                      get_local $4
                                      i32.load offset=12
                                      get_local $4
                                      i32.load offset=16
                                      i32.ne
                                      if $_96
                                        get_local $11
                                        if $_97
                                          block $_98
                                            get_local $7
                                            set_local $11
                                            br $__rjto$0
                                          end ;; $_98
                                        else
                                          br $label$break$L118
                                        end ;; $_97
                                      end ;; $_96
                                      get_local $4
                                      get_local $4
                                      i32.load
                                      i32.load offset=36
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                      i32.const -1
                                      i32.eq
                                      if $_99
                                        block $_100
                                          get_local $1
                                          i32.const 0
                                          i32.store
                                          i32.const 0
                                          set_local $7
                                          br $__rjti$0
                                        end ;; $_100
                                      else
                                        get_local $11
                                        get_local $7
                                        i32.eqz
                                        i32.xor
                                        if $_101
                                          block $_102
                                            get_local $7
                                            set_local $11
                                            get_local $7
                                            set_local $4
                                          end ;; $_102
                                        else
                                          br $label$break$L118
                                        end ;; $_101
                                      end ;; $_99
                                      br $__rjto$0
                                    end ;; $__rjti$0
                                    get_local $11
                                    br_if $label$break$L118
                                    get_local $7
                                    set_local $11
                                    i32.const 0
                                    set_local $4
                                  end ;; $__rjto$0
                                  get_local $0
                                  i32.load
                                  tee_local $7
                                  i32.load offset=12
                                  tee_local $12
                                  get_local $7
                                  i32.load offset=16
                                  i32.eq
                                  if $_103 (result i32)
                                    get_local $7
                                    get_local $7
                                    i32.load
                                    i32.load offset=36
                                    i32.const 63
                                    i32.and
                                    i32.const 312
                                    i32.add
                                    call_indirect (type $FUNCSIG$ii)
                                  else
                                    get_local $12
                                    i32.load8_u
                                  end ;; $_103
                                  tee_local $7
                                  i32.const 255
                                  i32.and
                                  get_local $10
                                  i32.load8_u
                                  i32.ne
                                  br_if $label$break$L118
                                  get_local $0
                                  i32.load
                                  tee_local $7
                                  i32.const 12
                                  i32.add
                                  tee_local $12
                                  i32.load
                                  tee_local $13
                                  get_local $7
                                  i32.load offset=16
                                  i32.eq
                                  if $_104
                                    get_local $7
                                    get_local $7
                                    i32.load
                                    i32.load offset=40
                                    i32.const 63
                                    i32.and
                                    i32.const 312
                                    i32.add
                                    call_indirect (type $FUNCSIG$ii)
                                    drop
                                  else
                                    get_local $12
                                    get_local $13
                                    i32.const 1
                                    i32.add
                                    i32.store
                                  end ;; $_104
                                  get_local $11
                                  set_local $7
                                  get_local $35
                                  i32.load8_s
                                  set_local $11
                                  get_local $15
                                  i32.load
                                  set_local $13
                                  get_local $10
                                  i32.const 1
                                  i32.add
                                  set_local $10
                                  br $label$continue$L118
                                end ;; $label$break$L118
                              end ;; $label$continue$L118
                              get_local $40
                              if $_105
                                get_local $10
                                get_local $35
                                i32.load8_s
                                tee_local $4
                                i32.const 0
                                i32.lt_s
                                tee_local $7
                                if $_106 (result i32)
                                  get_local $15
                                  i32.load
                                else
                                  get_local $15
                                end ;; $_106
                                get_local $7
                                if $_107 (result i32)
                                  get_local $36
                                  i32.load
                                else
                                  get_local $4
                                  i32.const 255
                                  i32.and
                                end ;; $_107
                                i32.add
                                i32.ne
                                br_if $__rjti$11
                              end ;; $_105
                              br $label$break$L262
                            end ;; $switch-case38
                            get_local $39
                            i32.load8_s
                            set_local $13
                            get_local $4
                            set_local $7
                            get_local $4
                            set_local $11
                            i32.const 0
                            set_local $4
                            loop $label$continue$L151
                              block $label$break$L151
                                get_local $0
                                i32.load
                                tee_local $10
                                if $_108
                                  get_local $10
                                  i32.load offset=12
                                  get_local $10
                                  i32.load offset=16
                                  i32.eq
                                  if $_109
                                    get_local $10
                                    get_local $10
                                    i32.load
                                    i32.load offset=36
                                    i32.const 63
                                    i32.and
                                    i32.const 312
                                    i32.add
                                    call_indirect (type $FUNCSIG$ii)
                                    i32.const -1
                                    i32.eq
                                    if $_110 (result i32)
                                      block $_111 (result i32)
                                        get_local $0
                                        i32.const 0
                                        i32.store
                                        i32.const 0
                                      end ;; $_111
                                    else
                                      get_local $0
                                      i32.load
                                    end ;; $_110
                                    set_local $10
                                  end ;; $_109
                                else
                                  i32.const 0
                                  set_local $10
                                end ;; $_108
                                get_local $10
                                i32.eqz
                                set_local $10
                                block $__rjto$1
                                  block $__rjti$1
                                    get_local $11
                                    i32.eqz
                                    br_if $__rjti$1
                                    get_local $11
                                    i32.load offset=12
                                    get_local $11
                                    i32.load offset=16
                                    i32.ne
                                    if $_112
                                      get_local $10
                                      if $_113
                                        block $_114
                                          get_local $7
                                          set_local $10
                                          br $__rjto$1
                                        end ;; $_114
                                      else
                                        br $label$break$L151
                                      end ;; $_113
                                    end ;; $_112
                                    get_local $11
                                    get_local $11
                                    i32.load
                                    i32.load offset=36
                                    i32.const 63
                                    i32.and
                                    i32.const 312
                                    i32.add
                                    call_indirect (type $FUNCSIG$ii)
                                    i32.const -1
                                    i32.eq
                                    if $_115
                                      block $_116
                                        get_local $1
                                        i32.const 0
                                        i32.store
                                        i32.const 0
                                        set_local $7
                                        br $__rjti$1
                                      end ;; $_116
                                    else
                                      get_local $10
                                      get_local $7
                                      i32.eqz
                                      i32.xor
                                      if $_117
                                        block $_118
                                          get_local $7
                                          set_local $10
                                          get_local $7
                                          set_local $11
                                        end ;; $_118
                                      else
                                        br $label$break$L151
                                      end ;; $_117
                                    end ;; $_115
                                    br $__rjto$1
                                  end ;; $__rjti$1
                                  get_local $10
                                  br_if $label$break$L151
                                  get_local $7
                                  set_local $10
                                  i32.const 0
                                  set_local $11
                                end ;; $__rjto$1
                                block $__rjto$2 (result i32)
                                  block $__rjti$2
                                    get_local $0
                                    i32.load
                                    tee_local $7
                                    i32.load offset=12
                                    tee_local $12
                                    get_local $7
                                    i32.load offset=16
                                    i32.eq
                                    if $_119 (result i32)
                                      get_local $7
                                      get_local $7
                                      i32.load
                                      i32.load offset=36
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                    else
                                      get_local $12
                                      i32.load8_s
                                    end ;; $_119
                                    tee_local $7
                                    i32.const 255
                                    i32.and
                                    tee_local $12
                                    i32.const 24
                                    i32.shl
                                    i32.const 24
                                    i32.shr_s
                                    i32.const -1
                                    i32.le_s
                                    br_if $__rjti$2
                                    get_local $25
                                    i32.load
                                    get_local $7
                                    i32.const 24
                                    i32.shl
                                    i32.const 24
                                    i32.shr_s
                                    i32.const 1
                                    i32.shl
                                    i32.add
                                    i32.load16_s
                                    i32.const 2048
                                    i32.and
                                    i32.eqz
                                    br_if $__rjti$2
                                    get_local $9
                                    i32.load
                                    tee_local $7
                                    get_local $29
                                    i32.load
                                    i32.eq
                                    if $_120
                                      block $_121
                                        get_local $8
                                        get_local $9
                                        get_local $29
                                        call $__ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                                        get_local $9
                                        i32.load
                                        set_local $7
                                      end ;; $_121
                                    end ;; $_120
                                    get_local $9
                                    get_local $7
                                    i32.const 1
                                    i32.add
                                    i32.store
                                    get_local $7
                                    get_local $12
                                    i32.store8
                                    get_local $4
                                    i32.const 1
                                    i32.add
                                    br $__rjto$2
                                  end ;; $__rjti$2
                                  get_local $45
                                  i32.load8_s
                                  set_local $7
                                  get_local $12
                                  i32.const 24
                                  i32.shl
                                  i32.const 24
                                  i32.shr_s
                                  get_local $13
                                  i32.eq
                                  get_local $4
                                  if $_122 (result i32)
                                    get_local $7
                                    i32.const 0
                                    i32.lt_s
                                    if $_123 (result i32)
                                      get_local $46
                                      i32.load
                                    else
                                      get_local $7
                                      i32.const 255
                                      i32.and
                                    end ;; $_123
                                    i32.const 0
                                    i32.ne
                                  else
                                    i32.const 0
                                  end ;; $_122
                                  i32.and
                                  i32.eqz
                                  if $_124
                                    block $_125
                                      get_local $10
                                      set_local $7
                                      br $label$break$L151
                                    end ;; $_125
                                  end ;; $_124
                                  get_local $2
                                  get_local $30
                                  i32.load
                                  i32.eq
                                  if $_126
                                    block $_127
                                      get_local $22
                                      get_local $24
                                      get_local $30
                                      call $__ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                                      get_local $24
                                      i32.load
                                      set_local $2
                                    end ;; $_127
                                  end ;; $_126
                                  get_local $24
                                  get_local $2
                                  i32.const 4
                                  i32.add
                                  tee_local $7
                                  i32.store
                                  get_local $2
                                  get_local $4
                                  i32.store
                                  get_local $7
                                  set_local $2
                                  i32.const 0
                                end ;; $__rjto$2
                                set_local $4
                                get_local $0
                                i32.load
                                tee_local $7
                                i32.const 12
                                i32.add
                                tee_local $12
                                i32.load
                                tee_local $19
                                get_local $7
                                i32.load offset=16
                                i32.eq
                                if $_128
                                  block $_129
                                    get_local $7
                                    get_local $7
                                    i32.load
                                    i32.load offset=40
                                    i32.const 63
                                    i32.and
                                    i32.const 312
                                    i32.add
                                    call_indirect (type $FUNCSIG$ii)
                                    drop
                                    get_local $10
                                    set_local $7
                                    br $label$continue$L151
                                  end ;; $_129
                                else
                                  block $_130
                                    get_local $12
                                    get_local $19
                                    i32.const 1
                                    i32.add
                                    i32.store
                                    get_local $10
                                    set_local $7
                                    br $label$continue$L151
                                  end ;; $_130
                                end ;; $_128
                              end ;; $label$break$L151
                            end ;; $label$continue$L151
                            get_local $4
                            if $_131 (result i32)
                              get_local $22
                              i32.load
                              get_local $2
                              i32.ne
                            else
                              i32.const 0
                            end ;; $_131
                            if $_132
                              block $_133
                                get_local $2
                                get_local $30
                                i32.load
                                i32.eq
                                if $_134
                                  block $_135
                                    get_local $22
                                    get_local $24
                                    get_local $30
                                    call $__ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                                    get_local $24
                                    i32.load
                                    set_local $2
                                  end ;; $_135
                                end ;; $_134
                                get_local $24
                                get_local $2
                                i32.const 4
                                i32.add
                                tee_local $11
                                i32.store
                                get_local $2
                                get_local $4
                                i32.store
                              end ;; $_133
                            else
                              get_local $2
                              set_local $11
                            end ;; $_132
                            block $label$break$L198
                              get_local $31
                              i32.load
                              tee_local $10
                              i32.const 0
                              i32.gt_s
                              if $_136
                                block $_137
                                  get_local $0
                                  i32.load
                                  tee_local $2
                                  if $_138
                                    get_local $2
                                    i32.load offset=12
                                    get_local $2
                                    i32.load offset=16
                                    i32.eq
                                    if $_139
                                      get_local $2
                                      get_local $2
                                      i32.load
                                      i32.load offset=36
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                      i32.const -1
                                      i32.eq
                                      if $_140 (result i32)
                                        block $_141 (result i32)
                                          get_local $0
                                          i32.const 0
                                          i32.store
                                          i32.const 0
                                        end ;; $_141
                                      else
                                        get_local $0
                                        i32.load
                                      end ;; $_140
                                      set_local $2
                                    end ;; $_139
                                  else
                                    i32.const 0
                                    set_local $2
                                  end ;; $_138
                                  get_local $2
                                  i32.eqz
                                  set_local $2
                                  block $__rjto$4 (result i32)
                                    block $__rjti$4
                                      get_local $7
                                      i32.eqz
                                      br_if $__rjti$4
                                      get_local $7
                                      i32.load offset=12
                                      get_local $7
                                      i32.load offset=16
                                      i32.eq
                                      if $_142
                                        get_local $7
                                        get_local $7
                                        i32.load
                                        i32.load offset=36
                                        i32.const 63
                                        i32.and
                                        i32.const 312
                                        i32.add
                                        call_indirect (type $FUNCSIG$ii)
                                        i32.const -1
                                        i32.eq
                                        if $_143
                                          block $_144
                                            get_local $1
                                            i32.const 0
                                            i32.store
                                            br $__rjti$4
                                          end ;; $_144
                                        end ;; $_143
                                      end ;; $_142
                                      get_local $2
                                      i32.eqz
                                      br_if $__rjti$12
                                      get_local $7
                                      br $__rjto$4
                                    end ;; $__rjti$4
                                    get_local $2
                                    br_if $__rjti$12
                                    i32.const 0
                                  end ;; $__rjto$4
                                  set_local $4
                                  get_local $0
                                  i32.load
                                  tee_local $2
                                  i32.load offset=12
                                  tee_local $7
                                  get_local $2
                                  i32.load offset=16
                                  i32.eq
                                  if $_145 (result i32)
                                    get_local $2
                                    get_local $2
                                    i32.load
                                    i32.load offset=36
                                    i32.const 63
                                    i32.and
                                    i32.const 312
                                    i32.add
                                    call_indirect (type $FUNCSIG$ii)
                                  else
                                    get_local $7
                                    i32.load8_u
                                  end ;; $_145
                                  tee_local $2
                                  i32.const 255
                                  i32.and
                                  get_local $38
                                  i32.load8_u
                                  i32.ne
                                  br_if $__rjti$12
                                  get_local $0
                                  i32.load
                                  tee_local $2
                                  i32.const 12
                                  i32.add
                                  tee_local $7
                                  i32.load
                                  tee_local $12
                                  get_local $2
                                  i32.load offset=16
                                  i32.eq
                                  if $_146 (result i32)
                                    block $_147 (result i32)
                                      get_local $2
                                      get_local $2
                                      i32.load
                                      i32.load offset=40
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                      drop
                                      get_local $4
                                    end ;; $_147
                                  else
                                    block $_148 (result i32)
                                      get_local $7
                                      get_local $12
                                      i32.const 1
                                      i32.add
                                      i32.store
                                      get_local $4
                                    end ;; $_148
                                  end ;; $_146
                                  set_local $2
                                  loop $while-in33
                                    get_local $10
                                    i32.const 0
                                    i32.le_s
                                    br_if $label$break$L198
                                    get_local $0
                                    i32.load
                                    tee_local $7
                                    if $_149
                                      get_local $7
                                      i32.load offset=12
                                      get_local $7
                                      i32.load offset=16
                                      i32.eq
                                      if $_150
                                        get_local $7
                                        get_local $7
                                        i32.load
                                        i32.load offset=36
                                        i32.const 63
                                        i32.and
                                        i32.const 312
                                        i32.add
                                        call_indirect (type $FUNCSIG$ii)
                                        i32.const -1
                                        i32.eq
                                        if $_151 (result i32)
                                          block $_152 (result i32)
                                            get_local $0
                                            i32.const 0
                                            i32.store
                                            i32.const 0
                                          end ;; $_152
                                        else
                                          get_local $0
                                          i32.load
                                        end ;; $_151
                                        set_local $7
                                      end ;; $_150
                                    else
                                      i32.const 0
                                      set_local $7
                                    end ;; $_149
                                    get_local $7
                                    i32.eqz
                                    set_local $7
                                    block $__rjto$3
                                      block $__rjti$3
                                        get_local $4
                                        i32.eqz
                                        br_if $__rjti$3
                                        get_local $4
                                        i32.load offset=12
                                        get_local $4
                                        i32.load offset=16
                                        i32.ne
                                        if $_153
                                          get_local $7
                                          if $_154
                                            block $_155
                                              get_local $2
                                              set_local $7
                                              br $__rjto$3
                                            end ;; $_155
                                          else
                                            br $__rjti$13
                                          end ;; $_154
                                        end ;; $_153
                                        get_local $4
                                        get_local $4
                                        i32.load
                                        i32.load offset=36
                                        i32.const 63
                                        i32.and
                                        i32.const 312
                                        i32.add
                                        call_indirect (type $FUNCSIG$ii)
                                        i32.const -1
                                        i32.eq
                                        if $_156
                                          block $_157
                                            get_local $1
                                            i32.const 0
                                            i32.store
                                            i32.const 0
                                            set_local $2
                                            br $__rjti$3
                                          end ;; $_157
                                        else
                                          get_local $7
                                          get_local $2
                                          i32.eqz
                                          i32.xor
                                          if $_158
                                            block $_159
                                              get_local $2
                                              set_local $7
                                              get_local $2
                                              set_local $4
                                            end ;; $_159
                                          else
                                            br $__rjti$13
                                          end ;; $_158
                                        end ;; $_156
                                        br $__rjto$3
                                      end ;; $__rjti$3
                                      get_local $7
                                      br_if $__rjti$13
                                      get_local $2
                                      set_local $7
                                      i32.const 0
                                      set_local $4
                                    end ;; $__rjto$3
                                    get_local $0
                                    i32.load
                                    tee_local $2
                                    i32.load offset=12
                                    tee_local $12
                                    get_local $2
                                    i32.load offset=16
                                    i32.eq
                                    if $_160 (result i32)
                                      get_local $2
                                      get_local $2
                                      i32.load
                                      i32.load offset=36
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                    else
                                      get_local $12
                                      i32.load8_s
                                    end ;; $_160
                                    tee_local $2
                                    i32.const 255
                                    i32.and
                                    i32.const 24
                                    i32.shl
                                    i32.const 24
                                    i32.shr_s
                                    i32.const -1
                                    i32.le_s
                                    br_if $__rjti$13
                                    get_local $25
                                    i32.load
                                    get_local $2
                                    i32.const 24
                                    i32.shl
                                    i32.const 24
                                    i32.shr_s
                                    i32.const 1
                                    i32.shl
                                    i32.add
                                    i32.load16_s
                                    i32.const 2048
                                    i32.and
                                    i32.eqz
                                    br_if $__rjti$13
                                    get_local $9
                                    i32.load
                                    get_local $29
                                    i32.load
                                    i32.eq
                                    if $_161
                                      get_local $8
                                      get_local $9
                                      get_local $29
                                      call $__ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_
                                    end ;; $_161
                                    get_local $0
                                    i32.load
                                    tee_local $2
                                    i32.load offset=12
                                    tee_local $12
                                    get_local $2
                                    i32.load offset=16
                                    i32.eq
                                    if $_162 (result i32)
                                      get_local $2
                                      get_local $2
                                      i32.load
                                      i32.load offset=36
                                      i32.const 63
                                      i32.and
                                      i32.const 312
                                      i32.add
                                      call_indirect (type $FUNCSIG$ii)
                                    else
                                      get_local $12
                                      i32.load8_u
                                    end ;; $_162
                                    set_local $2
                                    get_local $9
                                    get_local $9
                                    i32.load
                                    tee_local $12
                                    i32.const 1
                                    i32.add
                                    i32.store
                                    get_local $12
                                    get_local $2
                                    i32.store8
                                    get_local $31
                                    get_local $10
                                    i32.const -1
                                    i32.add
                                    tee_local $10
                                    i32.store
                                    get_local $0
                                    i32.load
                                    tee_local $2
                                    i32.const 12
                                    i32.add
                                    tee_local $12
                                    i32.load
                                    tee_local $13
                                    get_local $2
                                    i32.load offset=16
                                    i32.eq
                                    if $_163
                                      block $_164
                                        get_local $2
                                        get_local $2
                                        i32.load
                                        i32.load offset=40
                                        i32.const 63
                                        i32.and
                                        i32.const 312
                                        i32.add
                                        call_indirect (type $FUNCSIG$ii)
                                        drop
                                        get_local $7
                                        set_local $2
                                        br $while-in33
                                      end ;; $_164
                                    else
                                      block $_165
                                        get_local $12
                                        get_local $13
                                        i32.const 1
                                        i32.add
                                        i32.store
                                        get_local $7
                                        set_local $2
                                        br $while-in33
                                      end ;; $_165
                                    end ;; $_163
                                  end ;; $while-in33
                                end ;; $_137
                              end ;; $_136
                            end ;; $label$break$L198
                            get_local $9
                            i32.load
                            get_local $8
                            i32.load
                            i32.eq
                            br_if $__rjti$14
                            get_local $11
                            set_local $2
                            br $label$break$L262
                          end ;; $switch-default
                          br $label$break$L262
                        end ;; $__rjti$7
                        loop $while-in41
                          get_local $0
                          i32.load
                          tee_local $10
                          if $_166
                            get_local $10
                            i32.load offset=12
                            get_local $10
                            i32.load offset=16
                            i32.eq
                            if $_167
                              get_local $10
                              get_local $10
                              i32.load
                              i32.load offset=36
                              i32.const 63
                              i32.and
                              i32.const 312
                              i32.add
                              call_indirect (type $FUNCSIG$ii)
                              i32.const -1
                              i32.eq
                              if $_168 (result i32)
                                block $_169 (result i32)
                                  get_local $0
                                  i32.const 0
                                  i32.store
                                  i32.const 0
                                end ;; $_169
                              else
                                get_local $0
                                i32.load
                              end ;; $_168
                              set_local $10
                            end ;; $_167
                          else
                            i32.const 0
                            set_local $10
                          end ;; $_166
                          get_local $10
                          i32.eqz
                          set_local $10
                          block $__rjto$5
                            block $__rjti$5
                              get_local $4
                              i32.eqz
                              br_if $__rjti$5
                              get_local $4
                              i32.load offset=12
                              get_local $4
                              i32.load offset=16
                              i32.ne
                              if $_170
                                get_local $10
                                if $_171
                                  block $_172
                                    get_local $7
                                    set_local $10
                                    br $__rjto$5
                                  end ;; $_172
                                else
                                  br $label$break$L262
                                end ;; $_171
                              end ;; $_170
                              get_local $4
                              get_local $4
                              i32.load
                              i32.load offset=36
                              i32.const 63
                              i32.and
                              i32.const 312
                              i32.add
                              call_indirect (type $FUNCSIG$ii)
                              i32.const -1
                              i32.eq
                              if $_173
                                block $_174
                                  get_local $1
                                  i32.const 0
                                  i32.store
                                  i32.const 0
                                  set_local $7
                                  br $__rjti$5
                                end ;; $_174
                              else
                                get_local $10
                                get_local $7
                                i32.eqz
                                i32.xor
                                if $_175
                                  block $_176
                                    get_local $7
                                    set_local $10
                                    get_local $7
                                    set_local $4
                                  end ;; $_176
                                else
                                  br $label$break$L262
                                end ;; $_175
                              end ;; $_173
                              br $__rjto$5
                            end ;; $__rjti$5
                            get_local $10
                            br_if $label$break$L262
                            get_local $7
                            set_local $10
                            i32.const 0
                            set_local $4
                          end ;; $__rjto$5
                          get_local $0
                          i32.load
                          tee_local $7
                          i32.load offset=12
                          tee_local $11
                          get_local $7
                          i32.load offset=16
                          i32.eq
                          if $_177 (result i32)
                            get_local $7
                            get_local $7
                            i32.load
                            i32.load offset=36
                            i32.const 63
                            i32.and
                            i32.const 312
                            i32.add
                            call_indirect (type $FUNCSIG$ii)
                          else
                            get_local $11
                            i32.load8_s
                          end ;; $_177
                          tee_local $7
                          i32.const 255
                          i32.and
                          i32.const 24
                          i32.shl
                          i32.const 24
                          i32.shr_s
                          i32.const -1
                          i32.le_s
                          br_if $label$break$L262
                          get_local $25
                          i32.load
                          get_local $7
                          i32.const 24
                          i32.shl
                          i32.const 24
                          i32.shr_s
                          i32.const 1
                          i32.shl
                          i32.add
                          i32.load16_s
                          i32.const 8192
                          i32.and
                          i32.eqz
                          br_if $label$break$L262
                          get_local $18
                          get_local $0
                          i32.load
                          tee_local $7
                          i32.const 12
                          i32.add
                          tee_local $12
                          i32.load
                          tee_local $11
                          get_local $7
                          i32.load offset=16
                          i32.eq
                          if $_178 (result i32)
                            get_local $7
                            get_local $7
                            i32.load
                            i32.load offset=40
                            i32.const 63
                            i32.and
                            i32.const 312
                            i32.add
                            call_indirect (type $FUNCSIG$ii)
                          else
                            block $_179 (result i32)
                              get_local $12
                              get_local $11
                              i32.const 1
                              i32.add
                              i32.store
                              get_local $11
                              i32.load8_u
                            end ;; $_179
                          end ;; $_178
                          tee_local $7
                          i32.const 255
                          i32.and
                          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
                          get_local $10
                          set_local $7
                          br $while-in41
                        end ;; $while-in41
                      end ;; $label$break$L262
                      get_local $20
                      i32.const 1
                      i32.add
                      set_local $20
                      br $label$continue$L21
                    end ;; $label$continue$L21
                  end ;; $__rjti$9
                  get_local $5
                  get_local $5
                  i32.load
                  i32.const 4
                  i32.or
                  i32.store
                  i32.const 0
                  br $label$break$L294
                end ;; $__rjti$10
                get_local $5
                get_local $5
                i32.load
                i32.const 4
                i32.or
                i32.store
                i32.const 0
                br $label$break$L294
              end ;; $__rjti$11
              get_local $5
              get_local $5
              i32.load
              i32.const 4
              i32.or
              i32.store
              i32.const 0
              br $label$break$L294
            end ;; $__rjti$12
            get_local $5
            get_local $5
            i32.load
            i32.const 4
            i32.or
            i32.store
            i32.const 0
            br $label$break$L294
          end ;; $__rjti$13
          get_local $5
          get_local $5
          i32.load
          i32.const 4
          i32.or
          i32.store
          i32.const 0
          br $label$break$L294
        end ;; $__rjti$14
        get_local $5
        get_local $5
        i32.load
        i32.const 4
        i32.or
        i32.store
        i32.const 0
        br $label$break$L294
      end ;; $__rjti$15
      block $label$break$L296
        get_local $3
        if $_180
          block $_181
            get_local $3
            i32.const 11
            i32.add
            set_local $7
            get_local $3
            i32.const 4
            i32.add
            set_local $9
            i32.const 1
            set_local $4
            loop $label$continue$L298
              block $label$break$L298
                get_local $4
                get_local $7
                i32.load8_s
                tee_local $6
                i32.const 0
                i32.lt_s
                if $_182 (result i32)
                  get_local $9
                  i32.load
                else
                  get_local $6
                  i32.const 255
                  i32.and
                end ;; $_182
                tee_local $6
                i32.ge_u
                br_if $label$break$L296
                get_local $0
                i32.load
                tee_local $6
                if $_183
                  get_local $6
                  i32.load offset=12
                  get_local $6
                  i32.load offset=16
                  i32.eq
                  if $_184
                    get_local $6
                    get_local $6
                    i32.load
                    i32.load offset=36
                    i32.const 63
                    i32.and
                    i32.const 312
                    i32.add
                    call_indirect (type $FUNCSIG$ii)
                    i32.const -1
                    i32.eq
                    if $_185 (result i32)
                      block $_186 (result i32)
                        get_local $0
                        i32.const 0
                        i32.store
                        i32.const 0
                      end ;; $_186
                    else
                      get_local $0
                      i32.load
                    end ;; $_185
                    set_local $6
                  end ;; $_184
                else
                  i32.const 0
                  set_local $6
                end ;; $_183
                get_local $6
                i32.eqz
                set_local $8
                block $__rjto$8
                  block $__rjti$8
                    get_local $1
                    i32.load
                    tee_local $6
                    i32.eqz
                    br_if $__rjti$8
                    get_local $6
                    i32.load offset=12
                    get_local $6
                    i32.load offset=16
                    i32.eq
                    if $if
                      get_local $6
                      get_local $6
                      i32.load
                      i32.load offset=36
                      i32.const 63
                      i32.and
                      i32.const 312
                      i32.add
                      call_indirect (type $FUNCSIG$ii)
                      i32.const -1
                      i32.eq
                      if $if_1
                        block $block
                          get_local $1
                          i32.const 0
                          i32.store
                          br $__rjti$8
                        end ;; $block
                      end ;; $if_1
                    end ;; $if
                    get_local $8
                    i32.eqz
                    br_if $label$break$L298
                    br $__rjto$8
                  end ;; $__rjti$8
                  get_local $8
                  br_if $label$break$L298
                end ;; $__rjto$8
                get_local $0
                i32.load
                tee_local $6
                i32.load offset=12
                tee_local $8
                get_local $6
                i32.load offset=16
                i32.eq
                if $if_2 (result i32)
                  get_local $6
                  get_local $6
                  i32.load
                  i32.load offset=36
                  i32.const 63
                  i32.and
                  i32.const 312
                  i32.add
                  call_indirect (type $FUNCSIG$ii)
                else
                  get_local $8
                  i32.load8_u
                end ;; $if_2
                tee_local $8
                i32.const 255
                i32.and
                get_local $7
                i32.load8_s
                i32.const 0
                i32.lt_s
                if $if_3 (result i32)
                  get_local $3
                  i32.load
                else
                  get_local $3
                end ;; $if_3
                tee_local $6
                get_local $4
                i32.add
                i32.load8_u
                i32.ne
                br_if $label$break$L298
                get_local $4
                i32.const 1
                i32.add
                set_local $4
                get_local $0
                i32.load
                tee_local $6
                i32.const 12
                i32.add
                tee_local $8
                i32.load
                tee_local $10
                get_local $6
                i32.load offset=16
                i32.eq
                if $if_4
                  block $block_1
                    get_local $6
                    get_local $6
                    i32.load
                    i32.load offset=40
                    i32.const 63
                    i32.and
                    i32.const 312
                    i32.add
                    call_indirect (type $FUNCSIG$ii)
                    drop
                    br $label$continue$L298
                  end ;; $block_1
                else
                  block $block_2
                    get_local $8
                    get_local $10
                    i32.const 1
                    i32.add
                    i32.store
                    br $label$continue$L298
                  end ;; $block_2
                end ;; $if_4
              end ;; $label$break$L298
            end ;; $label$continue$L298
            get_local $5
            get_local $5
            i32.load
            i32.const 4
            i32.or
            i32.store
            i32.const 0
            br $label$break$L294
          end ;; $_181
        end ;; $_180
      end ;; $label$break$L296
      get_local $22
      i32.load
      tee_local $0
      get_local $2
      i32.eq
      if $if_5 (result i32)
        i32.const 1
      else
        block $block_3 (result i32)
          get_local $32
          i32.const 0
          i32.store
          get_local $21
          get_local $0
          get_local $2
          get_local $32
          call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
          get_local $32
          i32.load
          if $if_6 (result i32)
            block $block_4 (result i32)
              get_local $5
              get_local $5
              i32.load
              i32.const 4
              i32.or
              i32.store
              i32.const 0
            end ;; $block_4
          else
            i32.const 1
          end ;; $if_6
        end ;; $block_3
      end ;; $if_5
    end ;; $label$break$L294
    set_local $0
    get_local $18
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $17
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $16
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $15
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $21
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $22
    i32.load
    set_local $1
    get_local $22
    i32.const 0
    i32.store
    get_local $1
    if $if_7
      get_local $1
      get_local $41
      i32.load
      i32.const 127
      i32.and
      i32.const 48
      i32.add
      call_indirect (type $FUNCSIG$vi)
    end ;; $if_7
    get_local $14
    set_global $STACKTOP
    get_local $0
    )
  
  (func $_vfscanf (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    (local $25 f64)
    (local $26 i32)
    (local $27 i32)
    (local $28 i32)
    (local $29 i32)
    (local $30 i32)
    (local $31 i32)
    (local $32 i32)
    get_global $STACKTOP
    set_local $17
    get_global $STACKTOP
    i32.const 304
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.load offset=76
    i32.const -1
    i32.gt_s
    if $_1 (result i32)
      get_local $0
      call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
    else
      i32.const 0
    end ;; $_1
    set_local $28
    get_local $17
    i32.const 16
    i32.add
    set_local $23
    get_local $17
    i32.const 8
    i32.add
    set_local $22
    get_local $17
    i32.const 33
    i32.add
    set_local $11
    get_local $17
    set_local $26
    get_local $17
    i32.const 32
    i32.add
    set_local $27
    block $label$break$L4
      get_local $1
      i32.load8_s
      tee_local $5
      if $_2
        block $_3
          get_local $0
          i32.const 4
          i32.add
          set_local $8
          get_local $0
          i32.const 100
          i32.add
          set_local $13
          get_local $0
          i32.const 108
          i32.add
          set_local $18
          get_local $0
          i32.const 8
          i32.add
          set_local $19
          get_local $11
          i32.const 10
          i32.add
          set_local $20
          get_local $11
          i32.const 33
          i32.add
          set_local $29
          get_local $22
          i32.const 4
          i32.add
          set_local $30
          get_local $11
          i32.const 46
          i32.add
          set_local $31
          get_local $11
          i32.const 94
          i32.add
          set_local $32
          i32.const 0
          set_local $15
          i32.const 0
          set_local $4
          i32.const 0
          set_local $6
          i32.const 0
          set_local $10
          block $__rjto$3
            block $__rjti$3
              block $__rjti$2
                block $__rjti$1
                  loop $label$continue$L6
                    block $label$break$L6
                      block $label$break$L8
                        get_local $5
                        i32.const 255
                        i32.and
                        call $_isspace
                        if $_4 (result i32)
                          block $_5 (result i32)
                            loop $while-in117
                              get_local $1
                              i32.const 1
                              i32.add
                              tee_local $5
                              i32.load8_u
                              call $_isspace
                              if $_6
                                block $_7
                                  get_local $5
                                  set_local $1
                                  br $while-in117
                                end ;; $_7
                              end ;; $_6
                            end ;; $while-in117
                            get_local $0
                            i32.const 0
                            call $___shlim
                            loop $do-in119
                              get_local $8
                              i32.load
                              tee_local $5
                              get_local $13
                              i32.load
                              i32.lt_u
                              if $_8 (result i32)
                                block $_9 (result i32)
                                  get_local $8
                                  get_local $5
                                  i32.const 1
                                  i32.add
                                  i32.store
                                  get_local $5
                                  i32.load8_u
                                end ;; $_9
                              else
                                get_local $0
                                call $___shgetc
                              end ;; $_8
                              tee_local $5
                              call $_isspace
                              br_if $do-in119
                            end ;; $do-in119
                            get_local $13
                            i32.load
                            if $_10
                              get_local $8
                              get_local $8
                              i32.load
                              i32.const -1
                              i32.add
                              tee_local $5
                              i32.store
                            else
                              get_local $8
                              i32.load
                              set_local $5
                            end ;; $_10
                            get_local $18
                            i32.load
                            get_local $4
                            i32.add
                            get_local $5
                            i32.add
                            get_local $19
                            i32.load
                            i32.sub
                          end ;; $_5
                        else
                          block $_11 (result i32)
                            block $label$break$L10
                              get_local $1
                              i32.load8_s
                              i32.const 37
                              i32.eq
                              tee_local $7
                              if $_12
                                block $_13
                                  block $_14 (result i32)
                                    block $label$break$L12
                                      block $switch-default
                                        block $switch-case3
                                          get_local $1
                                          i32.const 1
                                          i32.add
                                          tee_local $5
                                          i32.load8_s
                                          tee_local $12
                                          i32.const 37
                                          i32.sub
                                          br_table
                                            $switch-case3 $label$break$L12 $label$break$L12 $label$break$L12 $label$break$L12 $switch-default
                                            $label$break$L12 ;; default
                                        end ;; $switch-case3
                                        br $label$break$L10
                                      end ;; $switch-default
                                      i32.const 0
                                      set_local $7
                                      get_local $1
                                      i32.const 2
                                      i32.add
                                      br $_14
                                    end ;; $label$break$L12
                                    get_local $12
                                    i32.const 255
                                    i32.and
                                    i32.const -48
                                    i32.add
                                    tee_local $7
                                    i32.const 10
                                    i32.lt_u
                                    if $switch-case
                                      get_local $1
                                      i32.load8_s offset=2
                                      i32.const 36
                                      i32.eq
                                      if $_15
                                        block $_16
                                          get_local $23
                                          get_local $2
                                          i32.load
                                          i32.store
                                          get_local $7
                                          set_local $5
                                          loop $_17
                                            get_local $23
                                            i32.load
                                            i32.const 3
                                            i32.add
                                            i32.const -4
                                            i32.and
                                            tee_local $12
                                            i32.load
                                            set_local $7
                                            get_local $23
                                            get_local $12
                                            i32.const 4
                                            i32.add
                                            i32.store
                                            get_local $5
                                            i32.const 1
                                            i32.gt_u
                                            if $while-in
                                              block $_18
                                                get_local $5
                                                i32.const -1
                                                i32.add
                                                set_local $5
                                                br $_17
                                              end ;; $_18
                                            end ;; $while-in
                                          end ;; $_17
                                          get_local $1
                                          i32.const 3
                                          i32.add
                                          br $_14
                                        end ;; $_16
                                      end ;; $_15
                                    end ;; $switch-case
                                    get_local $2
                                    i32.load
                                    i32.const 3
                                    i32.add
                                    i32.const -4
                                    i32.and
                                    tee_local $1
                                    i32.load
                                    set_local $7
                                    get_local $2
                                    get_local $1
                                    i32.const 4
                                    i32.add
                                    i32.store
                                    get_local $5
                                  end ;; $_14
                                  tee_local $1
                                  i32.load8_s
                                  tee_local $5
                                  i32.const 255
                                  i32.and
                                  tee_local $12
                                  i32.const -48
                                  i32.add
                                  i32.const 10
                                  i32.lt_u
                                  if $_19
                                    block $_20
                                      get_local $12
                                      set_local $5
                                      i32.const 0
                                      set_local $12
                                      loop $while-in5
                                        get_local $12
                                        i32.const 10
                                        i32.mul
                                        i32.const -48
                                        i32.add
                                        get_local $5
                                        i32.add
                                        set_local $12
                                        get_local $1
                                        i32.const 1
                                        i32.add
                                        tee_local $1
                                        i32.load8_s
                                        tee_local $3
                                        i32.const 255
                                        i32.and
                                        tee_local $5
                                        i32.const -48
                                        i32.add
                                        i32.const 10
                                        i32.lt_u
                                        br_if $while-in5
                                        get_local $3
                                        set_local $5
                                      end ;; $while-in5
                                    end ;; $_20
                                  else
                                    i32.const 0
                                    set_local $12
                                  end ;; $_19
                                  get_local $5
                                  i32.const 255
                                  i32.and
                                  i32.const 109
                                  i32.eq
                                  if $_21 (result i32)
                                    block $_22 (result i32)
                                      get_local $1
                                      i32.const 1
                                      i32.add
                                      tee_local $3
                                      i32.load8_u
                                      set_local $9
                                      i32.const 0
                                      set_local $6
                                      i32.const 0
                                      set_local $10
                                      get_local $7
                                      i32.const 0
                                      i32.ne
                                    end ;; $_22
                                  else
                                    block $_23 (result i32)
                                      get_local $5
                                      set_local $9
                                      get_local $1
                                      set_local $3
                                      i32.const 0
                                    end ;; $_23
                                  end ;; $_21
                                  set_local $5
                                  get_local $3
                                  i32.const 1
                                  i32.add
                                  set_local $1
                                  block $switch6
                                    block $switch-default34
                                      block $switch-case13
                                        block $switch-case12
                                          block $switch-case10
                                            block $switch-case9
                                              block $switch-case8
                                                block $switch-case7
                                                  get_local $9
                                                  i32.const 255
                                                  i32.and
                                                  i32.const 65
                                                  i32.sub
                                                  br_table
                                                    $switch-case13 $switch-default34 $switch-case13 $switch-default34 $switch-case13 $switch-case13 $switch-case13 $switch-default34 $switch-default34 $switch-default34 $switch-default34 $switch-case12 $switch-default34 $switch-default34 $switch-default34 $switch-default34
                                                    $switch-default34 $switch-default34 $switch-case13 $switch-default34 $switch-default34 $switch-default34 $switch-default34 $switch-case13 $switch-default34 $switch-default34 $switch-case13 $switch-default34 $switch-default34 $switch-default34 $switch-default34 $switch-default34
                                                    $switch-case13 $switch-default34 $switch-case13 $switch-case13 $switch-case13 $switch-case13 $switch-case13 $switch-case7 $switch-case13 $switch-case9 $switch-default34 $switch-case8 $switch-default34 $switch-case13 $switch-case13 $switch-case13
                                                    $switch-default34 $switch-default34 $switch-case13 $switch-case10 $switch-case13 $switch-default34 $switch-default34 $switch-case13 $switch-default34 $switch-case10
                                                    $switch-default34 ;; default
                                                end ;; $switch-case7
                                                get_local $1
                                                i32.load8_s
                                                i32.const 104
                                                i32.eq
                                                tee_local $9
                                                if $_24
                                                  get_local $3
                                                  i32.const 2
                                                  i32.add
                                                  set_local $1
                                                end ;; $_24
                                                get_local $9
                                                if $_25 (result i32)
                                                  i32.const -2
                                                else
                                                  i32.const -1
                                                end ;; $_25
                                                set_local $3
                                                br $switch6
                                              end ;; $switch-case8
                                              get_local $1
                                              i32.load8_s
                                              i32.const 108
                                              i32.eq
                                              tee_local $9
                                              if $_26
                                                get_local $3
                                                i32.const 2
                                                i32.add
                                                set_local $1
                                              end ;; $_26
                                              get_local $9
                                              if $_27 (result i32)
                                                i32.const 3
                                              else
                                                i32.const 1
                                              end ;; $_27
                                              set_local $3
                                              br $switch6
                                            end ;; $switch-case9
                                            i32.const 3
                                            set_local $3
                                            br $switch6
                                          end ;; $switch-case10
                                          i32.const 1
                                          set_local $3
                                          br $switch6
                                        end ;; $switch-case12
                                        i32.const 2
                                        set_local $3
                                        br $switch6
                                      end ;; $switch-case13
                                      get_local $3
                                      set_local $1
                                      i32.const 0
                                      set_local $3
                                      br $switch6
                                    end ;; $switch-default34
                                    br $__rjti$2
                                  end ;; $switch6
                                  get_local $1
                                  i32.load8_u
                                  tee_local $9
                                  i32.const 47
                                  i32.and
                                  i32.const 3
                                  i32.eq
                                  tee_local $21
                                  if $_28
                                    get_local $9
                                    i32.const 32
                                    i32.or
                                    set_local $9
                                  end ;; $_28
                                  get_local $21
                                  if $_29 (result i32)
                                    i32.const 1
                                  else
                                    get_local $3
                                  end ;; $_29
                                  set_local $16
                                  block $switch35
                                    block $switch-default46
                                      block $switch-case45
                                        block $switch-case37
                                          block $switch-case36
                                            get_local $9
                                            i32.const 91
                                            i32.sub
                                            br_table
                                              $switch-case37 $switch-default46 $switch-default46 $switch-default46 $switch-default46 $switch-default46 $switch-default46 $switch-default46 $switch-case36 $switch-default46 $switch-default46 $switch-default46 $switch-default46 $switch-default46 $switch-default46 $switch-default46
                                              $switch-default46 $switch-default46 $switch-default46 $switch-case45
                                              $switch-default46 ;; default
                                          end ;; $switch-case36
                                          get_local $4
                                          set_local $21
                                          get_local $12
                                          i32.const 1
                                          i32.lt_s
                                          if $_30
                                            i32.const 1
                                            set_local $12
                                          end ;; $_30
                                          br $switch35
                                        end ;; $switch-case37
                                        get_local $4
                                        set_local $21
                                        br $switch35
                                      end ;; $switch-case45
                                      get_local $7
                                      i32.eqz
                                      br_if $label$break$L8
                                      block $switch-default44
                                        block $switch-case43
                                          block $switch-case42
                                            block $switch-case41
                                              block $switch-case40
                                                block $switch-case39
                                                  get_local $16
                                                  i32.const -2
                                                  i32.sub
                                                  br_table
                                                    $switch-case39 $switch-case40 $switch-case41 $switch-case42 $switch-default44 $switch-case43
                                                    $switch-default44 ;; default
                                                end ;; $switch-case39
                                                get_local $7
                                                get_local $4
                                                i32.store8
                                                br $label$break$L8
                                              end ;; $switch-case40
                                              get_local $7
                                              get_local $4
                                              i32.store16
                                              br $label$break$L8
                                            end ;; $switch-case41
                                            get_local $7
                                            get_local $4
                                            i32.store
                                            br $label$break$L8
                                          end ;; $switch-case42
                                          get_local $7
                                          get_local $4
                                          i32.store
                                          br $label$break$L8
                                        end ;; $switch-case43
                                        get_local $7
                                        get_local $4
                                        i32.store
                                        get_local $7
                                        get_local $4
                                        i32.const 0
                                        i32.lt_s
                                        i32.const 31
                                        i32.shl
                                        i32.const 31
                                        i32.shr_s
                                        i32.store offset=4
                                        br $label$break$L8
                                      end ;; $switch-default44
                                      br $label$break$L8
                                    end ;; $switch-default46
                                    get_local $0
                                    i32.const 0
                                    call $___shlim
                                    loop $do-in
                                      get_local $8
                                      i32.load
                                      tee_local $3
                                      get_local $13
                                      i32.load
                                      i32.lt_u
                                      if $_31 (result i32)
                                        block $_32 (result i32)
                                          get_local $8
                                          get_local $3
                                          i32.const 1
                                          i32.add
                                          i32.store
                                          get_local $3
                                          i32.load8_u
                                        end ;; $_32
                                      else
                                        get_local $0
                                        call $___shgetc
                                      end ;; $_31
                                      tee_local $3
                                      call $_isspace
                                      br_if $do-in
                                    end ;; $do-in
                                    get_local $13
                                    i32.load
                                    if $_33
                                      get_local $8
                                      get_local $8
                                      i32.load
                                      i32.const -1
                                      i32.add
                                      tee_local $3
                                      i32.store
                                    else
                                      get_local $8
                                      i32.load
                                      set_local $3
                                    end ;; $_33
                                    get_local $18
                                    i32.load
                                    get_local $4
                                    i32.add
                                    get_local $3
                                    i32.add
                                    get_local $19
                                    i32.load
                                    i32.sub
                                    set_local $21
                                  end ;; $switch35
                                  get_local $0
                                  get_local $12
                                  call $___shlim
                                  get_local $8
                                  i32.load
                                  tee_local $3
                                  get_local $13
                                  i32.load
                                  tee_local $4
                                  i32.lt_u
                                  if $_34
                                    get_local $8
                                    get_local $3
                                    i32.const 1
                                    i32.add
                                    i32.store
                                  else
                                    block $_35
                                      get_local $0
                                      call $___shgetc
                                      i32.const 0
                                      i32.lt_s
                                      br_if $__rjti$2
                                      get_local $13
                                      i32.load
                                      set_local $4
                                    end ;; $_35
                                  end ;; $_34
                                  get_local $4
                                  if $_36
                                    get_local $8
                                    get_local $8
                                    i32.load
                                    i32.const -1
                                    i32.add
                                    i32.store
                                  end ;; $_36
                                  block $label$break$L169
                                    block $__rjti$0
                                      block $switch-default107
                                        block $switch-case94
                                          block $switch-case93
                                            block $switch-case91
                                              block $switch-case90
                                                block $switch-case87
                                                  block $switch-case49
                                                    get_local $9
                                                    i32.const 65
                                                    i32.sub
                                                    br_table
                                                      $switch-case94 $switch-default107 $switch-default107 $switch-default107 $switch-case94 $switch-case94 $switch-case94 $switch-default107 $switch-default107 $switch-default107 $switch-default107 $switch-default107 $switch-default107 $switch-default107 $switch-default107 $switch-default107
                                                      $switch-default107 $switch-default107 $switch-default107 $switch-default107 $switch-default107 $switch-default107 $switch-default107 $switch-case87 $switch-default107 $switch-default107 $switch-case49 $switch-default107 $switch-default107 $switch-default107 $switch-default107 $switch-default107
                                                      $switch-case94 $switch-default107 $switch-case49 $switch-case91 $switch-case94 $switch-case94 $switch-case94 $switch-default107 $switch-case93 $switch-default107 $switch-default107 $switch-default107 $switch-default107 $switch-default107 $switch-case90 $switch-case87
                                                      $switch-default107 $switch-default107 $switch-case49 $switch-default107 $switch-case91 $switch-default107 $switch-default107 $switch-case87
                                                      $switch-default107 ;; default
                                                  end ;; $switch-case49
                                                  get_local $9
                                                  i32.const 99
                                                  i32.eq
                                                  set_local $24
                                                  block $label$break$L70
                                                    get_local $9
                                                    i32.const 16
                                                    i32.or
                                                    i32.const 115
                                                    i32.eq
                                                    if $_37
                                                      block $_38
                                                        get_local $11
                                                        i32.const -1
                                                        i32.const 257
                                                        call $_memset
                                                        drop
                                                        get_local $11
                                                        i32.const 0
                                                        i32.store8
                                                        get_local $9
                                                        i32.const 115
                                                        i32.eq
                                                        if $_39
                                                          block $_40
                                                            get_local $29
                                                            i32.const 0
                                                            i32.store8
                                                            get_local $20
                                                            i32.const 0
                                                            i32.store8
                                                            get_local $20
                                                            i32.const 0
                                                            i32.store8 offset=1
                                                            get_local $20
                                                            i32.const 0
                                                            i32.store8 offset=2
                                                            get_local $20
                                                            i32.const 0
                                                            i32.store8 offset=3
                                                            get_local $20
                                                            i32.const 0
                                                            i32.store8 offset=4
                                                          end ;; $_40
                                                        end ;; $_39
                                                      end ;; $_38
                                                    else
                                                      block $_41
                                                        get_local $1
                                                        i32.const 1
                                                        i32.add
                                                        tee_local $3
                                                        i32.load8_s
                                                        i32.const 94
                                                        i32.eq
                                                        tee_local $14
                                                        set_local $9
                                                        get_local $11
                                                        get_local $14
                                                        i32.const 257
                                                        call $_memset
                                                        drop
                                                        get_local $11
                                                        i32.const 0
                                                        i32.store8
                                                        block $switch52
                                                          block $switch-default55
                                                            block $switch-case54
                                                              block $switch-case53
                                                                get_local $14
                                                                if $_42 (result i32)
                                                                  get_local $1
                                                                  i32.const 2
                                                                  i32.add
                                                                else
                                                                  get_local $3
                                                                end ;; $_42
                                                                tee_local $1
                                                                i32.load8_s
                                                                i32.const 45
                                                                i32.sub
                                                                br_table
                                                                  $switch-case53 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55
                                                                  $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55
                                                                  $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55 $switch-default55
                                                                  $switch-case54
                                                                  $switch-default55 ;; default
                                                              end ;; $switch-case53
                                                              get_local $31
                                                              get_local $9
                                                              i32.const 1
                                                              i32.xor
                                                              tee_local $9
                                                              i32.store8
                                                              get_local $1
                                                              i32.const 1
                                                              i32.add
                                                              set_local $1
                                                              br $switch52
                                                            end ;; $switch-case54
                                                            get_local $32
                                                            get_local $9
                                                            i32.const 1
                                                            i32.xor
                                                            tee_local $9
                                                            i32.store8
                                                            get_local $1
                                                            i32.const 1
                                                            i32.add
                                                            set_local $1
                                                            br $switch52
                                                          end ;; $switch-default55
                                                          get_local $9
                                                          i32.const 1
                                                          i32.xor
                                                          set_local $9
                                                        end ;; $switch52
                                                        loop $while-in57
                                                          block $label$break$L81
                                                            block $switch-default69
                                                              block $switch-case68
                                                                block $switch-case61
                                                                  block $switch-case60
                                                                    get_local $1
                                                                    i32.load8_s
                                                                    tee_local $3
                                                                    br_table
                                                                      $switch-case60 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69
                                                                      $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69
                                                                      $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-case68 $switch-default69 $switch-default69
                                                                      $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69
                                                                      $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69
                                                                      $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-default69 $switch-case61
                                                                      $switch-default69 ;; default
                                                                  end ;; $switch-case60
                                                                  br $__rjti$2
                                                                end ;; $switch-case61
                                                                br $label$break$L70
                                                              end ;; $switch-case68
                                                              block $switch-default65
                                                                block $switch-case63
                                                                  get_local $1
                                                                  i32.const 1
                                                                  i32.add
                                                                  tee_local $14
                                                                  i32.load8_s
                                                                  tee_local $3
                                                                  br_table
                                                                    $switch-case63 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65
                                                                    $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65
                                                                    $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65
                                                                    $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65
                                                                    $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65
                                                                    $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-default65 $switch-case63
                                                                    $switch-default65 ;; default
                                                                end ;; $switch-case63
                                                                i32.const 45
                                                                set_local $3
                                                                br $label$break$L81
                                                              end ;; $switch-default65
                                                              get_local $1
                                                              i32.const -1
                                                              i32.add
                                                              i32.load8_u
                                                              tee_local $1
                                                              get_local $3
                                                              i32.const 255
                                                              i32.and
                                                              i32.lt_s
                                                              if $_43 (result i32)
                                                                block $_44 (result i32)
                                                                  get_local $1
                                                                  i32.const 255
                                                                  i32.and
                                                                  set_local $1
                                                                  loop $do-in67
                                                                    get_local $11
                                                                    get_local $1
                                                                    i32.const 1
                                                                    i32.add
                                                                    tee_local $1
                                                                    i32.add
                                                                    get_local $9
                                                                    i32.store8
                                                                    get_local $1
                                                                    get_local $14
                                                                    i32.load8_s
                                                                    tee_local $3
                                                                    i32.const 255
                                                                    i32.and
                                                                    i32.lt_s
                                                                    br_if $do-in67
                                                                  end ;; $do-in67
                                                                  get_local $14
                                                                end ;; $_44
                                                              else
                                                                get_local $14
                                                              end ;; $_43
                                                              set_local $1
                                                            end ;; $switch-default69
                                                          end ;; $label$break$L81
                                                          get_local $11
                                                          get_local $3
                                                          i32.const 255
                                                          i32.and
                                                          i32.const 1
                                                          i32.add
                                                          i32.add
                                                          get_local $9
                                                          i32.store8
                                                          get_local $1
                                                          i32.const 1
                                                          i32.add
                                                          set_local $1
                                                          br $while-in57
                                                        end ;; $while-in57
                                                      end ;; $_41
                                                    end ;; $_37
                                                  end ;; $label$break$L70
                                                  get_local $24
                                                  if $_45 (result i32)
                                                    get_local $12
                                                    i32.const 1
                                                    i32.add
                                                  else
                                                    i32.const 31
                                                  end ;; $_45
                                                  set_local $3
                                                  get_local $5
                                                  i32.const 0
                                                  i32.ne
                                                  set_local $14
                                                  block $label$break$L89
                                                    get_local $16
                                                    i32.const 1
                                                    i32.eq
                                                    tee_local $16
                                                    if $_46
                                                      block $_47
                                                        get_local $14
                                                        if $_48
                                                          get_local $3
                                                          i32.const 2
                                                          i32.shl
                                                          call $_malloc
                                                          tee_local $10
                                                          i32.eqz
                                                          if $_49
                                                            block $_50
                                                              i32.const 0
                                                              set_local $6
                                                              br $__rjti$2
                                                            end ;; $_50
                                                          end ;; $_49
                                                        else
                                                          get_local $7
                                                          set_local $10
                                                        end ;; $_48
                                                        get_local $22
                                                        i32.const 0
                                                        i32.store
                                                        get_local $30
                                                        i32.const 0
                                                        i32.store
                                                        i32.const 0
                                                        set_local $6
                                                        get_local $3
                                                        set_local $4
                                                        loop $label$continue$L95
                                                          block $label$break$L95
                                                            get_local $10
                                                            i32.eqz
                                                            set_local $9
                                                            loop $while-in72
                                                              loop $label$continue$L99
                                                                block $label$break$L99
                                                                  get_local $11
                                                                  get_local $8
                                                                  i32.load
                                                                  tee_local $3
                                                                  get_local $13
                                                                  i32.load
                                                                  i32.lt_u
                                                                  if $_51 (result i32)
                                                                    block $_52 (result i32)
                                                                      get_local $8
                                                                      get_local $3
                                                                      i32.const 1
                                                                      i32.add
                                                                      i32.store
                                                                      get_local $3
                                                                      i32.load8_u
                                                                    end ;; $_52
                                                                  else
                                                                    get_local $0
                                                                    call $___shgetc
                                                                  end ;; $_51
                                                                  tee_local $3
                                                                  i32.const 1
                                                                  i32.add
                                                                  i32.add
                                                                  i32.load8_s
                                                                  i32.eqz
                                                                  br_if $label$break$L95
                                                                  get_local $27
                                                                  get_local $3
                                                                  i32.store8
                                                                  block $switch73
                                                                    block $switch-default76
                                                                      block $switch-case75
                                                                        block $switch-case74
                                                                          get_local $26
                                                                          get_local $27
                                                                          i32.const 1
                                                                          get_local $22
                                                                          call $_mbrtowc
                                                                          i32.const -2
                                                                          i32.sub
                                                                          br_table
                                                                            $switch-case75 $switch-case74
                                                                            $switch-default76 ;; default
                                                                        end ;; $switch-case74
                                                                        i32.const 0
                                                                        set_local $6
                                                                        br $__rjti$2
                                                                      end ;; $switch-case75
                                                                      br $switch73
                                                                    end ;; $switch-default76
                                                                    br $label$break$L99
                                                                  end ;; $switch73
                                                                  br $label$continue$L99
                                                                end ;; $label$break$L99
                                                              end ;; $label$continue$L99
                                                              get_local $9
                                                              i32.eqz
                                                              if $_53
                                                                block $_54
                                                                  get_local $10
                                                                  get_local $6
                                                                  i32.const 2
                                                                  i32.shl
                                                                  i32.add
                                                                  get_local $26
                                                                  i32.load
                                                                  i32.store
                                                                  get_local $6
                                                                  i32.const 1
                                                                  i32.add
                                                                  set_local $6
                                                                end ;; $_54
                                                              end ;; $_53
                                                              get_local $14
                                                              get_local $6
                                                              get_local $4
                                                              i32.eq
                                                              i32.and
                                                              i32.eqz
                                                              br_if $while-in72
                                                            end ;; $while-in72
                                                            get_local $10
                                                            get_local $4
                                                            i32.const 1
                                                            i32.shl
                                                            i32.const 1
                                                            i32.or
                                                            tee_local $3
                                                            i32.const 2
                                                            i32.shl
                                                            call $_realloc
                                                            tee_local $9
                                                            if $_55
                                                              block $_56
                                                                get_local $4
                                                                set_local $6
                                                                get_local $3
                                                                set_local $4
                                                                get_local $9
                                                                set_local $10
                                                                br $label$continue$L95
                                                              end ;; $_56
                                                            else
                                                              block $_57
                                                                i32.const 0
                                                                set_local $6
                                                                br $__rjti$2
                                                              end ;; $_57
                                                            end ;; $_55
                                                          end ;; $label$break$L95
                                                        end ;; $label$continue$L95
                                                        get_local $22
                                                        call $_mbsinit
                                                        if $_58
                                                          block $_59
                                                            get_local $6
                                                            set_local $4
                                                            i32.const 0
                                                            set_local $6
                                                          end ;; $_59
                                                        else
                                                          block $_60
                                                            i32.const 0
                                                            set_local $6
                                                            br $__rjti$2
                                                          end ;; $_60
                                                        end ;; $_58
                                                      end ;; $_47
                                                    else
                                                      block $_61
                                                        get_local $14
                                                        if $_62
                                                          block $_63
                                                            get_local $3
                                                            call $_malloc
                                                            tee_local $6
                                                            if $_64
                                                              block $_65
                                                                i32.const 0
                                                                set_local $4
                                                                get_local $3
                                                                set_local $10
                                                              end ;; $_65
                                                            else
                                                              block $_66
                                                                i32.const 0
                                                                set_local $6
                                                                i32.const 0
                                                                set_local $10
                                                                br $__rjti$2
                                                              end ;; $_66
                                                            end ;; $_64
                                                            loop $while-in78
                                                              loop $do-in80
                                                                get_local $11
                                                                get_local $8
                                                                i32.load
                                                                tee_local $3
                                                                get_local $13
                                                                i32.load
                                                                i32.lt_u
                                                                if $_67 (result i32)
                                                                  block $_68 (result i32)
                                                                    get_local $8
                                                                    get_local $3
                                                                    i32.const 1
                                                                    i32.add
                                                                    i32.store
                                                                    get_local $3
                                                                    i32.load8_u
                                                                  end ;; $_68
                                                                else
                                                                  get_local $0
                                                                  call $___shgetc
                                                                end ;; $_67
                                                                tee_local $3
                                                                i32.const 1
                                                                i32.add
                                                                i32.add
                                                                i32.load8_s
                                                                i32.eqz
                                                                if $_69
                                                                  block $_70
                                                                    i32.const 0
                                                                    set_local $10
                                                                    br $label$break$L89
                                                                  end ;; $_70
                                                                end ;; $_69
                                                                get_local $6
                                                                get_local $4
                                                                i32.add
                                                                get_local $3
                                                                i32.store8
                                                                get_local $4
                                                                i32.const 1
                                                                i32.add
                                                                tee_local $4
                                                                get_local $10
                                                                i32.ne
                                                                br_if $do-in80
                                                              end ;; $do-in80
                                                              get_local $6
                                                              get_local $10
                                                              i32.const 1
                                                              i32.shl
                                                              i32.const 1
                                                              i32.or
                                                              tee_local $3
                                                              call $_realloc
                                                              tee_local $9
                                                              if $_71
                                                                block $_72
                                                                  get_local $10
                                                                  set_local $4
                                                                  get_local $3
                                                                  set_local $10
                                                                  get_local $9
                                                                  set_local $6
                                                                  br $while-in78
                                                                end ;; $_72
                                                              else
                                                                block $_73
                                                                  i32.const 0
                                                                  set_local $10
                                                                  br $__rjti$2
                                                                end ;; $_73
                                                              end ;; $_71
                                                            end ;; $while-in78
                                                          end ;; $_63
                                                        end ;; $_62
                                                        get_local $7
                                                        if $_74
                                                          block $_75
                                                            get_local $4
                                                            set_local $6
                                                            i32.const 0
                                                            set_local $4
                                                            loop $while-in84
                                                              get_local $11
                                                              get_local $8
                                                              i32.load
                                                              tee_local $10
                                                              get_local $6
                                                              i32.lt_u
                                                              if $_76 (result i32)
                                                                block $_77 (result i32)
                                                                  get_local $8
                                                                  get_local $10
                                                                  i32.const 1
                                                                  i32.add
                                                                  i32.store
                                                                  get_local $10
                                                                  i32.load8_u
                                                                end ;; $_77
                                                              else
                                                                get_local $0
                                                                call $___shgetc
                                                              end ;; $_76
                                                              tee_local $6
                                                              i32.const 1
                                                              i32.add
                                                              i32.add
                                                              i32.load8_s
                                                              if $_78
                                                                block $_79
                                                                  get_local $7
                                                                  get_local $4
                                                                  i32.add
                                                                  get_local $6
                                                                  i32.store8
                                                                  get_local $13
                                                                  i32.load
                                                                  set_local $6
                                                                  get_local $4
                                                                  i32.const 1
                                                                  i32.add
                                                                  set_local $4
                                                                  br $while-in84
                                                                end ;; $_79
                                                              else
                                                                block $_80
                                                                  get_local $7
                                                                  set_local $6
                                                                  i32.const 0
                                                                  set_local $10
                                                                  br $label$break$L89
                                                                end ;; $_80
                                                              end ;; $_78
                                                            end ;; $while-in84
                                                          end ;; $_75
                                                        else
                                                          loop $while-in82
                                                            get_local $11
                                                            get_local $8
                                                            i32.load
                                                            tee_local $6
                                                            get_local $4
                                                            i32.lt_u
                                                            if $_81 (result i32)
                                                              block $_82 (result i32)
                                                                get_local $8
                                                                get_local $6
                                                                i32.const 1
                                                                i32.add
                                                                i32.store
                                                                get_local $6
                                                                i32.load8_u
                                                              end ;; $_82
                                                            else
                                                              get_local $0
                                                              call $___shgetc
                                                            end ;; $_81
                                                            tee_local $6
                                                            i32.const 1
                                                            i32.add
                                                            i32.add
                                                            i32.load8_s
                                                            if $_83
                                                              block $_84
                                                                get_local $13
                                                                i32.load
                                                                set_local $4
                                                                br $while-in82
                                                              end ;; $_84
                                                            else
                                                              block $_85
                                                                i32.const 0
                                                                set_local $4
                                                                i32.const 0
                                                                set_local $6
                                                                i32.const 0
                                                                set_local $10
                                                                br $label$break$L89
                                                              end ;; $_85
                                                            end ;; $_83
                                                          end ;; $while-in82
                                                        end ;; $_74
                                                      end ;; $_61
                                                    end ;; $_46
                                                  end ;; $label$break$L89
                                                  get_local $13
                                                  i32.load
                                                  if $_86
                                                    get_local $8
                                                    get_local $8
                                                    i32.load
                                                    i32.const -1
                                                    i32.add
                                                    tee_local $3
                                                    i32.store
                                                  else
                                                    get_local $8
                                                    i32.load
                                                    set_local $3
                                                  end ;; $_86
                                                  get_local $3
                                                  get_local $19
                                                  i32.load
                                                  i32.sub
                                                  get_local $18
                                                  i32.load
                                                  i32.add
                                                  tee_local $3
                                                  i32.eqz
                                                  br_if $label$break$L6
                                                  get_local $3
                                                  get_local $12
                                                  i32.eq
                                                  get_local $24
                                                  i32.const 1
                                                  i32.xor
                                                  i32.or
                                                  i32.eqz
                                                  br_if $label$break$L6
                                                  get_local $14
                                                  if $_87
                                                    get_local $16
                                                    if $_88
                                                      get_local $7
                                                      get_local $10
                                                      i32.store
                                                    else
                                                      get_local $7
                                                      get_local $6
                                                      i32.store
                                                    end ;; $_88
                                                  end ;; $_87
                                                  get_local $24
                                                  i32.eqz
                                                  if $_89
                                                    block $_90
                                                      get_local $10
                                                      if $_91
                                                        get_local $10
                                                        get_local $4
                                                        i32.const 2
                                                        i32.shl
                                                        i32.add
                                                        i32.const 0
                                                        i32.store
                                                      end ;; $_91
                                                      get_local $6
                                                      i32.eqz
                                                      if $_92
                                                        block $_93
                                                          i32.const 0
                                                          set_local $6
                                                          br $label$break$L169
                                                        end ;; $_93
                                                      end ;; $_92
                                                      get_local $6
                                                      get_local $4
                                                      i32.add
                                                      i32.const 0
                                                      i32.store8
                                                    end ;; $_90
                                                  end ;; $_89
                                                  br $label$break$L169
                                                end ;; $switch-case87
                                                i32.const 16
                                                set_local $4
                                                br $__rjti$0
                                              end ;; $switch-case90
                                              i32.const 8
                                              set_local $4
                                              br $__rjti$0
                                            end ;; $switch-case91
                                            i32.const 10
                                            set_local $4
                                            br $__rjti$0
                                          end ;; $switch-case93
                                          i32.const 0
                                          set_local $4
                                          br $__rjti$0
                                        end ;; $switch-case94
                                        get_local $0
                                        get_local $16
                                        i32.const 0
                                        call $___floatscan
                                        set_local $25
                                        get_local $18
                                        i32.load
                                        get_local $19
                                        i32.load
                                        get_local $8
                                        i32.load
                                        i32.sub
                                        i32.eq
                                        br_if $label$break$L6
                                        get_local $7
                                        if $_94
                                          block $_95
                                            block $switch-default105
                                              block $switch-case104
                                                block $switch-case103
                                                  block $switch-case102
                                                    get_local $16
                                                    br_table
                                                      $switch-case102 $switch-case103 $switch-case104
                                                      $switch-default105 ;; default
                                                  end ;; $switch-case102
                                                  get_local $7
                                                  get_local $25
                                                  f32.demote/f64
                                                  f32.store
                                                  br $label$break$L169
                                                end ;; $switch-case103
                                                get_local $7
                                                get_local $25
                                                f64.store
                                                br $label$break$L169
                                              end ;; $switch-case104
                                              get_local $7
                                              get_local $25
                                              f64.store
                                              br $label$break$L169
                                            end ;; $switch-default105
                                            br $label$break$L169
                                          end ;; $_95
                                        end ;; $_94
                                        br $label$break$L169
                                      end ;; $switch-default107
                                      br $label$break$L169
                                    end ;; $__rjti$0
                                    get_local $0
                                    get_local $4
                                    i32.const 0
                                    i32.const -1
                                    i32.const -1
                                    call $___intscan
                                    set_local $4
                                    get_local $18
                                    i32.load
                                    get_local $19
                                    i32.load
                                    get_local $8
                                    i32.load
                                    i32.sub
                                    i32.eq
                                    br_if $label$break$L6
                                    get_local $7
                                    i32.const 0
                                    i32.ne
                                    get_local $9
                                    i32.const 112
                                    i32.eq
                                    i32.and
                                    if $_96
                                      block $_97
                                        get_local $7
                                        get_local $4
                                        i32.store
                                        br $label$break$L169
                                      end ;; $_97
                                    end ;; $_96
                                    get_local $7
                                    if $_98
                                      block $switch-default115
                                        block $switch-case114
                                          block $switch-case113
                                            block $switch-case112
                                              block $switch-case111
                                                block $switch-case110
                                                  get_local $16
                                                  i32.const -2
                                                  i32.sub
                                                  br_table
                                                    $switch-case110 $switch-case111 $switch-case112 $switch-case113 $switch-default115 $switch-case114
                                                    $switch-default115 ;; default
                                                end ;; $switch-case110
                                                get_local $7
                                                get_local $4
                                                i32.store8
                                                br $label$break$L169
                                              end ;; $switch-case111
                                              get_local $7
                                              get_local $4
                                              i32.store16
                                              br $label$break$L169
                                            end ;; $switch-case112
                                            get_local $7
                                            get_local $4
                                            i32.store
                                            br $label$break$L169
                                          end ;; $switch-case113
                                          get_local $7
                                          get_local $4
                                          i32.store
                                          br $label$break$L169
                                        end ;; $switch-case114
                                        get_local $7
                                        tee_local $5
                                        get_local $4
                                        i32.store
                                        get_local $5
                                        get_global $tempRet0
                                        i32.store offset=4
                                      end ;; $switch-default115
                                    end ;; $_98
                                  end ;; $label$break$L169
                                  get_local $7
                                  i32.const 0
                                  i32.ne
                                  get_local $15
                                  i32.add
                                  set_local $15
                                  get_local $18
                                  i32.load
                                  get_local $21
                                  i32.add
                                  get_local $8
                                  i32.load
                                  i32.add
                                  get_local $19
                                  i32.load
                                  i32.sub
                                  set_local $4
                                  br $label$break$L8
                                end ;; $_13
                              end ;; $_12
                            end ;; $label$break$L10
                            get_local $0
                            i32.const 0
                            call $___shlim
                            get_local $8
                            i32.load
                            tee_local $5
                            get_local $13
                            i32.load
                            i32.lt_u
                            if $if (result i32)
                              block $block (result i32)
                                get_local $8
                                get_local $5
                                i32.const 1
                                i32.add
                                i32.store
                                get_local $5
                                i32.load8_u
                              end ;; $block
                            else
                              get_local $0
                              call $___shgetc
                            end ;; $if
                            tee_local $5
                            get_local $1
                            get_local $7
                            i32.add
                            tee_local $1
                            i32.load8_u
                            i32.ne
                            br_if $__rjti$1
                            get_local $4
                            i32.const 1
                            i32.add
                          end ;; $_11
                        end ;; $_4
                        set_local $4
                      end ;; $label$break$L8
                      get_local $1
                      i32.const 1
                      i32.add
                      tee_local $1
                      i32.load8_u
                      tee_local $5
                      br_if $label$continue$L6
                      br $label$break$L4
                    end ;; $label$break$L6
                  end ;; $label$continue$L6
                  br $__rjto$3
                end ;; $__rjti$1
                get_local $13
                i32.load
                if $if_1
                  get_local $8
                  get_local $8
                  i32.load
                  i32.const -1
                  i32.add
                  i32.store
                end ;; $if_1
                get_local $15
                get_local $5
                i32.const -1
                i32.gt_s
                i32.or
                br_if $label$break$L4
                i32.const 0
                set_local $5
                br $__rjti$3
              end ;; $__rjti$2
              get_local $15
              i32.eqz
              br_if $__rjti$3
              br $__rjto$3
            end ;; $__rjti$3
            i32.const -1
            set_local $15
          end ;; $__rjto$3
          get_local $5
          if $if_2
            block $block_1
              get_local $6
              call $_free
              get_local $10
              call $_free
            end ;; $block_1
          end ;; $if_2
        end ;; $_3
      else
        i32.const 0
        set_local $15
      end ;; $_2
    end ;; $label$break$L4
    get_local $28
    if $if_3
      get_local $0
      call $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
    end ;; $if_3
    get_local $17
    set_global $STACKTOP
    get_local $15
    )
  
  (func $_free (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    get_local $0
    i32.eqz
    if $_1
      return
    end ;; $_1
    get_local $0
    i32.const -8
    i32.add
    tee_local $1
    i32.const 17680
    i32.load
    tee_local $11
    i32.lt_u
    if $_2
      call $_abort
    end ;; $_2
    get_local $0
    i32.const -4
    i32.add
    i32.load
    tee_local $7
    i32.const 3
    i32.and
    tee_local $5
    i32.const 1
    i32.eq
    if $_3
      call $_abort
    end ;; $_3
    get_local $1
    get_local $7
    i32.const -8
    i32.and
    tee_local $0
    i32.add
    set_local $8
    block $do-once
      get_local $7
      i32.const 1
      i32.and
      if $_4
        block $_5
          get_local $1
          set_local $2
          get_local $0
          set_local $3
        end ;; $_5
      else
        block $_6
          get_local $1
          i32.load
          set_local $7
          get_local $5
          i32.eqz
          if $_7
            return
          end ;; $_7
          get_local $1
          i32.const 0
          get_local $7
          i32.sub
          i32.add
          tee_local $1
          get_local $11
          i32.lt_u
          if $_8
            call $_abort
          end ;; $_8
          get_local $7
          get_local $0
          i32.add
          set_local $0
          get_local $1
          i32.const 17684
          i32.load
          i32.eq
          if $_9
            block $_10
              get_local $8
              i32.const 4
              i32.add
              tee_local $2
              i32.load
              tee_local $3
              i32.const 3
              i32.and
              i32.const 3
              i32.ne
              if $_11
                block $_12
                  get_local $1
                  set_local $2
                  get_local $0
                  set_local $3
                  br $do-once
                end ;; $_12
              end ;; $_11
              i32.const 17672
              get_local $0
              i32.store
              get_local $2
              get_local $3
              i32.const -2
              i32.and
              i32.store
              get_local $1
              get_local $0
              i32.const 1
              i32.or
              i32.store offset=4
              get_local $1
              get_local $0
              i32.add
              get_local $0
              i32.store
              return
            end ;; $_10
          end ;; $_9
          get_local $7
          i32.const 3
          i32.shr_u
          set_local $5
          get_local $7
          i32.const 256
          i32.lt_u
          if $_13
            block $_14
              get_local $1
              i32.load offset=12
              set_local $6
              get_local $1
              i32.load offset=8
              tee_local $2
              get_local $5
              i32.const 3
              i32.shl
              i32.const 17704
              i32.add
              tee_local $3
              i32.ne
              if $_15
                block $_16
                  get_local $2
                  get_local $11
                  i32.lt_u
                  if $_17
                    call $_abort
                  end ;; $_17
                  get_local $2
                  i32.load offset=12
                  get_local $1
                  i32.ne
                  if $_18
                    call $_abort
                  end ;; $_18
                end ;; $_16
              end ;; $_15
              get_local $6
              get_local $2
              i32.eq
              if $_19
                block $_20
                  i32.const 17664
                  i32.const 17664
                  i32.load
                  i32.const 1
                  get_local $5
                  i32.shl
                  i32.const -1
                  i32.xor
                  i32.and
                  i32.store
                  get_local $1
                  set_local $2
                  get_local $0
                  set_local $3
                  br $do-once
                end ;; $_20
              end ;; $_19
              get_local $6
              get_local $3
              i32.eq
              if $_21
                get_local $6
                i32.const 8
                i32.add
                set_local $4
              else
                block $_22
                  get_local $6
                  get_local $11
                  i32.lt_u
                  if $_23
                    call $_abort
                  end ;; $_23
                  get_local $6
                  i32.const 8
                  i32.add
                  tee_local $3
                  i32.load
                  get_local $1
                  i32.eq
                  if $_24
                    get_local $3
                    set_local $4
                  else
                    call $_abort
                  end ;; $_24
                end ;; $_22
              end ;; $_21
              get_local $2
              get_local $6
              i32.store offset=12
              get_local $4
              get_local $2
              i32.store
              get_local $1
              set_local $2
              get_local $0
              set_local $3
              br $do-once
            end ;; $_14
          end ;; $_13
          get_local $1
          i32.load offset=24
          set_local $12
          block $do-once0
            get_local $1
            i32.load offset=12
            tee_local $4
            get_local $1
            i32.eq
            if $_25
              block $_26
                get_local $1
                i32.const 16
                i32.add
                tee_local $7
                i32.const 4
                i32.add
                tee_local $4
                i32.load
                tee_local $5
                i32.eqz
                if $_27
                  get_local $7
                  i32.load
                  tee_local $5
                  if $_28
                    get_local $7
                    set_local $4
                  else
                    block $_29
                      i32.const 0
                      set_local $6
                      br $do-once0
                    end ;; $_29
                  end ;; $_28
                end ;; $_27
                loop $while-in
                  get_local $5
                  i32.const 20
                  i32.add
                  tee_local $10
                  i32.load
                  tee_local $7
                  if $_30
                    block $_31
                      get_local $7
                      set_local $5
                      get_local $10
                      set_local $4
                      br $while-in
                    end ;; $_31
                  end ;; $_30
                  get_local $5
                  i32.const 16
                  i32.add
                  tee_local $10
                  i32.load
                  tee_local $7
                  if $_32
                    block $_33
                      get_local $7
                      set_local $5
                      get_local $10
                      set_local $4
                      br $while-in
                    end ;; $_33
                  end ;; $_32
                end ;; $while-in
                get_local $4
                get_local $11
                i32.lt_u
                if $_34
                  call $_abort
                else
                  block $_35
                    get_local $4
                    i32.const 0
                    i32.store
                    get_local $5
                    set_local $6
                  end ;; $_35
                end ;; $_34
              end ;; $_26
            else
              block $_36
                get_local $1
                i32.load offset=8
                tee_local $10
                get_local $11
                i32.lt_u
                if $_37
                  call $_abort
                end ;; $_37
                get_local $10
                i32.const 12
                i32.add
                tee_local $7
                i32.load
                get_local $1
                i32.ne
                if $_38
                  call $_abort
                end ;; $_38
                get_local $4
                i32.const 8
                i32.add
                tee_local $5
                i32.load
                get_local $1
                i32.eq
                if $_39
                  block $_40
                    get_local $7
                    get_local $4
                    i32.store
                    get_local $5
                    get_local $10
                    i32.store
                    get_local $4
                    set_local $6
                  end ;; $_40
                else
                  call $_abort
                end ;; $_39
              end ;; $_36
            end ;; $_25
          end ;; $do-once0
          get_local $12
          if $_41
            block $_42
              get_local $1
              get_local $1
              i32.load offset=28
              tee_local $5
              i32.const 2
              i32.shl
              i32.const 17968
              i32.add
              tee_local $4
              i32.load
              i32.eq
              if $_43
                block $_44
                  get_local $4
                  get_local $6
                  i32.store
                  get_local $6
                  i32.eqz
                  if $_45
                    block $_46
                      i32.const 17668
                      i32.const 17668
                      i32.load
                      i32.const 1
                      get_local $5
                      i32.shl
                      i32.const -1
                      i32.xor
                      i32.and
                      i32.store
                      get_local $1
                      set_local $2
                      get_local $0
                      set_local $3
                      br $do-once
                    end ;; $_46
                  end ;; $_45
                end ;; $_44
              else
                block $_47
                  get_local $12
                  i32.const 17680
                  i32.load
                  i32.lt_u
                  if $_48
                    call $_abort
                  end ;; $_48
                  get_local $12
                  i32.const 16
                  i32.add
                  tee_local $4
                  i32.load
                  get_local $1
                  i32.eq
                  if $_49
                    get_local $4
                    get_local $6
                    i32.store
                  else
                    get_local $12
                    get_local $6
                    i32.store offset=20
                  end ;; $_49
                  get_local $6
                  i32.eqz
                  if $_50
                    block $_51
                      get_local $1
                      set_local $2
                      get_local $0
                      set_local $3
                      br $do-once
                    end ;; $_51
                  end ;; $_50
                end ;; $_47
              end ;; $_43
              get_local $6
              i32.const 17680
              i32.load
              tee_local $5
              i32.lt_u
              if $_52
                call $_abort
              end ;; $_52
              get_local $6
              get_local $12
              i32.store offset=24
              get_local $1
              i32.const 16
              i32.add
              tee_local $4
              i32.load
              tee_local $7
              if $_53
                get_local $7
                get_local $5
                i32.lt_u
                if $_54
                  call $_abort
                else
                  block $_55
                    get_local $6
                    get_local $7
                    i32.store offset=16
                    get_local $7
                    get_local $6
                    i32.store offset=24
                  end ;; $_55
                end ;; $_54
              end ;; $_53
              get_local $4
              i32.load offset=4
              tee_local $4
              if $_56
                get_local $4
                i32.const 17680
                i32.load
                i32.lt_u
                if $_57
                  call $_abort
                else
                  block $_58
                    get_local $6
                    get_local $4
                    i32.store offset=20
                    get_local $4
                    get_local $6
                    i32.store offset=24
                    get_local $1
                    set_local $2
                    get_local $0
                    set_local $3
                  end ;; $_58
                end ;; $_57
              else
                block $_59
                  get_local $1
                  set_local $2
                  get_local $0
                  set_local $3
                end ;; $_59
              end ;; $_56
            end ;; $_42
          else
            block $_60
              get_local $1
              set_local $2
              get_local $0
              set_local $3
            end ;; $_60
          end ;; $_41
        end ;; $_6
      end ;; $_4
    end ;; $do-once
    get_local $2
    get_local $8
    i32.ge_u
    if $_61
      call $_abort
    end ;; $_61
    get_local $8
    i32.const 4
    i32.add
    tee_local $0
    i32.load
    tee_local $1
    i32.const 1
    i32.and
    i32.eqz
    if $_62
      call $_abort
    end ;; $_62
    get_local $1
    i32.const 2
    i32.and
    if $_63
      block $_64
        get_local $0
        get_local $1
        i32.const -2
        i32.and
        i32.store
        get_local $2
        get_local $3
        i32.const 1
        i32.or
        i32.store offset=4
        get_local $2
        get_local $3
        i32.add
        get_local $3
        i32.store
      end ;; $_64
    else
      block $_65
        get_local $8
        i32.const 17688
        i32.load
        i32.eq
        if $_66
          block $_67
            i32.const 17676
            i32.const 17676
            i32.load
            get_local $3
            i32.add
            tee_local $0
            i32.store
            i32.const 17688
            get_local $2
            i32.store
            get_local $2
            get_local $0
            i32.const 1
            i32.or
            i32.store offset=4
            get_local $2
            i32.const 17684
            i32.load
            i32.ne
            if $_68
              return
            end ;; $_68
            i32.const 17684
            i32.const 0
            i32.store
            i32.const 17672
            i32.const 0
            i32.store
            return
          end ;; $_67
        end ;; $_66
        get_local $8
        i32.const 17684
        i32.load
        i32.eq
        if $_69
          block $_70
            i32.const 17672
            i32.const 17672
            i32.load
            get_local $3
            i32.add
            tee_local $0
            i32.store
            i32.const 17684
            get_local $2
            i32.store
            get_local $2
            get_local $0
            i32.const 1
            i32.or
            i32.store offset=4
            get_local $2
            get_local $0
            i32.add
            get_local $0
            i32.store
            return
          end ;; $_70
        end ;; $_69
        get_local $1
        i32.const -8
        i32.and
        get_local $3
        i32.add
        set_local $5
        get_local $1
        i32.const 3
        i32.shr_u
        set_local $3
        block $do-once4
          get_local $1
          i32.const 256
          i32.lt_u
          if $_71
            block $_72
              get_local $8
              i32.load offset=12
              set_local $4
              get_local $8
              i32.load offset=8
              tee_local $1
              get_local $3
              i32.const 3
              i32.shl
              i32.const 17704
              i32.add
              tee_local $0
              i32.ne
              if $_73
                block $_74
                  get_local $1
                  i32.const 17680
                  i32.load
                  i32.lt_u
                  if $_75
                    call $_abort
                  end ;; $_75
                  get_local $1
                  i32.load offset=12
                  get_local $8
                  i32.ne
                  if $_76
                    call $_abort
                  end ;; $_76
                end ;; $_74
              end ;; $_73
              get_local $4
              get_local $1
              i32.eq
              if $_77
                block $_78
                  i32.const 17664
                  i32.const 17664
                  i32.load
                  i32.const 1
                  get_local $3
                  i32.shl
                  i32.const -1
                  i32.xor
                  i32.and
                  i32.store
                  br $do-once4
                end ;; $_78
              end ;; $_77
              get_local $4
              get_local $0
              i32.eq
              if $_79
                get_local $4
                i32.const 8
                i32.add
                set_local $14
              else
                block $_80
                  get_local $4
                  i32.const 17680
                  i32.load
                  i32.lt_u
                  if $_81
                    call $_abort
                  end ;; $_81
                  get_local $4
                  i32.const 8
                  i32.add
                  tee_local $0
                  i32.load
                  get_local $8
                  i32.eq
                  if $_82
                    get_local $0
                    set_local $14
                  else
                    call $_abort
                  end ;; $_82
                end ;; $_80
              end ;; $_79
              get_local $1
              get_local $4
              i32.store offset=12
              get_local $14
              get_local $1
              i32.store
            end ;; $_72
          else
            block $_83
              get_local $8
              i32.load offset=24
              set_local $6
              block $do-once6
                get_local $8
                i32.load offset=12
                tee_local $0
                get_local $8
                i32.eq
                if $_84
                  block $_85
                    get_local $8
                    i32.const 16
                    i32.add
                    tee_local $1
                    i32.const 4
                    i32.add
                    tee_local $0
                    i32.load
                    tee_local $3
                    i32.eqz
                    if $_86
                      get_local $1
                      i32.load
                      tee_local $3
                      if $_87
                        get_local $1
                        set_local $0
                      else
                        block $_88
                          i32.const 0
                          set_local $9
                          br $do-once6
                        end ;; $_88
                      end ;; $_87
                    end ;; $_86
                    loop $while-in9
                      get_local $3
                      i32.const 20
                      i32.add
                      tee_local $4
                      i32.load
                      tee_local $1
                      if $_89
                        block $_90
                          get_local $1
                          set_local $3
                          get_local $4
                          set_local $0
                          br $while-in9
                        end ;; $_90
                      end ;; $_89
                      get_local $3
                      i32.const 16
                      i32.add
                      tee_local $4
                      i32.load
                      tee_local $1
                      if $_91
                        block $_92
                          get_local $1
                          set_local $3
                          get_local $4
                          set_local $0
                          br $while-in9
                        end ;; $_92
                      end ;; $_91
                    end ;; $while-in9
                    get_local $0
                    i32.const 17680
                    i32.load
                    i32.lt_u
                    if $_93
                      call $_abort
                    else
                      block $_94
                        get_local $0
                        i32.const 0
                        i32.store
                        get_local $3
                        set_local $9
                      end ;; $_94
                    end ;; $_93
                  end ;; $_85
                else
                  block $_95
                    get_local $8
                    i32.load offset=8
                    tee_local $4
                    i32.const 17680
                    i32.load
                    i32.lt_u
                    if $_96
                      call $_abort
                    end ;; $_96
                    get_local $4
                    i32.const 12
                    i32.add
                    tee_local $1
                    i32.load
                    get_local $8
                    i32.ne
                    if $_97
                      call $_abort
                    end ;; $_97
                    get_local $0
                    i32.const 8
                    i32.add
                    tee_local $3
                    i32.load
                    get_local $8
                    i32.eq
                    if $_98
                      block $_99
                        get_local $1
                        get_local $0
                        i32.store
                        get_local $3
                        get_local $4
                        i32.store
                        get_local $0
                        set_local $9
                      end ;; $_99
                    else
                      call $_abort
                    end ;; $_98
                  end ;; $_95
                end ;; $_84
              end ;; $do-once6
              get_local $6
              if $_100
                block $_101
                  get_local $8
                  get_local $8
                  i32.load offset=28
                  tee_local $3
                  i32.const 2
                  i32.shl
                  i32.const 17968
                  i32.add
                  tee_local $0
                  i32.load
                  i32.eq
                  if $_102
                    block $_103
                      get_local $0
                      get_local $9
                      i32.store
                      get_local $9
                      i32.eqz
                      if $_104
                        block $_105
                          i32.const 17668
                          i32.const 17668
                          i32.load
                          i32.const 1
                          get_local $3
                          i32.shl
                          i32.const -1
                          i32.xor
                          i32.and
                          i32.store
                          br $do-once4
                        end ;; $_105
                      end ;; $_104
                    end ;; $_103
                  else
                    block $_106
                      get_local $6
                      i32.const 17680
                      i32.load
                      i32.lt_u
                      if $_107
                        call $_abort
                      end ;; $_107
                      get_local $6
                      i32.const 16
                      i32.add
                      tee_local $0
                      i32.load
                      get_local $8
                      i32.eq
                      if $_108
                        get_local $0
                        get_local $9
                        i32.store
                      else
                        get_local $6
                        get_local $9
                        i32.store offset=20
                      end ;; $_108
                      get_local $9
                      i32.eqz
                      br_if $do-once4
                    end ;; $_106
                  end ;; $_102
                  get_local $9
                  i32.const 17680
                  i32.load
                  tee_local $3
                  i32.lt_u
                  if $_109
                    call $_abort
                  end ;; $_109
                  get_local $9
                  get_local $6
                  i32.store offset=24
                  get_local $8
                  i32.const 16
                  i32.add
                  tee_local $0
                  i32.load
                  tee_local $1
                  if $_110
                    get_local $1
                    get_local $3
                    i32.lt_u
                    if $_111
                      call $_abort
                    else
                      block $_112
                        get_local $9
                        get_local $1
                        i32.store offset=16
                        get_local $1
                        get_local $9
                        i32.store offset=24
                      end ;; $_112
                    end ;; $_111
                  end ;; $_110
                  get_local $0
                  i32.load offset=4
                  tee_local $0
                  if $_113
                    get_local $0
                    i32.const 17680
                    i32.load
                    i32.lt_u
                    if $_114
                      call $_abort
                    else
                      block $_115
                        get_local $9
                        get_local $0
                        i32.store offset=20
                        get_local $0
                        get_local $9
                        i32.store offset=24
                      end ;; $_115
                    end ;; $_114
                  end ;; $_113
                end ;; $_101
              end ;; $_100
            end ;; $_83
          end ;; $_71
        end ;; $do-once4
        get_local $2
        get_local $5
        i32.const 1
        i32.or
        i32.store offset=4
        get_local $2
        get_local $5
        i32.add
        get_local $5
        i32.store
        get_local $2
        i32.const 17684
        i32.load
        i32.eq
        if $_116
          block $_117
            i32.const 17672
            get_local $5
            i32.store
            return
          end ;; $_117
        else
          get_local $5
          set_local $3
        end ;; $_116
      end ;; $_65
    end ;; $_63
    get_local $3
    i32.const 3
    i32.shr_u
    set_local $0
    get_local $3
    i32.const 256
    i32.lt_u
    if $_118
      block $_119
        get_local $0
        i32.const 3
        i32.shl
        i32.const 17704
        i32.add
        set_local $1
        i32.const 17664
        i32.load
        tee_local $3
        i32.const 1
        get_local $0
        i32.shl
        tee_local $0
        i32.and
        if $_120
          get_local $1
          i32.const 8
          i32.add
          tee_local $3
          i32.load
          tee_local $0
          i32.const 17680
          i32.load
          i32.lt_u
          if $_121
            call $_abort
          else
            block $_122
              get_local $3
              set_local $15
              get_local $0
              set_local $13
            end ;; $_122
          end ;; $_121
        else
          block $_123
            i32.const 17664
            get_local $3
            get_local $0
            i32.or
            i32.store
            get_local $1
            i32.const 8
            i32.add
            set_local $15
            get_local $1
            set_local $13
          end ;; $_123
        end ;; $_120
        get_local $15
        get_local $2
        i32.store
        get_local $13
        get_local $2
        i32.store offset=12
        get_local $2
        get_local $13
        i32.store offset=8
        get_local $2
        get_local $1
        i32.store offset=12
        return
      end ;; $_119
    end ;; $_118
    get_local $3
    i32.const 8
    i32.shr_u
    tee_local $0
    if $_124 (result i32)
      get_local $3
      i32.const 16777215
      i32.gt_u
      if $_125 (result i32)
        i32.const 31
      else
        get_local $3
        i32.const 14
        get_local $0
        get_local $0
        i32.const 1048320
        i32.add
        i32.const 16
        i32.shr_u
        i32.const 8
        i32.and
        tee_local $4
        i32.shl
        tee_local $1
        i32.const 520192
        i32.add
        i32.const 16
        i32.shr_u
        i32.const 4
        i32.and
        tee_local $0
        get_local $4
        i32.or
        get_local $1
        get_local $0
        i32.shl
        tee_local $1
        i32.const 245760
        i32.add
        i32.const 16
        i32.shr_u
        i32.const 2
        i32.and
        tee_local $0
        i32.or
        i32.sub
        get_local $1
        get_local $0
        i32.shl
        i32.const 15
        i32.shr_u
        i32.add
        tee_local $0
        i32.const 7
        i32.add
        i32.shr_u
        i32.const 1
        i32.and
        get_local $0
        i32.const 1
        i32.shl
        i32.or
      end ;; $_125
    else
      i32.const 0
    end ;; $_124
    tee_local $5
    i32.const 2
    i32.shl
    i32.const 17968
    i32.add
    set_local $4
    get_local $2
    get_local $5
    i32.store offset=28
    get_local $2
    i32.const 0
    i32.store offset=20
    get_local $2
    i32.const 0
    i32.store offset=16
    block $do-once12
      i32.const 17668
      i32.load
      tee_local $1
      i32.const 1
      get_local $5
      i32.shl
      tee_local $0
      i32.and
      if $_126
        block $_127
          get_local $3
          get_local $5
          i32.const 31
          i32.eq
          if $_128 (result i32)
            i32.const 0
          else
            i32.const 25
            get_local $5
            i32.const 1
            i32.shr_u
            i32.sub
          end ;; $_128
          i32.shl
          set_local $5
          get_local $4
          i32.load
          set_local $0
          block $__rjto$1
            block $__rjti$1
              block $__rjti$0
                loop $while-in15
                  get_local $0
                  i32.load offset=4
                  i32.const -8
                  i32.and
                  get_local $3
                  i32.eq
                  br_if $__rjti$1
                  get_local $0
                  i32.const 16
                  i32.add
                  get_local $5
                  i32.const 31
                  i32.shr_u
                  i32.const 2
                  i32.shl
                  i32.add
                  tee_local $4
                  i32.load
                  tee_local $1
                  i32.eqz
                  br_if $__rjti$0
                  get_local $5
                  i32.const 1
                  i32.shl
                  set_local $5
                  get_local $1
                  set_local $0
                  br $while-in15
                end ;; $while-in15
              end ;; $__rjti$0
              get_local $4
              i32.const 17680
              i32.load
              i32.lt_u
              if $_129
                call $_abort
              else
                block $_130
                  get_local $4
                  get_local $2
                  i32.store
                  get_local $2
                  get_local $0
                  i32.store offset=24
                  get_local $2
                  get_local $2
                  i32.store offset=12
                  get_local $2
                  get_local $2
                  i32.store offset=8
                  br $do-once12
                end ;; $_130
              end ;; $_129
              br $__rjto$1
            end ;; $__rjti$1
            get_local $0
            i32.const 8
            i32.add
            tee_local $1
            i32.load
            tee_local $4
            i32.const 17680
            i32.load
            tee_local $3
            i32.ge_u
            get_local $0
            get_local $3
            i32.ge_u
            i32.and
            if $_131
              block $_132
                get_local $4
                get_local $2
                i32.store offset=12
                get_local $1
                get_local $2
                i32.store
                get_local $2
                get_local $4
                i32.store offset=8
                get_local $2
                get_local $0
                i32.store offset=12
                get_local $2
                i32.const 0
                i32.store offset=24
              end ;; $_132
            else
              call $_abort
            end ;; $_131
          end ;; $__rjto$1
        end ;; $_127
      else
        block $_133
          i32.const 17668
          get_local $1
          get_local $0
          i32.or
          i32.store
          get_local $4
          get_local $2
          i32.store
          get_local $2
          get_local $4
          i32.store offset=24
          get_local $2
          get_local $2
          i32.store offset=12
          get_local $2
          get_local $2
          i32.store offset=8
        end ;; $_133
      end ;; $_126
    end ;; $do-once12
    i32.const 17696
    i32.const 17696
    i32.load
    i32.const -1
    i32.add
    tee_local $0
    i32.store
    get_local $0
    if $_134
      return
    else
      i32.const 18120
      set_local $0
    end ;; $_134
    loop $while-in17
      get_local $0
      i32.load
      tee_local $0
      if $if
        block $block
          get_local $0
          i32.const 8
          i32.add
          set_local $0
          br $while-in17
        end ;; $block
      end ;; $if
    end ;; $while-in17
    i32.const 17696
    i32.const -1
    i32.store
    )
  
  (func $___intscan (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    block $label$break$L1
      get_local $1
      i32.const 36
      i32.gt_u
      if $_1 (result i32)
        block $_2 (result i32)
          call $___errno_location
          i32.const 22
          i32.store
          i32.const 0
          set_local $3
          i32.const 0
        end ;; $_2
      else
        block $_3 (result i32)
          get_local $0
          i32.const 4
          i32.add
          set_local $7
          get_local $0
          i32.const 100
          i32.add
          set_local $10
          loop $do-in
            get_local $7
            i32.load
            tee_local $5
            get_local $10
            i32.load
            i32.lt_u
            if $_4 (result i32)
              block $_5 (result i32)
                get_local $7
                get_local $5
                i32.const 1
                i32.add
                i32.store
                get_local $5
                i32.load8_u
              end ;; $_5
            else
              get_local $0
              call $___shgetc
            end ;; $_4
            tee_local $5
            call $_isspace
            br_if $do-in
          end ;; $do-in
          block $label$break$L11
            block $switch-default
              block $switch-case
                get_local $5
                i32.const 43
                i32.sub
                br_table
                  $switch-case $switch-default $switch-case
                  $switch-default ;; default
              end ;; $switch-case
              get_local $5
              i32.const 45
              i32.eq
              i32.const 31
              i32.shl
              i32.const 31
              i32.shr_s
              set_local $13
              get_local $7
              i32.load
              tee_local $5
              get_local $10
              i32.load
              i32.lt_u
              if $_6
                block $_7
                  get_local $7
                  get_local $5
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $5
                  i32.load8_u
                  set_local $5
                  br $label$break$L11
                end ;; $_7
              else
                block $_8
                  get_local $0
                  call $___shgetc
                  set_local $5
                  br $label$break$L11
                end ;; $_8
              end ;; $_6
            end ;; $switch-default
            i32.const 0
            set_local $13
          end ;; $label$break$L11
          get_local $1
          i32.eqz
          set_local $6
          block $__rjto$2
            block $__rjti$2
              block $__rjti$1
                block $__rjti$0
                  get_local $1
                  i32.const 16
                  i32.or
                  i32.const 16
                  i32.eq
                  get_local $5
                  i32.const 48
                  i32.eq
                  i32.and
                  if $_9
                    block $_10
                      get_local $7
                      i32.load
                      tee_local $5
                      get_local $10
                      i32.load
                      i32.lt_u
                      if $_11 (result i32)
                        block $_12 (result i32)
                          get_local $7
                          get_local $5
                          i32.const 1
                          i32.add
                          i32.store
                          get_local $5
                          i32.load8_u
                        end ;; $_12
                      else
                        get_local $0
                        call $___shgetc
                      end ;; $_11
                      tee_local $5
                      i32.const 32
                      i32.or
                      i32.const 120
                      i32.ne
                      if $_13
                        get_local $6
                        if $_14
                          block $_15
                            i32.const 8
                            set_local $1
                            get_local $5
                            set_local $2
                            br $__rjti$1
                          end ;; $_15
                        else
                          block $_16
                            get_local $5
                            set_local $2
                            br $__rjti$0
                          end ;; $_16
                        end ;; $_14
                      end ;; $_13
                      get_local $7
                      i32.load
                      tee_local $1
                      get_local $10
                      i32.load
                      i32.lt_u
                      if $_17 (result i32)
                        block $_18 (result i32)
                          get_local $7
                          get_local $1
                          i32.const 1
                          i32.add
                          i32.store
                          get_local $1
                          i32.load8_u
                        end ;; $_18
                      else
                        get_local $0
                        call $___shgetc
                      end ;; $_17
                      tee_local $5
                      i32.const 10530
                      i32.add
                      i32.load8_u
                      i32.const 15
                      i32.gt_s
                      if $_19
                        block $_20
                          get_local $10
                          i32.load
                          i32.eqz
                          tee_local $1
                          i32.eqz
                          if $_21
                            get_local $7
                            get_local $7
                            i32.load
                            i32.const -1
                            i32.add
                            i32.store
                          end ;; $_21
                          get_local $2
                          i32.eqz
                          if $_22
                            block $_23
                              get_local $0
                              i32.const 0
                              call $___shlim
                              i32.const 0
                              set_local $4
                              i32.const 0
                              set_local $3
                              br $label$break$L1
                            end ;; $_23
                          end ;; $_22
                          get_local $1
                          if $_24
                            block $_25
                              i32.const 0
                              set_local $4
                              i32.const 0
                              set_local $3
                              br $label$break$L1
                            end ;; $_25
                          end ;; $_24
                          get_local $7
                          get_local $7
                          i32.load
                          i32.const -1
                          i32.add
                          i32.store
                          i32.const 0
                          set_local $4
                          i32.const 0
                          set_local $3
                          br $label$break$L1
                        end ;; $_20
                      else
                        block $_26
                          i32.const 16
                          set_local $1
                          get_local $5
                          set_local $2
                          br $__rjti$1
                        end ;; $_26
                      end ;; $_19
                    end ;; $_10
                  else
                    get_local $5
                    i32.const 10530
                    i32.add
                    i32.load8_u
                    get_local $6
                    if $_27 (result i32)
                      i32.const 10
                      tee_local $1
                    else
                      get_local $1
                    end ;; $_27
                    i32.lt_u
                    if $_28
                      get_local $5
                      set_local $2
                    else
                      block $_29
                        get_local $10
                        i32.load
                        if $_30
                          get_local $7
                          get_local $7
                          i32.load
                          i32.const -1
                          i32.add
                          i32.store
                        end ;; $_30
                        get_local $0
                        i32.const 0
                        call $___shlim
                        call $___errno_location
                        i32.const 22
                        i32.store
                        i32.const 0
                        set_local $4
                        i32.const 0
                        set_local $3
                        br $label$break$L1
                      end ;; $_29
                    end ;; $_28
                  end ;; $_9
                end ;; $__rjti$0
                get_local $1
                i32.const 10
                i32.ne
                br_if $__rjti$1
                get_local $2
                i32.const -48
                i32.add
                tee_local $1
                i32.const 10
                i32.lt_u
                if $_31 (result i32)
                  block $_32 (result i32)
                    get_local $1
                    set_local $2
                    i32.const 0
                    set_local $1
                    loop $while-in
                      get_local $1
                      i32.const 10
                      i32.mul
                      get_local $2
                      i32.add
                      set_local $1
                      get_local $7
                      i32.load
                      tee_local $5
                      get_local $10
                      i32.load
                      i32.lt_u
                      if $_33 (result i32)
                        block $_34 (result i32)
                          get_local $7
                          get_local $5
                          i32.const 1
                          i32.add
                          i32.store
                          get_local $5
                          i32.load8_u
                        end ;; $_34
                      else
                        get_local $0
                        call $___shgetc
                      end ;; $_33
                      tee_local $5
                      i32.const -48
                      i32.add
                      tee_local $2
                      i32.const 10
                      i32.lt_u
                      get_local $1
                      i32.const 429496729
                      i32.lt_u
                      i32.and
                      br_if $while-in
                    end ;; $while-in
                    get_local $1
                    set_local $6
                    i32.const 0
                  end ;; $_32
                else
                  block $_35 (result i32)
                    i32.const 0
                    set_local $6
                    get_local $2
                    set_local $5
                    i32.const 0
                  end ;; $_35
                end ;; $_31
                set_local $1
                get_local $5
                i32.const -48
                i32.add
                tee_local $8
                i32.const 10
                i32.lt_u
                if $_36
                  block $_37
                    get_local $6
                    set_local $2
                    get_local $8
                    set_local $6
                    loop $while-in4
                      block $while-out3
                        get_local $2
                        get_local $1
                        i32.const 10
                        i32.const 0
                        call $___muldi3
                        set_local $11
                        get_global $tempRet0
                        tee_local $12
                        get_local $6
                        i32.const 0
                        i32.lt_s
                        i32.const 31
                        i32.shl
                        i32.const 31
                        i32.shr_s
                        tee_local $9
                        i32.const -1
                        i32.xor
                        tee_local $8
                        i32.gt_u
                        get_local $12
                        get_local $8
                        i32.eq
                        get_local $11
                        get_local $6
                        i32.const -1
                        i32.xor
                        i32.gt_u
                        i32.and
                        i32.or
                        br_if $while-out3
                        get_local $11
                        get_local $12
                        get_local $6
                        get_local $9
                        call $_i64Add
                        set_local $2
                        get_global $tempRet0
                        set_local $1
                        get_local $7
                        i32.load
                        tee_local $5
                        get_local $10
                        i32.load
                        i32.lt_u
                        if $_38 (result i32)
                          block $_39 (result i32)
                            get_local $7
                            get_local $5
                            i32.const 1
                            i32.add
                            i32.store
                            get_local $5
                            i32.load8_u
                          end ;; $_39
                        else
                          get_local $0
                          call $___shgetc
                        end ;; $_38
                        tee_local $5
                        i32.const -48
                        i32.add
                        tee_local $6
                        i32.const 10
                        i32.lt_u
                        get_local $1
                        i32.const 429496729
                        i32.lt_u
                        get_local $1
                        i32.const 429496729
                        i32.eq
                        get_local $2
                        i32.const -1717986918
                        i32.lt_u
                        i32.and
                        i32.or
                        i32.and
                        br_if $while-in4
                      end ;; $while-out3
                    end ;; $while-in4
                    get_local $6
                    i32.const 9
                    i32.le_u
                    if $_40
                      block $_41
                        i32.const 10
                        set_local $6
                        br $__rjti$2
                      end ;; $_41
                    end ;; $_40
                  end ;; $_37
                else
                  get_local $6
                  set_local $2
                end ;; $_36
                br $__rjto$2
              end ;; $__rjti$1
              get_local $1
              i32.const -1
              i32.add
              get_local $1
              i32.and
              i32.eqz
              if $_42
                block $_43
                  get_local $1
                  i32.const 23
                  i32.mul
                  i32.const 5
                  i32.shr_u
                  i32.const 7
                  i32.and
                  i32.const 10786
                  i32.add
                  i32.load8_s
                  set_local $14
                  get_local $2
                  i32.const 10530
                  i32.add
                  i32.load8_s
                  tee_local $6
                  i32.const 255
                  i32.and
                  tee_local $5
                  get_local $1
                  i32.lt_u
                  if $_44 (result i32)
                    block $_45 (result i32)
                      i32.const 0
                      set_local $2
                      loop $while-in7
                        get_local $5
                        get_local $2
                        get_local $14
                        i32.shl
                        i32.or
                        tee_local $2
                        i32.const 134217728
                        i32.lt_u
                        get_local $7
                        i32.load
                        tee_local $6
                        get_local $10
                        i32.load
                        i32.lt_u
                        if $_46 (result i32)
                          block $_47 (result i32)
                            get_local $7
                            get_local $6
                            i32.const 1
                            i32.add
                            i32.store
                            get_local $6
                            i32.load8_u
                          end ;; $_47
                        else
                          get_local $0
                          call $___shgetc
                        end ;; $_46
                        tee_local $8
                        i32.const 10530
                        i32.add
                        i32.load8_s
                        tee_local $6
                        i32.const 255
                        i32.and
                        tee_local $5
                        get_local $1
                        i32.lt_u
                        i32.and
                        if $_48
                          br $while-in7
                        else
                          get_local $8
                          set_local $5
                        end ;; $_48
                      end ;; $while-in7
                      i32.const 0
                      set_local $9
                      get_local $2
                    end ;; $_45
                  else
                    block $_49 (result i32)
                      i32.const 0
                      set_local $9
                      get_local $2
                      set_local $5
                      i32.const 0
                    end ;; $_49
                  end ;; $_44
                  set_local $8
                  i32.const -1
                  i32.const -1
                  get_local $14
                  call $_bitshift64Lshr
                  set_local $12
                  get_local $6
                  i32.const 255
                  i32.and
                  get_local $1
                  i32.ge_u
                  get_local $9
                  get_global $tempRet0
                  tee_local $11
                  i32.gt_u
                  get_local $9
                  get_local $11
                  i32.eq
                  get_local $8
                  get_local $12
                  i32.gt_u
                  i32.and
                  i32.or
                  i32.or
                  if $_50
                    block $_51
                      get_local $1
                      set_local $6
                      get_local $8
                      set_local $2
                      get_local $9
                      set_local $1
                      br $__rjti$2
                    end ;; $_51
                  else
                    get_local $9
                    set_local $2
                  end ;; $_50
                  loop $while-in9
                    get_local $8
                    get_local $2
                    get_local $14
                    call $_bitshift64Shl
                    set_local $2
                    get_global $tempRet0
                    set_local $5
                    get_local $7
                    i32.load
                    tee_local $8
                    get_local $10
                    i32.load
                    i32.lt_u
                    if $_52 (result i32)
                      block $_53 (result i32)
                        get_local $7
                        get_local $8
                        i32.const 1
                        i32.add
                        i32.store
                        get_local $8
                        i32.load8_u
                      end ;; $_53
                    else
                      get_local $0
                      call $___shgetc
                    end ;; $_52
                    set_local $9
                    get_local $6
                    i32.const 255
                    i32.and
                    get_local $2
                    i32.or
                    set_local $8
                    get_local $9
                    i32.const 10530
                    i32.add
                    i32.load8_u
                    tee_local $6
                    get_local $1
                    i32.ge_u
                    get_local $5
                    get_local $11
                    i32.gt_u
                    get_local $5
                    get_local $11
                    i32.eq
                    get_local $8
                    get_local $12
                    i32.gt_u
                    i32.and
                    i32.or
                    i32.or
                    if $_54
                      block $_55
                        get_local $1
                        set_local $6
                        get_local $8
                        set_local $2
                        get_local $5
                        set_local $1
                        get_local $9
                        set_local $5
                        br $__rjti$2
                      end ;; $_55
                    else
                      block $_56
                        get_local $5
                        set_local $2
                        br $while-in9
                      end ;; $_56
                    end ;; $_54
                  end ;; $while-in9
                end ;; $_43
              end ;; $_42
              get_local $2
              i32.const 10530
              i32.add
              i32.load8_s
              tee_local $6
              i32.const 255
              i32.and
              tee_local $5
              get_local $1
              i32.lt_u
              if $_57 (result i32)
                block $_58 (result i32)
                  i32.const 0
                  set_local $2
                  loop $while-in11
                    get_local $5
                    get_local $2
                    get_local $1
                    i32.mul
                    i32.add
                    tee_local $2
                    i32.const 119304647
                    i32.lt_u
                    get_local $7
                    i32.load
                    tee_local $6
                    get_local $10
                    i32.load
                    i32.lt_u
                    if $_59 (result i32)
                      block $_60 (result i32)
                        get_local $7
                        get_local $6
                        i32.const 1
                        i32.add
                        i32.store
                        get_local $6
                        i32.load8_u
                      end ;; $_60
                    else
                      get_local $0
                      call $___shgetc
                    end ;; $_59
                    tee_local $8
                    i32.const 10530
                    i32.add
                    i32.load8_s
                    tee_local $6
                    i32.const 255
                    i32.and
                    tee_local $5
                    get_local $1
                    i32.lt_u
                    i32.and
                    if $_61
                      br $while-in11
                    else
                      get_local $8
                      set_local $5
                    end ;; $_61
                  end ;; $while-in11
                  get_local $2
                  set_local $9
                  i32.const 0
                end ;; $_58
              else
                block $_62 (result i32)
                  i32.const 0
                  set_local $9
                  get_local $2
                  set_local $5
                  i32.const 0
                end ;; $_62
              end ;; $_57
              set_local $8
              get_local $6
              i32.const 255
              i32.and
              get_local $1
              i32.lt_u
              if $_63
                block $_64
                  i32.const -1
                  i32.const -1
                  get_local $1
                  i32.const 0
                  call $___udivdi3
                  set_local $12
                  get_global $tempRet0
                  set_local $14
                  get_local $9
                  set_local $2
                  loop $while-in13
                    get_local $8
                    get_local $14
                    i32.gt_u
                    get_local $8
                    get_local $14
                    i32.eq
                    get_local $2
                    get_local $12
                    i32.gt_u
                    i32.and
                    i32.or
                    if $_65
                      block $_66
                        get_local $1
                        set_local $6
                        get_local $8
                        set_local $1
                        br $__rjti$2
                      end ;; $_66
                    end ;; $_65
                    get_local $2
                    get_local $8
                    get_local $1
                    i32.const 0
                    call $___muldi3
                    set_local $11
                    get_global $tempRet0
                    tee_local $9
                    i32.const -1
                    i32.gt_u
                    get_local $9
                    i32.const -1
                    i32.eq
                    get_local $11
                    get_local $6
                    i32.const 255
                    i32.and
                    tee_local $6
                    i32.const -1
                    i32.xor
                    i32.gt_u
                    i32.and
                    i32.or
                    if $_67
                      block $_68
                        get_local $1
                        set_local $6
                        get_local $8
                        set_local $1
                        br $__rjti$2
                      end ;; $_68
                    end ;; $_67
                    get_local $6
                    i32.const 0
                    get_local $11
                    get_local $9
                    call $_i64Add
                    set_local $2
                    get_global $tempRet0
                    set_local $8
                    get_local $7
                    i32.load
                    tee_local $5
                    get_local $10
                    i32.load
                    i32.lt_u
                    if $_69 (result i32)
                      block $_70 (result i32)
                        get_local $7
                        get_local $5
                        i32.const 1
                        i32.add
                        i32.store
                        get_local $5
                        i32.load8_u
                      end ;; $_70
                    else
                      get_local $0
                      call $___shgetc
                    end ;; $_69
                    tee_local $5
                    i32.const 10530
                    i32.add
                    i32.load8_u
                    tee_local $6
                    get_local $1
                    i32.lt_u
                    br_if $while-in13
                    get_local $1
                    set_local $6
                    get_local $8
                    set_local $1
                    br $__rjti$2
                  end ;; $while-in13
                end ;; $_64
              else
                block $_71
                  get_local $1
                  set_local $6
                  get_local $9
                  set_local $2
                  get_local $8
                  set_local $1
                  br $__rjti$2
                end ;; $_71
              end ;; $_63
              br $__rjto$2
            end ;; $__rjti$2
            get_local $5
            i32.const 10530
            i32.add
            i32.load8_u
            get_local $6
            i32.lt_u
            if $_72
              block $_73
                loop $do-in15
                  get_local $7
                  i32.load
                  tee_local $1
                  get_local $10
                  i32.load
                  i32.lt_u
                  if $if (result i32)
                    block $block (result i32)
                      get_local $7
                      get_local $1
                      i32.const 1
                      i32.add
                      i32.store
                      get_local $1
                      i32.load8_u
                    end ;; $block
                  else
                    get_local $0
                    call $___shgetc
                  end ;; $if
                  tee_local $1
                  i32.const 10530
                  i32.add
                  i32.load8_u
                  get_local $6
                  i32.lt_u
                  br_if $do-in15
                end ;; $do-in15
                call $___errno_location
                i32.const 34
                i32.store
                get_local $4
                set_local $1
                get_local $3
                set_local $2
                get_local $3
                i32.const 1
                i32.and
                if $if_1
                  i32.const 0
                  set_local $13
                end ;; $if_1
              end ;; $_73
            end ;; $_72
          end ;; $__rjto$2
          get_local $10
          i32.load
          if $if_2
            get_local $7
            get_local $7
            i32.load
            i32.const -1
            i32.add
            i32.store
          end ;; $if_2
          get_local $1
          get_local $4
          i32.lt_u
          get_local $1
          get_local $4
          i32.eq
          get_local $2
          get_local $3
          i32.lt_u
          i32.and
          i32.or
          i32.eqz
          if $if_3
            block $block_1
              get_local $3
              i32.const 1
              i32.and
              i32.const 0
              i32.ne
              i32.const 0
              i32.or
              get_local $13
              i32.const 0
              i32.ne
              i32.or
              i32.eqz
              if $if_4
                block $block_2
                  call $___errno_location
                  i32.const 34
                  i32.store
                  get_local $3
                  get_local $4
                  i32.const -1
                  i32.const -1
                  call $_i64Add
                  set_local $3
                  get_global $tempRet0
                  set_local $4
                  br $label$break$L1
                end ;; $block_2
              end ;; $if_4
              get_local $1
              get_local $4
              i32.gt_u
              get_local $1
              get_local $4
              i32.eq
              get_local $2
              get_local $3
              i32.gt_u
              i32.and
              i32.or
              if $if_5
                block $block_3
                  call $___errno_location
                  i32.const 34
                  i32.store
                  br $label$break$L1
                end ;; $block_3
              end ;; $if_5
            end ;; $block_1
          end ;; $if_3
          get_local $2
          get_local $13
          i32.xor
          get_local $1
          get_local $13
          i32.const 0
          i32.lt_s
          i32.const 31
          i32.shl
          i32.const 31
          i32.shr_s
          tee_local $0
          i32.xor
          get_local $13
          get_local $0
          call $_i64Subtract
          set_local $3
          get_global $tempRet0
        end ;; $_3
      end ;; $_1
      set_local $4
    end ;; $label$break$L1
    get_local $4
    set_global $tempRet0
    get_local $3
    )
  
  (func $_dispose_chunk (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    get_local $0
    get_local $1
    i32.add
    set_local $7
    block $do-once
      get_local $0
      i32.load offset=4
      tee_local $2
      i32.const 1
      i32.and
      if $_1
        block $_2
          get_local $0
          set_local $4
          get_local $1
          set_local $3
        end ;; $_2
      else
        block $_3
          get_local $0
          i32.load
          set_local $10
          get_local $2
          i32.const 3
          i32.and
          i32.eqz
          if $_4
            return
          end ;; $_4
          get_local $0
          i32.const 0
          get_local $10
          i32.sub
          i32.add
          tee_local $2
          i32.const 17680
          i32.load
          tee_local $12
          i32.lt_u
          if $_5
            call $_abort
          end ;; $_5
          get_local $10
          get_local $1
          i32.add
          set_local $0
          get_local $2
          i32.const 17684
          i32.load
          i32.eq
          if $_6
            block $_7
              get_local $7
              i32.const 4
              i32.add
              tee_local $3
              i32.load
              tee_local $1
              i32.const 3
              i32.and
              i32.const 3
              i32.ne
              if $_8
                block $_9
                  get_local $2
                  set_local $4
                  get_local $0
                  set_local $3
                  br $do-once
                end ;; $_9
              end ;; $_8
              i32.const 17672
              get_local $0
              i32.store
              get_local $3
              get_local $1
              i32.const -2
              i32.and
              i32.store
              get_local $2
              get_local $0
              i32.const 1
              i32.or
              i32.store offset=4
              get_local $2
              get_local $0
              i32.add
              get_local $0
              i32.store
              return
            end ;; $_7
          end ;; $_6
          get_local $10
          i32.const 3
          i32.shr_u
          set_local $6
          get_local $10
          i32.const 256
          i32.lt_u
          if $_10
            block $_11
              get_local $2
              i32.load offset=12
              set_local $4
              get_local $2
              i32.load offset=8
              tee_local $3
              get_local $6
              i32.const 3
              i32.shl
              i32.const 17704
              i32.add
              tee_local $1
              i32.ne
              if $_12
                block $_13
                  get_local $3
                  get_local $12
                  i32.lt_u
                  if $_14
                    call $_abort
                  end ;; $_14
                  get_local $3
                  i32.load offset=12
                  get_local $2
                  i32.ne
                  if $_15
                    call $_abort
                  end ;; $_15
                end ;; $_13
              end ;; $_12
              get_local $4
              get_local $3
              i32.eq
              if $_16
                block $_17
                  i32.const 17664
                  i32.const 17664
                  i32.load
                  i32.const 1
                  get_local $6
                  i32.shl
                  i32.const -1
                  i32.xor
                  i32.and
                  i32.store
                  get_local $2
                  set_local $4
                  get_local $0
                  set_local $3
                  br $do-once
                end ;; $_17
              end ;; $_16
              get_local $4
              get_local $1
              i32.eq
              if $_18
                get_local $4
                i32.const 8
                i32.add
                set_local $5
              else
                block $_19
                  get_local $4
                  get_local $12
                  i32.lt_u
                  if $_20
                    call $_abort
                  end ;; $_20
                  get_local $4
                  i32.const 8
                  i32.add
                  tee_local $1
                  i32.load
                  get_local $2
                  i32.eq
                  if $_21
                    get_local $1
                    set_local $5
                  else
                    call $_abort
                  end ;; $_21
                end ;; $_19
              end ;; $_18
              get_local $3
              get_local $4
              i32.store offset=12
              get_local $5
              get_local $3
              i32.store
              get_local $2
              set_local $4
              get_local $0
              set_local $3
              br $do-once
            end ;; $_11
          end ;; $_10
          get_local $2
          i32.load offset=24
          set_local $11
          block $do-once0
            get_local $2
            i32.load offset=12
            tee_local $1
            get_local $2
            i32.eq
            if $_22
              block $_23
                get_local $2
                i32.const 16
                i32.add
                tee_local $6
                i32.const 4
                i32.add
                tee_local $1
                i32.load
                tee_local $5
                i32.eqz
                if $_24
                  get_local $6
                  i32.load
                  tee_local $5
                  if $_25
                    get_local $6
                    set_local $1
                  else
                    block $_26
                      i32.const 0
                      set_local $8
                      br $do-once0
                    end ;; $_26
                  end ;; $_25
                end ;; $_24
                loop $while-in
                  get_local $5
                  i32.const 20
                  i32.add
                  tee_local $10
                  i32.load
                  tee_local $6
                  if $_27
                    block $_28
                      get_local $6
                      set_local $5
                      get_local $10
                      set_local $1
                      br $while-in
                    end ;; $_28
                  end ;; $_27
                  get_local $5
                  i32.const 16
                  i32.add
                  tee_local $10
                  i32.load
                  tee_local $6
                  if $_29
                    block $_30
                      get_local $6
                      set_local $5
                      get_local $10
                      set_local $1
                      br $while-in
                    end ;; $_30
                  end ;; $_29
                end ;; $while-in
                get_local $1
                get_local $12
                i32.lt_u
                if $_31
                  call $_abort
                else
                  block $_32
                    get_local $1
                    i32.const 0
                    i32.store
                    get_local $5
                    set_local $8
                  end ;; $_32
                end ;; $_31
              end ;; $_23
            else
              block $_33
                get_local $2
                i32.load offset=8
                tee_local $10
                get_local $12
                i32.lt_u
                if $_34
                  call $_abort
                end ;; $_34
                get_local $10
                i32.const 12
                i32.add
                tee_local $6
                i32.load
                get_local $2
                i32.ne
                if $_35
                  call $_abort
                end ;; $_35
                get_local $1
                i32.const 8
                i32.add
                tee_local $5
                i32.load
                get_local $2
                i32.eq
                if $_36
                  block $_37
                    get_local $6
                    get_local $1
                    i32.store
                    get_local $5
                    get_local $10
                    i32.store
                    get_local $1
                    set_local $8
                  end ;; $_37
                else
                  call $_abort
                end ;; $_36
              end ;; $_33
            end ;; $_22
          end ;; $do-once0
          get_local $11
          if $_38
            block $_39
              get_local $2
              get_local $2
              i32.load offset=28
              tee_local $5
              i32.const 2
              i32.shl
              i32.const 17968
              i32.add
              tee_local $1
              i32.load
              i32.eq
              if $_40
                block $_41
                  get_local $1
                  get_local $8
                  i32.store
                  get_local $8
                  i32.eqz
                  if $_42
                    block $_43
                      i32.const 17668
                      i32.const 17668
                      i32.load
                      i32.const 1
                      get_local $5
                      i32.shl
                      i32.const -1
                      i32.xor
                      i32.and
                      i32.store
                      get_local $2
                      set_local $4
                      get_local $0
                      set_local $3
                      br $do-once
                    end ;; $_43
                  end ;; $_42
                end ;; $_41
              else
                block $_44
                  get_local $11
                  i32.const 17680
                  i32.load
                  i32.lt_u
                  if $_45
                    call $_abort
                  end ;; $_45
                  get_local $11
                  i32.const 16
                  i32.add
                  tee_local $1
                  i32.load
                  get_local $2
                  i32.eq
                  if $_46
                    get_local $1
                    get_local $8
                    i32.store
                  else
                    get_local $11
                    get_local $8
                    i32.store offset=20
                  end ;; $_46
                  get_local $8
                  i32.eqz
                  if $_47
                    block $_48
                      get_local $2
                      set_local $4
                      get_local $0
                      set_local $3
                      br $do-once
                    end ;; $_48
                  end ;; $_47
                end ;; $_44
              end ;; $_40
              get_local $8
              i32.const 17680
              i32.load
              tee_local $5
              i32.lt_u
              if $_49
                call $_abort
              end ;; $_49
              get_local $8
              get_local $11
              i32.store offset=24
              get_local $2
              i32.const 16
              i32.add
              tee_local $1
              i32.load
              tee_local $6
              if $_50
                get_local $6
                get_local $5
                i32.lt_u
                if $_51
                  call $_abort
                else
                  block $_52
                    get_local $8
                    get_local $6
                    i32.store offset=16
                    get_local $6
                    get_local $8
                    i32.store offset=24
                  end ;; $_52
                end ;; $_51
              end ;; $_50
              get_local $1
              i32.load offset=4
              tee_local $1
              if $_53
                get_local $1
                i32.const 17680
                i32.load
                i32.lt_u
                if $_54
                  call $_abort
                else
                  block $_55
                    get_local $8
                    get_local $1
                    i32.store offset=20
                    get_local $1
                    get_local $8
                    i32.store offset=24
                    get_local $2
                    set_local $4
                    get_local $0
                    set_local $3
                  end ;; $_55
                end ;; $_54
              else
                block $_56
                  get_local $2
                  set_local $4
                  get_local $0
                  set_local $3
                end ;; $_56
              end ;; $_53
            end ;; $_39
          else
            block $_57
              get_local $2
              set_local $4
              get_local $0
              set_local $3
            end ;; $_57
          end ;; $_38
        end ;; $_3
      end ;; $_1
    end ;; $do-once
    get_local $7
    i32.const 17680
    i32.load
    tee_local $8
    i32.lt_u
    if $_58
      call $_abort
    end ;; $_58
    get_local $7
    i32.const 4
    i32.add
    tee_local $0
    i32.load
    tee_local $2
    i32.const 2
    i32.and
    if $_59
      block $_60
        get_local $0
        get_local $2
        i32.const -2
        i32.and
        i32.store
        get_local $4
        get_local $3
        i32.const 1
        i32.or
        i32.store offset=4
        get_local $4
        get_local $3
        i32.add
        get_local $3
        i32.store
      end ;; $_60
    else
      block $_61
        get_local $7
        i32.const 17688
        i32.load
        i32.eq
        if $_62
          block $_63
            i32.const 17676
            i32.const 17676
            i32.load
            get_local $3
            i32.add
            tee_local $0
            i32.store
            i32.const 17688
            get_local $4
            i32.store
            get_local $4
            get_local $0
            i32.const 1
            i32.or
            i32.store offset=4
            get_local $4
            i32.const 17684
            i32.load
            i32.ne
            if $_64
              return
            end ;; $_64
            i32.const 17684
            i32.const 0
            i32.store
            i32.const 17672
            i32.const 0
            i32.store
            return
          end ;; $_63
        end ;; $_62
        get_local $7
        i32.const 17684
        i32.load
        i32.eq
        if $_65
          block $_66
            i32.const 17672
            i32.const 17672
            i32.load
            get_local $3
            i32.add
            tee_local $0
            i32.store
            i32.const 17684
            get_local $4
            i32.store
            get_local $4
            get_local $0
            i32.const 1
            i32.or
            i32.store offset=4
            get_local $4
            get_local $0
            i32.add
            get_local $0
            i32.store
            return
          end ;; $_66
        end ;; $_65
        get_local $2
        i32.const -8
        i32.and
        get_local $3
        i32.add
        set_local $5
        get_local $2
        i32.const 3
        i32.shr_u
        set_local $1
        block $do-once4
          get_local $2
          i32.const 256
          i32.lt_u
          if $_67
            block $_68
              get_local $7
              i32.load offset=12
              set_local $2
              get_local $7
              i32.load offset=8
              tee_local $3
              get_local $1
              i32.const 3
              i32.shl
              i32.const 17704
              i32.add
              tee_local $0
              i32.ne
              if $_69
                block $_70
                  get_local $3
                  get_local $8
                  i32.lt_u
                  if $_71
                    call $_abort
                  end ;; $_71
                  get_local $3
                  i32.load offset=12
                  get_local $7
                  i32.ne
                  if $_72
                    call $_abort
                  end ;; $_72
                end ;; $_70
              end ;; $_69
              get_local $2
              get_local $3
              i32.eq
              if $_73
                block $_74
                  i32.const 17664
                  i32.const 17664
                  i32.load
                  i32.const 1
                  get_local $1
                  i32.shl
                  i32.const -1
                  i32.xor
                  i32.and
                  i32.store
                  br $do-once4
                end ;; $_74
              end ;; $_73
              get_local $2
              get_local $0
              i32.eq
              if $_75
                get_local $2
                i32.const 8
                i32.add
                set_local $14
              else
                block $_76
                  get_local $2
                  get_local $8
                  i32.lt_u
                  if $_77
                    call $_abort
                  end ;; $_77
                  get_local $2
                  i32.const 8
                  i32.add
                  tee_local $0
                  i32.load
                  get_local $7
                  i32.eq
                  if $_78
                    get_local $0
                    set_local $14
                  else
                    call $_abort
                  end ;; $_78
                end ;; $_76
              end ;; $_75
              get_local $3
              get_local $2
              i32.store offset=12
              get_local $14
              get_local $3
              i32.store
            end ;; $_68
          else
            block $_79
              get_local $7
              i32.load offset=24
              set_local $6
              block $do-once6
                get_local $7
                i32.load offset=12
                tee_local $0
                get_local $7
                i32.eq
                if $_80
                  block $_81
                    get_local $7
                    i32.const 16
                    i32.add
                    tee_local $3
                    i32.const 4
                    i32.add
                    tee_local $0
                    i32.load
                    tee_local $1
                    i32.eqz
                    if $_82
                      get_local $3
                      i32.load
                      tee_local $1
                      if $_83
                        get_local $3
                        set_local $0
                      else
                        block $_84
                          i32.const 0
                          set_local $9
                          br $do-once6
                        end ;; $_84
                      end ;; $_83
                    end ;; $_82
                    loop $while-in9
                      get_local $1
                      i32.const 20
                      i32.add
                      tee_local $2
                      i32.load
                      tee_local $3
                      if $_85
                        block $_86
                          get_local $3
                          set_local $1
                          get_local $2
                          set_local $0
                          br $while-in9
                        end ;; $_86
                      end ;; $_85
                      get_local $1
                      i32.const 16
                      i32.add
                      tee_local $2
                      i32.load
                      tee_local $3
                      if $_87
                        block $_88
                          get_local $3
                          set_local $1
                          get_local $2
                          set_local $0
                          br $while-in9
                        end ;; $_88
                      end ;; $_87
                    end ;; $while-in9
                    get_local $0
                    get_local $8
                    i32.lt_u
                    if $_89
                      call $_abort
                    else
                      block $_90
                        get_local $0
                        i32.const 0
                        i32.store
                        get_local $1
                        set_local $9
                      end ;; $_90
                    end ;; $_89
                  end ;; $_81
                else
                  block $_91
                    get_local $7
                    i32.load offset=8
                    tee_local $2
                    get_local $8
                    i32.lt_u
                    if $_92
                      call $_abort
                    end ;; $_92
                    get_local $2
                    i32.const 12
                    i32.add
                    tee_local $3
                    i32.load
                    get_local $7
                    i32.ne
                    if $_93
                      call $_abort
                    end ;; $_93
                    get_local $0
                    i32.const 8
                    i32.add
                    tee_local $1
                    i32.load
                    get_local $7
                    i32.eq
                    if $_94
                      block $_95
                        get_local $3
                        get_local $0
                        i32.store
                        get_local $1
                        get_local $2
                        i32.store
                        get_local $0
                        set_local $9
                      end ;; $_95
                    else
                      call $_abort
                    end ;; $_94
                  end ;; $_91
                end ;; $_80
              end ;; $do-once6
              get_local $6
              if $_96
                block $_97
                  get_local $7
                  get_local $7
                  i32.load offset=28
                  tee_local $1
                  i32.const 2
                  i32.shl
                  i32.const 17968
                  i32.add
                  tee_local $0
                  i32.load
                  i32.eq
                  if $_98
                    block $_99
                      get_local $0
                      get_local $9
                      i32.store
                      get_local $9
                      i32.eqz
                      if $_100
                        block $_101
                          i32.const 17668
                          i32.const 17668
                          i32.load
                          i32.const 1
                          get_local $1
                          i32.shl
                          i32.const -1
                          i32.xor
                          i32.and
                          i32.store
                          br $do-once4
                        end ;; $_101
                      end ;; $_100
                    end ;; $_99
                  else
                    block $_102
                      get_local $6
                      i32.const 17680
                      i32.load
                      i32.lt_u
                      if $_103
                        call $_abort
                      end ;; $_103
                      get_local $6
                      i32.const 16
                      i32.add
                      tee_local $0
                      i32.load
                      get_local $7
                      i32.eq
                      if $_104
                        get_local $0
                        get_local $9
                        i32.store
                      else
                        get_local $6
                        get_local $9
                        i32.store offset=20
                      end ;; $_104
                      get_local $9
                      i32.eqz
                      br_if $do-once4
                    end ;; $_102
                  end ;; $_98
                  get_local $9
                  i32.const 17680
                  i32.load
                  tee_local $1
                  i32.lt_u
                  if $_105
                    call $_abort
                  end ;; $_105
                  get_local $9
                  get_local $6
                  i32.store offset=24
                  get_local $7
                  i32.const 16
                  i32.add
                  tee_local $0
                  i32.load
                  tee_local $3
                  if $_106
                    get_local $3
                    get_local $1
                    i32.lt_u
                    if $_107
                      call $_abort
                    else
                      block $_108
                        get_local $9
                        get_local $3
                        i32.store offset=16
                        get_local $3
                        get_local $9
                        i32.store offset=24
                      end ;; $_108
                    end ;; $_107
                  end ;; $_106
                  get_local $0
                  i32.load offset=4
                  tee_local $0
                  if $_109
                    get_local $0
                    i32.const 17680
                    i32.load
                    i32.lt_u
                    if $_110
                      call $_abort
                    else
                      block $_111
                        get_local $9
                        get_local $0
                        i32.store offset=20
                        get_local $0
                        get_local $9
                        i32.store offset=24
                      end ;; $_111
                    end ;; $_110
                  end ;; $_109
                end ;; $_97
              end ;; $_96
            end ;; $_79
          end ;; $_67
        end ;; $do-once4
        get_local $4
        get_local $5
        i32.const 1
        i32.or
        i32.store offset=4
        get_local $4
        get_local $5
        i32.add
        get_local $5
        i32.store
        get_local $4
        i32.const 17684
        i32.load
        i32.eq
        if $_112
          block $_113
            i32.const 17672
            get_local $5
            i32.store
            return
          end ;; $_113
        else
          get_local $5
          set_local $3
        end ;; $_112
      end ;; $_61
    end ;; $_59
    get_local $3
    i32.const 3
    i32.shr_u
    set_local $0
    get_local $3
    i32.const 256
    i32.lt_u
    if $_114
      block $_115
        get_local $0
        i32.const 3
        i32.shl
        i32.const 17704
        i32.add
        set_local $3
        i32.const 17664
        i32.load
        tee_local $1
        i32.const 1
        get_local $0
        i32.shl
        tee_local $0
        i32.and
        if $_116
          get_local $3
          i32.const 8
          i32.add
          tee_local $1
          i32.load
          tee_local $0
          i32.const 17680
          i32.load
          i32.lt_u
          if $_117
            call $_abort
          else
            block $_118
              get_local $1
              set_local $15
              get_local $0
              set_local $13
            end ;; $_118
          end ;; $_117
        else
          block $_119
            i32.const 17664
            get_local $1
            get_local $0
            i32.or
            i32.store
            get_local $3
            i32.const 8
            i32.add
            set_local $15
            get_local $3
            set_local $13
          end ;; $_119
        end ;; $_116
        get_local $15
        get_local $4
        i32.store
        get_local $13
        get_local $4
        i32.store offset=12
        get_local $4
        get_local $13
        i32.store offset=8
        get_local $4
        get_local $3
        i32.store offset=12
        return
      end ;; $_115
    end ;; $_114
    get_local $3
    i32.const 8
    i32.shr_u
    tee_local $0
    if $_120 (result i32)
      get_local $3
      i32.const 16777215
      i32.gt_u
      if $_121 (result i32)
        i32.const 31
      else
        get_local $3
        i32.const 14
        get_local $0
        get_local $0
        i32.const 1048320
        i32.add
        i32.const 16
        i32.shr_u
        i32.const 8
        i32.and
        tee_local $2
        i32.shl
        tee_local $1
        i32.const 520192
        i32.add
        i32.const 16
        i32.shr_u
        i32.const 4
        i32.and
        tee_local $0
        get_local $2
        i32.or
        get_local $1
        get_local $0
        i32.shl
        tee_local $1
        i32.const 245760
        i32.add
        i32.const 16
        i32.shr_u
        i32.const 2
        i32.and
        tee_local $0
        i32.or
        i32.sub
        get_local $1
        get_local $0
        i32.shl
        i32.const 15
        i32.shr_u
        i32.add
        tee_local $0
        i32.const 7
        i32.add
        i32.shr_u
        i32.const 1
        i32.and
        get_local $0
        i32.const 1
        i32.shl
        i32.or
      end ;; $_121
    else
      i32.const 0
    end ;; $_120
    tee_local $5
    i32.const 2
    i32.shl
    i32.const 17968
    i32.add
    set_local $2
    get_local $4
    get_local $5
    i32.store offset=28
    get_local $4
    i32.const 0
    i32.store offset=20
    get_local $4
    i32.const 0
    i32.store offset=16
    i32.const 17668
    i32.load
    tee_local $1
    i32.const 1
    get_local $5
    i32.shl
    tee_local $0
    i32.and
    i32.eqz
    if $_122
      block $_123
        i32.const 17668
        get_local $1
        get_local $0
        i32.or
        i32.store
        get_local $2
        get_local $4
        i32.store
        get_local $4
        get_local $2
        i32.store offset=24
        get_local $4
        get_local $4
        i32.store offset=12
        get_local $4
        get_local $4
        i32.store offset=8
        return
      end ;; $_123
    end ;; $_122
    get_local $3
    get_local $5
    i32.const 31
    i32.eq
    if $_124 (result i32)
      i32.const 0
    else
      i32.const 25
      get_local $5
      i32.const 1
      i32.shr_u
      i32.sub
    end ;; $_124
    i32.shl
    set_local $5
    get_local $2
    i32.load
    set_local $0
    block $__rjti$1
      block $__rjti$0
        loop $while-in13
          get_local $0
          i32.load offset=4
          i32.const -8
          i32.and
          get_local $3
          i32.eq
          br_if $__rjti$1
          get_local $0
          i32.const 16
          i32.add
          get_local $5
          i32.const 31
          i32.shr_u
          i32.const 2
          i32.shl
          i32.add
          tee_local $2
          i32.load
          tee_local $1
          i32.eqz
          br_if $__rjti$0
          get_local $5
          i32.const 1
          i32.shl
          set_local $5
          get_local $1
          set_local $0
          br $while-in13
        end ;; $while-in13
      end ;; $__rjti$0
      get_local $2
      i32.const 17680
      i32.load
      i32.lt_u
      if $if
        call $_abort
      end ;; $if
      get_local $2
      get_local $4
      i32.store
      get_local $4
      get_local $0
      i32.store offset=24
      get_local $4
      get_local $4
      i32.store offset=12
      get_local $4
      get_local $4
      i32.store offset=8
      return
    end ;; $__rjti$1
    get_local $0
    i32.const 8
    i32.add
    tee_local $3
    i32.load
    tee_local $2
    i32.const 17680
    i32.load
    tee_local $1
    i32.ge_u
    get_local $0
    get_local $1
    i32.ge_u
    i32.and
    i32.eqz
    if $if_1
      call $_abort
    end ;; $if_1
    get_local $2
    get_local $4
    i32.store offset=12
    get_local $3
    get_local $4
    i32.store
    get_local $4
    get_local $2
    i32.store offset=8
    get_local $4
    get_local $0
    i32.store offset=12
    get_local $4
    i32.const 0
    i32.store offset=24
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    (local $25 i32)
    (local $26 i32)
    (local $27 i32)
    (local $28 i32)
    (local $29 i32)
    (local $30 i32)
    (local $31 i32)
    (local $32 i32)
    (local $33 i32)
    (local $34 i32)
    (local $35 i32)
    (local $36 i32)
    (local $37 i32)
    (local $38 i32)
    (local $39 i32)
    (local $40 i32)
    (local $41 i32)
    (local $42 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 144
    i32.add
    set_global $STACKTOP
    get_local $7
    i32.const 132
    i32.add
    set_local $8
    get_local $7
    i32.const 116
    i32.add
    set_local $10
    get_local $7
    i32.const 124
    i32.add
    set_local $12
    get_local $7
    i32.const 120
    i32.add
    set_local $13
    get_local $7
    i32.const 112
    i32.add
    set_local $14
    get_local $7
    i32.const 108
    i32.add
    set_local $15
    get_local $7
    i32.const 104
    i32.add
    set_local $16
    get_local $7
    i32.const 100
    i32.add
    set_local $17
    get_local $7
    i32.const 96
    i32.add
    set_local $18
    get_local $7
    i32.const 92
    i32.add
    set_local $19
    get_local $7
    i32.const 88
    i32.add
    set_local $20
    get_local $7
    i32.const 84
    i32.add
    set_local $21
    get_local $7
    i32.const 80
    i32.add
    set_local $22
    get_local $7
    i32.const 76
    i32.add
    set_local $23
    get_local $7
    i32.const 72
    i32.add
    set_local $24
    get_local $7
    i32.const 68
    i32.add
    set_local $25
    get_local $7
    i32.const 64
    i32.add
    set_local $26
    get_local $7
    i32.const 60
    i32.add
    set_local $27
    get_local $7
    i32.const 56
    i32.add
    set_local $28
    get_local $7
    i32.const 52
    i32.add
    set_local $29
    get_local $7
    i32.const 48
    i32.add
    set_local $30
    get_local $7
    i32.const 44
    i32.add
    set_local $31
    get_local $7
    i32.const 40
    i32.add
    set_local $32
    get_local $7
    i32.const 36
    i32.add
    set_local $33
    get_local $7
    i32.const 32
    i32.add
    set_local $34
    get_local $7
    i32.const 28
    i32.add
    set_local $35
    get_local $7
    i32.const 24
    i32.add
    set_local $36
    get_local $7
    i32.const 20
    i32.add
    set_local $37
    get_local $7
    i32.const 16
    i32.add
    set_local $38
    get_local $7
    i32.const 12
    i32.add
    set_local $39
    get_local $7
    i32.const 8
    i32.add
    set_local $40
    get_local $7
    i32.const 4
    i32.add
    set_local $41
    get_local $7
    set_local $11
    get_local $4
    i32.const 0
    i32.store
    get_local $7
    i32.const 128
    i32.add
    tee_local $9
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $42
    i32.store
    get_local $9
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $9
    get_local $42
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    block $__rjto$0
      block $__rjti$0
        block $switch-default
          block $switch-case26
            block $switch-case25
              block $switch-case24
                block $switch-case23
                  block $switch-case22
                    block $switch-case21
                      block $switch-case20
                        block $switch-case19
                          block $switch-case18
                            block $switch-case17
                              block $switch-case16
                                block $switch-case14
                                  block $switch-case13
                                    block $switch-case12
                                      block $switch-case11
                                        block $switch-case10
                                          block $switch-case9
                                            block $switch-case8
                                              block $switch-case7
                                                block $switch-case5
                                                  block $switch-case4
                                                    block $switch-case1
                                                      block $switch-case
                                                        get_local $6
                                                        i32.const 24
                                                        i32.shl
                                                        i32.const 24
                                                        i32.shr_s
                                                        i32.const 37
                                                        i32.sub
                                                        br_table
                                                          $switch-case26 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                                                          $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-case1 $switch-default $switch-case7
                                                          $switch-default $switch-case8 $switch-default $switch-case9 $switch-case10 $switch-default $switch-default $switch-default $switch-case13 $switch-default $switch-default $switch-default $switch-default $switch-case18 $switch-case19 $switch-case20
                                                          $switch-default $switch-default $switch-default $switch-case23 $switch-case25 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-case1 $switch-case4 $switch-case5
                                                          $switch-case5 $switch-default $switch-default $switch-case1 $switch-default $switch-case11 $switch-default $switch-default $switch-case12 $switch-case14 $switch-default $switch-case16 $switch-default $switch-case17 $switch-default $switch-case14
                                                          $switch-default $switch-default $switch-case21 $switch-case22 $switch-case24
                                                          $switch-default ;; default
                                                      end ;; $switch-case
                                                      get_local $12
                                                      get_local $2
                                                      i32.load
                                                      i32.store
                                                      get_local $8
                                                      get_local $12
                                                      i32.load
                                                      i32.store
                                                      get_local $0
                                                      get_local $5
                                                      i32.const 24
                                                      i32.add
                                                      get_local $1
                                                      get_local $8
                                                      get_local $4
                                                      get_local $9
                                                      call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE
                                                      br $__rjti$0
                                                    end ;; $switch-case1
                                                    get_local $13
                                                    get_local $2
                                                    i32.load
                                                    i32.store
                                                    get_local $8
                                                    get_local $13
                                                    i32.load
                                                    i32.store
                                                    get_local $0
                                                    get_local $5
                                                    i32.const 16
                                                    i32.add
                                                    get_local $1
                                                    get_local $8
                                                    get_local $4
                                                    get_local $9
                                                    call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE
                                                    br $__rjti$0
                                                  end ;; $switch-case4
                                                  get_local $0
                                                  i32.const 8
                                                  i32.add
                                                  tee_local $6
                                                  get_local $6
                                                  i32.load
                                                  i32.load offset=12
                                                  i32.const 63
                                                  i32.and
                                                  i32.const 312
                                                  i32.add
                                                  call_indirect (type $FUNCSIG$ii)
                                                  set_local $6
                                                  get_local $14
                                                  get_local $1
                                                  i32.load
                                                  i32.store
                                                  get_local $15
                                                  get_local $2
                                                  i32.load
                                                  i32.store
                                                  get_local $6
                                                  i32.load8_s offset=11
                                                  tee_local $11
                                                  i32.const 0
                                                  i32.lt_s
                                                  tee_local $9
                                                  if $if (result i32)
                                                    get_local $6
                                                    i32.load
                                                  else
                                                    get_local $6
                                                  end ;; $if
                                                  tee_local $2
                                                  get_local $9
                                                  if $if_1 (result i32)
                                                    get_local $6
                                                    i32.load offset=4
                                                  else
                                                    get_local $11
                                                    i32.const 255
                                                    i32.and
                                                  end ;; $if_1
                                                  i32.const 2
                                                  i32.shl
                                                  i32.add
                                                  set_local $6
                                                  get_local $10
                                                  get_local $14
                                                  i32.load
                                                  i32.store
                                                  get_local $8
                                                  get_local $15
                                                  i32.load
                                                  i32.store
                                                  get_local $1
                                                  get_local $0
                                                  get_local $10
                                                  get_local $8
                                                  get_local $3
                                                  get_local $4
                                                  get_local $5
                                                  get_local $2
                                                  get_local $6
                                                  call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
                                                  i32.store
                                                  br $__rjti$0
                                                end ;; $switch-case5
                                                get_local $16
                                                get_local $2
                                                i32.load
                                                i32.store
                                                get_local $8
                                                get_local $16
                                                i32.load
                                                i32.store
                                                get_local $0
                                                get_local $5
                                                i32.const 12
                                                i32.add
                                                get_local $1
                                                get_local $8
                                                get_local $4
                                                get_local $9
                                                call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE
                                                br $__rjti$0
                                              end ;; $switch-case7
                                              get_local $17
                                              get_local $1
                                              i32.load
                                              i32.store
                                              get_local $18
                                              get_local $2
                                              i32.load
                                              i32.store
                                              get_local $10
                                              get_local $17
                                              i32.load
                                              i32.store
                                              get_local $8
                                              get_local $18
                                              i32.load
                                              i32.store
                                              get_local $1
                                              get_local $0
                                              get_local $10
                                              get_local $8
                                              get_local $3
                                              get_local $4
                                              get_local $5
                                              i32.const 7336
                                              i32.const 7368
                                              call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
                                              i32.store
                                              br $__rjti$0
                                            end ;; $switch-case8
                                            get_local $19
                                            get_local $1
                                            i32.load
                                            i32.store
                                            get_local $20
                                            get_local $2
                                            i32.load
                                            i32.store
                                            get_local $10
                                            get_local $19
                                            i32.load
                                            i32.store
                                            get_local $8
                                            get_local $20
                                            i32.load
                                            i32.store
                                            get_local $1
                                            get_local $0
                                            get_local $10
                                            get_local $8
                                            get_local $3
                                            get_local $4
                                            get_local $5
                                            i32.const 7368
                                            i32.const 7400
                                            call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
                                            i32.store
                                            br $__rjti$0
                                          end ;; $switch-case9
                                          get_local $21
                                          get_local $2
                                          i32.load
                                          i32.store
                                          get_local $8
                                          get_local $21
                                          i32.load
                                          i32.store
                                          get_local $0
                                          get_local $5
                                          i32.const 8
                                          i32.add
                                          get_local $1
                                          get_local $8
                                          get_local $4
                                          get_local $9
                                          call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE
                                          br $__rjti$0
                                        end ;; $switch-case10
                                        get_local $22
                                        get_local $2
                                        i32.load
                                        i32.store
                                        get_local $8
                                        get_local $22
                                        i32.load
                                        i32.store
                                        get_local $0
                                        get_local $5
                                        i32.const 8
                                        i32.add
                                        get_local $1
                                        get_local $8
                                        get_local $4
                                        get_local $9
                                        call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE
                                        br $__rjti$0
                                      end ;; $switch-case11
                                      get_local $23
                                      get_local $2
                                      i32.load
                                      i32.store
                                      get_local $8
                                      get_local $23
                                      i32.load
                                      i32.store
                                      get_local $0
                                      get_local $5
                                      i32.const 28
                                      i32.add
                                      get_local $1
                                      get_local $8
                                      get_local $4
                                      get_local $9
                                      call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE
                                      br $__rjti$0
                                    end ;; $switch-case12
                                    get_local $24
                                    get_local $2
                                    i32.load
                                    i32.store
                                    get_local $8
                                    get_local $24
                                    i32.load
                                    i32.store
                                    get_local $0
                                    get_local $5
                                    i32.const 16
                                    i32.add
                                    get_local $1
                                    get_local $8
                                    get_local $4
                                    get_local $9
                                    call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE
                                    br $__rjti$0
                                  end ;; $switch-case13
                                  get_local $25
                                  get_local $2
                                  i32.load
                                  i32.store
                                  get_local $8
                                  get_local $25
                                  i32.load
                                  i32.store
                                  get_local $0
                                  get_local $5
                                  i32.const 4
                                  i32.add
                                  get_local $1
                                  get_local $8
                                  get_local $4
                                  get_local $9
                                  call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE
                                  br $__rjti$0
                                end ;; $switch-case14
                                get_local $26
                                get_local $2
                                i32.load
                                i32.store
                                get_local $8
                                get_local $26
                                i32.load
                                i32.store
                                get_local $0
                                get_local $1
                                get_local $8
                                get_local $4
                                get_local $9
                                call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE
                                br $__rjti$0
                              end ;; $switch-case16
                              get_local $27
                              get_local $2
                              i32.load
                              i32.store
                              get_local $8
                              get_local $27
                              i32.load
                              i32.store
                              get_local $0
                              get_local $5
                              i32.const 8
                              i32.add
                              get_local $1
                              get_local $8
                              get_local $4
                              get_local $9
                              call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE
                              br $__rjti$0
                            end ;; $switch-case17
                            get_local $28
                            get_local $1
                            i32.load
                            i32.store
                            get_local $29
                            get_local $2
                            i32.load
                            i32.store
                            get_local $10
                            get_local $28
                            i32.load
                            i32.store
                            get_local $8
                            get_local $29
                            i32.load
                            i32.store
                            get_local $1
                            get_local $0
                            get_local $10
                            get_local $8
                            get_local $3
                            get_local $4
                            get_local $5
                            i32.const 7400
                            i32.const 7444
                            call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
                            i32.store
                            br $__rjti$0
                          end ;; $switch-case18
                          get_local $30
                          get_local $1
                          i32.load
                          i32.store
                          get_local $31
                          get_local $2
                          i32.load
                          i32.store
                          get_local $10
                          get_local $30
                          i32.load
                          i32.store
                          get_local $8
                          get_local $31
                          i32.load
                          i32.store
                          get_local $1
                          get_local $0
                          get_local $10
                          get_local $8
                          get_local $3
                          get_local $4
                          get_local $5
                          i32.const 7444
                          i32.const 7464
                          call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
                          i32.store
                          br $__rjti$0
                        end ;; $switch-case19
                        get_local $32
                        get_local $2
                        i32.load
                        i32.store
                        get_local $8
                        get_local $32
                        i32.load
                        i32.store
                        get_local $0
                        get_local $5
                        get_local $1
                        get_local $8
                        get_local $4
                        get_local $9
                        call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE
                        br $__rjti$0
                      end ;; $switch-case20
                      get_local $33
                      get_local $1
                      i32.load
                      i32.store
                      get_local $34
                      get_local $2
                      i32.load
                      i32.store
                      get_local $10
                      get_local $33
                      i32.load
                      i32.store
                      get_local $8
                      get_local $34
                      i32.load
                      i32.store
                      get_local $1
                      get_local $0
                      get_local $10
                      get_local $8
                      get_local $3
                      get_local $4
                      get_local $5
                      i32.const 7464
                      i32.const 7496
                      call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
                      i32.store
                      br $__rjti$0
                    end ;; $switch-case21
                    get_local $35
                    get_local $2
                    i32.load
                    i32.store
                    get_local $8
                    get_local $35
                    i32.load
                    i32.store
                    get_local $0
                    get_local $5
                    i32.const 24
                    i32.add
                    get_local $1
                    get_local $8
                    get_local $4
                    get_local $9
                    call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE
                    br $__rjti$0
                  end ;; $switch-case22
                  get_local $0
                  i32.load
                  i32.load offset=20
                  set_local $6
                  get_local $36
                  get_local $1
                  i32.load
                  i32.store
                  get_local $37
                  get_local $2
                  i32.load
                  i32.store
                  get_local $10
                  get_local $36
                  i32.load
                  i32.store
                  get_local $8
                  get_local $37
                  i32.load
                  i32.store
                  get_local $0
                  get_local $10
                  get_local $8
                  get_local $3
                  get_local $4
                  get_local $5
                  get_local $6
                  i32.const 63
                  i32.and
                  i32.const 240
                  i32.add
                  call_indirect (type $FUNCSIG$iiiiiii)
                  set_local $0
                  br $__rjto$0
                end ;; $switch-case23
                get_local $0
                i32.const 8
                i32.add
                tee_local $6
                get_local $6
                i32.load
                i32.load offset=24
                i32.const 63
                i32.and
                i32.const 312
                i32.add
                call_indirect (type $FUNCSIG$ii)
                set_local $6
                get_local $38
                get_local $1
                i32.load
                i32.store
                get_local $39
                get_local $2
                i32.load
                i32.store
                get_local $6
                i32.load8_s offset=11
                tee_local $11
                i32.const 0
                i32.lt_s
                tee_local $9
                if $if_2 (result i32)
                  get_local $6
                  i32.load
                else
                  get_local $6
                end ;; $if_2
                tee_local $2
                get_local $9
                if $if_3 (result i32)
                  get_local $6
                  i32.load offset=4
                else
                  get_local $11
                  i32.const 255
                  i32.and
                end ;; $if_3
                i32.const 2
                i32.shl
                i32.add
                set_local $6
                get_local $10
                get_local $38
                i32.load
                i32.store
                get_local $8
                get_local $39
                i32.load
                i32.store
                get_local $1
                get_local $0
                get_local $10
                get_local $8
                get_local $3
                get_local $4
                get_local $5
                get_local $2
                get_local $6
                call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
                i32.store
                br $__rjti$0
              end ;; $switch-case24
              get_local $40
              get_local $2
              i32.load
              i32.store
              get_local $8
              get_local $40
              i32.load
              i32.store
              get_local $0
              get_local $5
              i32.const 20
              i32.add
              get_local $1
              get_local $8
              get_local $4
              get_local $9
              call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE
              br $__rjti$0
            end ;; $switch-case25
            get_local $41
            get_local $2
            i32.load
            i32.store
            get_local $8
            get_local $41
            i32.load
            i32.store
            get_local $0
            get_local $5
            i32.const 20
            i32.add
            get_local $1
            get_local $8
            get_local $4
            get_local $9
            call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE
            br $__rjti$0
          end ;; $switch-case26
          get_local $11
          get_local $2
          i32.load
          i32.store
          get_local $8
          get_local $11
          i32.load
          i32.store
          get_local $0
          get_local $1
          get_local $8
          get_local $4
          get_local $9
          call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE
          br $__rjti$0
        end ;; $switch-default
        get_local $4
        get_local $4
        i32.load
        i32.const 4
        i32.or
        i32.store
      end ;; $__rjti$0
      get_local $1
      i32.load
      set_local $0
    end ;; $__rjto$0
    get_local $7
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    (local $25 i32)
    (local $26 i32)
    (local $27 i32)
    (local $28 i32)
    (local $29 i32)
    (local $30 i32)
    (local $31 i32)
    (local $32 i32)
    (local $33 i32)
    (local $34 i32)
    (local $35 i32)
    (local $36 i32)
    (local $37 i32)
    (local $38 i32)
    (local $39 i32)
    (local $40 i32)
    (local $41 i32)
    (local $42 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 144
    i32.add
    set_global $STACKTOP
    get_local $7
    i32.const 132
    i32.add
    set_local $8
    get_local $7
    i32.const 116
    i32.add
    set_local $10
    get_local $7
    i32.const 124
    i32.add
    set_local $12
    get_local $7
    i32.const 120
    i32.add
    set_local $13
    get_local $7
    i32.const 112
    i32.add
    set_local $14
    get_local $7
    i32.const 108
    i32.add
    set_local $15
    get_local $7
    i32.const 104
    i32.add
    set_local $16
    get_local $7
    i32.const 100
    i32.add
    set_local $17
    get_local $7
    i32.const 96
    i32.add
    set_local $18
    get_local $7
    i32.const 92
    i32.add
    set_local $19
    get_local $7
    i32.const 88
    i32.add
    set_local $20
    get_local $7
    i32.const 84
    i32.add
    set_local $21
    get_local $7
    i32.const 80
    i32.add
    set_local $22
    get_local $7
    i32.const 76
    i32.add
    set_local $23
    get_local $7
    i32.const 72
    i32.add
    set_local $24
    get_local $7
    i32.const 68
    i32.add
    set_local $25
    get_local $7
    i32.const 64
    i32.add
    set_local $26
    get_local $7
    i32.const 60
    i32.add
    set_local $27
    get_local $7
    i32.const 56
    i32.add
    set_local $28
    get_local $7
    i32.const 52
    i32.add
    set_local $29
    get_local $7
    i32.const 48
    i32.add
    set_local $30
    get_local $7
    i32.const 44
    i32.add
    set_local $31
    get_local $7
    i32.const 40
    i32.add
    set_local $32
    get_local $7
    i32.const 36
    i32.add
    set_local $33
    get_local $7
    i32.const 32
    i32.add
    set_local $34
    get_local $7
    i32.const 28
    i32.add
    set_local $35
    get_local $7
    i32.const 24
    i32.add
    set_local $36
    get_local $7
    i32.const 20
    i32.add
    set_local $37
    get_local $7
    i32.const 16
    i32.add
    set_local $38
    get_local $7
    i32.const 12
    i32.add
    set_local $39
    get_local $7
    i32.const 8
    i32.add
    set_local $40
    get_local $7
    i32.const 4
    i32.add
    set_local $41
    get_local $7
    set_local $11
    get_local $4
    i32.const 0
    i32.store
    get_local $7
    i32.const 128
    i32.add
    tee_local $9
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $42
    i32.store
    get_local $9
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $9
    get_local $42
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    block $__rjto$0
      block $__rjti$0
        block $switch-default
          block $switch-case26
            block $switch-case25
              block $switch-case24
                block $switch-case23
                  block $switch-case22
                    block $switch-case21
                      block $switch-case20
                        block $switch-case19
                          block $switch-case18
                            block $switch-case17
                              block $switch-case16
                                block $switch-case14
                                  block $switch-case13
                                    block $switch-case12
                                      block $switch-case11
                                        block $switch-case10
                                          block $switch-case9
                                            block $switch-case8
                                              block $switch-case7
                                                block $switch-case5
                                                  block $switch-case4
                                                    block $switch-case1
                                                      block $switch-case
                                                        get_local $6
                                                        i32.const 24
                                                        i32.shl
                                                        i32.const 24
                                                        i32.shr_s
                                                        i32.const 37
                                                        i32.sub
                                                        br_table
                                                          $switch-case26 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                                                          $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-case1 $switch-default $switch-case7
                                                          $switch-default $switch-case8 $switch-default $switch-case9 $switch-case10 $switch-default $switch-default $switch-default $switch-case13 $switch-default $switch-default $switch-default $switch-default $switch-case18 $switch-case19 $switch-case20
                                                          $switch-default $switch-default $switch-default $switch-case23 $switch-case25 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-case1 $switch-case4 $switch-case5
                                                          $switch-case5 $switch-default $switch-default $switch-case1 $switch-default $switch-case11 $switch-default $switch-default $switch-case12 $switch-case14 $switch-default $switch-case16 $switch-default $switch-case17 $switch-default $switch-case14
                                                          $switch-default $switch-default $switch-case21 $switch-case22 $switch-case24
                                                          $switch-default ;; default
                                                      end ;; $switch-case
                                                      get_local $12
                                                      get_local $2
                                                      i32.load
                                                      i32.store
                                                      get_local $8
                                                      get_local $12
                                                      i32.load
                                                      i32.store
                                                      get_local $0
                                                      get_local $5
                                                      i32.const 24
                                                      i32.add
                                                      get_local $1
                                                      get_local $8
                                                      get_local $4
                                                      get_local $9
                                                      call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE
                                                      br $__rjti$0
                                                    end ;; $switch-case1
                                                    get_local $13
                                                    get_local $2
                                                    i32.load
                                                    i32.store
                                                    get_local $8
                                                    get_local $13
                                                    i32.load
                                                    i32.store
                                                    get_local $0
                                                    get_local $5
                                                    i32.const 16
                                                    i32.add
                                                    get_local $1
                                                    get_local $8
                                                    get_local $4
                                                    get_local $9
                                                    call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE
                                                    br $__rjti$0
                                                  end ;; $switch-case4
                                                  get_local $0
                                                  i32.const 8
                                                  i32.add
                                                  tee_local $6
                                                  get_local $6
                                                  i32.load
                                                  i32.load offset=12
                                                  i32.const 63
                                                  i32.and
                                                  i32.const 312
                                                  i32.add
                                                  call_indirect (type $FUNCSIG$ii)
                                                  set_local $6
                                                  get_local $14
                                                  get_local $1
                                                  i32.load
                                                  i32.store
                                                  get_local $15
                                                  get_local $2
                                                  i32.load
                                                  i32.store
                                                  get_local $6
                                                  i32.load8_s offset=11
                                                  tee_local $11
                                                  i32.const 0
                                                  i32.lt_s
                                                  tee_local $9
                                                  if $if (result i32)
                                                    get_local $6
                                                    i32.load
                                                  else
                                                    get_local $6
                                                  end ;; $if
                                                  tee_local $2
                                                  get_local $9
                                                  if $if_1 (result i32)
                                                    get_local $6
                                                    i32.load offset=4
                                                  else
                                                    get_local $11
                                                    i32.const 255
                                                    i32.and
                                                  end ;; $if_1
                                                  i32.add
                                                  set_local $6
                                                  get_local $10
                                                  get_local $14
                                                  i32.load
                                                  i32.store
                                                  get_local $8
                                                  get_local $15
                                                  i32.load
                                                  i32.store
                                                  get_local $1
                                                  get_local $0
                                                  get_local $10
                                                  get_local $8
                                                  get_local $3
                                                  get_local $4
                                                  get_local $5
                                                  get_local $2
                                                  get_local $6
                                                  call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
                                                  i32.store
                                                  br $__rjti$0
                                                end ;; $switch-case5
                                                get_local $16
                                                get_local $2
                                                i32.load
                                                i32.store
                                                get_local $8
                                                get_local $16
                                                i32.load
                                                i32.store
                                                get_local $0
                                                get_local $5
                                                i32.const 12
                                                i32.add
                                                get_local $1
                                                get_local $8
                                                get_local $4
                                                get_local $9
                                                call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE
                                                br $__rjti$0
                                              end ;; $switch-case7
                                              get_local $17
                                              get_local $1
                                              i32.load
                                              i32.store
                                              get_local $18
                                              get_local $2
                                              i32.load
                                              i32.store
                                              get_local $10
                                              get_local $17
                                              i32.load
                                              i32.store
                                              get_local $8
                                              get_local $18
                                              i32.load
                                              i32.store
                                              get_local $1
                                              get_local $0
                                              get_local $10
                                              get_local $8
                                              get_local $3
                                              get_local $4
                                              get_local $5
                                              i32.const 14419
                                              i32.const 14427
                                              call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
                                              i32.store
                                              br $__rjti$0
                                            end ;; $switch-case8
                                            get_local $19
                                            get_local $1
                                            i32.load
                                            i32.store
                                            get_local $20
                                            get_local $2
                                            i32.load
                                            i32.store
                                            get_local $10
                                            get_local $19
                                            i32.load
                                            i32.store
                                            get_local $8
                                            get_local $20
                                            i32.load
                                            i32.store
                                            get_local $1
                                            get_local $0
                                            get_local $10
                                            get_local $8
                                            get_local $3
                                            get_local $4
                                            get_local $5
                                            i32.const 14427
                                            i32.const 14435
                                            call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
                                            i32.store
                                            br $__rjti$0
                                          end ;; $switch-case9
                                          get_local $21
                                          get_local $2
                                          i32.load
                                          i32.store
                                          get_local $8
                                          get_local $21
                                          i32.load
                                          i32.store
                                          get_local $0
                                          get_local $5
                                          i32.const 8
                                          i32.add
                                          get_local $1
                                          get_local $8
                                          get_local $4
                                          get_local $9
                                          call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE
                                          br $__rjti$0
                                        end ;; $switch-case10
                                        get_local $22
                                        get_local $2
                                        i32.load
                                        i32.store
                                        get_local $8
                                        get_local $22
                                        i32.load
                                        i32.store
                                        get_local $0
                                        get_local $5
                                        i32.const 8
                                        i32.add
                                        get_local $1
                                        get_local $8
                                        get_local $4
                                        get_local $9
                                        call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE
                                        br $__rjti$0
                                      end ;; $switch-case11
                                      get_local $23
                                      get_local $2
                                      i32.load
                                      i32.store
                                      get_local $8
                                      get_local $23
                                      i32.load
                                      i32.store
                                      get_local $0
                                      get_local $5
                                      i32.const 28
                                      i32.add
                                      get_local $1
                                      get_local $8
                                      get_local $4
                                      get_local $9
                                      call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE
                                      br $__rjti$0
                                    end ;; $switch-case12
                                    get_local $24
                                    get_local $2
                                    i32.load
                                    i32.store
                                    get_local $8
                                    get_local $24
                                    i32.load
                                    i32.store
                                    get_local $0
                                    get_local $5
                                    i32.const 16
                                    i32.add
                                    get_local $1
                                    get_local $8
                                    get_local $4
                                    get_local $9
                                    call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE
                                    br $__rjti$0
                                  end ;; $switch-case13
                                  get_local $25
                                  get_local $2
                                  i32.load
                                  i32.store
                                  get_local $8
                                  get_local $25
                                  i32.load
                                  i32.store
                                  get_local $0
                                  get_local $5
                                  i32.const 4
                                  i32.add
                                  get_local $1
                                  get_local $8
                                  get_local $4
                                  get_local $9
                                  call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE
                                  br $__rjti$0
                                end ;; $switch-case14
                                get_local $26
                                get_local $2
                                i32.load
                                i32.store
                                get_local $8
                                get_local $26
                                i32.load
                                i32.store
                                get_local $0
                                get_local $1
                                get_local $8
                                get_local $4
                                get_local $9
                                call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE
                                br $__rjti$0
                              end ;; $switch-case16
                              get_local $27
                              get_local $2
                              i32.load
                              i32.store
                              get_local $8
                              get_local $27
                              i32.load
                              i32.store
                              get_local $0
                              get_local $5
                              i32.const 8
                              i32.add
                              get_local $1
                              get_local $8
                              get_local $4
                              get_local $9
                              call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE
                              br $__rjti$0
                            end ;; $switch-case17
                            get_local $28
                            get_local $1
                            i32.load
                            i32.store
                            get_local $29
                            get_local $2
                            i32.load
                            i32.store
                            get_local $10
                            get_local $28
                            i32.load
                            i32.store
                            get_local $8
                            get_local $29
                            i32.load
                            i32.store
                            get_local $1
                            get_local $0
                            get_local $10
                            get_local $8
                            get_local $3
                            get_local $4
                            get_local $5
                            i32.const 14435
                            i32.const 14446
                            call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
                            i32.store
                            br $__rjti$0
                          end ;; $switch-case18
                          get_local $30
                          get_local $1
                          i32.load
                          i32.store
                          get_local $31
                          get_local $2
                          i32.load
                          i32.store
                          get_local $10
                          get_local $30
                          i32.load
                          i32.store
                          get_local $8
                          get_local $31
                          i32.load
                          i32.store
                          get_local $1
                          get_local $0
                          get_local $10
                          get_local $8
                          get_local $3
                          get_local $4
                          get_local $5
                          i32.const 14446
                          i32.const 14451
                          call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
                          i32.store
                          br $__rjti$0
                        end ;; $switch-case19
                        get_local $32
                        get_local $2
                        i32.load
                        i32.store
                        get_local $8
                        get_local $32
                        i32.load
                        i32.store
                        get_local $0
                        get_local $5
                        get_local $1
                        get_local $8
                        get_local $4
                        get_local $9
                        call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE
                        br $__rjti$0
                      end ;; $switch-case20
                      get_local $33
                      get_local $1
                      i32.load
                      i32.store
                      get_local $34
                      get_local $2
                      i32.load
                      i32.store
                      get_local $10
                      get_local $33
                      i32.load
                      i32.store
                      get_local $8
                      get_local $34
                      i32.load
                      i32.store
                      get_local $1
                      get_local $0
                      get_local $10
                      get_local $8
                      get_local $3
                      get_local $4
                      get_local $5
                      i32.const 14451
                      i32.const 14459
                      call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
                      i32.store
                      br $__rjti$0
                    end ;; $switch-case21
                    get_local $35
                    get_local $2
                    i32.load
                    i32.store
                    get_local $8
                    get_local $35
                    i32.load
                    i32.store
                    get_local $0
                    get_local $5
                    i32.const 24
                    i32.add
                    get_local $1
                    get_local $8
                    get_local $4
                    get_local $9
                    call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE
                    br $__rjti$0
                  end ;; $switch-case22
                  get_local $0
                  i32.load
                  i32.load offset=20
                  set_local $6
                  get_local $36
                  get_local $1
                  i32.load
                  i32.store
                  get_local $37
                  get_local $2
                  i32.load
                  i32.store
                  get_local $10
                  get_local $36
                  i32.load
                  i32.store
                  get_local $8
                  get_local $37
                  i32.load
                  i32.store
                  get_local $0
                  get_local $10
                  get_local $8
                  get_local $3
                  get_local $4
                  get_local $5
                  get_local $6
                  i32.const 63
                  i32.and
                  i32.const 240
                  i32.add
                  call_indirect (type $FUNCSIG$iiiiiii)
                  set_local $0
                  br $__rjto$0
                end ;; $switch-case23
                get_local $0
                i32.const 8
                i32.add
                tee_local $6
                get_local $6
                i32.load
                i32.load offset=24
                i32.const 63
                i32.and
                i32.const 312
                i32.add
                call_indirect (type $FUNCSIG$ii)
                set_local $6
                get_local $38
                get_local $1
                i32.load
                i32.store
                get_local $39
                get_local $2
                i32.load
                i32.store
                get_local $6
                i32.load8_s offset=11
                tee_local $11
                i32.const 0
                i32.lt_s
                tee_local $9
                if $if_2 (result i32)
                  get_local $6
                  i32.load
                else
                  get_local $6
                end ;; $if_2
                tee_local $2
                get_local $9
                if $if_3 (result i32)
                  get_local $6
                  i32.load offset=4
                else
                  get_local $11
                  i32.const 255
                  i32.and
                end ;; $if_3
                i32.add
                set_local $6
                get_local $10
                get_local $38
                i32.load
                i32.store
                get_local $8
                get_local $39
                i32.load
                i32.store
                get_local $1
                get_local $0
                get_local $10
                get_local $8
                get_local $3
                get_local $4
                get_local $5
                get_local $2
                get_local $6
                call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
                i32.store
                br $__rjti$0
              end ;; $switch-case24
              get_local $40
              get_local $2
              i32.load
              i32.store
              get_local $8
              get_local $40
              i32.load
              i32.store
              get_local $0
              get_local $5
              i32.const 20
              i32.add
              get_local $1
              get_local $8
              get_local $4
              get_local $9
              call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE
              br $__rjti$0
            end ;; $switch-case25
            get_local $41
            get_local $2
            i32.load
            i32.store
            get_local $8
            get_local $41
            i32.load
            i32.store
            get_local $0
            get_local $5
            i32.const 20
            i32.add
            get_local $1
            get_local $8
            get_local $4
            get_local $9
            call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE
            br $__rjti$0
          end ;; $switch-case26
          get_local $11
          get_local $2
          i32.load
          i32.store
          get_local $8
          get_local $11
          i32.load
          i32.store
          get_local $0
          get_local $1
          get_local $8
          get_local $4
          get_local $9
          call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE
          br $__rjti$0
        end ;; $switch-default
        get_local $4
        get_local $4
        i32.load
        i32.const 4
        i32.or
        i32.store
      end ;; $__rjti$0
      get_local $1
      i32.load
      set_local $0
    end ;; $__rjto$0
    get_local $7
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri (type $_3)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (param $8 i32)
    (param $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 112
    i32.add
    set_global $STACKTOP
    get_local $10
    i32.const 108
    i32.add
    set_local $19
    get_local $10
    i32.const 96
    i32.add
    set_local $11
    get_local $10
    i32.const 92
    i32.add
    set_local $20
    get_local $10
    i32.const 80
    i32.add
    set_local $12
    get_local $10
    i32.const 68
    i32.add
    set_local $13
    get_local $10
    i32.const 56
    i32.add
    set_local $14
    get_local $10
    i32.const 52
    i32.add
    set_local $21
    get_local $10
    i32.const 40
    i32.add
    set_local $15
    get_local $10
    i32.const 36
    i32.add
    set_local $22
    get_local $10
    i32.const 24
    i32.add
    set_local $16
    get_local $10
    i32.const 12
    i32.add
    set_local $17
    get_local $10
    set_local $18
    get_local $9
    get_local $0
    if $_1 (result i32)
      block $_2 (result i32)
        get_local $2
        i32.const 20928
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        tee_local $0
        i32.load
        set_local $2
        get_local $1
        if $_3 (result i32)
          block $_4 (result i32)
            get_local $19
            get_local $0
            get_local $2
            i32.load offset=44
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $3
            get_local $19
            i32.load
            tee_local $1
            i32.store8
            get_local $3
            get_local $1
            i32.const 8
            i32.shr_s
            i32.store8 offset=1
            get_local $3
            get_local $1
            i32.const 16
            i32.shr_s
            i32.store8 offset=2
            get_local $3
            get_local $1
            i32.const 24
            i32.shr_s
            i32.store8 offset=3
            get_local $11
            get_local $0
            get_local $0
            i32.load
            i32.load offset=32
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $8
            i32.const 11
            i32.add
            tee_local $1
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_5 (result i32)
              block $_6 (result i32)
                get_local $8
                i32.load
                i32.const 0
                i32.store8
                get_local $8
                i32.const 0
                i32.store offset=4
                get_local $8
              end ;; $_6
            else
              block $_7 (result i32)
                get_local $8
                i32.const 0
                i32.store8
                get_local $1
                i32.const 0
                i32.store8
                get_local $8
              end ;; $_7
            end ;; $_5
            set_local $1
            get_local $8
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
            get_local $1
            get_local $11
            i32.load
            i32.store
            get_local $1
            get_local $11
            i32.load offset=4
            i32.store offset=4
            get_local $1
            get_local $11
            i32.load offset=8
            i32.store offset=8
            i32.const 0
            set_local $1
            loop $while-in
              get_local $1
              i32.const 3
              i32.ne
              if $_8
                block $_9
                  get_local $11
                  get_local $1
                  i32.const 2
                  i32.shl
                  i32.add
                  i32.const 0
                  i32.store
                  get_local $1
                  i32.const 1
                  i32.add
                  set_local $1
                  br $while-in
                end ;; $_9
              end ;; $_8
            end ;; $while-in
            get_local $11
            call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
            get_local $0
          end ;; $_4
        else
          block $_10 (result i32)
            get_local $20
            get_local $0
            get_local $2
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $3
            get_local $20
            i32.load
            tee_local $1
            i32.store8
            get_local $3
            get_local $1
            i32.const 8
            i32.shr_s
            i32.store8 offset=1
            get_local $3
            get_local $1
            i32.const 16
            i32.shr_s
            i32.store8 offset=2
            get_local $3
            get_local $1
            i32.const 24
            i32.shr_s
            i32.store8 offset=3
            get_local $12
            get_local $0
            get_local $0
            i32.load
            i32.load offset=28
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $8
            i32.const 11
            i32.add
            tee_local $1
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_11 (result i32)
              block $_12 (result i32)
                get_local $8
                i32.load
                i32.const 0
                i32.store8
                get_local $8
                i32.const 0
                i32.store offset=4
                get_local $8
              end ;; $_12
            else
              block $_13 (result i32)
                get_local $8
                i32.const 0
                i32.store8
                get_local $1
                i32.const 0
                i32.store8
                get_local $8
              end ;; $_13
            end ;; $_11
            set_local $1
            get_local $8
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
            get_local $1
            get_local $12
            i32.load
            i32.store
            get_local $1
            get_local $12
            i32.load offset=4
            i32.store offset=4
            get_local $1
            get_local $12
            i32.load offset=8
            i32.store offset=8
            i32.const 0
            set_local $1
            loop $while-in1
              get_local $1
              i32.const 3
              i32.ne
              if $_14
                block $_15
                  get_local $12
                  get_local $1
                  i32.const 2
                  i32.shl
                  i32.add
                  i32.const 0
                  i32.store
                  get_local $1
                  i32.const 1
                  i32.add
                  set_local $1
                  br $while-in1
                end ;; $_15
              end ;; $_14
            end ;; $while-in1
            get_local $12
            call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
            get_local $0
          end ;; $_10
        end ;; $_3
        set_local $2
        get_local $4
        get_local $0
        get_local $0
        i32.load
        i32.load offset=12
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store8
        get_local $5
        get_local $0
        get_local $0
        i32.load
        i32.load offset=16
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store8
        get_local $13
        get_local $0
        get_local $2
        i32.load
        i32.load offset=20
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $6
        i32.const 11
        i32.add
        tee_local $1
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_16 (result i32)
          block $_17 (result i32)
            get_local $6
            i32.load
            i32.const 0
            i32.store8
            get_local $6
            i32.const 0
            i32.store offset=4
            get_local $6
          end ;; $_17
        else
          block $_18 (result i32)
            get_local $6
            i32.const 0
            i32.store8
            get_local $1
            i32.const 0
            i32.store8
            get_local $6
          end ;; $_18
        end ;; $_16
        set_local $1
        get_local $6
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $1
        get_local $13
        i32.load
        i32.store
        get_local $1
        get_local $13
        i32.load offset=4
        i32.store offset=4
        get_local $1
        get_local $13
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $1
        loop $while-in3
          get_local $1
          i32.const 3
          i32.ne
          if $_19
            block $_20
              get_local $13
              get_local $1
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $1
              i32.const 1
              i32.add
              set_local $1
              br $while-in3
            end ;; $_20
          end ;; $_19
        end ;; $while-in3
        get_local $13
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $14
        get_local $0
        get_local $2
        i32.load
        i32.load offset=24
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $7
        i32.const 11
        i32.add
        tee_local $1
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_21 (result i32)
          block $_22 (result i32)
            get_local $7
            i32.load
            i32.const 0
            i32.store8
            get_local $7
            i32.const 0
            i32.store offset=4
            get_local $7
          end ;; $_22
        else
          block $_23 (result i32)
            get_local $7
            i32.const 0
            i32.store8
            get_local $1
            i32.const 0
            i32.store8
            get_local $7
          end ;; $_23
        end ;; $_21
        set_local $1
        get_local $7
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $1
        get_local $14
        i32.load
        i32.store
        get_local $1
        get_local $14
        i32.load offset=4
        i32.store offset=4
        get_local $1
        get_local $14
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $1
        loop $while-in5
          get_local $1
          i32.const 3
          i32.ne
          if $_24
            block $_25
              get_local $14
              get_local $1
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $1
              i32.const 1
              i32.add
              set_local $1
              br $while-in5
            end ;; $_25
          end ;; $_24
        end ;; $while-in5
        get_local $14
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      end ;; $_2
    else
      block $_26 (result i32)
        get_local $2
        i32.const 20920
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        tee_local $0
        i32.load
        set_local $2
        get_local $1
        if $_27 (result i32)
          block $_28 (result i32)
            get_local $21
            get_local $0
            get_local $2
            i32.load offset=44
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $3
            get_local $21
            i32.load
            tee_local $1
            i32.store8
            get_local $3
            get_local $1
            i32.const 8
            i32.shr_s
            i32.store8 offset=1
            get_local $3
            get_local $1
            i32.const 16
            i32.shr_s
            i32.store8 offset=2
            get_local $3
            get_local $1
            i32.const 24
            i32.shr_s
            i32.store8 offset=3
            get_local $15
            get_local $0
            get_local $0
            i32.load
            i32.load offset=32
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $8
            i32.const 11
            i32.add
            tee_local $1
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_29 (result i32)
              block $_30 (result i32)
                get_local $8
                i32.load
                i32.const 0
                i32.store8
                get_local $8
                i32.const 0
                i32.store offset=4
                get_local $8
              end ;; $_30
            else
              block $_31 (result i32)
                get_local $8
                i32.const 0
                i32.store8
                get_local $1
                i32.const 0
                i32.store8
                get_local $8
              end ;; $_31
            end ;; $_29
            set_local $1
            get_local $8
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
            get_local $1
            get_local $15
            i32.load
            i32.store
            get_local $1
            get_local $15
            i32.load offset=4
            i32.store offset=4
            get_local $1
            get_local $15
            i32.load offset=8
            i32.store offset=8
            i32.const 0
            set_local $1
            loop $while-in7
              get_local $1
              i32.const 3
              i32.ne
              if $_32
                block $_33
                  get_local $15
                  get_local $1
                  i32.const 2
                  i32.shl
                  i32.add
                  i32.const 0
                  i32.store
                  get_local $1
                  i32.const 1
                  i32.add
                  set_local $1
                  br $while-in7
                end ;; $_33
              end ;; $_32
            end ;; $while-in7
            get_local $15
            call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
            get_local $0
          end ;; $_28
        else
          block $_34 (result i32)
            get_local $22
            get_local $0
            get_local $2
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $3
            get_local $22
            i32.load
            tee_local $1
            i32.store8
            get_local $3
            get_local $1
            i32.const 8
            i32.shr_s
            i32.store8 offset=1
            get_local $3
            get_local $1
            i32.const 16
            i32.shr_s
            i32.store8 offset=2
            get_local $3
            get_local $1
            i32.const 24
            i32.shr_s
            i32.store8 offset=3
            get_local $16
            get_local $0
            get_local $0
            i32.load
            i32.load offset=28
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $8
            i32.const 11
            i32.add
            tee_local $1
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_35 (result i32)
              block $_36 (result i32)
                get_local $8
                i32.load
                i32.const 0
                i32.store8
                get_local $8
                i32.const 0
                i32.store offset=4
                get_local $8
              end ;; $_36
            else
              block $_37 (result i32)
                get_local $8
                i32.const 0
                i32.store8
                get_local $1
                i32.const 0
                i32.store8
                get_local $8
              end ;; $_37
            end ;; $_35
            set_local $1
            get_local $8
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
            get_local $1
            get_local $16
            i32.load
            i32.store
            get_local $1
            get_local $16
            i32.load offset=4
            i32.store offset=4
            get_local $1
            get_local $16
            i32.load offset=8
            i32.store offset=8
            i32.const 0
            set_local $1
            loop $while-in9
              get_local $1
              i32.const 3
              i32.ne
              if $_38
                block $_39
                  get_local $16
                  get_local $1
                  i32.const 2
                  i32.shl
                  i32.add
                  i32.const 0
                  i32.store
                  get_local $1
                  i32.const 1
                  i32.add
                  set_local $1
                  br $while-in9
                end ;; $_39
              end ;; $_38
            end ;; $while-in9
            get_local $16
            call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
            get_local $0
          end ;; $_34
        end ;; $_27
        set_local $2
        get_local $4
        get_local $0
        get_local $0
        i32.load
        i32.load offset=12
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store8
        get_local $5
        get_local $0
        get_local $0
        i32.load
        i32.load offset=16
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store8
        get_local $17
        get_local $0
        get_local $2
        i32.load
        i32.load offset=20
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $6
        i32.const 11
        i32.add
        tee_local $1
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_40 (result i32)
          block $_41 (result i32)
            get_local $6
            i32.load
            i32.const 0
            i32.store8
            get_local $6
            i32.const 0
            i32.store offset=4
            get_local $6
          end ;; $_41
        else
          block $_42 (result i32)
            get_local $6
            i32.const 0
            i32.store8
            get_local $1
            i32.const 0
            i32.store8
            get_local $6
          end ;; $_42
        end ;; $_40
        set_local $1
        get_local $6
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $1
        get_local $17
        i32.load
        i32.store
        get_local $1
        get_local $17
        i32.load offset=4
        i32.store offset=4
        get_local $1
        get_local $17
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $1
        loop $while-in11
          get_local $1
          i32.const 3
          i32.ne
          if $_43
            block $_44
              get_local $17
              get_local $1
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $1
              i32.const 1
              i32.add
              set_local $1
              br $while-in11
            end ;; $_44
          end ;; $_43
        end ;; $while-in11
        get_local $17
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $18
        get_local $0
        get_local $2
        i32.load
        i32.load offset=24
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $7
        i32.const 11
        i32.add
        tee_local $1
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_45 (result i32)
          block $_46 (result i32)
            get_local $7
            i32.load
            i32.const 0
            i32.store8
            get_local $7
            i32.const 0
            i32.store offset=4
            get_local $7
          end ;; $_46
        else
          block $_47 (result i32)
            get_local $7
            i32.const 0
            i32.store8
            get_local $1
            i32.const 0
            i32.store8
            get_local $7
          end ;; $_47
        end ;; $_45
        set_local $1
        get_local $7
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $1
        get_local $18
        i32.load
        i32.store
        get_local $1
        get_local $18
        i32.load offset=4
        i32.store offset=4
        get_local $1
        get_local $18
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $1
        loop $while-in13
          get_local $1
          i32.const 3
          i32.ne
          if $if
            block $block
              get_local $18
              get_local $1
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $1
              i32.const 1
              i32.add
              set_local $1
              br $while-in13
            end ;; $block
          end ;; $if
        end ;; $while-in13
        get_local $18
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      end ;; $_26
    end ;; $_1
    tee_local $0
    i32.store
    get_local $10
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_ (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    get_global $STACKTOP
    set_local $14
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $14
    i32.const 16
    i32.add
    set_local $17
    get_local $14
    i32.const 12
    i32.add
    set_local $18
    get_local $14
    i32.const 4
    i32.add
    set_local $19
    get_local $14
    set_local $20
    get_local $14
    i32.const 8
    i32.add
    tee_local $11
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $8
    i32.store
    get_local $11
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $12
    get_local $8
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $4
    i32.const 0
    i32.store
    get_local $6
    set_local $11
    i32.const 0
    set_local $8
    block $__rjto$7
      block $__rjti$7
        block $__rjti$6
          block $__rjti$5
            loop $label$continue$L1
              block $label$break$L1
                get_local $11
                get_local $7
                i32.ne
                set_local $15
                block $label$break$L33
                  block $__rjti$4
                    block $__rjti$3
                      block $__rjti$2
                        loop $while-in
                          get_local $1
                          i32.load
                          set_local $6
                          get_local $15
                          get_local $8
                          i32.eqz
                          i32.and
                          i32.eqz
                          if $_1
                            block $_2
                              get_local $6
                              set_local $0
                              br $label$break$L1
                            end ;; $_2
                          end ;; $_1
                          get_local $6
                          set_local $8
                          get_local $6
                          if $_3 (result i32)
                            get_local $6
                            i32.load offset=12
                            tee_local $9
                            get_local $6
                            i32.load offset=16
                            i32.eq
                            if $_4 (result i32)
                              get_local $6
                              get_local $6
                              i32.load
                              i32.load offset=36
                              i32.const 63
                              i32.and
                              i32.const 312
                              i32.add
                              call_indirect (type $FUNCSIG$ii)
                            else
                              get_local $9
                              i32.load
                            end ;; $_4
                            tee_local $9
                            i32.const -1
                            i32.eq
                            if $_5 (result i32)
                              block $_6 (result i32)
                                get_local $1
                                i32.const 0
                                i32.store
                                i32.const 0
                                set_local $6
                                i32.const 1
                                set_local $16
                                i32.const 0
                              end ;; $_6
                            else
                              block $_7 (result i32)
                                i32.const 0
                                set_local $16
                                get_local $8
                              end ;; $_7
                            end ;; $_5
                          else
                            block $_8 (result i32)
                              i32.const 0
                              set_local $6
                              i32.const 1
                              set_local $16
                              get_local $8
                            end ;; $_8
                          end ;; $_3
                          set_local $9
                          get_local $2
                          i32.load
                          tee_local $10
                          set_local $8
                          block $__rjto$0
                            block $__rjti$0
                              get_local $10
                              i32.eqz
                              br_if $__rjti$0
                              get_local $10
                              i32.load offset=12
                              tee_local $13
                              get_local $10
                              i32.load offset=16
                              i32.eq
                              if $_9 (result i32)
                                get_local $10
                                get_local $10
                                i32.load
                                i32.load offset=36
                                i32.const 63
                                i32.and
                                i32.const 312
                                i32.add
                                call_indirect (type $FUNCSIG$ii)
                              else
                                get_local $13
                                i32.load
                              end ;; $_9
                              tee_local $13
                              i32.const -1
                              i32.eq
                              if $_10
                                block $_11
                                  get_local $2
                                  i32.const 0
                                  i32.store
                                  i32.const 0
                                  set_local $8
                                  br $__rjti$0
                                end ;; $_11
                              else
                                get_local $16
                                i32.eqz
                                br_if $__rjti$5
                              end ;; $_10
                              br $__rjto$0
                            end ;; $__rjti$0
                            get_local $16
                            br_if $__rjti$5
                            i32.const 0
                            set_local $10
                          end ;; $__rjto$0
                          get_local $12
                          get_local $11
                          i32.load
                          i32.const 0
                          get_local $12
                          i32.load
                          i32.load offset=52
                          i32.const 31
                          i32.and
                          i32.const 8
                          i32.add
                          call_indirect (type $FUNCSIG$iiii)
                          i32.const 255
                          i32.and
                          i32.const 37
                          i32.eq
                          if $_12
                            block $_13
                              get_local $9
                              set_local $10
                              get_local $8
                              set_local $9
                              br $__rjti$2
                            end ;; $_13
                          end ;; $_12
                          get_local $12
                          i32.const 8192
                          get_local $11
                          i32.load
                          get_local $12
                          i32.load
                          i32.load offset=12
                          i32.const 31
                          i32.and
                          i32.const 8
                          i32.add
                          call_indirect (type $FUNCSIG$iiii)
                          br_if $__rjti$3
                          get_local $12
                          get_local $6
                          i32.const 12
                          i32.add
                          tee_local $9
                          i32.load
                          tee_local $10
                          get_local $6
                          i32.const 16
                          i32.add
                          tee_local $8
                          i32.load
                          i32.eq
                          if $_14 (result i32)
                            get_local $6
                            get_local $6
                            i32.load
                            i32.load offset=36
                            i32.const 63
                            i32.and
                            i32.const 312
                            i32.add
                            call_indirect (type $FUNCSIG$ii)
                          else
                            get_local $10
                            i32.load
                          end ;; $_14
                          tee_local $10
                          get_local $12
                          i32.load
                          i32.load offset=28
                          i32.const 15
                          i32.and
                          i32.const 413
                          i32.add
                          call_indirect (type $FUNCSIG$iii)
                          get_local $12
                          get_local $11
                          i32.load
                          get_local $12
                          i32.load
                          i32.load offset=28
                          i32.const 15
                          i32.and
                          i32.const 413
                          i32.add
                          call_indirect (type $FUNCSIG$iii)
                          i32.eq
                          if $_15
                            block $_16
                              get_local $6
                              set_local $10
                              get_local $8
                              set_local $6
                              br $__rjti$4
                            end ;; $_16
                          else
                            block $_17
                              get_local $4
                              i32.const 4
                              i32.store
                              i32.const 4
                              set_local $8
                              br $while-in
                            end ;; $_17
                          end ;; $_15
                        end ;; $while-in
                      end ;; $__rjti$2
                      get_local $11
                      i32.const 4
                      i32.add
                      tee_local $13
                      get_local $7
                      i32.eq
                      if $_18
                        block $_19
                          get_local $6
                          set_local $0
                          br $__rjti$6
                        end ;; $_19
                      end ;; $_18
                      block $switch
                        block $switch-default
                          block $switch-case
                            get_local $12
                            get_local $13
                            i32.load
                            i32.const 0
                            get_local $12
                            i32.load
                            i32.load offset=52
                            i32.const 31
                            i32.and
                            i32.const 8
                            i32.add
                            call_indirect (type $FUNCSIG$iiii)
                            tee_local $8
                            i32.const 24
                            i32.shl
                            i32.const 24
                            i32.shr_s
                            i32.const 48
                            i32.sub
                            br_table
                              $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case
                              $switch-default ;; default
                          end ;; $switch-case
                          get_local $11
                          i32.const 8
                          i32.add
                          tee_local $15
                          get_local $7
                          i32.eq
                          if $_20
                            block $_21
                              get_local $6
                              set_local $0
                              br $__rjti$7
                            end ;; $_21
                          end ;; $_20
                          get_local $13
                          set_local $11
                          get_local $12
                          get_local $15
                          i32.load
                          i32.const 0
                          get_local $12
                          i32.load
                          i32.load offset=52
                          i32.const 31
                          i32.and
                          i32.const 8
                          i32.add
                          call_indirect (type $FUNCSIG$iiii)
                          set_local $6
                          br $switch
                        end ;; $switch-default
                        get_local $8
                        set_local $6
                        i32.const 0
                        set_local $8
                      end ;; $switch
                      get_local $0
                      i32.load
                      i32.load offset=36
                      set_local $13
                      get_local $19
                      get_local $10
                      i32.store
                      get_local $20
                      get_local $9
                      i32.store
                      get_local $18
                      get_local $19
                      i32.load
                      i32.store
                      get_local $17
                      get_local $20
                      i32.load
                      i32.store
                      get_local $1
                      get_local $0
                      get_local $18
                      get_local $17
                      get_local $3
                      get_local $4
                      get_local $5
                      get_local $6
                      get_local $8
                      get_local $13
                      i32.const 15
                      i32.and
                      i32.const 381
                      i32.add
                      call_indirect (type $FUNCSIG$iiiiiiiii)
                      i32.store
                      get_local $11
                      i32.const 8
                      i32.add
                      set_local $11
                      br $label$break$L33
                    end ;; $__rjti$3
                    loop $while-in3
                      block $while-out2
                        get_local $11
                        i32.const 4
                        i32.add
                        tee_local $11
                        get_local $7
                        i32.eq
                        if $_22
                          block $_23
                            get_local $7
                            set_local $11
                            br $while-out2
                          end ;; $_23
                        end ;; $_22
                        get_local $12
                        i32.const 8192
                        get_local $11
                        i32.load
                        get_local $12
                        i32.load
                        i32.load offset=12
                        i32.const 31
                        i32.and
                        i32.const 8
                        i32.add
                        call_indirect (type $FUNCSIG$iiii)
                        br_if $while-in3
                      end ;; $while-out2
                    end ;; $while-in3
                    get_local $6
                    set_local $9
                    get_local $10
                    set_local $6
                    loop $while-in5
                      get_local $9
                      if $_24 (result i32)
                        get_local $9
                        i32.load offset=12
                        tee_local $8
                        get_local $9
                        i32.load offset=16
                        i32.eq
                        if $_25 (result i32)
                          get_local $9
                          get_local $9
                          i32.load
                          i32.load offset=36
                          i32.const 63
                          i32.and
                          i32.const 312
                          i32.add
                          call_indirect (type $FUNCSIG$ii)
                        else
                          get_local $8
                          i32.load
                        end ;; $_25
                        tee_local $8
                        i32.const -1
                        i32.eq
                        if $_26 (result i32)
                          block $_27 (result i32)
                            get_local $1
                            i32.const 0
                            i32.store
                            i32.const 0
                            set_local $9
                            i32.const 1
                          end ;; $_27
                        else
                          i32.const 0
                        end ;; $_26
                      else
                        block $_28 (result i32)
                          i32.const 0
                          set_local $9
                          i32.const 1
                        end ;; $_28
                      end ;; $_24
                      set_local $13
                      block $__rjto$1
                        block $__rjti$1
                          get_local $10
                          i32.eqz
                          br_if $__rjti$1
                          get_local $10
                          i32.load offset=12
                          tee_local $8
                          get_local $10
                          i32.load offset=16
                          i32.eq
                          if $_29 (result i32)
                            get_local $10
                            get_local $10
                            i32.load
                            i32.load offset=36
                            i32.const 63
                            i32.and
                            i32.const 312
                            i32.add
                            call_indirect (type $FUNCSIG$ii)
                          else
                            get_local $8
                            i32.load
                          end ;; $_29
                          tee_local $8
                          i32.const -1
                          i32.eq
                          if $_30
                            block $_31
                              get_local $2
                              i32.const 0
                              i32.store
                              i32.const 0
                              set_local $6
                              br $__rjti$1
                            end ;; $_31
                          else
                            get_local $13
                            get_local $6
                            i32.eqz
                            i32.xor
                            if $_32
                              block $_33
                                get_local $6
                                set_local $8
                                get_local $6
                                set_local $10
                              end ;; $_33
                            else
                              br $label$break$L33
                            end ;; $_32
                          end ;; $_30
                          br $__rjto$1
                        end ;; $__rjti$1
                        get_local $13
                        br_if $label$break$L33
                        get_local $6
                        set_local $8
                        i32.const 0
                        set_local $10
                      end ;; $__rjto$1
                      get_local $12
                      i32.const 8192
                      get_local $9
                      i32.const 12
                      i32.add
                      tee_local $15
                      i32.load
                      tee_local $6
                      get_local $9
                      i32.const 16
                      i32.add
                      tee_local $13
                      i32.load
                      i32.eq
                      if $_34 (result i32)
                        get_local $9
                        get_local $9
                        i32.load
                        i32.load offset=36
                        i32.const 63
                        i32.and
                        i32.const 312
                        i32.add
                        call_indirect (type $FUNCSIG$ii)
                      else
                        get_local $6
                        i32.load
                      end ;; $_34
                      tee_local $6
                      get_local $12
                      i32.load
                      i32.load offset=12
                      i32.const 31
                      i32.and
                      i32.const 8
                      i32.add
                      call_indirect (type $FUNCSIG$iiii)
                      i32.eqz
                      br_if $label$break$L33
                      get_local $15
                      i32.load
                      tee_local $6
                      get_local $13
                      i32.load
                      i32.eq
                      if $_35
                        block $_36
                          get_local $9
                          get_local $9
                          i32.load
                          i32.load offset=40
                          i32.const 63
                          i32.and
                          i32.const 312
                          i32.add
                          call_indirect (type $FUNCSIG$ii)
                          drop
                          get_local $8
                          set_local $6
                          br $while-in5
                        end ;; $_36
                      else
                        block $_37
                          get_local $15
                          get_local $6
                          i32.const 4
                          i32.add
                          i32.store
                          get_local $8
                          set_local $6
                          br $while-in5
                        end ;; $_37
                      end ;; $_35
                    end ;; $while-in5
                    br $label$break$L33
                  end ;; $__rjti$4
                  get_local $9
                  i32.load
                  tee_local $8
                  get_local $6
                  i32.load
                  i32.eq
                  if $_38
                    get_local $10
                    get_local $10
                    i32.load
                    i32.load offset=40
                    i32.const 63
                    i32.and
                    i32.const 312
                    i32.add
                    call_indirect (type $FUNCSIG$ii)
                    drop
                  else
                    get_local $9
                    get_local $8
                    i32.const 4
                    i32.add
                    i32.store
                  end ;; $_38
                  get_local $11
                  i32.const 4
                  i32.add
                  set_local $11
                end ;; $label$break$L33
                get_local $4
                i32.load
                set_local $8
                br $label$continue$L1
              end ;; $label$break$L1
            end ;; $label$continue$L1
            br $__rjto$7
          end ;; $__rjti$5
          get_local $4
          i32.const 4
          i32.store
          get_local $6
          set_local $0
          br $__rjto$7
        end ;; $__rjti$6
        get_local $4
        i32.const 4
        i32.store
        br $__rjto$7
      end ;; $__rjti$7
      get_local $4
      i32.const 4
      i32.store
    end ;; $__rjto$7
    get_local $0
    if $_39 (result i32)
      get_local $0
      i32.load offset=12
      tee_local $3
      get_local $0
      i32.load offset=16
      i32.eq
      if $_40 (result i32)
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $3
        i32.load
      end ;; $_40
      tee_local $3
      i32.const -1
      i32.eq
      if $_41 (result i32)
        block $_42 (result i32)
          get_local $1
          i32.const 0
          i32.store
          i32.const 0
          set_local $0
          i32.const 1
        end ;; $_42
      else
        i32.const 0
      end ;; $_41
    else
      block $_43 (result i32)
        i32.const 0
        set_local $0
        i32.const 1
      end ;; $_43
    end ;; $_39
    set_local $5
    block $__rjto$9
      block $__rjti$9
        block $__rjti$8
          get_local $2
          i32.load
          tee_local $3
          i32.eqz
          br_if $__rjti$8
          get_local $3
          i32.load offset=12
          tee_local $1
          get_local $3
          i32.load offset=16
          i32.eq
          if $if (result i32)
            get_local $3
            get_local $3
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $1
            i32.load
          end ;; $if
          tee_local $1
          i32.const -1
          i32.eq
          if $if_1
            block $block
              get_local $2
              i32.const 0
              i32.store
              br $__rjti$8
            end ;; $block
          else
            get_local $5
            i32.eqz
            br_if $__rjti$9
          end ;; $if_1
          br $__rjto$9
        end ;; $__rjti$8
        get_local $5
        br_if $__rjti$9
        br $__rjto$9
      end ;; $__rjti$9
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$9
    get_local $14
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri (type $_3)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (param $8 i32)
    (param $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 112
    i32.add
    set_global $STACKTOP
    get_local $10
    i32.const 108
    i32.add
    set_local $19
    get_local $10
    i32.const 96
    i32.add
    set_local $11
    get_local $10
    i32.const 92
    i32.add
    set_local $20
    get_local $10
    i32.const 80
    i32.add
    set_local $12
    get_local $10
    i32.const 68
    i32.add
    set_local $13
    get_local $10
    i32.const 56
    i32.add
    set_local $14
    get_local $10
    i32.const 52
    i32.add
    set_local $21
    get_local $10
    i32.const 40
    i32.add
    set_local $15
    get_local $10
    i32.const 36
    i32.add
    set_local $22
    get_local $10
    i32.const 24
    i32.add
    set_local $16
    get_local $10
    i32.const 12
    i32.add
    set_local $17
    get_local $10
    set_local $18
    get_local $9
    get_local $0
    if $_1 (result i32)
      block $_2 (result i32)
        get_local $2
        i32.const 20944
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        tee_local $2
        i32.load
        set_local $0
        get_local $1
        if $_3
          block $_4
            get_local $19
            get_local $2
            get_local $0
            i32.load offset=44
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $3
            get_local $19
            i32.load
            tee_local $0
            i32.store8
            get_local $3
            get_local $0
            i32.const 8
            i32.shr_s
            i32.store8 offset=1
            get_local $3
            get_local $0
            i32.const 16
            i32.shr_s
            i32.store8 offset=2
            get_local $3
            get_local $0
            i32.const 24
            i32.shr_s
            i32.store8 offset=3
            get_local $11
            get_local $2
            get_local $2
            i32.load
            i32.load offset=32
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $8
            i32.const 11
            i32.add
            tee_local $0
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_5
              block $_6
                get_local $8
                i32.load
                i32.const 0
                i32.store
                get_local $8
                i32.const 0
                i32.store offset=4
              end ;; $_6
            else
              block $_7
                get_local $8
                i32.const 0
                i32.store
                get_local $0
                i32.const 0
                i32.store8
              end ;; $_7
            end ;; $_5
            get_local $8
            i32.const 0
            call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj
            get_local $8
            get_local $11
            i32.load
            i32.store
            get_local $8
            get_local $11
            i32.load offset=4
            i32.store offset=4
            get_local $8
            get_local $11
            i32.load offset=8
            i32.store offset=8
            i32.const 0
            set_local $0
            loop $while-in
              get_local $0
              i32.const 3
              i32.ne
              if $_8
                block $_9
                  get_local $11
                  get_local $0
                  i32.const 2
                  i32.shl
                  i32.add
                  i32.const 0
                  i32.store
                  get_local $0
                  i32.const 1
                  i32.add
                  set_local $0
                  br $while-in
                end ;; $_9
              end ;; $_8
            end ;; $while-in
            get_local $11
            call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
          end ;; $_4
        else
          block $_10
            get_local $20
            get_local $2
            get_local $0
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $3
            get_local $20
            i32.load
            tee_local $0
            i32.store8
            get_local $3
            get_local $0
            i32.const 8
            i32.shr_s
            i32.store8 offset=1
            get_local $3
            get_local $0
            i32.const 16
            i32.shr_s
            i32.store8 offset=2
            get_local $3
            get_local $0
            i32.const 24
            i32.shr_s
            i32.store8 offset=3
            get_local $12
            get_local $2
            get_local $2
            i32.load
            i32.load offset=28
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $8
            i32.const 11
            i32.add
            tee_local $0
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_11
              block $_12
                get_local $8
                i32.load
                i32.const 0
                i32.store
                get_local $8
                i32.const 0
                i32.store offset=4
              end ;; $_12
            else
              block $_13
                get_local $8
                i32.const 0
                i32.store
                get_local $0
                i32.const 0
                i32.store8
              end ;; $_13
            end ;; $_11
            get_local $8
            i32.const 0
            call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj
            get_local $8
            get_local $12
            i32.load
            i32.store
            get_local $8
            get_local $12
            i32.load offset=4
            i32.store offset=4
            get_local $8
            get_local $12
            i32.load offset=8
            i32.store offset=8
            i32.const 0
            set_local $0
            loop $while-in1
              get_local $0
              i32.const 3
              i32.ne
              if $_14
                block $_15
                  get_local $12
                  get_local $0
                  i32.const 2
                  i32.shl
                  i32.add
                  i32.const 0
                  i32.store
                  get_local $0
                  i32.const 1
                  i32.add
                  set_local $0
                  br $while-in1
                end ;; $_15
              end ;; $_14
            end ;; $while-in1
            get_local $12
            call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
          end ;; $_10
        end ;; $_3
        get_local $4
        get_local $2
        get_local $2
        i32.load
        i32.load offset=12
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store
        get_local $5
        get_local $2
        get_local $2
        i32.load
        i32.load offset=16
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store
        get_local $13
        get_local $2
        get_local $2
        i32.load
        i32.load offset=20
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $6
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_16 (result i32)
          block $_17 (result i32)
            get_local $6
            i32.load
            i32.const 0
            i32.store8
            get_local $6
            i32.const 0
            i32.store offset=4
            get_local $6
          end ;; $_17
        else
          block $_18 (result i32)
            get_local $6
            i32.const 0
            i32.store8
            get_local $0
            i32.const 0
            i32.store8
            get_local $6
          end ;; $_18
        end ;; $_16
        set_local $0
        get_local $6
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $0
        get_local $13
        i32.load
        i32.store
        get_local $0
        get_local $13
        i32.load offset=4
        i32.store offset=4
        get_local $0
        get_local $13
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in3
          get_local $0
          i32.const 3
          i32.ne
          if $_19
            block $_20
              get_local $13
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in3
            end ;; $_20
          end ;; $_19
        end ;; $while-in3
        get_local $13
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $14
        get_local $2
        get_local $2
        i32.load
        i32.load offset=24
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $7
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_21
          block $_22
            get_local $7
            i32.load
            i32.const 0
            i32.store
            get_local $7
            i32.const 0
            i32.store offset=4
          end ;; $_22
        else
          block $_23
            get_local $7
            i32.const 0
            i32.store
            get_local $0
            i32.const 0
            i32.store8
          end ;; $_23
        end ;; $_21
        get_local $7
        i32.const 0
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj
        get_local $7
        get_local $14
        i32.load
        i32.store
        get_local $7
        get_local $14
        i32.load offset=4
        i32.store offset=4
        get_local $7
        get_local $14
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in5
          get_local $0
          i32.const 3
          i32.ne
          if $_24
            block $_25
              get_local $14
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in5
            end ;; $_25
          end ;; $_24
        end ;; $while-in5
        get_local $14
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $2
        get_local $2
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      end ;; $_2
    else
      block $_26 (result i32)
        get_local $2
        i32.const 20936
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        tee_local $2
        i32.load
        set_local $0
        get_local $1
        if $_27
          block $_28
            get_local $21
            get_local $2
            get_local $0
            i32.load offset=44
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $3
            get_local $21
            i32.load
            tee_local $0
            i32.store8
            get_local $3
            get_local $0
            i32.const 8
            i32.shr_s
            i32.store8 offset=1
            get_local $3
            get_local $0
            i32.const 16
            i32.shr_s
            i32.store8 offset=2
            get_local $3
            get_local $0
            i32.const 24
            i32.shr_s
            i32.store8 offset=3
            get_local $15
            get_local $2
            get_local $2
            i32.load
            i32.load offset=32
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $8
            i32.const 11
            i32.add
            tee_local $0
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_29
              block $_30
                get_local $8
                i32.load
                i32.const 0
                i32.store
                get_local $8
                i32.const 0
                i32.store offset=4
              end ;; $_30
            else
              block $_31
                get_local $8
                i32.const 0
                i32.store
                get_local $0
                i32.const 0
                i32.store8
              end ;; $_31
            end ;; $_29
            get_local $8
            i32.const 0
            call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj
            get_local $8
            get_local $15
            i32.load
            i32.store
            get_local $8
            get_local $15
            i32.load offset=4
            i32.store offset=4
            get_local $8
            get_local $15
            i32.load offset=8
            i32.store offset=8
            i32.const 0
            set_local $0
            loop $while-in7
              get_local $0
              i32.const 3
              i32.ne
              if $_32
                block $_33
                  get_local $15
                  get_local $0
                  i32.const 2
                  i32.shl
                  i32.add
                  i32.const 0
                  i32.store
                  get_local $0
                  i32.const 1
                  i32.add
                  set_local $0
                  br $while-in7
                end ;; $_33
              end ;; $_32
            end ;; $while-in7
            get_local $15
            call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
          end ;; $_28
        else
          block $_34
            get_local $22
            get_local $2
            get_local $0
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $3
            get_local $22
            i32.load
            tee_local $0
            i32.store8
            get_local $3
            get_local $0
            i32.const 8
            i32.shr_s
            i32.store8 offset=1
            get_local $3
            get_local $0
            i32.const 16
            i32.shr_s
            i32.store8 offset=2
            get_local $3
            get_local $0
            i32.const 24
            i32.shr_s
            i32.store8 offset=3
            get_local $16
            get_local $2
            get_local $2
            i32.load
            i32.load offset=28
            i32.const 63
            i32.and
            i32.const 176
            i32.add
            call_indirect (type $FUNCSIG$vii)
            get_local $8
            i32.const 11
            i32.add
            tee_local $0
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_35
              block $_36
                get_local $8
                i32.load
                i32.const 0
                i32.store
                get_local $8
                i32.const 0
                i32.store offset=4
              end ;; $_36
            else
              block $_37
                get_local $8
                i32.const 0
                i32.store
                get_local $0
                i32.const 0
                i32.store8
              end ;; $_37
            end ;; $_35
            get_local $8
            i32.const 0
            call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj
            get_local $8
            get_local $16
            i32.load
            i32.store
            get_local $8
            get_local $16
            i32.load offset=4
            i32.store offset=4
            get_local $8
            get_local $16
            i32.load offset=8
            i32.store offset=8
            i32.const 0
            set_local $0
            loop $while-in9
              get_local $0
              i32.const 3
              i32.ne
              if $_38
                block $_39
                  get_local $16
                  get_local $0
                  i32.const 2
                  i32.shl
                  i32.add
                  i32.const 0
                  i32.store
                  get_local $0
                  i32.const 1
                  i32.add
                  set_local $0
                  br $while-in9
                end ;; $_39
              end ;; $_38
            end ;; $while-in9
            get_local $16
            call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
          end ;; $_34
        end ;; $_27
        get_local $4
        get_local $2
        get_local $2
        i32.load
        i32.load offset=12
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store
        get_local $5
        get_local $2
        get_local $2
        i32.load
        i32.load offset=16
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store
        get_local $17
        get_local $2
        get_local $2
        i32.load
        i32.load offset=20
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $6
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_40 (result i32)
          block $_41 (result i32)
            get_local $6
            i32.load
            i32.const 0
            i32.store8
            get_local $6
            i32.const 0
            i32.store offset=4
            get_local $6
          end ;; $_41
        else
          block $_42 (result i32)
            get_local $6
            i32.const 0
            i32.store8
            get_local $0
            i32.const 0
            i32.store8
            get_local $6
          end ;; $_42
        end ;; $_40
        set_local $0
        get_local $6
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $0
        get_local $17
        i32.load
        i32.store
        get_local $0
        get_local $17
        i32.load offset=4
        i32.store offset=4
        get_local $0
        get_local $17
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in11
          get_local $0
          i32.const 3
          i32.ne
          if $_43
            block $_44
              get_local $17
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in11
            end ;; $_44
          end ;; $_43
        end ;; $while-in11
        get_local $17
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $18
        get_local $2
        get_local $2
        i32.load
        i32.load offset=24
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $7
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_45
          block $_46
            get_local $7
            i32.load
            i32.const 0
            i32.store
            get_local $7
            i32.const 0
            i32.store offset=4
          end ;; $_46
        else
          block $_47
            get_local $7
            i32.const 0
            i32.store
            get_local $0
            i32.const 0
            i32.store8
          end ;; $_47
        end ;; $_45
        get_local $7
        i32.const 0
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj
        get_local $7
        get_local $18
        i32.load
        i32.store
        get_local $7
        get_local $18
        i32.load offset=4
        i32.store offset=4
        get_local $7
        get_local $18
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in13
          get_local $0
          i32.const 3
          i32.ne
          if $if
            block $block
              get_local $18
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in13
            end ;; $block
          end ;; $if
        end ;; $while-in13
        get_local $18
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $2
        get_local $2
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      end ;; $_26
    end ;; $_1
    tee_local $0
    i32.store
    get_local $10
    set_global $STACKTOP
    )
  
  (func $__ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri (type $_3)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (param $8 i32)
    (param $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 112
    i32.add
    set_global $STACKTOP
    get_local $10
    i32.const 100
    i32.add
    set_local $19
    get_local $10
    i32.const 88
    i32.add
    set_local $11
    get_local $10
    i32.const 76
    i32.add
    set_local $12
    get_local $10
    i32.const 64
    i32.add
    set_local $13
    get_local $10
    i32.const 52
    i32.add
    set_local $14
    get_local $10
    i32.const 48
    i32.add
    set_local $20
    get_local $10
    i32.const 36
    i32.add
    set_local $15
    get_local $10
    i32.const 24
    i32.add
    set_local $16
    get_local $10
    i32.const 12
    i32.add
    set_local $17
    get_local $10
    set_local $18
    get_local $9
    get_local $0
    if $_1 (result i32)
      block $_2 (result i32)
        get_local $19
        get_local $1
        i32.const 20928
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        tee_local $1
        get_local $1
        i32.load
        i32.load offset=44
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $2
        get_local $19
        i32.load
        tee_local $0
        i32.store8
        get_local $2
        get_local $0
        i32.const 8
        i32.shr_s
        i32.store8 offset=1
        get_local $2
        get_local $0
        i32.const 16
        i32.shr_s
        i32.store8 offset=2
        get_local $2
        get_local $0
        i32.const 24
        i32.shr_s
        i32.store8 offset=3
        get_local $11
        get_local $1
        get_local $1
        i32.load
        i32.load offset=32
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $8
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_3 (result i32)
          block $_4 (result i32)
            get_local $8
            i32.load
            i32.const 0
            i32.store8
            get_local $8
            i32.const 0
            i32.store offset=4
            get_local $8
          end ;; $_4
        else
          block $_5 (result i32)
            get_local $8
            i32.const 0
            i32.store8
            get_local $0
            i32.const 0
            i32.store8
            get_local $8
          end ;; $_5
        end ;; $_3
        set_local $0
        get_local $8
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $0
        get_local $11
        i32.load
        i32.store
        get_local $0
        get_local $11
        i32.load offset=4
        i32.store offset=4
        get_local $0
        get_local $11
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in
          get_local $0
          i32.const 3
          i32.ne
          if $_6
            block $_7
              get_local $11
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in
            end ;; $_7
          end ;; $_6
        end ;; $while-in
        get_local $11
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $12
        get_local $1
        get_local $1
        i32.load
        i32.load offset=28
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $7
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_8 (result i32)
          block $_9 (result i32)
            get_local $7
            i32.load
            i32.const 0
            i32.store8
            get_local $7
            i32.const 0
            i32.store offset=4
            get_local $7
          end ;; $_9
        else
          block $_10 (result i32)
            get_local $7
            i32.const 0
            i32.store8
            get_local $0
            i32.const 0
            i32.store8
            get_local $7
          end ;; $_10
        end ;; $_8
        set_local $0
        get_local $7
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $0
        get_local $12
        i32.load
        i32.store
        get_local $0
        get_local $12
        i32.load offset=4
        i32.store offset=4
        get_local $0
        get_local $12
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in1
          get_local $0
          i32.const 3
          i32.ne
          if $_11
            block $_12
              get_local $12
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in1
            end ;; $_12
          end ;; $_11
        end ;; $while-in1
        get_local $12
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $3
        get_local $1
        get_local $1
        i32.load
        i32.load offset=12
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store8
        get_local $4
        get_local $1
        get_local $1
        i32.load
        i32.load offset=16
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store8
        get_local $13
        get_local $1
        get_local $1
        i32.load
        i32.load offset=20
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $5
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_13 (result i32)
          block $_14 (result i32)
            get_local $5
            i32.load
            i32.const 0
            i32.store8
            get_local $5
            i32.const 0
            i32.store offset=4
            get_local $5
          end ;; $_14
        else
          block $_15 (result i32)
            get_local $5
            i32.const 0
            i32.store8
            get_local $0
            i32.const 0
            i32.store8
            get_local $5
          end ;; $_15
        end ;; $_13
        set_local $0
        get_local $5
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $0
        get_local $13
        i32.load
        i32.store
        get_local $0
        get_local $13
        i32.load offset=4
        i32.store offset=4
        get_local $0
        get_local $13
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in3
          get_local $0
          i32.const 3
          i32.ne
          if $_16
            block $_17
              get_local $13
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in3
            end ;; $_17
          end ;; $_16
        end ;; $while-in3
        get_local $13
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $14
        get_local $1
        get_local $1
        i32.load
        i32.load offset=24
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $6
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_18 (result i32)
          block $_19 (result i32)
            get_local $6
            i32.load
            i32.const 0
            i32.store8
            get_local $6
            i32.const 0
            i32.store offset=4
            get_local $6
          end ;; $_19
        else
          block $_20 (result i32)
            get_local $6
            i32.const 0
            i32.store8
            get_local $0
            i32.const 0
            i32.store8
            get_local $6
          end ;; $_20
        end ;; $_18
        set_local $0
        get_local $6
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $0
        get_local $14
        i32.load
        i32.store
        get_local $0
        get_local $14
        i32.load offset=4
        i32.store offset=4
        get_local $0
        get_local $14
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in5
          get_local $0
          i32.const 3
          i32.ne
          if $_21
            block $_22
              get_local $14
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in5
            end ;; $_22
          end ;; $_21
        end ;; $while-in5
        get_local $14
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $1
        get_local $1
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      end ;; $_2
    else
      block $_23 (result i32)
        get_local $20
        get_local $1
        i32.const 20920
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        tee_local $1
        get_local $1
        i32.load
        i32.load offset=44
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $2
        get_local $20
        i32.load
        tee_local $0
        i32.store8
        get_local $2
        get_local $0
        i32.const 8
        i32.shr_s
        i32.store8 offset=1
        get_local $2
        get_local $0
        i32.const 16
        i32.shr_s
        i32.store8 offset=2
        get_local $2
        get_local $0
        i32.const 24
        i32.shr_s
        i32.store8 offset=3
        get_local $15
        get_local $1
        get_local $1
        i32.load
        i32.load offset=32
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $8
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_24 (result i32)
          block $_25 (result i32)
            get_local $8
            i32.load
            i32.const 0
            i32.store8
            get_local $8
            i32.const 0
            i32.store offset=4
            get_local $8
          end ;; $_25
        else
          block $_26 (result i32)
            get_local $8
            i32.const 0
            i32.store8
            get_local $0
            i32.const 0
            i32.store8
            get_local $8
          end ;; $_26
        end ;; $_24
        set_local $0
        get_local $8
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $0
        get_local $15
        i32.load
        i32.store
        get_local $0
        get_local $15
        i32.load offset=4
        i32.store offset=4
        get_local $0
        get_local $15
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in7
          get_local $0
          i32.const 3
          i32.ne
          if $_27
            block $_28
              get_local $15
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in7
            end ;; $_28
          end ;; $_27
        end ;; $while-in7
        get_local $15
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $16
        get_local $1
        get_local $1
        i32.load
        i32.load offset=28
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $7
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_29 (result i32)
          block $_30 (result i32)
            get_local $7
            i32.load
            i32.const 0
            i32.store8
            get_local $7
            i32.const 0
            i32.store offset=4
            get_local $7
          end ;; $_30
        else
          block $_31 (result i32)
            get_local $7
            i32.const 0
            i32.store8
            get_local $0
            i32.const 0
            i32.store8
            get_local $7
          end ;; $_31
        end ;; $_29
        set_local $0
        get_local $7
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $0
        get_local $16
        i32.load
        i32.store
        get_local $0
        get_local $16
        i32.load offset=4
        i32.store offset=4
        get_local $0
        get_local $16
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in9
          get_local $0
          i32.const 3
          i32.ne
          if $_32
            block $_33
              get_local $16
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in9
            end ;; $_33
          end ;; $_32
        end ;; $while-in9
        get_local $16
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $3
        get_local $1
        get_local $1
        i32.load
        i32.load offset=12
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store8
        get_local $4
        get_local $1
        get_local $1
        i32.load
        i32.load offset=16
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store8
        get_local $17
        get_local $1
        get_local $1
        i32.load
        i32.load offset=20
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $5
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_34 (result i32)
          block $_35 (result i32)
            get_local $5
            i32.load
            i32.const 0
            i32.store8
            get_local $5
            i32.const 0
            i32.store offset=4
            get_local $5
          end ;; $_35
        else
          block $_36 (result i32)
            get_local $5
            i32.const 0
            i32.store8
            get_local $0
            i32.const 0
            i32.store8
            get_local $5
          end ;; $_36
        end ;; $_34
        set_local $0
        get_local $5
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $0
        get_local $17
        i32.load
        i32.store
        get_local $0
        get_local $17
        i32.load offset=4
        i32.store offset=4
        get_local $0
        get_local $17
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in11
          get_local $0
          i32.const 3
          i32.ne
          if $_37
            block $_38
              get_local $17
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in11
            end ;; $_38
          end ;; $_37
        end ;; $while-in11
        get_local $17
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $18
        get_local $1
        get_local $1
        i32.load
        i32.load offset=24
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $6
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_39 (result i32)
          block $_40 (result i32)
            get_local $6
            i32.load
            i32.const 0
            i32.store8
            get_local $6
            i32.const 0
            i32.store offset=4
            get_local $6
          end ;; $_40
        else
          block $_41 (result i32)
            get_local $6
            i32.const 0
            i32.store8
            get_local $0
            i32.const 0
            i32.store8
            get_local $6
          end ;; $_41
        end ;; $_39
        set_local $0
        get_local $6
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $0
        get_local $18
        i32.load
        i32.store
        get_local $0
        get_local $18
        i32.load offset=4
        i32.store offset=4
        get_local $0
        get_local $18
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in13
          get_local $0
          i32.const 3
          i32.ne
          if $if
            block $block
              get_local $18
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in13
            end ;; $block
          end ;; $if
        end ;; $while-in13
        get_local $18
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $1
        get_local $1
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      end ;; $_23
    end ;; $_1
    tee_local $0
    i32.store
    get_local $10
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_ (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    get_global $STACKTOP
    set_local $14
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $14
    i32.const 16
    i32.add
    set_local $16
    get_local $14
    i32.const 12
    i32.add
    set_local $17
    get_local $14
    i32.const 4
    i32.add
    set_local $18
    get_local $14
    set_local $19
    get_local $14
    i32.const 8
    i32.add
    tee_local $9
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $8
    i32.store
    get_local $9
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $12
    get_local $8
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $4
    i32.const 0
    i32.store
    get_local $12
    i32.const 8
    i32.add
    set_local $20
    get_local $6
    set_local $9
    i32.const 0
    set_local $6
    block $__rjto$7
      block $__rjti$7
        block $__rjti$6
          block $__rjti$5
            loop $label$continue$L1
              block $label$break$L1
                get_local $9
                get_local $7
                i32.ne
                set_local $15
                get_local $6
                set_local $8
                block $label$break$L29
                  block $__rjti$4
                    block $__rjti$3
                      block $__rjti$2
                        loop $while-in
                          get_local $1
                          i32.load
                          set_local $6
                          get_local $15
                          get_local $8
                          i32.eqz
                          i32.and
                          i32.eqz
                          if $_1
                            block $_2
                              get_local $6
                              set_local $0
                              br $label$break$L1
                            end ;; $_2
                          end ;; $_1
                          get_local $6
                          set_local $8
                          get_local $6
                          if $_3
                            get_local $6
                            i32.load offset=12
                            get_local $6
                            i32.load offset=16
                            i32.eq
                            if $_4
                              get_local $6
                              get_local $6
                              i32.load
                              i32.load offset=36
                              i32.const 63
                              i32.and
                              i32.const 312
                              i32.add
                              call_indirect (type $FUNCSIG$ii)
                              i32.const -1
                              i32.eq
                              if $_5
                                block $_6
                                  get_local $1
                                  i32.const 0
                                  i32.store
                                  i32.const 0
                                  set_local $8
                                  i32.const 0
                                  set_local $6
                                end ;; $_6
                              end ;; $_5
                            end ;; $_4
                          else
                            i32.const 0
                            set_local $6
                          end ;; $_3
                          get_local $6
                          i32.eqz
                          set_local $13
                          get_local $2
                          i32.load
                          tee_local $10
                          set_local $11
                          block $__rjto$0
                            block $__rjti$0
                              get_local $10
                              i32.eqz
                              br_if $__rjti$0
                              get_local $10
                              i32.load offset=12
                              get_local $10
                              i32.load offset=16
                              i32.eq
                              if $_7
                                get_local $10
                                get_local $10
                                i32.load
                                i32.load offset=36
                                i32.const 63
                                i32.and
                                i32.const 312
                                i32.add
                                call_indirect (type $FUNCSIG$ii)
                                i32.const -1
                                i32.eq
                                if $_8
                                  block $_9
                                    get_local $2
                                    i32.const 0
                                    i32.store
                                    i32.const 0
                                    set_local $11
                                    br $__rjti$0
                                  end ;; $_9
                                end ;; $_8
                              end ;; $_7
                              get_local $13
                              i32.eqz
                              br_if $__rjti$5
                              br $__rjto$0
                            end ;; $__rjti$0
                            get_local $13
                            br_if $__rjti$5
                            i32.const 0
                            set_local $10
                          end ;; $__rjto$0
                          get_local $12
                          get_local $9
                          i32.load8_s
                          i32.const 0
                          get_local $12
                          i32.load
                          i32.load offset=36
                          i32.const 31
                          i32.and
                          i32.const 8
                          i32.add
                          call_indirect (type $FUNCSIG$iiii)
                          i32.const 255
                          i32.and
                          i32.const 37
                          i32.eq
                          if $_10
                            block $_11
                              get_local $8
                              set_local $10
                              get_local $11
                              set_local $13
                              br $__rjti$2
                            end ;; $_11
                          end ;; $_10
                          get_local $9
                          i32.load8_s
                          tee_local $8
                          i32.const -1
                          i32.gt_s
                          if $_12
                            get_local $20
                            i32.load
                            tee_local $11
                            get_local $8
                            i32.const 1
                            i32.shl
                            i32.add
                            i32.load16_s
                            i32.const 8192
                            i32.and
                            if $_13
                              block $_14
                                get_local $6
                                set_local $8
                                br $__rjti$3
                              end ;; $_14
                            end ;; $_13
                          end ;; $_12
                          get_local $12
                          get_local $6
                          i32.const 12
                          i32.add
                          tee_local $8
                          i32.load
                          tee_local $10
                          get_local $6
                          i32.const 16
                          i32.add
                          tee_local $11
                          i32.load
                          i32.eq
                          if $_15 (result i32)
                            get_local $6
                            get_local $6
                            i32.load
                            i32.load offset=36
                            i32.const 63
                            i32.and
                            i32.const 312
                            i32.add
                            call_indirect (type $FUNCSIG$ii)
                          else
                            get_local $10
                            i32.load8_u
                          end ;; $_15
                          tee_local $10
                          i32.const 255
                          i32.and
                          get_local $12
                          i32.load
                          i32.load offset=12
                          i32.const 15
                          i32.and
                          i32.const 413
                          i32.add
                          call_indirect (type $FUNCSIG$iii)
                          i32.const 255
                          i32.and
                          get_local $12
                          get_local $9
                          i32.load8_s
                          get_local $12
                          i32.load
                          i32.load offset=12
                          i32.const 15
                          i32.and
                          i32.const 413
                          i32.add
                          call_indirect (type $FUNCSIG$iii)
                          i32.const 255
                          i32.and
                          i32.eq
                          br_if $__rjti$4
                          get_local $4
                          i32.const 4
                          i32.store
                          i32.const 4
                          set_local $8
                          br $while-in
                        end ;; $while-in
                      end ;; $__rjti$2
                      get_local $9
                      i32.const 1
                      i32.add
                      tee_local $11
                      get_local $7
                      i32.eq
                      if $_16
                        block $_17
                          get_local $6
                          set_local $0
                          br $__rjti$6
                        end ;; $_17
                      end ;; $_16
                      block $switch
                        block $switch-default
                          block $switch-case
                            get_local $12
                            get_local $11
                            i32.load8_s
                            i32.const 0
                            get_local $12
                            i32.load
                            i32.load offset=36
                            i32.const 31
                            i32.and
                            i32.const 8
                            i32.add
                            call_indirect (type $FUNCSIG$iiii)
                            tee_local $8
                            i32.const 24
                            i32.shl
                            i32.const 24
                            i32.shr_s
                            i32.const 48
                            i32.sub
                            br_table
                              $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case
                              $switch-default ;; default
                          end ;; $switch-case
                          get_local $9
                          i32.const 2
                          i32.add
                          tee_local $15
                          get_local $7
                          i32.eq
                          if $_18
                            block $_19
                              get_local $6
                              set_local $0
                              br $__rjti$7
                            end ;; $_19
                          end ;; $_18
                          get_local $11
                          set_local $9
                          get_local $12
                          get_local $15
                          i32.load8_s
                          i32.const 0
                          get_local $12
                          i32.load
                          i32.load offset=36
                          i32.const 31
                          i32.and
                          i32.const 8
                          i32.add
                          call_indirect (type $FUNCSIG$iiii)
                          set_local $6
                          br $switch
                        end ;; $switch-default
                        get_local $8
                        set_local $6
                        i32.const 0
                        set_local $8
                      end ;; $switch
                      get_local $0
                      i32.load
                      i32.load offset=36
                      set_local $11
                      get_local $18
                      get_local $10
                      i32.store
                      get_local $19
                      get_local $13
                      i32.store
                      get_local $17
                      get_local $18
                      i32.load
                      i32.store
                      get_local $16
                      get_local $19
                      i32.load
                      i32.store
                      get_local $1
                      get_local $0
                      get_local $17
                      get_local $16
                      get_local $3
                      get_local $4
                      get_local $5
                      get_local $6
                      get_local $8
                      get_local $11
                      i32.const 15
                      i32.and
                      i32.const 381
                      i32.add
                      call_indirect (type $FUNCSIG$iiiiiiiii)
                      i32.store
                      get_local $9
                      i32.const 2
                      i32.add
                      set_local $6
                      br $label$break$L29
                    end ;; $__rjti$3
                    get_local $9
                    set_local $6
                    loop $while-in3
                      block $while-out2
                        get_local $6
                        i32.const 1
                        i32.add
                        tee_local $6
                        get_local $7
                        i32.eq
                        if $_20
                          block $_21
                            get_local $7
                            set_local $6
                            br $while-out2
                          end ;; $_21
                        end ;; $_20
                        get_local $6
                        i32.load8_s
                        tee_local $9
                        i32.const -1
                        i32.le_s
                        br_if $while-out2
                        get_local $11
                        get_local $9
                        i32.const 1
                        i32.shl
                        i32.add
                        i32.load16_s
                        i32.const 8192
                        i32.and
                        br_if $while-in3
                      end ;; $while-out2
                    end ;; $while-in3
                    get_local $10
                    set_local $9
                    loop $while-in5
                      get_local $8
                      if $_22
                        get_local $8
                        i32.load offset=12
                        get_local $8
                        i32.load offset=16
                        i32.eq
                        if $_23
                          get_local $8
                          get_local $8
                          i32.load
                          i32.load offset=36
                          i32.const 63
                          i32.and
                          i32.const 312
                          i32.add
                          call_indirect (type $FUNCSIG$ii)
                          i32.const -1
                          i32.eq
                          if $_24
                            block $_25
                              get_local $1
                              i32.const 0
                              i32.store
                              i32.const 0
                              set_local $8
                            end ;; $_25
                          end ;; $_24
                        end ;; $_23
                      else
                        i32.const 0
                        set_local $8
                      end ;; $_22
                      get_local $8
                      i32.eqz
                      set_local $11
                      block $__rjto$1
                        block $__rjti$1
                          get_local $10
                          i32.eqz
                          br_if $__rjti$1
                          get_local $10
                          i32.load offset=12
                          get_local $10
                          i32.load offset=16
                          i32.ne
                          if $_26
                            get_local $11
                            if $_27
                              block $_28
                                get_local $9
                                set_local $11
                                br $__rjto$1
                              end ;; $_28
                            else
                              br $label$break$L29
                            end ;; $_27
                          end ;; $_26
                          get_local $10
                          get_local $10
                          i32.load
                          i32.load offset=36
                          i32.const 63
                          i32.and
                          i32.const 312
                          i32.add
                          call_indirect (type $FUNCSIG$ii)
                          i32.const -1
                          i32.eq
                          if $_29
                            block $_30
                              get_local $2
                              i32.const 0
                              i32.store
                              i32.const 0
                              set_local $9
                              br $__rjti$1
                            end ;; $_30
                          else
                            get_local $11
                            get_local $9
                            i32.eqz
                            i32.xor
                            if $_31
                              block $_32
                                get_local $9
                                set_local $11
                                get_local $9
                                set_local $10
                              end ;; $_32
                            else
                              br $label$break$L29
                            end ;; $_31
                          end ;; $_29
                          br $__rjto$1
                        end ;; $__rjti$1
                        get_local $11
                        br_if $label$break$L29
                        get_local $9
                        set_local $11
                        i32.const 0
                        set_local $10
                      end ;; $__rjto$1
                      get_local $8
                      i32.const 12
                      i32.add
                      tee_local $13
                      i32.load
                      tee_local $9
                      get_local $8
                      i32.const 16
                      i32.add
                      tee_local $15
                      i32.load
                      i32.eq
                      if $_33 (result i32)
                        get_local $8
                        get_local $8
                        i32.load
                        i32.load offset=36
                        i32.const 63
                        i32.and
                        i32.const 312
                        i32.add
                        call_indirect (type $FUNCSIG$ii)
                      else
                        get_local $9
                        i32.load8_s
                      end ;; $_33
                      tee_local $9
                      i32.const 255
                      i32.and
                      i32.const 24
                      i32.shl
                      i32.const 24
                      i32.shr_s
                      i32.const -1
                      i32.le_s
                      br_if $label$break$L29
                      get_local $20
                      i32.load
                      get_local $9
                      i32.const 24
                      i32.shl
                      i32.const 24
                      i32.shr_s
                      i32.const 1
                      i32.shl
                      i32.add
                      i32.load16_s
                      i32.const 8192
                      i32.and
                      i32.eqz
                      br_if $label$break$L29
                      get_local $13
                      i32.load
                      tee_local $9
                      get_local $15
                      i32.load
                      i32.eq
                      if $_34
                        block $_35
                          get_local $8
                          get_local $8
                          i32.load
                          i32.load offset=40
                          i32.const 63
                          i32.and
                          i32.const 312
                          i32.add
                          call_indirect (type $FUNCSIG$ii)
                          drop
                          get_local $11
                          set_local $9
                          br $while-in5
                        end ;; $_35
                      else
                        block $_36
                          get_local $13
                          get_local $9
                          i32.const 1
                          i32.add
                          i32.store
                          get_local $11
                          set_local $9
                          br $while-in5
                        end ;; $_36
                      end ;; $_34
                    end ;; $while-in5
                    br $label$break$L29
                  end ;; $__rjti$4
                  get_local $8
                  i32.load
                  tee_local $10
                  get_local $11
                  i32.load
                  i32.eq
                  if $_37
                    get_local $6
                    get_local $6
                    i32.load
                    i32.load offset=40
                    i32.const 63
                    i32.and
                    i32.const 312
                    i32.add
                    call_indirect (type $FUNCSIG$ii)
                    drop
                  else
                    get_local $8
                    get_local $10
                    i32.const 1
                    i32.add
                    i32.store
                  end ;; $_37
                  get_local $9
                  i32.const 1
                  i32.add
                  set_local $6
                end ;; $label$break$L29
                get_local $6
                set_local $9
                get_local $4
                i32.load
                set_local $6
                br $label$continue$L1
              end ;; $label$break$L1
            end ;; $label$continue$L1
            br $__rjto$7
          end ;; $__rjti$5
          get_local $4
          i32.const 4
          i32.store
          get_local $6
          set_local $0
          br $__rjto$7
        end ;; $__rjti$6
        get_local $4
        i32.const 4
        i32.store
        br $__rjto$7
      end ;; $__rjti$7
      get_local $4
      i32.const 4
      i32.store
    end ;; $__rjto$7
    get_local $0
    if $_38
      get_local $0
      i32.load offset=12
      get_local $0
      i32.load offset=16
      i32.eq
      if $_39
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_40
          block $_41
            get_local $1
            i32.const 0
            i32.store
            i32.const 0
            set_local $0
          end ;; $_41
        end ;; $_40
      end ;; $_39
    else
      i32.const 0
      set_local $0
    end ;; $_38
    get_local $0
    i32.eqz
    set_local $3
    block $__rjto$9
      block $__rjti$9
        block $__rjti$8
          get_local $2
          i32.load
          tee_local $1
          i32.eqz
          br_if $__rjti$8
          get_local $1
          i32.load offset=12
          get_local $1
          i32.load offset=16
          i32.eq
          if $if
            get_local $1
            get_local $1
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $if_1
              block $block
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$8
              end ;; $block
            end ;; $if_1
          end ;; $if
          get_local $3
          i32.eqz
          br_if $__rjti$9
          br $__rjto$9
        end ;; $__rjti$8
        get_local $3
        br_if $__rjti$9
        br $__rjto$9
      end ;; $__rjti$9
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$9
    get_local $14
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb (type $FUNCSIG$iiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (result i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    get_global $STACKTOP
    set_local $16
    get_global $STACKTOP
    i32.const 112
    i32.add
    set_global $STACKTOP
    get_local $16
    set_local $13
    get_local $3
    get_local $2
    i32.sub
    i32.const 12
    i32.div_s
    tee_local $11
    i32.const 100
    i32.gt_u
    if $_1 (result i32)
      get_local $11
      call $_malloc
      tee_local $13
      if $_2 (result i32)
        get_local $13
      else
        block $_3 (result i32)
          i32.const 0
          set_local $13
          i32.const 0
        end ;; $_3
      end ;; $_2
    else
      i32.const 0
    end ;; $_1
    set_local $17
    get_local $2
    set_local $9
    i32.const 0
    set_local $12
    get_local $13
    set_local $7
    loop $while-in
      block $while-out
        get_local $9
        get_local $3
        i32.eq
        if $_4
          block $_5
            get_local $11
            set_local $7
            br $while-out
          end ;; $_5
        end ;; $_4
        get_local $9
        i32.load8_s offset=11
        tee_local $8
        i32.const 0
        i32.lt_s
        if $_6 (result i32)
          get_local $9
          i32.load offset=4
        else
          get_local $8
          i32.const 255
          i32.and
        end ;; $_6
        tee_local $8
        if $_7
          get_local $7
          i32.const 1
          i32.store8
        else
          block $_8
            get_local $7
            i32.const 2
            i32.store8
            get_local $12
            i32.const 1
            i32.add
            set_local $12
            get_local $11
            i32.const -1
            i32.add
            set_local $11
          end ;; $_8
        end ;; $_7
        get_local $9
        i32.const 12
        i32.add
        set_local $9
        get_local $7
        i32.const 1
        i32.add
        set_local $7
        br $while-in
      end ;; $while-out
    end ;; $while-in
    i32.const 0
    set_local $9
    get_local $12
    set_local $11
    get_local $7
    set_local $12
    loop $label$continue$L17
      block $label$break$L17
        get_local $0
        i32.load
        tee_local $7
        if $_9 (result i32)
          get_local $7
          i32.load offset=12
          tee_local $8
          get_local $7
          i32.load offset=16
          i32.eq
          if $_10 (result i32)
            get_local $7
            get_local $7
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $8
            i32.load
          end ;; $_10
          tee_local $7
          i32.const -1
          i32.eq
          if $_11 (result i32)
            block $_12 (result i32)
              get_local $0
              i32.const 0
              i32.store
              i32.const 1
            end ;; $_12
          else
            get_local $0
            i32.load
            i32.eqz
          end ;; $_11
        else
          i32.const 1
        end ;; $_9
        set_local $10
        get_local $1
        i32.load
        tee_local $7
        if $_13 (result i32)
          get_local $7
          i32.load offset=12
          tee_local $8
          get_local $7
          i32.load offset=16
          i32.eq
          if $_14 (result i32)
            get_local $7
            get_local $7
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $8
            i32.load
          end ;; $_14
          tee_local $8
          i32.const -1
          i32.eq
          if $_15 (result i32)
            block $_16 (result i32)
              get_local $1
              i32.const 0
              i32.store
              i32.const 0
              set_local $7
              i32.const 1
            end ;; $_16
          else
            i32.const 0
          end ;; $_15
        else
          block $_17 (result i32)
            i32.const 0
            set_local $7
            i32.const 1
          end ;; $_17
        end ;; $_13
        set_local $14
        get_local $0
        i32.load
        set_local $8
        get_local $12
        i32.const 0
        i32.ne
        get_local $10
        get_local $14
        i32.xor
        i32.and
        i32.eqz
        br_if $label$break$L17
        get_local $8
        i32.load offset=12
        tee_local $7
        get_local $8
        i32.load offset=16
        i32.eq
        if $_18 (result i32)
          get_local $8
          get_local $8
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $7
          i32.load
        end ;; $_18
        set_local $7
        get_local $6
        if $_19 (result i32)
          get_local $7
        else
          get_local $4
          get_local $7
          get_local $4
          i32.load
          i32.load offset=28
          i32.const 15
          i32.and
          i32.const 413
          i32.add
          call_indirect (type $FUNCSIG$iii)
        end ;; $_19
        set_local $18
        get_local $9
        i32.const 1
        i32.add
        set_local $7
        i32.const 0
        set_local $8
        get_local $2
        set_local $10
        get_local $13
        set_local $14
        loop $while-in1
          get_local $10
          get_local $3
          i32.ne
          if $_20
            block $_21
              block $do-once2
                get_local $14
                i32.load8_s
                i32.const 1
                i32.eq
                if $_22
                  block $_23
                    get_local $10
                    i32.const 11
                    i32.add
                    tee_local $19
                    i32.load8_s
                    i32.const 0
                    i32.lt_s
                    if $_24 (result i32)
                      get_local $10
                      i32.load
                    else
                      get_local $10
                    end ;; $_24
                    tee_local $15
                    get_local $9
                    i32.const 2
                    i32.shl
                    i32.add
                    i32.load
                    set_local $15
                    get_local $6
                    i32.eqz
                    if $_25
                      get_local $4
                      get_local $15
                      get_local $4
                      i32.load
                      i32.load offset=28
                      i32.const 15
                      i32.and
                      i32.const 413
                      i32.add
                      call_indirect (type $FUNCSIG$iii)
                      set_local $15
                    end ;; $_25
                    get_local $18
                    get_local $15
                    i32.ne
                    if $_26
                      block $_27
                        get_local $14
                        i32.const 0
                        i32.store8
                        get_local $12
                        i32.const -1
                        i32.add
                        set_local $12
                        br $do-once2
                      end ;; $_27
                    end ;; $_26
                    get_local $19
                    i32.load8_s
                    tee_local $8
                    i32.const 0
                    i32.lt_s
                    if $_28 (result i32)
                      get_local $10
                      i32.load offset=4
                    else
                      get_local $8
                      i32.const 255
                      i32.and
                    end ;; $_28
                    tee_local $8
                    get_local $7
                    i32.eq
                    if $_29 (result i32)
                      block $_30 (result i32)
                        get_local $14
                        i32.const 2
                        i32.store8
                        get_local $11
                        i32.const 1
                        i32.add
                        set_local $11
                        get_local $12
                        i32.const -1
                        i32.add
                        set_local $12
                        i32.const 1
                      end ;; $_30
                    else
                      i32.const 1
                    end ;; $_29
                    set_local $8
                  end ;; $_23
                end ;; $_22
              end ;; $do-once2
              get_local $10
              i32.const 12
              i32.add
              set_local $10
              get_local $14
              i32.const 1
              i32.add
              set_local $14
              br $while-in1
            end ;; $_21
          end ;; $_20
        end ;; $while-in1
        get_local $8
        i32.eqz
        if $_31
          block $_32
            get_local $7
            set_local $9
            br $label$continue$L17
          end ;; $_32
        end ;; $_31
        get_local $0
        i32.load
        tee_local $9
        i32.const 12
        i32.add
        tee_local $8
        i32.load
        tee_local $10
        get_local $9
        i32.load offset=16
        i32.eq
        if $_33
          get_local $9
          get_local $9
          i32.load
          i32.load offset=40
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
          drop
        else
          get_local $8
          get_local $10
          i32.const 4
          i32.add
          i32.store
        end ;; $_33
        get_local $11
        get_local $12
        i32.add
        i32.const 1
        i32.gt_u
        if $_34
          block $_35
            get_local $2
            set_local $9
            get_local $13
            set_local $8
          end ;; $_35
        else
          block $_36
            get_local $7
            set_local $9
            br $label$continue$L17
          end ;; $_36
        end ;; $_34
        loop $while-in5
          get_local $9
          get_local $3
          i32.eq
          if $_37
            block $_38
              get_local $7
              set_local $9
              br $label$continue$L17
            end ;; $_38
          end ;; $_37
          get_local $8
          i32.load8_s
          i32.const 2
          i32.eq
          if $_39
            get_local $9
            i32.load8_s offset=11
            tee_local $10
            i32.const 0
            i32.lt_s
            if $_40 (result i32)
              get_local $9
              i32.load offset=4
            else
              get_local $10
              i32.const 255
              i32.and
            end ;; $_40
            tee_local $10
            get_local $7
            i32.ne
            if $_41
              block $_42
                get_local $8
                i32.const 0
                i32.store8
                get_local $11
                i32.const -1
                i32.add
                set_local $11
              end ;; $_42
            end ;; $_41
          end ;; $_39
          get_local $9
          i32.const 12
          i32.add
          set_local $9
          get_local $8
          i32.const 1
          i32.add
          set_local $8
          br $while-in5
        end ;; $while-in5
      end ;; $label$break$L17
    end ;; $label$continue$L17
    get_local $8
    if $_43 (result i32)
      get_local $8
      i32.load offset=12
      tee_local $4
      get_local $8
      i32.load offset=16
      i32.eq
      if $_44 (result i32)
        get_local $8
        get_local $8
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $4
        i32.load
      end ;; $_44
      tee_local $4
      i32.const -1
      i32.eq
      if $_45 (result i32)
        block $_46 (result i32)
          get_local $0
          i32.const 0
          i32.store
          i32.const 1
        end ;; $_46
      else
        get_local $0
        i32.load
        i32.eqz
      end ;; $_45
    else
      i32.const 1
    end ;; $_43
    set_local $0
    block $__rjto$1
      block $__rjti$1
        block $__rjti$0
          get_local $7
          i32.eqz
          br_if $__rjti$0
          get_local $7
          i32.load offset=12
          tee_local $4
          get_local $7
          i32.load offset=16
          i32.eq
          if $_47 (result i32)
            get_local $7
            get_local $7
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $4
            i32.load
          end ;; $_47
          tee_local $4
          i32.const -1
          i32.eq
          if $_48
            block $_49
              get_local $1
              i32.const 0
              i32.store
              br $__rjti$0
            end ;; $_49
          else
            get_local $0
            i32.eqz
            br_if $__rjti$1
          end ;; $_48
          br $__rjto$1
        end ;; $__rjti$0
        get_local $0
        br_if $__rjti$1
        br $__rjto$1
      end ;; $__rjti$1
      get_local $5
      get_local $5
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$1
    block $__rjto$2
      block $__rjti$2
        loop $while-in11
          get_local $2
          get_local $3
          i32.eq
          br_if $__rjti$2
          get_local $13
          i32.load8_s
          i32.const 2
          i32.ne
          if $if
            block $block
              get_local $2
              i32.const 12
              i32.add
              set_local $2
              get_local $13
              i32.const 1
              i32.add
              set_local $13
              br $while-in11
            end ;; $block
          end ;; $if
        end ;; $while-in11
        br $__rjto$2
      end ;; $__rjti$2
      get_local $5
      get_local $5
      i32.load
      i32.const 4
      i32.or
      i32.store
      get_local $3
      set_local $2
    end ;; $__rjto$2
    get_local $17
    call $_free
    get_local $16
    set_global $STACKTOP
    get_local $2
    )
  
  (func $__ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri (type $_3)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (param $8 i32)
    (param $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 112
    i32.add
    set_global $STACKTOP
    get_local $10
    i32.const 100
    i32.add
    set_local $19
    get_local $10
    i32.const 88
    i32.add
    set_local $11
    get_local $10
    i32.const 76
    i32.add
    set_local $12
    get_local $10
    i32.const 64
    i32.add
    set_local $13
    get_local $10
    i32.const 52
    i32.add
    set_local $14
    get_local $10
    i32.const 48
    i32.add
    set_local $20
    get_local $10
    i32.const 36
    i32.add
    set_local $15
    get_local $10
    i32.const 24
    i32.add
    set_local $16
    get_local $10
    i32.const 12
    i32.add
    set_local $17
    get_local $10
    set_local $18
    get_local $9
    get_local $0
    if $_1 (result i32)
      block $_2 (result i32)
        get_local $19
        get_local $1
        i32.const 20944
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        tee_local $1
        get_local $1
        i32.load
        i32.load offset=44
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $2
        get_local $19
        i32.load
        tee_local $0
        i32.store8
        get_local $2
        get_local $0
        i32.const 8
        i32.shr_s
        i32.store8 offset=1
        get_local $2
        get_local $0
        i32.const 16
        i32.shr_s
        i32.store8 offset=2
        get_local $2
        get_local $0
        i32.const 24
        i32.shr_s
        i32.store8 offset=3
        get_local $11
        get_local $1
        get_local $1
        i32.load
        i32.load offset=32
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $8
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_3
          block $_4
            get_local $8
            i32.load
            i32.const 0
            i32.store
            get_local $8
            i32.const 0
            i32.store offset=4
          end ;; $_4
        else
          block $_5
            get_local $8
            i32.const 0
            i32.store
            get_local $0
            i32.const 0
            i32.store8
          end ;; $_5
        end ;; $_3
        get_local $8
        i32.const 0
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj
        get_local $8
        get_local $11
        i32.load
        i32.store
        get_local $8
        get_local $11
        i32.load offset=4
        i32.store offset=4
        get_local $8
        get_local $11
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in
          get_local $0
          i32.const 3
          i32.ne
          if $_6
            block $_7
              get_local $11
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in
            end ;; $_7
          end ;; $_6
        end ;; $while-in
        get_local $11
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $12
        get_local $1
        get_local $1
        i32.load
        i32.load offset=28
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $7
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_8
          block $_9
            get_local $7
            i32.load
            i32.const 0
            i32.store
            get_local $7
            i32.const 0
            i32.store offset=4
          end ;; $_9
        else
          block $_10
            get_local $7
            i32.const 0
            i32.store
            get_local $0
            i32.const 0
            i32.store8
          end ;; $_10
        end ;; $_8
        get_local $7
        i32.const 0
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj
        get_local $7
        get_local $12
        i32.load
        i32.store
        get_local $7
        get_local $12
        i32.load offset=4
        i32.store offset=4
        get_local $7
        get_local $12
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in1
          get_local $0
          i32.const 3
          i32.ne
          if $_11
            block $_12
              get_local $12
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in1
            end ;; $_12
          end ;; $_11
        end ;; $while-in1
        get_local $12
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $3
        get_local $1
        get_local $1
        i32.load
        i32.load offset=12
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store
        get_local $4
        get_local $1
        get_local $1
        i32.load
        i32.load offset=16
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store
        get_local $13
        get_local $1
        get_local $1
        i32.load
        i32.load offset=20
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $5
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_13 (result i32)
          block $_14 (result i32)
            get_local $5
            i32.load
            i32.const 0
            i32.store8
            get_local $5
            i32.const 0
            i32.store offset=4
            get_local $5
          end ;; $_14
        else
          block $_15 (result i32)
            get_local $5
            i32.const 0
            i32.store8
            get_local $0
            i32.const 0
            i32.store8
            get_local $5
          end ;; $_15
        end ;; $_13
        set_local $0
        get_local $5
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $0
        get_local $13
        i32.load
        i32.store
        get_local $0
        get_local $13
        i32.load offset=4
        i32.store offset=4
        get_local $0
        get_local $13
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in3
          get_local $0
          i32.const 3
          i32.ne
          if $_16
            block $_17
              get_local $13
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in3
            end ;; $_17
          end ;; $_16
        end ;; $while-in3
        get_local $13
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $14
        get_local $1
        get_local $1
        i32.load
        i32.load offset=24
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $6
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_18
          block $_19
            get_local $6
            i32.load
            i32.const 0
            i32.store
            get_local $6
            i32.const 0
            i32.store offset=4
          end ;; $_19
        else
          block $_20
            get_local $6
            i32.const 0
            i32.store
            get_local $0
            i32.const 0
            i32.store8
          end ;; $_20
        end ;; $_18
        get_local $6
        i32.const 0
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj
        get_local $6
        get_local $14
        i32.load
        i32.store
        get_local $6
        get_local $14
        i32.load offset=4
        i32.store offset=4
        get_local $6
        get_local $14
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in5
          get_local $0
          i32.const 3
          i32.ne
          if $_21
            block $_22
              get_local $14
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in5
            end ;; $_22
          end ;; $_21
        end ;; $while-in5
        get_local $14
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $1
        get_local $1
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      end ;; $_2
    else
      block $_23 (result i32)
        get_local $20
        get_local $1
        i32.const 20936
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        tee_local $1
        get_local $1
        i32.load
        i32.load offset=44
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $2
        get_local $20
        i32.load
        tee_local $0
        i32.store8
        get_local $2
        get_local $0
        i32.const 8
        i32.shr_s
        i32.store8 offset=1
        get_local $2
        get_local $0
        i32.const 16
        i32.shr_s
        i32.store8 offset=2
        get_local $2
        get_local $0
        i32.const 24
        i32.shr_s
        i32.store8 offset=3
        get_local $15
        get_local $1
        get_local $1
        i32.load
        i32.load offset=32
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $8
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_24
          block $_25
            get_local $8
            i32.load
            i32.const 0
            i32.store
            get_local $8
            i32.const 0
            i32.store offset=4
          end ;; $_25
        else
          block $_26
            get_local $8
            i32.const 0
            i32.store
            get_local $0
            i32.const 0
            i32.store8
          end ;; $_26
        end ;; $_24
        get_local $8
        i32.const 0
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj
        get_local $8
        get_local $15
        i32.load
        i32.store
        get_local $8
        get_local $15
        i32.load offset=4
        i32.store offset=4
        get_local $8
        get_local $15
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in7
          get_local $0
          i32.const 3
          i32.ne
          if $_27
            block $_28
              get_local $15
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in7
            end ;; $_28
          end ;; $_27
        end ;; $while-in7
        get_local $15
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $16
        get_local $1
        get_local $1
        i32.load
        i32.load offset=28
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $7
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_29
          block $_30
            get_local $7
            i32.load
            i32.const 0
            i32.store
            get_local $7
            i32.const 0
            i32.store offset=4
          end ;; $_30
        else
          block $_31
            get_local $7
            i32.const 0
            i32.store
            get_local $0
            i32.const 0
            i32.store8
          end ;; $_31
        end ;; $_29
        get_local $7
        i32.const 0
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj
        get_local $7
        get_local $16
        i32.load
        i32.store
        get_local $7
        get_local $16
        i32.load offset=4
        i32.store offset=4
        get_local $7
        get_local $16
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in9
          get_local $0
          i32.const 3
          i32.ne
          if $_32
            block $_33
              get_local $16
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in9
            end ;; $_33
          end ;; $_32
        end ;; $while-in9
        get_local $16
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $3
        get_local $1
        get_local $1
        i32.load
        i32.load offset=12
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store
        get_local $4
        get_local $1
        get_local $1
        i32.load
        i32.load offset=16
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.store
        get_local $17
        get_local $1
        get_local $1
        i32.load
        i32.load offset=20
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $5
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_34 (result i32)
          block $_35 (result i32)
            get_local $5
            i32.load
            i32.const 0
            i32.store8
            get_local $5
            i32.const 0
            i32.store offset=4
            get_local $5
          end ;; $_35
        else
          block $_36 (result i32)
            get_local $5
            i32.const 0
            i32.store8
            get_local $0
            i32.const 0
            i32.store8
            get_local $5
          end ;; $_36
        end ;; $_34
        set_local $0
        get_local $5
        i32.const 0
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj
        get_local $0
        get_local $17
        i32.load
        i32.store
        get_local $0
        get_local $17
        i32.load offset=4
        i32.store offset=4
        get_local $0
        get_local $17
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in11
          get_local $0
          i32.const 3
          i32.ne
          if $_37
            block $_38
              get_local $17
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in11
            end ;; $_38
          end ;; $_37
        end ;; $while-in11
        get_local $17
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $18
        get_local $1
        get_local $1
        i32.load
        i32.load offset=24
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $6
        i32.const 11
        i32.add
        tee_local $0
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_39
          block $_40
            get_local $6
            i32.load
            i32.const 0
            i32.store
            get_local $6
            i32.const 0
            i32.store offset=4
          end ;; $_40
        else
          block $_41
            get_local $6
            i32.const 0
            i32.store
            get_local $0
            i32.const 0
            i32.store8
          end ;; $_41
        end ;; $_39
        get_local $6
        i32.const 0
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj
        get_local $6
        get_local $18
        i32.load
        i32.store
        get_local $6
        get_local $18
        i32.load offset=4
        i32.store offset=4
        get_local $6
        get_local $18
        i32.load offset=8
        i32.store offset=8
        i32.const 0
        set_local $0
        loop $while-in13
          get_local $0
          i32.const 3
          i32.ne
          if $if
            block $block
              get_local $18
              get_local $0
              i32.const 2
              i32.shl
              i32.add
              i32.const 0
              i32.store
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in13
            end ;; $block
          end ;; $if
        end ;; $while-in13
        get_local $18
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $1
        get_local $1
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      end ;; $_23
    end ;; $_1
    tee_local $0
    i32.store
    get_local $10
    set_global $STACKTOP
    )
  
  (func $___udivmoddi4 (type $FUNCSIG$iiiiii)
    (param $xl i32)
    (param $xh i32)
    (param $yl i32)
    (param $yh i32)
    (param $r i32)
    (result i32)
    (local $x64 i64)
    (local $y64 i64)
    get_local $xl
    i64.extend_u/i32
    get_local $xh
    i64.extend_u/i32
    i64.const 32
    i64.shl
    i64.or
    set_local $x64
    get_local $yl
    i64.extend_u/i32
    get_local $yh
    i64.extend_u/i32
    i64.const 32
    i64.shl
    i64.or
    set_local $y64
    get_local $r
    if $if
      get_local $r
      get_local $x64
      get_local $y64
      i64.rem_u
      i64.store
    end ;; $if
    get_local $x64
    get_local $y64
    i64.div_u
    set_local $x64
    get_local $x64
    i64.const 32
    i64.shr_u
    i32.wrap/i64
    set_global $tempRet0
    get_local $x64
    i32.wrap/i64
    )
  
  (func $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb (type $FUNCSIG$iiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (result i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    get_global $STACKTOP
    set_local $17
    get_global $STACKTOP
    i32.const 112
    i32.add
    set_global $STACKTOP
    get_local $17
    set_local $13
    get_local $3
    get_local $2
    i32.sub
    i32.const 12
    i32.div_s
    tee_local $11
    i32.const 100
    i32.gt_u
    if $_1 (result i32)
      get_local $11
      call $_malloc
      tee_local $13
      if $_2 (result i32)
        get_local $13
      else
        block $_3 (result i32)
          i32.const 0
          set_local $13
          i32.const 0
        end ;; $_3
      end ;; $_2
    else
      i32.const 0
    end ;; $_1
    set_local $18
    get_local $2
    set_local $10
    i32.const 0
    set_local $12
    get_local $13
    set_local $7
    loop $while-in
      block $while-out
        get_local $10
        get_local $3
        i32.eq
        if $_4
          block $_5
            get_local $12
            set_local $7
            get_local $11
            set_local $12
            br $while-out
          end ;; $_5
        end ;; $_4
        get_local $10
        i32.load8_s offset=11
        tee_local $8
        i32.const 0
        i32.lt_s
        if $_6 (result i32)
          get_local $10
          i32.load offset=4
        else
          get_local $8
          i32.const 255
          i32.and
        end ;; $_6
        tee_local $8
        if $_7
          get_local $7
          i32.const 1
          i32.store8
        else
          block $_8
            get_local $7
            i32.const 2
            i32.store8
            get_local $12
            i32.const 1
            i32.add
            set_local $12
            get_local $11
            i32.const -1
            i32.add
            set_local $11
          end ;; $_8
        end ;; $_7
        get_local $10
        i32.const 12
        i32.add
        set_local $10
        get_local $7
        i32.const 1
        i32.add
        set_local $7
        br $while-in
      end ;; $while-out
    end ;; $while-in
    i32.const 0
    set_local $10
    get_local $7
    set_local $11
    loop $label$continue$L17
      block $label$break$L17
        get_local $0
        i32.load
        tee_local $8
        if $_9
          get_local $8
          i32.load offset=12
          get_local $8
          i32.load offset=16
          i32.eq
          if $_10
            get_local $8
            get_local $8
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_11 (result i32)
              block $_12 (result i32)
                get_local $0
                i32.const 0
                i32.store
                i32.const 0
              end ;; $_12
            else
              get_local $0
              i32.load
            end ;; $_11
            set_local $8
          end ;; $_10
        else
          i32.const 0
          set_local $8
        end ;; $_9
        get_local $1
        i32.load
        tee_local $7
        if $_13
          get_local $7
          i32.load offset=12
          get_local $7
          i32.load offset=16
          i32.eq
          if $_14
            get_local $7
            get_local $7
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_15
              block $_16
                get_local $1
                i32.const 0
                i32.store
                i32.const 0
                set_local $7
              end ;; $_16
            end ;; $_15
          end ;; $_14
        else
          i32.const 0
          set_local $7
        end ;; $_13
        get_local $0
        i32.load
        set_local $9
        get_local $12
        i32.const 0
        i32.ne
        get_local $8
        i32.eqz
        get_local $7
        i32.eqz
        tee_local $8
        i32.xor
        i32.and
        i32.eqz
        if $_17
          block $_18
            get_local $8
            set_local $6
            get_local $9
            set_local $4
            br $label$break$L17
          end ;; $_18
        end ;; $_17
        get_local $9
        i32.load offset=12
        tee_local $7
        get_local $9
        i32.load offset=16
        i32.eq
        if $_19 (result i32)
          get_local $9
          get_local $9
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $7
          i32.load8_u
        end ;; $_19
        tee_local $7
        i32.const 255
        i32.and
        set_local $16
        get_local $6
        i32.eqz
        if $_20
          get_local $4
          get_local $16
          get_local $4
          i32.load
          i32.load offset=12
          i32.const 15
          i32.and
          i32.const 413
          i32.add
          call_indirect (type $FUNCSIG$iii)
          set_local $16
        end ;; $_20
        get_local $10
        i32.const 1
        i32.add
        set_local $7
        i32.const 0
        set_local $8
        get_local $2
        set_local $9
        get_local $13
        set_local $14
        loop $while-in1
          get_local $9
          get_local $3
          i32.ne
          if $_21
            block $_22
              block $do-once2
                get_local $14
                i32.load8_s
                i32.const 1
                i32.eq
                if $_23
                  block $_24
                    get_local $9
                    i32.const 11
                    i32.add
                    tee_local $19
                    i32.load8_s
                    i32.const 0
                    i32.lt_s
                    if $_25 (result i32)
                      get_local $9
                      i32.load
                    else
                      get_local $9
                    end ;; $_25
                    tee_local $15
                    get_local $10
                    i32.add
                    i32.load8_s
                    set_local $15
                    get_local $6
                    i32.eqz
                    if $_26
                      get_local $4
                      get_local $15
                      get_local $4
                      i32.load
                      i32.load offset=12
                      i32.const 15
                      i32.and
                      i32.const 413
                      i32.add
                      call_indirect (type $FUNCSIG$iii)
                      set_local $15
                    end ;; $_26
                    get_local $16
                    i32.const 255
                    i32.and
                    get_local $15
                    i32.const 255
                    i32.and
                    i32.ne
                    if $_27
                      block $_28
                        get_local $14
                        i32.const 0
                        i32.store8
                        get_local $12
                        i32.const -1
                        i32.add
                        set_local $12
                        br $do-once2
                      end ;; $_28
                    end ;; $_27
                    get_local $19
                    i32.load8_s
                    tee_local $8
                    i32.const 0
                    i32.lt_s
                    if $_29 (result i32)
                      get_local $9
                      i32.load offset=4
                    else
                      get_local $8
                      i32.const 255
                      i32.and
                    end ;; $_29
                    tee_local $8
                    get_local $7
                    i32.eq
                    if $_30 (result i32)
                      block $_31 (result i32)
                        get_local $14
                        i32.const 2
                        i32.store8
                        get_local $11
                        i32.const 1
                        i32.add
                        set_local $11
                        get_local $12
                        i32.const -1
                        i32.add
                        set_local $12
                        i32.const 1
                      end ;; $_31
                    else
                      i32.const 1
                    end ;; $_30
                    set_local $8
                  end ;; $_24
                end ;; $_23
              end ;; $do-once2
              get_local $9
              i32.const 12
              i32.add
              set_local $9
              get_local $14
              i32.const 1
              i32.add
              set_local $14
              br $while-in1
            end ;; $_22
          end ;; $_21
        end ;; $while-in1
        get_local $8
        i32.eqz
        if $_32
          block $_33
            get_local $7
            set_local $10
            br $label$continue$L17
          end ;; $_33
        end ;; $_32
        get_local $0
        i32.load
        tee_local $9
        i32.const 12
        i32.add
        tee_local $8
        i32.load
        tee_local $10
        get_local $9
        i32.load offset=16
        i32.eq
        if $_34
          get_local $9
          get_local $9
          i32.load
          i32.load offset=40
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
          drop
        else
          get_local $8
          get_local $10
          i32.const 1
          i32.add
          i32.store
        end ;; $_34
        get_local $11
        get_local $12
        i32.add
        i32.const 1
        i32.gt_u
        if $_35
          block $_36
            get_local $2
            set_local $8
            get_local $13
            set_local $10
          end ;; $_36
        else
          block $_37
            get_local $7
            set_local $10
            br $label$continue$L17
          end ;; $_37
        end ;; $_35
        loop $while-in5
          get_local $8
          get_local $3
          i32.eq
          if $_38
            block $_39
              get_local $7
              set_local $10
              br $label$continue$L17
            end ;; $_39
          end ;; $_38
          get_local $10
          i32.load8_s
          i32.const 2
          i32.eq
          if $_40
            get_local $8
            i32.load8_s offset=11
            tee_local $9
            i32.const 0
            i32.lt_s
            if $_41 (result i32)
              get_local $8
              i32.load offset=4
            else
              get_local $9
              i32.const 255
              i32.and
            end ;; $_41
            tee_local $9
            get_local $7
            i32.ne
            if $_42
              block $_43
                get_local $10
                i32.const 0
                i32.store8
                get_local $11
                i32.const -1
                i32.add
                set_local $11
              end ;; $_43
            end ;; $_42
          end ;; $_40
          get_local $8
          i32.const 12
          i32.add
          set_local $8
          get_local $10
          i32.const 1
          i32.add
          set_local $10
          br $while-in5
        end ;; $while-in5
      end ;; $label$break$L17
    end ;; $label$continue$L17
    get_local $4
    if $_44
      get_local $4
      i32.load offset=12
      get_local $4
      i32.load offset=16
      i32.eq
      if $_45
        get_local $4
        get_local $4
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_46 (result i32)
          block $_47 (result i32)
            get_local $0
            i32.const 0
            i32.store
            i32.const 0
          end ;; $_47
        else
          get_local $0
          i32.load
        end ;; $_46
        set_local $4
      end ;; $_45
    else
      i32.const 0
      set_local $4
    end ;; $_44
    get_local $4
    i32.eqz
    set_local $0
    block $__rjto$1
      block $__rjti$1
        block $__rjti$0
          get_local $6
          br_if $__rjti$0
          get_local $7
          i32.load offset=12
          get_local $7
          i32.load offset=16
          i32.eq
          if $_48
            get_local $7
            get_local $7
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_49
              block $_50
                get_local $1
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_50
            end ;; $_49
          end ;; $_48
          get_local $0
          i32.eqz
          br_if $__rjti$1
          br $__rjto$1
        end ;; $__rjti$0
        get_local $0
        br_if $__rjti$1
        br $__rjto$1
      end ;; $__rjti$1
      get_local $5
      get_local $5
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$1
    block $__rjto$2
      block $__rjti$2
        loop $while-in11
          get_local $2
          get_local $3
          i32.eq
          br_if $__rjti$2
          get_local $13
          i32.load8_s
          i32.const 2
          i32.ne
          if $if
            block $block
              get_local $2
              i32.const 12
              i32.add
              set_local $2
              get_local $13
              i32.const 1
              i32.add
              set_local $13
              br $while-in11
            end ;; $block
          end ;; $if
        end ;; $while-in11
        br $__rjto$2
      end ;; $__rjti$2
      get_local $5
      get_local $5
      i32.load
      i32.const 4
      i32.or
      i32.store
      get_local $3
      set_local $2
    end ;; $__rjto$2
    get_local $18
    call $_free
    get_local $17
    set_global $STACKTOP
    get_local $2
    )
  
  (func $_mbsrtowcs (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    get_local $1
    i32.load
    set_local $4
    block $__rjto$2 (result i32)
      block $__rjti$2
        get_local $3
        i32.eqz
        br_if $__rjti$2
        get_local $3
        i32.load
        tee_local $5
        i32.eqz
        br_if $__rjti$2
        get_local $0
        if $_1 (result i32)
          block $_2 (result i32)
            get_local $3
            i32.const 0
            i32.store
            get_local $0
            set_local $6
            get_local $2
            set_local $7
            get_local $5
            set_local $15
            get_local $4
            set_local $9
            i32.const 37
          end ;; $_2
        else
          block $_3 (result i32)
            get_local $2
            set_local $14
            get_local $5
            set_local $12
            get_local $4
            set_local $10
            i32.const 16
          end ;; $_3
        end ;; $_1
        br $__rjto$2
      end ;; $__rjti$2
      get_local $0
      if $_4 (result i32)
        block $_5 (result i32)
          get_local $0
          set_local $17
          get_local $2
          set_local $16
          get_local $4
          set_local $11
          i32.const 6
        end ;; $_5
      else
        block $_6 (result i32)
          get_local $2
          set_local $13
          get_local $4
          set_local $8
          i32.const 7
        end ;; $_6
      end ;; $_4
    end ;; $__rjto$2
    set_local $3
    block $__rjto$12
      block $__rjti$12
        block $__rjti$11
          block $__rjti$10
            block $__rjti$9
              block $__rjti$8
                block $__rjti$7
                  block $__rjti$6
                    block $__rjti$5
                      block $__rjti$4
                        block $__rjti$3
                          loop $label$continue$L7
                            get_local $3
                            i32.const 6
                            i32.eq
                            if $_7
                              block $_8
                                get_local $16
                                if $_9
                                  block $_10
                                    get_local $17
                                    set_local $6
                                    get_local $16
                                    set_local $4
                                    get_local $11
                                    set_local $3
                                  end ;; $_10
                                else
                                  block $_11
                                    get_local $11
                                    set_local $3
                                    br $__rjti$6
                                  end ;; $_11
                                end ;; $_9
                                loop $while-in
                                  block $while-out
                                    block $do-once
                                      get_local $3
                                      i32.load8_s
                                      tee_local $7
                                      i32.const 255
                                      i32.and
                                      i32.const -1
                                      i32.add
                                      i32.const 127
                                      i32.lt_u
                                      if $_12
                                        get_local $4
                                        i32.const 4
                                        i32.gt_u
                                        get_local $3
                                        i32.const 3
                                        i32.and
                                        i32.eqz
                                        i32.and
                                        if $_13
                                          block $_14
                                            block $__rjti$1
                                              block $__rjti$0
                                                loop $while-in1
                                                  get_local $3
                                                  i32.load
                                                  tee_local $7
                                                  i32.const -16843009
                                                  i32.add
                                                  get_local $7
                                                  i32.or
                                                  i32.const -2139062144
                                                  i32.and
                                                  br_if $__rjti$1
                                                  get_local $6
                                                  get_local $7
                                                  i32.const 255
                                                  i32.and
                                                  i32.store
                                                  get_local $6
                                                  get_local $3
                                                  i32.load8_u offset=1
                                                  i32.store offset=4
                                                  get_local $6
                                                  get_local $3
                                                  i32.load8_u offset=2
                                                  i32.store offset=8
                                                  get_local $3
                                                  i32.const 4
                                                  i32.add
                                                  set_local $7
                                                  get_local $6
                                                  i32.const 16
                                                  i32.add
                                                  set_local $5
                                                  get_local $6
                                                  get_local $3
                                                  i32.load8_u offset=3
                                                  i32.store offset=12
                                                  get_local $4
                                                  i32.const -4
                                                  i32.add
                                                  tee_local $4
                                                  i32.const 4
                                                  i32.gt_u
                                                  if $_15
                                                    block $_16
                                                      get_local $5
                                                      set_local $6
                                                      get_local $7
                                                      set_local $3
                                                      br $while-in1
                                                    end ;; $_16
                                                  else
                                                    block $_17
                                                      get_local $7
                                                      set_local $3
                                                      get_local $5
                                                      set_local $6
                                                      br $__rjti$0
                                                    end ;; $_17
                                                  end ;; $_15
                                                end ;; $while-in1
                                              end ;; $__rjti$0
                                              get_local $3
                                              i32.load8_u
                                              set_local $7
                                              br $do-once
                                            end ;; $__rjti$1
                                            get_local $7
                                            i32.const 255
                                            i32.and
                                            set_local $7
                                          end ;; $_14
                                        end ;; $_13
                                      end ;; $_12
                                    end ;; $do-once
                                    get_local $7
                                    i32.const 255
                                    i32.and
                                    tee_local $5
                                    i32.const -1
                                    i32.add
                                    i32.const 127
                                    i32.ge_u
                                    if $_18
                                      block $_19
                                        get_local $4
                                        set_local $7
                                        br $while-out
                                      end ;; $_19
                                    end ;; $_18
                                    get_local $3
                                    i32.const 1
                                    i32.add
                                    set_local $3
                                    get_local $6
                                    get_local $5
                                    i32.store
                                    get_local $4
                                    i32.const -1
                                    i32.add
                                    tee_local $4
                                    i32.eqz
                                    br_if $__rjti$6
                                    get_local $6
                                    i32.const 4
                                    i32.add
                                    set_local $6
                                    br $while-in
                                  end ;; $while-out
                                end ;; $while-in
                                get_local $5
                                i32.const -194
                                i32.add
                                tee_local $4
                                i32.const 50
                                i32.gt_u
                                if $_20
                                  block $_21
                                    get_local $6
                                    set_local $0
                                    get_local $7
                                    set_local $14
                                    br $__rjti$11
                                  end ;; $_21
                                end ;; $_20
                                get_local $4
                                i32.const 2
                                i32.shl
                                i32.const 2496
                                i32.add
                                i32.load
                                set_local $15
                                get_local $3
                                i32.const 1
                                i32.add
                                set_local $9
                                i32.const 37
                                set_local $3
                                br $label$continue$L7
                              end ;; $_8
                            else
                              block $_22
                                get_local $3
                                i32.const 7
                                i32.eq
                                if $_23
                                  block $_24
                                    get_local $8
                                    i32.load8_s
                                    tee_local $5
                                    i32.const 255
                                    i32.and
                                    i32.const -1
                                    i32.add
                                    i32.const 127
                                    i32.lt_u
                                    if $_25
                                      get_local $8
                                      i32.const 3
                                      i32.and
                                      if $_26
                                        block $_27
                                          get_local $13
                                          set_local $3
                                          get_local $8
                                          set_local $4
                                        end ;; $_27
                                      else
                                        block $_28
                                          get_local $8
                                          i32.load
                                          tee_local $3
                                          i32.const 255
                                          i32.and
                                          set_local $5
                                          get_local $3
                                          i32.const -16843009
                                          i32.add
                                          get_local $3
                                          i32.or
                                          i32.const -2139062144
                                          i32.and
                                          if $_29
                                            block $_30
                                              get_local $13
                                              set_local $3
                                              get_local $8
                                              set_local $4
                                            end ;; $_30
                                          else
                                            block $_31
                                              get_local $13
                                              set_local $3
                                              get_local $8
                                              set_local $4
                                              loop $while-in3
                                                get_local $3
                                                i32.const -4
                                                i32.add
                                                set_local $3
                                                get_local $4
                                                i32.const 4
                                                i32.add
                                                tee_local $4
                                                i32.load
                                                tee_local $5
                                                i32.const -16843009
                                                i32.add
                                                get_local $5
                                                i32.or
                                                i32.const -2139062144
                                                i32.and
                                                i32.eqz
                                                br_if $while-in3
                                              end ;; $while-in3
                                              get_local $5
                                              i32.const 255
                                              i32.and
                                              set_local $5
                                            end ;; $_31
                                          end ;; $_29
                                        end ;; $_28
                                      end ;; $_26
                                    else
                                      block $block
                                        get_local $13
                                        set_local $3
                                        get_local $8
                                        set_local $4
                                      end ;; $block
                                    end ;; $_25
                                    get_local $5
                                    i32.const 255
                                    i32.and
                                    tee_local $5
                                    i32.const -1
                                    i32.add
                                    i32.const 127
                                    i32.lt_u
                                    if $if
                                      block $block_1
                                        get_local $3
                                        i32.const -1
                                        i32.add
                                        set_local $13
                                        get_local $4
                                        i32.const 1
                                        i32.add
                                        set_local $8
                                        i32.const 7
                                        set_local $3
                                        br $label$continue$L7
                                      end ;; $block_1
                                    else
                                      block $block_2
                                        get_local $3
                                        set_local $14
                                        get_local $4
                                        set_local $3
                                      end ;; $block_2
                                    end ;; $if
                                    get_local $5
                                    i32.const -194
                                    i32.add
                                    tee_local $4
                                    i32.const 50
                                    i32.gt_u
                                    br_if $__rjti$11
                                    get_local $4
                                    i32.const 2
                                    i32.shl
                                    i32.const 2496
                                    i32.add
                                    i32.load
                                    set_local $12
                                    get_local $3
                                    i32.const 1
                                    i32.add
                                    set_local $10
                                    i32.const 16
                                    set_local $3
                                    br $label$continue$L7
                                  end ;; $_24
                                else
                                  get_local $3
                                  i32.const 16
                                  i32.eq
                                  if $if_1
                                    block $block_3
                                      get_local $10
                                      i32.load8_u
                                      i32.const 3
                                      i32.shr_u
                                      tee_local $3
                                      i32.const -16
                                      i32.add
                                      get_local $3
                                      get_local $12
                                      i32.const 26
                                      i32.shr_s
                                      i32.add
                                      i32.or
                                      i32.const 7
                                      i32.gt_u
                                      br_if $__rjti$3
                                      get_local $10
                                      i32.const 1
                                      i32.add
                                      set_local $8
                                      get_local $12
                                      i32.const 33554432
                                      i32.and
                                      if $if_2
                                        block $block_4
                                          get_local $8
                                          i32.load8_s
                                          i32.const 192
                                          i32.and
                                          i32.const 128
                                          i32.ne
                                          br_if $__rjti$4
                                          get_local $10
                                          i32.const 2
                                          i32.add
                                          set_local $8
                                          get_local $12
                                          i32.const 524288
                                          i32.and
                                          if $if_3
                                            block $block_5
                                              get_local $8
                                              i32.load8_s
                                              i32.const 192
                                              i32.and
                                              i32.const 128
                                              i32.ne
                                              br_if $__rjti$5
                                              get_local $10
                                              i32.const 3
                                              i32.add
                                              set_local $8
                                            end ;; $block_5
                                          end ;; $if_3
                                        end ;; $block_4
                                      end ;; $if_2
                                      get_local $14
                                      i32.const -1
                                      i32.add
                                      set_local $13
                                      i32.const 7
                                      set_local $3
                                      br $label$continue$L7
                                    end ;; $block_3
                                  else
                                    get_local $3
                                    i32.const 37
                                    i32.eq
                                    if $if_4
                                      block $block_6
                                        get_local $9
                                        i32.load8_u
                                        tee_local $3
                                        i32.const 3
                                        i32.shr_u
                                        tee_local $4
                                        i32.const -16
                                        i32.add
                                        get_local $4
                                        get_local $15
                                        i32.const 26
                                        i32.shr_s
                                        i32.add
                                        i32.or
                                        i32.const 7
                                        i32.gt_u
                                        br_if $__rjti$7
                                        get_local $9
                                        i32.const 1
                                        i32.add
                                        set_local $11
                                        get_local $3
                                        i32.const -128
                                        i32.add
                                        get_local $15
                                        i32.const 6
                                        i32.shl
                                        i32.or
                                        tee_local $3
                                        i32.const 0
                                        i32.lt_s
                                        if $if_5
                                          block $block_7
                                            get_local $11
                                            i32.load8_u
                                            tee_local $4
                                            i32.const 192
                                            i32.and
                                            i32.const 128
                                            i32.ne
                                            br_if $__rjti$8
                                            get_local $9
                                            i32.const 2
                                            i32.add
                                            set_local $11
                                            get_local $4
                                            i32.const -128
                                            i32.add
                                            get_local $3
                                            i32.const 6
                                            i32.shl
                                            i32.or
                                            tee_local $3
                                            i32.const 0
                                            i32.lt_s
                                            if $if_6
                                              block $block_8
                                                get_local $11
                                                i32.load8_u
                                                tee_local $4
                                                i32.const 192
                                                i32.and
                                                i32.const 128
                                                i32.ne
                                                br_if $__rjti$9
                                                get_local $4
                                                i32.const -128
                                                i32.add
                                                get_local $3
                                                i32.const 6
                                                i32.shl
                                                i32.or
                                                set_local $3
                                                get_local $9
                                                i32.const 3
                                                i32.add
                                                set_local $11
                                              end ;; $block_8
                                            end ;; $if_6
                                          end ;; $block_7
                                        end ;; $if_5
                                        get_local $6
                                        get_local $3
                                        i32.store
                                        get_local $6
                                        i32.const 4
                                        i32.add
                                        set_local $17
                                        get_local $7
                                        i32.const -1
                                        i32.add
                                        set_local $16
                                        i32.const 6
                                        set_local $3
                                        br $label$continue$L7
                                      end ;; $block_6
                                    end ;; $if_4
                                  end ;; $if_1
                                end ;; $_23
                                br $label$continue$L7
                              end ;; $_22
                            end ;; $_7
                          end ;; $label$continue$L7
                        end ;; $__rjti$3
                        get_local $10
                        i32.const -1
                        i32.add
                        set_local $3
                        br $__rjti$10
                      end ;; $__rjti$4
                      get_local $10
                      i32.const -1
                      i32.add
                      set_local $3
                      br $__rjti$10
                    end ;; $__rjti$5
                    get_local $10
                    i32.const -1
                    i32.add
                    set_local $3
                    br $__rjti$10
                  end ;; $__rjti$6
                  get_local $1
                  get_local $3
                  i32.store
                  br $__rjto$12
                end ;; $__rjti$7
                get_local $6
                set_local $0
                get_local $7
                set_local $14
                get_local $15
                set_local $12
                get_local $9
                i32.const -1
                i32.add
                set_local $3
                br $__rjti$10
              end ;; $__rjti$8
              get_local $6
              set_local $0
              get_local $9
              i32.const -1
              i32.add
              set_local $3
              br $__rjti$12
            end ;; $__rjti$9
            get_local $6
            set_local $0
            get_local $9
            i32.const -1
            i32.add
            set_local $3
            br $__rjti$12
          end ;; $__rjti$10
          get_local $12
          br_if $__rjti$12
        end ;; $__rjti$11
        get_local $3
        i32.load8_s
        br_if $__rjti$12
        get_local $0
        if $if_7
          block $block_9
            get_local $0
            i32.const 0
            i32.store
            get_local $1
            i32.const 0
            i32.store
          end ;; $block_9
        end ;; $if_7
        get_local $2
        get_local $14
        i32.sub
        set_local $2
        br $__rjto$12
      end ;; $__rjti$12
      call $___errno_location
      i32.const 84
      i32.store
      get_local $0
      if $if_8 (result i32)
        block $block_10 (result i32)
          get_local $1
          get_local $3
          i32.store
          i32.const -1
        end ;; $block_10
      else
        i32.const -1
      end ;; $if_8
      set_local $2
    end ;; $__rjto$12
    get_local $2
    )
  
  (func $__ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i (type $_4)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (param $8 i32)
    (param $9 i32)
    (param $10 i32)
    (param $11 i32)
    (param $12 i32)
    (param $13 i32)
    (param $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    (local $25 i32)
    (local $26 i32)
    (local $27 i32)
    (local $28 i32)
    (local $29 i32)
    (local $30 i32)
    (local $31 i32)
    get_local $2
    get_local $0
    i32.store
    get_local $13
    i32.const 11
    i32.add
    set_local $21
    get_local $13
    i32.const 4
    i32.add
    set_local $22
    get_local $12
    i32.const 11
    i32.add
    set_local $26
    get_local $12
    i32.const 4
    i32.add
    set_local $27
    get_local $3
    i32.const 512
    i32.and
    i32.eqz
    set_local $28
    get_local $6
    i32.const 8
    i32.add
    set_local $29
    get_local $14
    i32.const 0
    i32.gt_s
    set_local $30
    get_local $11
    i32.const 11
    i32.add
    set_local $23
    get_local $11
    i32.const 4
    i32.add
    set_local $24
    i32.const 0
    set_local $19
    loop $while-in
      get_local $19
      i32.const 4
      i32.ne
      if $_1
        block $_2
          block $label$break$L4
            block $switch-default
              block $switch-case16
                block $switch-case4
                  block $switch-case1
                    block $switch-case0
                      block $switch-case
                        get_local $8
                        get_local $19
                        i32.add
                        i32.load8_s
                        br_table
                          $switch-case $switch-case0 $switch-case4 $switch-case1 $switch-case16
                          $switch-default ;; default
                      end ;; $switch-case
                      get_local $1
                      get_local $2
                      i32.load
                      i32.store
                      br $label$break$L4
                    end ;; $switch-case0
                    get_local $1
                    get_local $2
                    i32.load
                    i32.store
                    get_local $6
                    i32.const 32
                    get_local $6
                    i32.load
                    i32.load offset=28
                    i32.const 15
                    i32.and
                    i32.const 413
                    i32.add
                    call_indirect (type $FUNCSIG$iii)
                    set_local $15
                    get_local $2
                    get_local $2
                    i32.load
                    tee_local $16
                    i32.const 1
                    i32.add
                    i32.store
                    get_local $16
                    get_local $15
                    i32.store8
                    br $label$break$L4
                  end ;; $switch-case1
                  get_local $21
                  i32.load8_s
                  tee_local $15
                  i32.const 0
                  i32.lt_s
                  tee_local $16
                  if $_3 (result i32)
                    get_local $22
                    i32.load
                  else
                    get_local $15
                    i32.const 255
                    i32.and
                  end ;; $_3
                  if $_4
                    block $_5
                      get_local $16
                      if $_6 (result i32)
                        get_local $13
                        i32.load
                      else
                        get_local $13
                      end ;; $_6
                      i32.load8_s
                      set_local $15
                      get_local $2
                      get_local $2
                      i32.load
                      tee_local $16
                      i32.const 1
                      i32.add
                      i32.store
                      get_local $16
                      get_local $15
                      i32.store8
                    end ;; $_5
                  end ;; $_4
                  br $label$break$L4
                end ;; $switch-case4
                get_local $28
                get_local $26
                i32.load8_s
                tee_local $15
                i32.const 0
                i32.lt_s
                tee_local $16
                if $_7 (result i32)
                  get_local $27
                  i32.load
                else
                  get_local $15
                  i32.const 255
                  i32.and
                end ;; $_7
                tee_local $18
                i32.eqz
                i32.or
                i32.eqz
                if $_8
                  block $_9
                    get_local $16
                    if $_10 (result i32)
                      get_local $12
                      i32.load
                    else
                      get_local $12
                    end ;; $_10
                    tee_local $15
                    get_local $18
                    i32.add
                    set_local $18
                    get_local $2
                    i32.load
                    set_local $16
                    loop $while-in3
                      get_local $15
                      get_local $18
                      i32.ne
                      if $_11
                        block $_12
                          get_local $16
                          get_local $15
                          i32.load8_s
                          i32.store8
                          get_local $16
                          i32.const 1
                          i32.add
                          set_local $16
                          get_local $15
                          i32.const 1
                          i32.add
                          set_local $15
                          br $while-in3
                        end ;; $_12
                      end ;; $_11
                    end ;; $while-in3
                    get_local $2
                    get_local $16
                    i32.store
                  end ;; $_9
                end ;; $_8
                br $label$break$L4
              end ;; $switch-case16
              get_local $2
              i32.load
              set_local $25
              get_local $7
              if $_13 (result i32)
                get_local $4
                i32.const 1
                i32.add
              else
                get_local $4
              end ;; $_13
              tee_local $18
              set_local $4
              loop $while-in6
                block $while-out5
                  get_local $4
                  get_local $5
                  i32.ge_u
                  br_if $while-out5
                  get_local $4
                  i32.load8_s
                  tee_local $15
                  i32.const -1
                  i32.le_s
                  br_if $while-out5
                  get_local $29
                  i32.load
                  get_local $15
                  i32.const 1
                  i32.shl
                  i32.add
                  i32.load16_s
                  i32.const 2048
                  i32.and
                  if $_14
                    block $_15
                      get_local $4
                      i32.const 1
                      i32.add
                      set_local $4
                      br $while-in6
                    end ;; $_15
                  end ;; $_14
                end ;; $while-out5
              end ;; $while-in6
              get_local $30
              if $_16
                block $_17
                  get_local $14
                  set_local $15
                  loop $while-in8
                    get_local $4
                    get_local $18
                    i32.gt_u
                    get_local $15
                    i32.const 0
                    i32.gt_s
                    tee_local $16
                    i32.and
                    if $_18
                      block $_19
                        get_local $4
                        i32.const -1
                        i32.add
                        tee_local $4
                        i32.load8_s
                        set_local $16
                        get_local $2
                        get_local $2
                        i32.load
                        tee_local $17
                        i32.const 1
                        i32.add
                        i32.store
                        get_local $17
                        get_local $16
                        i32.store8
                        get_local $15
                        i32.const -1
                        i32.add
                        set_local $15
                        br $while-in8
                      end ;; $_19
                    end ;; $_18
                  end ;; $while-in8
                  get_local $16
                  if $_20 (result i32)
                    get_local $6
                    i32.const 48
                    get_local $6
                    i32.load
                    i32.load offset=28
                    i32.const 15
                    i32.and
                    i32.const 413
                    i32.add
                    call_indirect (type $FUNCSIG$iii)
                  else
                    i32.const 0
                  end ;; $_20
                  set_local $17
                  loop $while-in10
                    get_local $2
                    get_local $2
                    i32.load
                    tee_local $16
                    i32.const 1
                    i32.add
                    i32.store
                    get_local $15
                    i32.const 0
                    i32.gt_s
                    if $_21
                      block $_22
                        get_local $16
                        get_local $17
                        i32.store8
                        get_local $15
                        i32.const -1
                        i32.add
                        set_local $15
                        br $while-in10
                      end ;; $_22
                    end ;; $_21
                  end ;; $while-in10
                  get_local $16
                  get_local $9
                  i32.store8
                end ;; $_17
              end ;; $_16
              block $label$break$L35
                get_local $4
                get_local $18
                i32.eq
                if $_23
                  block $_24
                    get_local $6
                    i32.const 48
                    get_local $6
                    i32.load
                    i32.load offset=28
                    i32.const 15
                    i32.and
                    i32.const 413
                    i32.add
                    call_indirect (type $FUNCSIG$iii)
                    set_local $4
                    get_local $2
                    get_local $2
                    i32.load
                    tee_local $15
                    i32.const 1
                    i32.add
                    i32.store
                    get_local $15
                    get_local $4
                    i32.store8
                  end ;; $_24
                else
                  block $_25
                    get_local $23
                    i32.load8_s
                    tee_local $15
                    i32.const 0
                    i32.lt_s
                    tee_local $17
                    if $_26 (result i32)
                      get_local $24
                      i32.load
                    else
                      get_local $15
                      i32.const 255
                      i32.and
                    end ;; $_26
                    if $_27 (result i32)
                      block $_28 (result i32)
                        get_local $4
                        set_local $16
                        get_local $17
                        if $_29 (result i32)
                          get_local $11
                          i32.load
                        else
                          get_local $11
                        end ;; $_29
                        i32.load8_s
                        set_local $4
                        i32.const 0
                        set_local $17
                        i32.const 0
                      end ;; $_28
                    else
                      block $_30 (result i32)
                        get_local $4
                        set_local $16
                        i32.const -1
                        set_local $4
                        i32.const 0
                        set_local $17
                        i32.const 0
                      end ;; $_30
                    end ;; $_27
                    set_local $15
                    loop $while-in13
                      get_local $16
                      get_local $18
                      i32.eq
                      br_if $label$break$L35
                      get_local $17
                      get_local $4
                      i32.eq
                      if $_31
                        block $_32
                          get_local $2
                          get_local $2
                          i32.load
                          tee_local $4
                          i32.const 1
                          i32.add
                          i32.store
                          get_local $4
                          get_local $10
                          i32.store8
                          get_local $15
                          i32.const 1
                          i32.add
                          tee_local $15
                          get_local $23
                          i32.load8_s
                          tee_local $4
                          i32.const 0
                          i32.lt_s
                          tee_local $20
                          if $_33 (result i32)
                            get_local $24
                            i32.load
                          else
                            get_local $4
                            i32.const 255
                            i32.and
                          end ;; $_33
                          i32.lt_u
                          if $_34 (result i32)
                            block $_35 (result i32)
                              get_local $20
                              if $_36 (result i32)
                                get_local $11
                                i32.load
                              else
                                get_local $11
                              end ;; $_36
                              get_local $15
                              i32.add
                              i32.load8_s
                              tee_local $4
                              i32.const 127
                              i32.eq
                              if $_37
                                i32.const -1
                                set_local $4
                              end ;; $_37
                              i32.const 0
                            end ;; $_35
                          else
                            block $_38 (result i32)
                              get_local $17
                              set_local $4
                              i32.const 0
                            end ;; $_38
                          end ;; $_34
                          set_local $17
                        end ;; $_32
                      end ;; $_31
                      get_local $16
                      i32.const -1
                      i32.add
                      tee_local $16
                      i32.load8_s
                      set_local $20
                      get_local $2
                      get_local $2
                      i32.load
                      tee_local $31
                      i32.const 1
                      i32.add
                      i32.store
                      get_local $31
                      get_local $20
                      i32.store8
                      get_local $17
                      i32.const 1
                      i32.add
                      set_local $17
                      br $while-in13
                    end ;; $while-in13
                  end ;; $_25
                end ;; $_23
              end ;; $label$break$L35
              get_local $25
              get_local $2
              i32.load
              tee_local $4
              i32.eq
              if $_39
                get_local $18
                set_local $4
              else
                block $_40
                  get_local $25
                  set_local $15
                  loop $while-in15
                    get_local $15
                    get_local $4
                    i32.const -1
                    i32.add
                    tee_local $4
                    i32.ge_u
                    if $_41
                      block $_42
                        get_local $18
                        set_local $4
                        br $label$break$L4
                      end ;; $_42
                    else
                      block $_43
                        get_local $15
                        i32.load8_s
                        set_local $16
                        get_local $15
                        get_local $4
                        i32.load8_s
                        i32.store8
                        get_local $4
                        get_local $16
                        i32.store8
                        get_local $15
                        i32.const 1
                        i32.add
                        set_local $15
                        br $while-in15
                      end ;; $_43
                    end ;; $_41
                  end ;; $while-in15
                end ;; $_40
              end ;; $_39
            end ;; $switch-default
          end ;; $label$break$L4
          get_local $19
          i32.const 1
          i32.add
          set_local $19
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $21
    i32.load8_s
    tee_local $4
    i32.const 0
    i32.lt_s
    tee_local $5
    if $_44 (result i32)
      get_local $22
      i32.load
    else
      get_local $4
      i32.const 255
      i32.and
    end ;; $_44
    tee_local $6
    i32.const 1
    i32.gt_u
    if $_45
      block $_46
        get_local $5
        if $_47 (result i32)
          get_local $13
          i32.load
        else
          get_local $13
        end ;; $_47
        tee_local $4
        get_local $6
        i32.add
        set_local $6
        get_local $2
        i32.load
        set_local $5
        loop $while-in18
          get_local $4
          i32.const 1
          i32.add
          tee_local $4
          get_local $6
          i32.ne
          if $_48
            block $_49
              get_local $5
              get_local $4
              i32.load8_s
              i32.store8
              get_local $5
              i32.const 1
              i32.add
              set_local $5
              br $while-in18
            end ;; $_49
          end ;; $_48
        end ;; $while-in18
        get_local $2
        get_local $5
        i32.store
      end ;; $_46
    end ;; $_45
    block $switch19
      block $switch-default22
        block $switch-case21
          block $switch-case20
            get_local $3
            i32.const 176
            i32.and
            i32.const 16
            i32.sub
            br_table
              $switch-case21 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22 $switch-default22
              $switch-case20
              $switch-default22 ;; default
          end ;; $switch-case20
          get_local $1
          get_local $2
          i32.load
          i32.store
          br $switch19
        end ;; $switch-case21
        br $switch19
      end ;; $switch-default22
      get_local $1
      get_local $0
      i32.store
    end ;; $switch19
    )
  
  (func $__ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i (type $_4)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (param $8 i32)
    (param $9 i32)
    (param $10 i32)
    (param $11 i32)
    (param $12 i32)
    (param $13 i32)
    (param $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    (local $25 i32)
    (local $26 i32)
    (local $27 i32)
    (local $28 i32)
    (local $29 i32)
    (local $30 i32)
    (local $31 i32)
    (local $32 i32)
    get_local $2
    get_local $0
    i32.store
    get_local $13
    i32.const 11
    i32.add
    set_local $23
    get_local $13
    i32.const 4
    i32.add
    set_local $24
    get_local $12
    i32.const 11
    i32.add
    set_local $26
    get_local $12
    i32.const 4
    i32.add
    set_local $27
    get_local $3
    i32.const 512
    i32.and
    i32.eqz
    set_local $28
    get_local $14
    i32.const 0
    i32.gt_s
    set_local $29
    get_local $11
    i32.const 11
    i32.add
    set_local $30
    get_local $11
    i32.const 4
    i32.add
    set_local $31
    i32.const 0
    set_local $22
    loop $while-in
      get_local $22
      i32.const 4
      i32.ne
      if $_1
        block $_2
          block $label$break$L4
            block $switch-default
              block $switch-case15
                block $switch-case4
                  block $switch-case1
                    block $switch-case0
                      block $switch-case
                        get_local $8
                        get_local $22
                        i32.add
                        i32.load8_s
                        br_table
                          $switch-case $switch-case0 $switch-case4 $switch-case1 $switch-case15
                          $switch-default ;; default
                      end ;; $switch-case
                      get_local $1
                      get_local $2
                      i32.load
                      i32.store
                      br $label$break$L4
                    end ;; $switch-case0
                    get_local $1
                    get_local $2
                    i32.load
                    i32.store
                    get_local $6
                    i32.const 32
                    get_local $6
                    i32.load
                    i32.load offset=44
                    i32.const 15
                    i32.and
                    i32.const 413
                    i32.add
                    call_indirect (type $FUNCSIG$iii)
                    set_local $16
                    get_local $2
                    get_local $2
                    i32.load
                    tee_local $15
                    i32.const 4
                    i32.add
                    i32.store
                    get_local $15
                    get_local $16
                    i32.store
                    br $label$break$L4
                  end ;; $switch-case1
                  get_local $23
                  i32.load8_s
                  tee_local $16
                  i32.const 0
                  i32.lt_s
                  tee_local $15
                  if $_3 (result i32)
                    get_local $24
                    i32.load
                  else
                    get_local $16
                    i32.const 255
                    i32.and
                  end ;; $_3
                  if $_4
                    block $_5
                      get_local $15
                      if $_6 (result i32)
                        get_local $13
                        i32.load
                      else
                        get_local $13
                      end ;; $_6
                      i32.load
                      set_local $16
                      get_local $2
                      get_local $2
                      i32.load
                      tee_local $15
                      i32.const 4
                      i32.add
                      i32.store
                      get_local $15
                      get_local $16
                      i32.store
                    end ;; $_5
                  end ;; $_4
                  br $label$break$L4
                end ;; $switch-case4
                get_local $28
                get_local $26
                i32.load8_s
                tee_local $16
                i32.const 0
                i32.lt_s
                tee_local $15
                if $_7 (result i32)
                  get_local $27
                  i32.load
                else
                  get_local $16
                  i32.const 255
                  i32.and
                end ;; $_7
                tee_local $19
                i32.eqz
                i32.or
                i32.eqz
                if $_8
                  block $_9
                    get_local $15
                    if $_10 (result i32)
                      get_local $12
                      i32.load
                    else
                      get_local $12
                    end ;; $_10
                    tee_local $15
                    get_local $19
                    i32.const 2
                    i32.shl
                    i32.add
                    set_local $18
                    get_local $2
                    i32.load
                    tee_local $16
                    set_local $17
                    loop $while-in3
                      get_local $15
                      get_local $18
                      i32.ne
                      if $_11
                        block $_12
                          get_local $17
                          get_local $15
                          i32.load
                          i32.store
                          get_local $17
                          i32.const 4
                          i32.add
                          set_local $17
                          get_local $15
                          i32.const 4
                          i32.add
                          set_local $15
                          br $while-in3
                        end ;; $_12
                      end ;; $_11
                    end ;; $while-in3
                    get_local $2
                    get_local $16
                    get_local $19
                    i32.const 2
                    i32.shl
                    i32.add
                    i32.store
                  end ;; $_9
                end ;; $_8
                br $label$break$L4
              end ;; $switch-case15
              get_local $2
              i32.load
              set_local $20
              get_local $7
              if $_13 (result i32)
                get_local $4
                i32.const 4
                i32.add
              else
                get_local $4
              end ;; $_13
              tee_local $19
              set_local $4
              loop $while-in6
                get_local $4
                get_local $5
                i32.lt_u
                if $_14
                  get_local $6
                  i32.const 2048
                  get_local $4
                  i32.load
                  get_local $6
                  i32.load
                  i32.load offset=12
                  i32.const 31
                  i32.and
                  i32.const 8
                  i32.add
                  call_indirect (type $FUNCSIG$iiii)
                  if $_15
                    block $_16
                      get_local $4
                      i32.const 4
                      i32.add
                      set_local $4
                      br $while-in6
                    end ;; $_16
                  end ;; $_15
                end ;; $_14
              end ;; $while-in6
              get_local $29
              if $_17
                block $_18
                  get_local $14
                  set_local $15
                  loop $while-in8
                    get_local $4
                    get_local $19
                    i32.gt_u
                    get_local $15
                    i32.const 0
                    i32.gt_s
                    tee_local $16
                    i32.and
                    if $_19
                      block $_20
                        get_local $4
                        i32.const -4
                        i32.add
                        tee_local $4
                        i32.load
                        set_local $18
                        get_local $2
                        get_local $2
                        i32.load
                        tee_local $16
                        i32.const 4
                        i32.add
                        i32.store
                        get_local $16
                        get_local $18
                        i32.store
                        get_local $15
                        i32.const -1
                        i32.add
                        set_local $15
                        br $while-in8
                      end ;; $_20
                    end ;; $_19
                  end ;; $while-in8
                  get_local $16
                  if $_21 (result i32)
                    get_local $6
                    i32.const 48
                    get_local $6
                    i32.load
                    i32.load offset=44
                    i32.const 15
                    i32.and
                    i32.const 413
                    i32.add
                    call_indirect (type $FUNCSIG$iii)
                  else
                    i32.const 0
                  end ;; $_21
                  set_local $17
                  get_local $2
                  i32.load
                  set_local $16
                  get_local $15
                  set_local $18
                  loop $while-in10
                    get_local $16
                    i32.const 4
                    i32.add
                    set_local $15
                    get_local $18
                    i32.const 0
                    i32.gt_s
                    if $_22
                      block $_23
                        get_local $16
                        get_local $17
                        i32.store
                        get_local $15
                        set_local $16
                        get_local $18
                        i32.const -1
                        i32.add
                        set_local $18
                        br $while-in10
                      end ;; $_23
                    end ;; $_22
                  end ;; $while-in10
                  get_local $2
                  get_local $15
                  i32.store
                  get_local $16
                  get_local $9
                  i32.store
                end ;; $_18
              end ;; $_17
              get_local $4
              get_local $19
              i32.eq
              if $_24
                block $_25
                  get_local $6
                  i32.const 48
                  get_local $6
                  i32.load
                  i32.load offset=44
                  i32.const 15
                  i32.and
                  i32.const 413
                  i32.add
                  call_indirect (type $FUNCSIG$iii)
                  set_local $16
                  get_local $2
                  get_local $2
                  i32.load
                  tee_local $15
                  i32.const 4
                  i32.add
                  tee_local $4
                  i32.store
                  get_local $15
                  get_local $16
                  i32.store
                end ;; $_25
              else
                block $_26
                  get_local $30
                  i32.load8_s
                  tee_local $15
                  i32.const 0
                  i32.lt_s
                  tee_local $25
                  if $_27 (result i32)
                    get_local $31
                    i32.load
                  else
                    get_local $15
                    i32.const 255
                    i32.and
                  end ;; $_27
                  tee_local $32
                  if $_28 (result i32)
                    block $_29 (result i32)
                      get_local $4
                      set_local $16
                      get_local $25
                      if $_30 (result i32)
                        get_local $11
                        i32.load
                      else
                        get_local $11
                      end ;; $_30
                      i32.load8_s
                      set_local $15
                      i32.const 0
                      set_local $17
                      i32.const 0
                    end ;; $_29
                  else
                    block $_31 (result i32)
                      get_local $4
                      set_local $16
                      i32.const -1
                      set_local $15
                      i32.const 0
                      set_local $17
                      i32.const 0
                    end ;; $_31
                  end ;; $_28
                  set_local $4
                  loop $while-in12
                    get_local $16
                    get_local $19
                    i32.ne
                    if $_32
                      block $_33
                        get_local $2
                        i32.load
                        set_local $21
                        get_local $17
                        get_local $15
                        i32.eq
                        if $_34
                          block $_35
                            get_local $2
                            get_local $21
                            i32.const 4
                            i32.add
                            tee_local $18
                            i32.store
                            get_local $21
                            get_local $10
                            i32.store
                            get_local $4
                            i32.const 1
                            i32.add
                            tee_local $4
                            get_local $32
                            i32.lt_u
                            if $_36 (result i32)
                              block $_37 (result i32)
                                get_local $25
                                if $_38 (result i32)
                                  get_local $11
                                  i32.load
                                else
                                  get_local $11
                                end ;; $_38
                                get_local $4
                                i32.add
                                i32.load8_s
                                tee_local $15
                                i32.const 127
                                i32.eq
                                if $_39
                                  i32.const -1
                                  set_local $15
                                end ;; $_39
                                i32.const 0
                              end ;; $_37
                            else
                              block $_40 (result i32)
                                get_local $17
                                set_local $15
                                i32.const 0
                              end ;; $_40
                            end ;; $_36
                            set_local $17
                          end ;; $_35
                        else
                          get_local $21
                          set_local $18
                        end ;; $_34
                        get_local $16
                        i32.const -4
                        i32.add
                        tee_local $16
                        i32.load
                        set_local $21
                        get_local $2
                        get_local $18
                        i32.const 4
                        i32.add
                        i32.store
                        get_local $18
                        get_local $21
                        i32.store
                        get_local $17
                        i32.const 1
                        i32.add
                        set_local $17
                        br $while-in12
                      end ;; $_33
                    end ;; $_32
                  end ;; $while-in12
                  get_local $2
                  i32.load
                  set_local $4
                end ;; $_26
              end ;; $_24
              get_local $20
              get_local $4
              i32.eq
              if $_41
                get_local $19
                set_local $4
              else
                loop $while-in14
                  get_local $20
                  get_local $4
                  i32.const -4
                  i32.add
                  tee_local $4
                  i32.ge_u
                  if $_42
                    block $_43
                      get_local $19
                      set_local $4
                      br $label$break$L4
                    end ;; $_43
                  else
                    block $_44
                      get_local $20
                      i32.load
                      set_local $15
                      get_local $20
                      get_local $4
                      i32.load
                      i32.store
                      get_local $4
                      get_local $15
                      i32.store
                      get_local $20
                      i32.const 4
                      i32.add
                      set_local $20
                      br $while-in14
                    end ;; $_44
                  end ;; $_42
                end ;; $while-in14
              end ;; $_41
            end ;; $switch-default
          end ;; $label$break$L4
          get_local $22
          i32.const 1
          i32.add
          set_local $22
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $23
    i32.load8_s
    tee_local $5
    i32.const 0
    i32.lt_s
    tee_local $4
    if $_45 (result i32)
      get_local $24
      i32.load
    else
      get_local $5
      i32.const 255
      i32.and
    end ;; $_45
    tee_local $5
    i32.const 1
    i32.gt_u
    if $_46
      block $_47
        get_local $4
        if $_48 (result i32)
          get_local $13
          i32.load
          tee_local $13
        else
          get_local $13
        end ;; $_48
        i32.const 4
        i32.add
        set_local $4
        get_local $13
        get_local $5
        i32.const 2
        i32.shl
        i32.add
        tee_local $7
        get_local $4
        i32.sub
        set_local $6
        get_local $2
        i32.load
        tee_local $5
        set_local $8
        loop $while-in17
          get_local $4
          get_local $7
          i32.ne
          if $_49
            block $_50
              get_local $8
              get_local $4
              i32.load
              i32.store
              get_local $8
              i32.const 4
              i32.add
              set_local $8
              get_local $4
              i32.const 4
              i32.add
              set_local $4
              br $while-in17
            end ;; $_50
          end ;; $_49
        end ;; $while-in17
        get_local $2
        get_local $5
        get_local $6
        i32.const 2
        i32.shr_u
        i32.const 2
        i32.shl
        i32.add
        i32.store
      end ;; $_47
    end ;; $_46
    block $switch18
      block $switch-default21
        block $switch-case20
          block $switch-case19
            get_local $3
            i32.const 176
            i32.and
            i32.const 16
            i32.sub
            br_table
              $switch-case20 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch-default21 $switch-default21
              $switch-case19
              $switch-default21 ;; default
          end ;; $switch-case19
          get_local $1
          get_local $2
          i32.load
          i32.store
          br $switch18
        end ;; $switch-case20
        br $switch18
      end ;; $switch-default21
      get_local $1
      get_local $0
      i32.store
    end ;; $switch18
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    get_global $STACKTOP
    set_local $9
    get_global $STACKTOP
    i32.const 352
    i32.add
    set_global $STACKTOP
    get_local $9
    i32.const 184
    i32.add
    tee_local $11
    get_local $3
    get_local $9
    i32.const 208
    i32.add
    tee_local $20
    get_local $9
    i32.const 200
    i32.add
    tee_local $6
    get_local $9
    i32.const 196
    i32.add
    tee_local $7
    call $__ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_
    get_local $9
    i32.const 172
    i32.add
    tee_local $8
    i32.const 0
    i32.store
    get_local $8
    i32.const 0
    i32.store offset=4
    get_local $8
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $8
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $8
    i32.const 8
    i32.add
    set_local $18
    get_local $9
    i32.const 8
    i32.add
    set_local $14
    get_local $9
    i32.const 4
    i32.add
    set_local $15
    get_local $9
    set_local $12
    get_local $9
    i32.const 337
    i32.add
    set_local $17
    get_local $9
    i32.const 336
    i32.add
    set_local $19
    get_local $8
    get_local $8
    i32.const 11
    i32.add
    tee_local $10
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_3 (result i32)
      get_local $18
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_3
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $9
    i32.const 168
    i32.add
    tee_local $16
    get_local $10
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_4 (result i32)
      get_local $8
      i32.load
    else
      get_local $8
    end ;; $_4
    tee_local $3
    i32.store
    get_local $15
    get_local $14
    i32.store
    get_local $12
    i32.const 0
    i32.store
    get_local $17
    i32.const 1
    i32.store8
    get_local $19
    i32.const 69
    i32.store8
    get_local $8
    i32.const 4
    i32.add
    set_local $21
    get_local $6
    i32.load
    set_local $22
    get_local $7
    i32.load
    set_local $23
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L8
      block $label$break$L8
        get_local $0
        if $_5 (result i32)
          get_local $0
          i32.load offset=12
          tee_local $6
          get_local $0
          i32.load offset=16
          i32.eq
          if $_6 (result i32)
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $6
            i32.load
          end ;; $_6
          tee_local $6
          i32.const -1
          i32.eq
          if $_7 (result i32)
            block $_8 (result i32)
              get_local $1
              i32.const 0
              i32.store
              i32.const 0
              set_local $0
              i32.const 1
            end ;; $_8
          else
            i32.const 0
          end ;; $_7
        else
          block $_9 (result i32)
            i32.const 0
            set_local $0
            i32.const 1
          end ;; $_9
        end ;; $_5
        set_local $7
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $6
            i32.eqz
            br_if $__rjti$0
            get_local $6
            i32.load offset=12
            tee_local $13
            get_local $6
            i32.load offset=16
            i32.eq
            if $_10 (result i32)
              get_local $6
              get_local $6
              i32.load
              i32.load offset=36
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
            else
              get_local $13
              i32.load
            end ;; $_10
            tee_local $13
            i32.const -1
            i32.eq
            if $_11
              block $_12
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_12
            else
              get_local $7
              i32.eqz
              br_if $label$break$L8
            end ;; $_11
            br $__rjto$0
          end ;; $__rjti$0
          get_local $7
          if $_13
            block $_14
              i32.const 0
              set_local $6
              br $label$break$L8
            end ;; $_14
          else
            i32.const 0
            set_local $6
          end ;; $_13
        end ;; $__rjto$0
        get_local $16
        i32.load
        get_local $3
        get_local $10
        i32.load8_s
        tee_local $7
        i32.const 0
        i32.lt_s
        if $_15 (result i32)
          get_local $21
          i32.load
        else
          get_local $7
          i32.const 255
          i32.and
        end ;; $_15
        tee_local $7
        i32.add
        i32.eq
        if $_16
          block $_17
            get_local $8
            get_local $7
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $8
            get_local $10
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_18 (result i32)
              get_local $18
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_18
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $16
            get_local $10
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_19 (result i32)
              get_local $8
              i32.load
            else
              get_local $8
            end ;; $_19
            tee_local $3
            get_local $7
            i32.add
            i32.store
          end ;; $_17
        end ;; $_16
        get_local $0
        i32.const 12
        i32.add
        tee_local $7
        i32.load
        tee_local $13
        get_local $0
        i32.const 16
        i32.add
        tee_local $24
        i32.load
        i32.eq
        if $_20 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $13
          i32.load
        end ;; $_20
        tee_local $13
        get_local $17
        get_local $19
        get_local $3
        get_local $16
        get_local $22
        get_local $23
        get_local $11
        get_local $14
        get_local $15
        get_local $12
        get_local $20
        call $__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw
        br_if $label$break$L8
        get_local $7
        i32.load
        tee_local $6
        get_local $24
        i32.load
        i32.eq
        if $_21
          block $_22
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L8
          end ;; $_22
        else
          block $_23
            get_local $7
            get_local $6
            i32.const 4
            i32.add
            i32.store
            br $label$continue$L8
          end ;; $_23
        end ;; $_21
      end ;; $label$break$L8
    end ;; $label$continue$L8
    get_local $11
    i32.load8_s offset=11
    set_local $7
    get_local $15
    i32.load
    set_local $10
    get_local $17
    i32.load8_s
    if $_24 (result i32)
      get_local $7
      i32.const 0
      i32.lt_s
      if $_25 (result i32)
        get_local $11
        i32.load offset=4
      else
        get_local $7
        i32.const 255
        i32.and
      end ;; $_25
      i32.eqz
    else
      i32.const 1
    end ;; $_24
    i32.eqz
    if $_26
      get_local $10
      get_local $14
      i32.sub
      i32.const 160
      i32.lt_s
      if $_27
        block $_28
          get_local $12
          i32.load
          set_local $7
          get_local $15
          get_local $10
          i32.const 4
          i32.add
          tee_local $12
          i32.store
          get_local $10
          get_local $7
          i32.store
          get_local $12
          set_local $10
        end ;; $_28
      end ;; $_27
    end ;; $_26
    get_local $5
    get_local $3
    get_local $16
    i32.load
    get_local $4
    call $__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj
    f32.demote/f64
    f32.store
    get_local $11
    get_local $14
    get_local $10
    get_local $4
    call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
    get_local $0
    if $_29 (result i32)
      get_local $0
      i32.load offset=12
      tee_local $3
      get_local $0
      i32.load offset=16
      i32.eq
      if $_30 (result i32)
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $3
        i32.load
      end ;; $_30
      tee_local $0
      i32.const -1
      i32.eq
      if $_31 (result i32)
        block $_32 (result i32)
          get_local $1
          i32.const 0
          i32.store
          i32.const 1
        end ;; $_32
      else
        i32.const 0
      end ;; $_31
    else
      i32.const 1
    end ;; $_29
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $6
          i32.eqz
          br_if $__rjti$1
          get_local $6
          i32.load offset=12
          tee_local $3
          get_local $6
          i32.load offset=16
          i32.eq
          if $if (result i32)
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $3
            i32.load
          end ;; $if
          tee_local $3
          i32.const -1
          i32.eq
          if $if_1
            block $block
              get_local $2
              i32.const 0
              i32.store
              br $__rjti$1
            end ;; $block
          else
            get_local $0
            i32.eqz
            br_if $__rjti$2
          end ;; $if_1
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $8
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $9
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    get_global $STACKTOP
    set_local $9
    get_global $STACKTOP
    i32.const 352
    i32.add
    set_global $STACKTOP
    get_local $9
    i32.const 184
    i32.add
    tee_local $11
    get_local $3
    get_local $9
    i32.const 208
    i32.add
    tee_local $20
    get_local $9
    i32.const 200
    i32.add
    tee_local $6
    get_local $9
    i32.const 196
    i32.add
    tee_local $7
    call $__ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_
    get_local $9
    i32.const 172
    i32.add
    tee_local $8
    i32.const 0
    i32.store
    get_local $8
    i32.const 0
    i32.store offset=4
    get_local $8
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $8
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $8
    i32.const 8
    i32.add
    set_local $18
    get_local $9
    i32.const 8
    i32.add
    set_local $14
    get_local $9
    i32.const 4
    i32.add
    set_local $15
    get_local $9
    set_local $12
    get_local $9
    i32.const 337
    i32.add
    set_local $17
    get_local $9
    i32.const 336
    i32.add
    set_local $19
    get_local $8
    get_local $8
    i32.const 11
    i32.add
    tee_local $10
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_3 (result i32)
      get_local $18
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_3
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $9
    i32.const 168
    i32.add
    tee_local $16
    get_local $10
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_4 (result i32)
      get_local $8
      i32.load
    else
      get_local $8
    end ;; $_4
    tee_local $3
    i32.store
    get_local $15
    get_local $14
    i32.store
    get_local $12
    i32.const 0
    i32.store
    get_local $17
    i32.const 1
    i32.store8
    get_local $19
    i32.const 69
    i32.store8
    get_local $8
    i32.const 4
    i32.add
    set_local $21
    get_local $6
    i32.load
    set_local $22
    get_local $7
    i32.load
    set_local $23
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L8
      block $label$break$L8
        get_local $0
        if $_5 (result i32)
          get_local $0
          i32.load offset=12
          tee_local $6
          get_local $0
          i32.load offset=16
          i32.eq
          if $_6 (result i32)
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $6
            i32.load
          end ;; $_6
          tee_local $6
          i32.const -1
          i32.eq
          if $_7 (result i32)
            block $_8 (result i32)
              get_local $1
              i32.const 0
              i32.store
              i32.const 0
              set_local $0
              i32.const 1
            end ;; $_8
          else
            i32.const 0
          end ;; $_7
        else
          block $_9 (result i32)
            i32.const 0
            set_local $0
            i32.const 1
          end ;; $_9
        end ;; $_5
        set_local $7
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $6
            i32.eqz
            br_if $__rjti$0
            get_local $6
            i32.load offset=12
            tee_local $13
            get_local $6
            i32.load offset=16
            i32.eq
            if $_10 (result i32)
              get_local $6
              get_local $6
              i32.load
              i32.load offset=36
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
            else
              get_local $13
              i32.load
            end ;; $_10
            tee_local $13
            i32.const -1
            i32.eq
            if $_11
              block $_12
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_12
            else
              get_local $7
              i32.eqz
              br_if $label$break$L8
            end ;; $_11
            br $__rjto$0
          end ;; $__rjti$0
          get_local $7
          if $_13
            block $_14
              i32.const 0
              set_local $6
              br $label$break$L8
            end ;; $_14
          else
            i32.const 0
            set_local $6
          end ;; $_13
        end ;; $__rjto$0
        get_local $16
        i32.load
        get_local $3
        get_local $10
        i32.load8_s
        tee_local $7
        i32.const 0
        i32.lt_s
        if $_15 (result i32)
          get_local $21
          i32.load
        else
          get_local $7
          i32.const 255
          i32.and
        end ;; $_15
        tee_local $7
        i32.add
        i32.eq
        if $_16
          block $_17
            get_local $8
            get_local $7
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $8
            get_local $10
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_18 (result i32)
              get_local $18
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_18
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $16
            get_local $10
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_19 (result i32)
              get_local $8
              i32.load
            else
              get_local $8
            end ;; $_19
            tee_local $3
            get_local $7
            i32.add
            i32.store
          end ;; $_17
        end ;; $_16
        get_local $0
        i32.const 12
        i32.add
        tee_local $7
        i32.load
        tee_local $13
        get_local $0
        i32.const 16
        i32.add
        tee_local $24
        i32.load
        i32.eq
        if $_20 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $13
          i32.load
        end ;; $_20
        tee_local $13
        get_local $17
        get_local $19
        get_local $3
        get_local $16
        get_local $22
        get_local $23
        get_local $11
        get_local $14
        get_local $15
        get_local $12
        get_local $20
        call $__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw
        br_if $label$break$L8
        get_local $7
        i32.load
        tee_local $6
        get_local $24
        i32.load
        i32.eq
        if $_21
          block $_22
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L8
          end ;; $_22
        else
          block $_23
            get_local $7
            get_local $6
            i32.const 4
            i32.add
            i32.store
            br $label$continue$L8
          end ;; $_23
        end ;; $_21
      end ;; $label$break$L8
    end ;; $label$continue$L8
    get_local $11
    i32.load8_s offset=11
    set_local $7
    get_local $15
    i32.load
    set_local $10
    get_local $17
    i32.load8_s
    if $_24 (result i32)
      get_local $7
      i32.const 0
      i32.lt_s
      if $_25 (result i32)
        get_local $11
        i32.load offset=4
      else
        get_local $7
        i32.const 255
        i32.and
      end ;; $_25
      i32.eqz
    else
      i32.const 1
    end ;; $_24
    i32.eqz
    if $_26
      get_local $10
      get_local $14
      i32.sub
      i32.const 160
      i32.lt_s
      if $_27
        block $_28
          get_local $12
          i32.load
          set_local $7
          get_local $15
          get_local $10
          i32.const 4
          i32.add
          tee_local $12
          i32.store
          get_local $10
          get_local $7
          i32.store
          get_local $12
          set_local $10
        end ;; $_28
      end ;; $_27
    end ;; $_26
    get_local $5
    get_local $3
    get_local $16
    i32.load
    get_local $4
    call $__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj
    f64.store
    get_local $11
    get_local $14
    get_local $10
    get_local $4
    call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
    get_local $0
    if $_29 (result i32)
      get_local $0
      i32.load offset=12
      tee_local $3
      get_local $0
      i32.load offset=16
      i32.eq
      if $_30 (result i32)
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $3
        i32.load
      end ;; $_30
      tee_local $0
      i32.const -1
      i32.eq
      if $_31 (result i32)
        block $_32 (result i32)
          get_local $1
          i32.const 0
          i32.store
          i32.const 1
        end ;; $_32
      else
        i32.const 0
      end ;; $_31
    else
      i32.const 1
    end ;; $_29
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $6
          i32.eqz
          br_if $__rjti$1
          get_local $6
          i32.load offset=12
          tee_local $3
          get_local $6
          i32.load offset=16
          i32.eq
          if $if (result i32)
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $3
            i32.load
          end ;; $if
          tee_local $3
          i32.const -1
          i32.eq
          if $if_1
            block $block
              get_local $2
              i32.const 0
              i32.store
              br $__rjti$1
            end ;; $block
          else
            get_local $0
            i32.eqz
            br_if $__rjti$2
          end ;; $if_1
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $8
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $9
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 304
    i32.add
    set_global $STACKTOP
    get_local $10
    i32.const 200
    i32.add
    set_local $17
    get_local $10
    i32.const 196
    i32.add
    set_local $6
    get_local $10
    i32.const 184
    i32.add
    set_local $11
    get_local $10
    i32.const 172
    i32.add
    set_local $7
    block $switch (result i32)
      block $switch-default
        block $switch-case1
          block $switch-case0
            block $switch-case
              get_local $3
              i32.load offset=4
              i32.const 74
              i32.and
              br_table
                $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-case
                $switch-default ;; default
            end ;; $switch-case
            i32.const 8
            br $switch
          end ;; $switch-case0
          i32.const 16
          br $switch
        end ;; $switch-case1
        i32.const 0
        br $switch
      end ;; $switch-default
      i32.const 10
    end ;; $switch
    set_local $18
    get_local $11
    get_local $3
    get_local $17
    get_local $6
    call $__ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw
    get_local $7
    i32.const 0
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $7
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $7
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $7
    i32.const 8
    i32.add
    set_local $19
    get_local $10
    i32.const 8
    i32.add
    set_local $14
    get_local $10
    i32.const 4
    i32.add
    set_local $15
    get_local $10
    set_local $12
    get_local $7
    get_local $7
    i32.const 11
    i32.add
    tee_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_3 (result i32)
      get_local $19
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_3
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $10
    i32.const 168
    i32.add
    tee_local $16
    get_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_4 (result i32)
      get_local $7
      i32.load
    else
      get_local $7
    end ;; $_4
    tee_local $3
    i32.store
    get_local $15
    get_local $14
    i32.store
    get_local $12
    i32.const 0
    i32.store
    get_local $7
    i32.const 4
    i32.add
    set_local $20
    get_local $6
    i32.load
    set_local $21
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L13
      block $label$break$L13
        get_local $0
        if $_5 (result i32)
          get_local $0
          i32.load offset=12
          tee_local $6
          get_local $0
          i32.load offset=16
          i32.eq
          if $_6 (result i32)
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $6
            i32.load
          end ;; $_6
          tee_local $6
          i32.const -1
          i32.eq
          if $_7 (result i32)
            block $_8 (result i32)
              get_local $1
              i32.const 0
              i32.store
              i32.const 0
              set_local $0
              i32.const 1
            end ;; $_8
          else
            i32.const 0
          end ;; $_7
        else
          block $_9 (result i32)
            i32.const 0
            set_local $0
            i32.const 1
          end ;; $_9
        end ;; $_5
        set_local $8
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $6
            i32.eqz
            br_if $__rjti$0
            get_local $6
            i32.load offset=12
            tee_local $13
            get_local $6
            i32.load offset=16
            i32.eq
            if $_10 (result i32)
              get_local $6
              get_local $6
              i32.load
              i32.load offset=36
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
            else
              get_local $13
              i32.load
            end ;; $_10
            tee_local $13
            i32.const -1
            i32.eq
            if $_11
              block $_12
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_12
            else
              get_local $8
              i32.eqz
              br_if $label$break$L13
            end ;; $_11
            br $__rjto$0
          end ;; $__rjti$0
          get_local $8
          if $_13
            block $_14
              i32.const 0
              set_local $6
              br $label$break$L13
            end ;; $_14
          else
            i32.const 0
            set_local $6
          end ;; $_13
        end ;; $__rjto$0
        get_local $16
        i32.load
        get_local $3
        get_local $9
        i32.load8_s
        tee_local $8
        i32.const 0
        i32.lt_s
        if $_15 (result i32)
          get_local $20
          i32.load
        else
          get_local $8
          i32.const 255
          i32.and
        end ;; $_15
        tee_local $8
        i32.add
        i32.eq
        if $_16
          block $_17
            get_local $7
            get_local $8
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $7
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_18 (result i32)
              get_local $19
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_18
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $16
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_19 (result i32)
              get_local $7
              i32.load
            else
              get_local $7
            end ;; $_19
            tee_local $3
            get_local $8
            i32.add
            i32.store
          end ;; $_17
        end ;; $_16
        get_local $0
        i32.const 12
        i32.add
        tee_local $8
        i32.load
        tee_local $13
        get_local $0
        i32.const 16
        i32.add
        tee_local $22
        i32.load
        i32.eq
        if $_20 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $13
          i32.load
        end ;; $_20
        tee_local $13
        get_local $18
        get_local $3
        get_local $16
        get_local $12
        get_local $21
        get_local $11
        get_local $14
        get_local $15
        get_local $17
        call $__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw
        br_if $label$break$L13
        get_local $8
        i32.load
        tee_local $6
        get_local $22
        i32.load
        i32.eq
        if $_21
          block $_22
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L13
          end ;; $_22
        else
          block $_23
            get_local $8
            get_local $6
            i32.const 4
            i32.add
            i32.store
            br $label$continue$L13
          end ;; $_23
        end ;; $_21
      end ;; $label$break$L13
    end ;; $label$continue$L13
    get_local $15
    i32.load
    set_local $9
    get_local $11
    i32.load8_s offset=11
    tee_local $8
    i32.const 0
    i32.lt_s
    if $_24 (result i32)
      get_local $11
      i32.load offset=4
    else
      get_local $8
      i32.const 255
      i32.and
    end ;; $_24
    if $_25
      get_local $9
      get_local $14
      i32.sub
      i32.const 160
      i32.lt_s
      if $_26
        block $_27
          get_local $12
          i32.load
          set_local $8
          get_local $15
          get_local $9
          i32.const 4
          i32.add
          tee_local $12
          i32.store
          get_local $9
          get_local $8
          i32.store
          get_local $12
          set_local $9
        end ;; $_27
      end ;; $_26
    end ;; $_25
    get_local $5
    get_local $3
    get_local $16
    i32.load
    get_local $4
    get_local $18
    call $__ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji
    i32.store
    get_local $5
    get_global $tempRet0
    i32.store offset=4
    get_local $11
    get_local $14
    get_local $9
    get_local $4
    call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
    get_local $0
    if $_28 (result i32)
      get_local $0
      i32.load offset=12
      tee_local $3
      get_local $0
      i32.load offset=16
      i32.eq
      if $_29 (result i32)
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $3
        i32.load
      end ;; $_29
      tee_local $0
      i32.const -1
      i32.eq
      if $_30 (result i32)
        block $_31 (result i32)
          get_local $1
          i32.const 0
          i32.store
          i32.const 1
        end ;; $_31
      else
        i32.const 0
      end ;; $_30
    else
      i32.const 1
    end ;; $_28
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $6
          i32.eqz
          br_if $__rjti$1
          get_local $6
          i32.load offset=12
          tee_local $3
          get_local $6
          i32.load offset=16
          i32.eq
          if $if (result i32)
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $3
            i32.load
          end ;; $if
          tee_local $3
          i32.const -1
          i32.eq
          if $if_1
            block $block
              get_local $2
              i32.const 0
              i32.store
              br $__rjti$1
            end ;; $block
          else
            get_local $0
            i32.eqz
            br_if $__rjti$2
          end ;; $if_1
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $7
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $10
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 304
    i32.add
    set_global $STACKTOP
    get_local $10
    i32.const 200
    i32.add
    set_local $17
    get_local $10
    i32.const 196
    i32.add
    set_local $6
    get_local $10
    i32.const 184
    i32.add
    set_local $11
    get_local $10
    i32.const 172
    i32.add
    set_local $7
    block $switch (result i32)
      block $switch-default
        block $switch-case1
          block $switch-case0
            block $switch-case
              get_local $3
              i32.load offset=4
              i32.const 74
              i32.and
              br_table
                $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-case
                $switch-default ;; default
            end ;; $switch-case
            i32.const 8
            br $switch
          end ;; $switch-case0
          i32.const 16
          br $switch
        end ;; $switch-case1
        i32.const 0
        br $switch
      end ;; $switch-default
      i32.const 10
    end ;; $switch
    set_local $18
    get_local $11
    get_local $3
    get_local $17
    get_local $6
    call $__ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw
    get_local $7
    i32.const 0
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $7
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $7
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $7
    i32.const 8
    i32.add
    set_local $19
    get_local $10
    i32.const 8
    i32.add
    set_local $14
    get_local $10
    i32.const 4
    i32.add
    set_local $15
    get_local $10
    set_local $12
    get_local $7
    get_local $7
    i32.const 11
    i32.add
    tee_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_3 (result i32)
      get_local $19
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_3
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $10
    i32.const 168
    i32.add
    tee_local $16
    get_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_4 (result i32)
      get_local $7
      i32.load
    else
      get_local $7
    end ;; $_4
    tee_local $3
    i32.store
    get_local $15
    get_local $14
    i32.store
    get_local $12
    i32.const 0
    i32.store
    get_local $7
    i32.const 4
    i32.add
    set_local $20
    get_local $6
    i32.load
    set_local $21
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L13
      block $label$break$L13
        get_local $0
        if $_5 (result i32)
          get_local $0
          i32.load offset=12
          tee_local $6
          get_local $0
          i32.load offset=16
          i32.eq
          if $_6 (result i32)
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $6
            i32.load
          end ;; $_6
          tee_local $6
          i32.const -1
          i32.eq
          if $_7 (result i32)
            block $_8 (result i32)
              get_local $1
              i32.const 0
              i32.store
              i32.const 0
              set_local $0
              i32.const 1
            end ;; $_8
          else
            i32.const 0
          end ;; $_7
        else
          block $_9 (result i32)
            i32.const 0
            set_local $0
            i32.const 1
          end ;; $_9
        end ;; $_5
        set_local $8
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $6
            i32.eqz
            br_if $__rjti$0
            get_local $6
            i32.load offset=12
            tee_local $13
            get_local $6
            i32.load offset=16
            i32.eq
            if $_10 (result i32)
              get_local $6
              get_local $6
              i32.load
              i32.load offset=36
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
            else
              get_local $13
              i32.load
            end ;; $_10
            tee_local $13
            i32.const -1
            i32.eq
            if $_11
              block $_12
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_12
            else
              get_local $8
              i32.eqz
              br_if $label$break$L13
            end ;; $_11
            br $__rjto$0
          end ;; $__rjti$0
          get_local $8
          if $_13
            block $_14
              i32.const 0
              set_local $6
              br $label$break$L13
            end ;; $_14
          else
            i32.const 0
            set_local $6
          end ;; $_13
        end ;; $__rjto$0
        get_local $16
        i32.load
        get_local $3
        get_local $9
        i32.load8_s
        tee_local $8
        i32.const 0
        i32.lt_s
        if $_15 (result i32)
          get_local $20
          i32.load
        else
          get_local $8
          i32.const 255
          i32.and
        end ;; $_15
        tee_local $8
        i32.add
        i32.eq
        if $_16
          block $_17
            get_local $7
            get_local $8
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $7
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_18 (result i32)
              get_local $19
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_18
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $16
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_19 (result i32)
              get_local $7
              i32.load
            else
              get_local $7
            end ;; $_19
            tee_local $3
            get_local $8
            i32.add
            i32.store
          end ;; $_17
        end ;; $_16
        get_local $0
        i32.const 12
        i32.add
        tee_local $8
        i32.load
        tee_local $13
        get_local $0
        i32.const 16
        i32.add
        tee_local $22
        i32.load
        i32.eq
        if $_20 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $13
          i32.load
        end ;; $_20
        tee_local $13
        get_local $18
        get_local $3
        get_local $16
        get_local $12
        get_local $21
        get_local $11
        get_local $14
        get_local $15
        get_local $17
        call $__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw
        br_if $label$break$L13
        get_local $8
        i32.load
        tee_local $6
        get_local $22
        i32.load
        i32.eq
        if $_21
          block $_22
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L13
          end ;; $_22
        else
          block $_23
            get_local $8
            get_local $6
            i32.const 4
            i32.add
            i32.store
            br $label$continue$L13
          end ;; $_23
        end ;; $_21
      end ;; $label$break$L13
    end ;; $label$continue$L13
    get_local $15
    i32.load
    set_local $9
    get_local $11
    i32.load8_s offset=11
    tee_local $8
    i32.const 0
    i32.lt_s
    if $_24 (result i32)
      get_local $11
      i32.load offset=4
    else
      get_local $8
      i32.const 255
      i32.and
    end ;; $_24
    if $_25
      get_local $9
      get_local $14
      i32.sub
      i32.const 160
      i32.lt_s
      if $_26
        block $_27
          get_local $12
          i32.load
          set_local $8
          get_local $15
          get_local $9
          i32.const 4
          i32.add
          tee_local $12
          i32.store
          get_local $9
          get_local $8
          i32.store
          get_local $12
          set_local $9
        end ;; $_27
      end ;; $_26
    end ;; $_25
    get_local $5
    get_local $3
    get_local $16
    i32.load
    get_local $4
    get_local $18
    call $__ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji
    i32.store
    get_local $5
    get_global $tempRet0
    i32.store offset=4
    get_local $11
    get_local $14
    get_local $9
    get_local $4
    call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
    get_local $0
    if $_28 (result i32)
      get_local $0
      i32.load offset=12
      tee_local $3
      get_local $0
      i32.load offset=16
      i32.eq
      if $_29 (result i32)
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $3
        i32.load
      end ;; $_29
      tee_local $0
      i32.const -1
      i32.eq
      if $_30 (result i32)
        block $_31 (result i32)
          get_local $1
          i32.const 0
          i32.store
          i32.const 1
        end ;; $_31
      else
        i32.const 0
      end ;; $_30
    else
      i32.const 1
    end ;; $_28
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $6
          i32.eqz
          br_if $__rjti$1
          get_local $6
          i32.load offset=12
          tee_local $3
          get_local $6
          i32.load offset=16
          i32.eq
          if $if (result i32)
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $3
            i32.load
          end ;; $if
          tee_local $3
          i32.const -1
          i32.eq
          if $if_1
            block $block
              get_local $2
              i32.const 0
              i32.store
              br $__rjti$1
            end ;; $block
          else
            get_local $0
            i32.eqz
            br_if $__rjti$2
          end ;; $if_1
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $7
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $10
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 304
    i32.add
    set_global $STACKTOP
    get_local $10
    i32.const 200
    i32.add
    set_local $17
    get_local $10
    i32.const 196
    i32.add
    set_local $6
    get_local $10
    i32.const 184
    i32.add
    set_local $11
    get_local $10
    i32.const 172
    i32.add
    set_local $7
    block $switch (result i32)
      block $switch-default
        block $switch-case1
          block $switch-case0
            block $switch-case
              get_local $3
              i32.load offset=4
              i32.const 74
              i32.and
              br_table
                $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-case
                $switch-default ;; default
            end ;; $switch-case
            i32.const 8
            br $switch
          end ;; $switch-case0
          i32.const 16
          br $switch
        end ;; $switch-case1
        i32.const 0
        br $switch
      end ;; $switch-default
      i32.const 10
    end ;; $switch
    set_local $18
    get_local $11
    get_local $3
    get_local $17
    get_local $6
    call $__ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw
    get_local $7
    i32.const 0
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $7
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $7
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $7
    i32.const 8
    i32.add
    set_local $19
    get_local $10
    i32.const 8
    i32.add
    set_local $14
    get_local $10
    i32.const 4
    i32.add
    set_local $15
    get_local $10
    set_local $12
    get_local $7
    get_local $7
    i32.const 11
    i32.add
    tee_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_3 (result i32)
      get_local $19
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_3
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $10
    i32.const 168
    i32.add
    tee_local $16
    get_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_4 (result i32)
      get_local $7
      i32.load
    else
      get_local $7
    end ;; $_4
    tee_local $3
    i32.store
    get_local $15
    get_local $14
    i32.store
    get_local $12
    i32.const 0
    i32.store
    get_local $7
    i32.const 4
    i32.add
    set_local $20
    get_local $6
    i32.load
    set_local $21
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L13
      block $label$break$L13
        get_local $0
        if $_5 (result i32)
          get_local $0
          i32.load offset=12
          tee_local $6
          get_local $0
          i32.load offset=16
          i32.eq
          if $_6 (result i32)
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $6
            i32.load
          end ;; $_6
          tee_local $6
          i32.const -1
          i32.eq
          if $_7 (result i32)
            block $_8 (result i32)
              get_local $1
              i32.const 0
              i32.store
              i32.const 0
              set_local $0
              i32.const 1
            end ;; $_8
          else
            i32.const 0
          end ;; $_7
        else
          block $_9 (result i32)
            i32.const 0
            set_local $0
            i32.const 1
          end ;; $_9
        end ;; $_5
        set_local $8
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $6
            i32.eqz
            br_if $__rjti$0
            get_local $6
            i32.load offset=12
            tee_local $13
            get_local $6
            i32.load offset=16
            i32.eq
            if $_10 (result i32)
              get_local $6
              get_local $6
              i32.load
              i32.load offset=36
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
            else
              get_local $13
              i32.load
            end ;; $_10
            tee_local $13
            i32.const -1
            i32.eq
            if $_11
              block $_12
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_12
            else
              get_local $8
              i32.eqz
              br_if $label$break$L13
            end ;; $_11
            br $__rjto$0
          end ;; $__rjti$0
          get_local $8
          if $_13
            block $_14
              i32.const 0
              set_local $6
              br $label$break$L13
            end ;; $_14
          else
            i32.const 0
            set_local $6
          end ;; $_13
        end ;; $__rjto$0
        get_local $16
        i32.load
        get_local $3
        get_local $9
        i32.load8_s
        tee_local $8
        i32.const 0
        i32.lt_s
        if $_15 (result i32)
          get_local $20
          i32.load
        else
          get_local $8
          i32.const 255
          i32.and
        end ;; $_15
        tee_local $8
        i32.add
        i32.eq
        if $_16
          block $_17
            get_local $7
            get_local $8
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $7
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_18 (result i32)
              get_local $19
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_18
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $16
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_19 (result i32)
              get_local $7
              i32.load
            else
              get_local $7
            end ;; $_19
            tee_local $3
            get_local $8
            i32.add
            i32.store
          end ;; $_17
        end ;; $_16
        get_local $0
        i32.const 12
        i32.add
        tee_local $8
        i32.load
        tee_local $13
        get_local $0
        i32.const 16
        i32.add
        tee_local $22
        i32.load
        i32.eq
        if $_20 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $13
          i32.load
        end ;; $_20
        tee_local $13
        get_local $18
        get_local $3
        get_local $16
        get_local $12
        get_local $21
        get_local $11
        get_local $14
        get_local $15
        get_local $17
        call $__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw
        br_if $label$break$L13
        get_local $8
        i32.load
        tee_local $6
        get_local $22
        i32.load
        i32.eq
        if $_21
          block $_22
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L13
          end ;; $_22
        else
          block $_23
            get_local $8
            get_local $6
            i32.const 4
            i32.add
            i32.store
            br $label$continue$L13
          end ;; $_23
        end ;; $_21
      end ;; $label$break$L13
    end ;; $label$continue$L13
    get_local $15
    i32.load
    set_local $9
    get_local $11
    i32.load8_s offset=11
    tee_local $8
    i32.const 0
    i32.lt_s
    if $_24 (result i32)
      get_local $11
      i32.load offset=4
    else
      get_local $8
      i32.const 255
      i32.and
    end ;; $_24
    if $_25
      get_local $9
      get_local $14
      i32.sub
      i32.const 160
      i32.lt_s
      if $_26
        block $_27
          get_local $12
          i32.load
          set_local $8
          get_local $15
          get_local $9
          i32.const 4
          i32.add
          tee_local $12
          i32.store
          get_local $9
          get_local $8
          i32.store
          get_local $12
          set_local $9
        end ;; $_27
      end ;; $_26
    end ;; $_25
    get_local $5
    get_local $3
    get_local $16
    i32.load
    get_local $4
    get_local $18
    call $__ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji
    i32.store16
    get_local $11
    get_local $14
    get_local $9
    get_local $4
    call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
    get_local $0
    if $_28 (result i32)
      get_local $0
      i32.load offset=12
      tee_local $3
      get_local $0
      i32.load offset=16
      i32.eq
      if $_29 (result i32)
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $3
        i32.load
      end ;; $_29
      tee_local $0
      i32.const -1
      i32.eq
      if $_30 (result i32)
        block $_31 (result i32)
          get_local $1
          i32.const 0
          i32.store
          i32.const 1
        end ;; $_31
      else
        i32.const 0
      end ;; $_30
    else
      i32.const 1
    end ;; $_28
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $6
          i32.eqz
          br_if $__rjti$1
          get_local $6
          i32.load offset=12
          tee_local $3
          get_local $6
          i32.load offset=16
          i32.eq
          if $if (result i32)
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $3
            i32.load
          end ;; $if
          tee_local $3
          i32.const -1
          i32.eq
          if $if_1
            block $block
              get_local $2
              i32.const 0
              i32.store
              br $__rjti$1
            end ;; $block
          else
            get_local $0
            i32.eqz
            br_if $__rjti$2
          end ;; $if_1
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $7
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $10
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 304
    i32.add
    set_global $STACKTOP
    get_local $10
    i32.const 200
    i32.add
    set_local $17
    get_local $10
    i32.const 196
    i32.add
    set_local $6
    get_local $10
    i32.const 184
    i32.add
    set_local $11
    get_local $10
    i32.const 172
    i32.add
    set_local $7
    block $switch (result i32)
      block $switch-default
        block $switch-case1
          block $switch-case0
            block $switch-case
              get_local $3
              i32.load offset=4
              i32.const 74
              i32.and
              br_table
                $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-case
                $switch-default ;; default
            end ;; $switch-case
            i32.const 8
            br $switch
          end ;; $switch-case0
          i32.const 16
          br $switch
        end ;; $switch-case1
        i32.const 0
        br $switch
      end ;; $switch-default
      i32.const 10
    end ;; $switch
    set_local $18
    get_local $11
    get_local $3
    get_local $17
    get_local $6
    call $__ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw
    get_local $7
    i32.const 0
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $7
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $7
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $7
    i32.const 8
    i32.add
    set_local $19
    get_local $10
    i32.const 8
    i32.add
    set_local $14
    get_local $10
    i32.const 4
    i32.add
    set_local $15
    get_local $10
    set_local $12
    get_local $7
    get_local $7
    i32.const 11
    i32.add
    tee_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_3 (result i32)
      get_local $19
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_3
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $10
    i32.const 168
    i32.add
    tee_local $16
    get_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_4 (result i32)
      get_local $7
      i32.load
    else
      get_local $7
    end ;; $_4
    tee_local $3
    i32.store
    get_local $15
    get_local $14
    i32.store
    get_local $12
    i32.const 0
    i32.store
    get_local $7
    i32.const 4
    i32.add
    set_local $20
    get_local $6
    i32.load
    set_local $21
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L13
      block $label$break$L13
        get_local $0
        if $_5 (result i32)
          get_local $0
          i32.load offset=12
          tee_local $6
          get_local $0
          i32.load offset=16
          i32.eq
          if $_6 (result i32)
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $6
            i32.load
          end ;; $_6
          tee_local $6
          i32.const -1
          i32.eq
          if $_7 (result i32)
            block $_8 (result i32)
              get_local $1
              i32.const 0
              i32.store
              i32.const 0
              set_local $0
              i32.const 1
            end ;; $_8
          else
            i32.const 0
          end ;; $_7
        else
          block $_9 (result i32)
            i32.const 0
            set_local $0
            i32.const 1
          end ;; $_9
        end ;; $_5
        set_local $8
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $6
            i32.eqz
            br_if $__rjti$0
            get_local $6
            i32.load offset=12
            tee_local $13
            get_local $6
            i32.load offset=16
            i32.eq
            if $_10 (result i32)
              get_local $6
              get_local $6
              i32.load
              i32.load offset=36
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
            else
              get_local $13
              i32.load
            end ;; $_10
            tee_local $13
            i32.const -1
            i32.eq
            if $_11
              block $_12
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_12
            else
              get_local $8
              i32.eqz
              br_if $label$break$L13
            end ;; $_11
            br $__rjto$0
          end ;; $__rjti$0
          get_local $8
          if $_13
            block $_14
              i32.const 0
              set_local $6
              br $label$break$L13
            end ;; $_14
          else
            i32.const 0
            set_local $6
          end ;; $_13
        end ;; $__rjto$0
        get_local $16
        i32.load
        get_local $3
        get_local $9
        i32.load8_s
        tee_local $8
        i32.const 0
        i32.lt_s
        if $_15 (result i32)
          get_local $20
          i32.load
        else
          get_local $8
          i32.const 255
          i32.and
        end ;; $_15
        tee_local $8
        i32.add
        i32.eq
        if $_16
          block $_17
            get_local $7
            get_local $8
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $7
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_18 (result i32)
              get_local $19
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_18
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $16
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_19 (result i32)
              get_local $7
              i32.load
            else
              get_local $7
            end ;; $_19
            tee_local $3
            get_local $8
            i32.add
            i32.store
          end ;; $_17
        end ;; $_16
        get_local $0
        i32.const 12
        i32.add
        tee_local $8
        i32.load
        tee_local $13
        get_local $0
        i32.const 16
        i32.add
        tee_local $22
        i32.load
        i32.eq
        if $_20 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $13
          i32.load
        end ;; $_20
        tee_local $13
        get_local $18
        get_local $3
        get_local $16
        get_local $12
        get_local $21
        get_local $11
        get_local $14
        get_local $15
        get_local $17
        call $__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw
        br_if $label$break$L13
        get_local $8
        i32.load
        tee_local $6
        get_local $22
        i32.load
        i32.eq
        if $_21
          block $_22
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L13
          end ;; $_22
        else
          block $_23
            get_local $8
            get_local $6
            i32.const 4
            i32.add
            i32.store
            br $label$continue$L13
          end ;; $_23
        end ;; $_21
      end ;; $label$break$L13
    end ;; $label$continue$L13
    get_local $15
    i32.load
    set_local $9
    get_local $11
    i32.load8_s offset=11
    tee_local $8
    i32.const 0
    i32.lt_s
    if $_24 (result i32)
      get_local $11
      i32.load offset=4
    else
      get_local $8
      i32.const 255
      i32.and
    end ;; $_24
    if $_25
      get_local $9
      get_local $14
      i32.sub
      i32.const 160
      i32.lt_s
      if $_26
        block $_27
          get_local $12
          i32.load
          set_local $8
          get_local $15
          get_local $9
          i32.const 4
          i32.add
          tee_local $12
          i32.store
          get_local $9
          get_local $8
          i32.store
          get_local $12
          set_local $9
        end ;; $_27
      end ;; $_26
    end ;; $_25
    get_local $5
    get_local $3
    get_local $16
    i32.load
    get_local $4
    get_local $18
    call $__ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji
    i32.store
    get_local $11
    get_local $14
    get_local $9
    get_local $4
    call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
    get_local $0
    if $_28 (result i32)
      get_local $0
      i32.load offset=12
      tee_local $3
      get_local $0
      i32.load offset=16
      i32.eq
      if $_29 (result i32)
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $3
        i32.load
      end ;; $_29
      tee_local $0
      i32.const -1
      i32.eq
      if $_30 (result i32)
        block $_31 (result i32)
          get_local $1
          i32.const 0
          i32.store
          i32.const 1
        end ;; $_31
      else
        i32.const 0
      end ;; $_30
    else
      i32.const 1
    end ;; $_28
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $6
          i32.eqz
          br_if $__rjti$1
          get_local $6
          i32.load offset=12
          tee_local $3
          get_local $6
          i32.load offset=16
          i32.eq
          if $if (result i32)
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $3
            i32.load
          end ;; $if
          tee_local $3
          i32.const -1
          i32.eq
          if $if_1
            block $block
              get_local $2
              i32.const 0
              i32.store
              br $__rjti$1
            end ;; $block
          else
            get_local $0
            i32.eqz
            br_if $__rjti$2
          end ;; $if_1
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $7
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $10
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 304
    i32.add
    set_global $STACKTOP
    get_local $10
    i32.const 200
    i32.add
    set_local $17
    get_local $10
    i32.const 196
    i32.add
    set_local $6
    get_local $10
    i32.const 184
    i32.add
    set_local $11
    get_local $10
    i32.const 172
    i32.add
    set_local $7
    block $switch (result i32)
      block $switch-default
        block $switch-case1
          block $switch-case0
            block $switch-case
              get_local $3
              i32.load offset=4
              i32.const 74
              i32.and
              br_table
                $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-case
                $switch-default ;; default
            end ;; $switch-case
            i32.const 8
            br $switch
          end ;; $switch-case0
          i32.const 16
          br $switch
        end ;; $switch-case1
        i32.const 0
        br $switch
      end ;; $switch-default
      i32.const 10
    end ;; $switch
    set_local $18
    get_local $11
    get_local $3
    get_local $17
    get_local $6
    call $__ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw
    get_local $7
    i32.const 0
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $7
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $7
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $7
    i32.const 8
    i32.add
    set_local $19
    get_local $10
    i32.const 8
    i32.add
    set_local $14
    get_local $10
    i32.const 4
    i32.add
    set_local $15
    get_local $10
    set_local $12
    get_local $7
    get_local $7
    i32.const 11
    i32.add
    tee_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_3 (result i32)
      get_local $19
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_3
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $10
    i32.const 168
    i32.add
    tee_local $16
    get_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_4 (result i32)
      get_local $7
      i32.load
    else
      get_local $7
    end ;; $_4
    tee_local $3
    i32.store
    get_local $15
    get_local $14
    i32.store
    get_local $12
    i32.const 0
    i32.store
    get_local $7
    i32.const 4
    i32.add
    set_local $20
    get_local $6
    i32.load
    set_local $21
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L13
      block $label$break$L13
        get_local $0
        if $_5 (result i32)
          get_local $0
          i32.load offset=12
          tee_local $6
          get_local $0
          i32.load offset=16
          i32.eq
          if $_6 (result i32)
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $6
            i32.load
          end ;; $_6
          tee_local $6
          i32.const -1
          i32.eq
          if $_7 (result i32)
            block $_8 (result i32)
              get_local $1
              i32.const 0
              i32.store
              i32.const 0
              set_local $0
              i32.const 1
            end ;; $_8
          else
            i32.const 0
          end ;; $_7
        else
          block $_9 (result i32)
            i32.const 0
            set_local $0
            i32.const 1
          end ;; $_9
        end ;; $_5
        set_local $8
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $6
            i32.eqz
            br_if $__rjti$0
            get_local $6
            i32.load offset=12
            tee_local $13
            get_local $6
            i32.load offset=16
            i32.eq
            if $_10 (result i32)
              get_local $6
              get_local $6
              i32.load
              i32.load offset=36
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
            else
              get_local $13
              i32.load
            end ;; $_10
            tee_local $13
            i32.const -1
            i32.eq
            if $_11
              block $_12
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_12
            else
              get_local $8
              i32.eqz
              br_if $label$break$L13
            end ;; $_11
            br $__rjto$0
          end ;; $__rjti$0
          get_local $8
          if $_13
            block $_14
              i32.const 0
              set_local $6
              br $label$break$L13
            end ;; $_14
          else
            i32.const 0
            set_local $6
          end ;; $_13
        end ;; $__rjto$0
        get_local $16
        i32.load
        get_local $3
        get_local $9
        i32.load8_s
        tee_local $8
        i32.const 0
        i32.lt_s
        if $_15 (result i32)
          get_local $20
          i32.load
        else
          get_local $8
          i32.const 255
          i32.and
        end ;; $_15
        tee_local $8
        i32.add
        i32.eq
        if $_16
          block $_17
            get_local $7
            get_local $8
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $7
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_18 (result i32)
              get_local $19
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_18
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $16
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_19 (result i32)
              get_local $7
              i32.load
            else
              get_local $7
            end ;; $_19
            tee_local $3
            get_local $8
            i32.add
            i32.store
          end ;; $_17
        end ;; $_16
        get_local $0
        i32.const 12
        i32.add
        tee_local $8
        i32.load
        tee_local $13
        get_local $0
        i32.const 16
        i32.add
        tee_local $22
        i32.load
        i32.eq
        if $_20 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $13
          i32.load
        end ;; $_20
        tee_local $13
        get_local $18
        get_local $3
        get_local $16
        get_local $12
        get_local $21
        get_local $11
        get_local $14
        get_local $15
        get_local $17
        call $__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw
        br_if $label$break$L13
        get_local $8
        i32.load
        tee_local $6
        get_local $22
        i32.load
        i32.eq
        if $_21
          block $_22
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L13
          end ;; $_22
        else
          block $_23
            get_local $8
            get_local $6
            i32.const 4
            i32.add
            i32.store
            br $label$continue$L13
          end ;; $_23
        end ;; $_21
      end ;; $label$break$L13
    end ;; $label$continue$L13
    get_local $15
    i32.load
    set_local $9
    get_local $11
    i32.load8_s offset=11
    tee_local $8
    i32.const 0
    i32.lt_s
    if $_24 (result i32)
      get_local $11
      i32.load offset=4
    else
      get_local $8
      i32.const 255
      i32.and
    end ;; $_24
    if $_25
      get_local $9
      get_local $14
      i32.sub
      i32.const 160
      i32.lt_s
      if $_26
        block $_27
          get_local $12
          i32.load
          set_local $8
          get_local $15
          get_local $9
          i32.const 4
          i32.add
          tee_local $12
          i32.store
          get_local $9
          get_local $8
          i32.store
          get_local $12
          set_local $9
        end ;; $_27
      end ;; $_26
    end ;; $_25
    get_local $5
    get_local $3
    get_local $16
    i32.load
    get_local $4
    get_local $18
    call $__ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji
    i32.store
    get_local $11
    get_local $14
    get_local $9
    get_local $4
    call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
    get_local $0
    if $_28 (result i32)
      get_local $0
      i32.load offset=12
      tee_local $3
      get_local $0
      i32.load offset=16
      i32.eq
      if $_29 (result i32)
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $3
        i32.load
      end ;; $_29
      tee_local $0
      i32.const -1
      i32.eq
      if $_30 (result i32)
        block $_31 (result i32)
          get_local $1
          i32.const 0
          i32.store
          i32.const 1
        end ;; $_31
      else
        i32.const 0
      end ;; $_30
    else
      i32.const 1
    end ;; $_28
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $6
          i32.eqz
          br_if $__rjti$1
          get_local $6
          i32.load offset=12
          tee_local $3
          get_local $6
          i32.load offset=16
          i32.eq
          if $if (result i32)
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $3
            i32.load
          end ;; $if
          tee_local $3
          i32.const -1
          i32.eq
          if $if_1
            block $block
              get_local $2
              i32.const 0
              i32.store
              br $__rjti$1
            end ;; $block
          else
            get_local $0
            i32.eqz
            br_if $__rjti$2
          end ;; $if_1
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $7
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $10
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    get_global $STACKTOP
    set_local $9
    get_global $STACKTOP
    i32.const 320
    i32.add
    set_global $STACKTOP
    get_local $9
    i32.const 208
    i32.add
    set_local $14
    get_local $9
    i32.const 192
    i32.add
    set_local $0
    get_local $9
    i32.const 180
    i32.add
    set_local $7
    get_local $9
    i32.const 196
    i32.add
    tee_local $10
    i32.const 0
    i32.store
    get_local $10
    i32.const 0
    i32.store offset=4
    get_local $10
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $6
    loop $while-in
      get_local $6
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $10
          get_local $6
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $6
          i32.const 1
          i32.add
          set_local $6
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $0
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $3
    i32.store
    get_local $0
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $0
    i32.const 13937
    i32.const 13963
    get_local $14
    get_local $0
    i32.load
    i32.load offset=48
    i32.const 7
    i32.and
    i32.const 397
    i32.add
    call_indirect (type $FUNCSIG$iiiii)
    drop
    get_local $3
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $7
    i32.const 0
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $7
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in1
      get_local $0
      i32.const 3
      i32.ne
      if $_3
        block $_4
          get_local $7
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in1
        end ;; $_4
      end ;; $_3
    end ;; $while-in1
    get_local $7
    i32.const 8
    i32.add
    set_local $15
    get_local $9
    set_local $16
    get_local $9
    i32.const 16
    i32.add
    set_local $17
    get_local $9
    i32.const 8
    i32.add
    set_local $18
    get_local $9
    i32.const 4
    i32.add
    set_local $19
    get_local $7
    get_local $7
    i32.const 11
    i32.add
    tee_local $11
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_5 (result i32)
      get_local $15
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_5
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $9
    i32.const 176
    i32.add
    tee_local $13
    get_local $11
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_6 (result i32)
      get_local $7
      i32.load
    else
      get_local $7
    end ;; $_6
    tee_local $0
    i32.store
    get_local $18
    get_local $17
    i32.store
    get_local $19
    i32.const 0
    i32.store
    get_local $7
    i32.const 4
    i32.add
    set_local $21
    get_local $1
    i32.load
    set_local $3
    loop $label$continue$L12
      block $label$break$L12
        get_local $3
        if $_7 (result i32)
          get_local $3
          i32.load offset=12
          tee_local $6
          get_local $3
          i32.load offset=16
          i32.eq
          if $_8 (result i32)
            get_local $3
            get_local $3
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $6
            i32.load
          end ;; $_8
          tee_local $6
          i32.const -1
          i32.eq
          if $_9 (result i32)
            block $_10 (result i32)
              get_local $1
              i32.const 0
              i32.store
              i32.const 0
              set_local $3
              i32.const 1
            end ;; $_10
          else
            i32.const 0
          end ;; $_9
        else
          block $_11 (result i32)
            i32.const 0
            set_local $3
            i32.const 1
          end ;; $_11
        end ;; $_7
        set_local $12
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $6
            i32.eqz
            br_if $__rjti$0
            get_local $6
            i32.load offset=12
            tee_local $8
            get_local $6
            i32.load offset=16
            i32.eq
            if $_12 (result i32)
              get_local $6
              get_local $6
              i32.load
              i32.load offset=36
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
            else
              get_local $8
              i32.load
            end ;; $_12
            tee_local $8
            i32.const -1
            i32.eq
            if $_13
              block $_14
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_14
            else
              get_local $12
              i32.eqz
              br_if $label$break$L12
            end ;; $_13
            br $__rjto$0
          end ;; $__rjti$0
          get_local $12
          if $_15
            block $_16
              i32.const 0
              set_local $6
              br $label$break$L12
            end ;; $_16
          else
            i32.const 0
            set_local $6
          end ;; $_15
        end ;; $__rjto$0
        get_local $13
        i32.load
        get_local $0
        get_local $11
        i32.load8_s
        tee_local $8
        i32.const 0
        i32.lt_s
        if $_17 (result i32)
          get_local $21
          i32.load
        else
          get_local $8
          i32.const 255
          i32.and
        end ;; $_17
        tee_local $8
        i32.add
        i32.eq
        if $_18
          block $_19
            get_local $7
            get_local $8
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $7
            get_local $11
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_20 (result i32)
              get_local $15
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_20
            tee_local $0
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $13
            get_local $11
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_21 (result i32)
              get_local $7
              i32.load
            else
              get_local $7
            end ;; $_21
            tee_local $0
            get_local $8
            i32.add
            i32.store
          end ;; $_19
        end ;; $_18
        get_local $3
        i32.const 12
        i32.add
        tee_local $20
        i32.load
        tee_local $12
        get_local $3
        i32.const 16
        i32.add
        tee_local $8
        i32.load
        i32.eq
        if $_22 (result i32)
          get_local $3
          get_local $3
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $12
          i32.load
        end ;; $_22
        tee_local $12
        i32.const 16
        get_local $0
        get_local $13
        get_local $19
        i32.const 0
        get_local $10
        get_local $17
        get_local $18
        get_local $14
        call $__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw
        br_if $label$break$L12
        get_local $20
        i32.load
        tee_local $6
        get_local $8
        i32.load
        i32.eq
        if $_23
          block $_24
            get_local $3
            get_local $3
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L12
          end ;; $_24
        else
          block $_25
            get_local $20
            get_local $6
            i32.const 4
            i32.add
            i32.store
            br $label$continue$L12
          end ;; $_25
        end ;; $_23
      end ;; $label$break$L12
    end ;; $label$continue$L12
    get_local $7
    get_local $13
    i32.load
    get_local $0
    i32.sub
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $11
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_26 (result i32)
      get_local $7
      i32.load
    else
      get_local $7
    end ;; $_26
    set_local $0
    call $__ZNSt3__26__clocEv
    set_local $8
    get_local $16
    get_local $5
    i32.store
    get_local $0
    get_local $8
    i32.const 13972
    get_local $16
    call $__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z
    i32.const 1
    i32.ne
    if $_27
      get_local $4
      i32.const 4
      i32.store
    end ;; $_27
    get_local $3
    if $_28 (result i32)
      get_local $3
      i32.load offset=12
      tee_local $0
      get_local $3
      i32.load offset=16
      i32.eq
      if $_29 (result i32)
        get_local $3
        get_local $3
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $0
        i32.load
      end ;; $_29
      tee_local $0
      i32.const -1
      i32.eq
      if $_30 (result i32)
        block $_31 (result i32)
          get_local $1
          i32.const 0
          i32.store
          i32.const 1
        end ;; $_31
      else
        i32.const 0
      end ;; $_30
    else
      i32.const 1
    end ;; $_28
    set_local $3
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $6
          i32.eqz
          br_if $__rjti$1
          get_local $6
          i32.load offset=12
          tee_local $0
          get_local $6
          i32.load offset=16
          i32.eq
          if $if (result i32)
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $0
            i32.load
          end ;; $if
          tee_local $0
          i32.const -1
          i32.eq
          if $if_1
            block $block
              get_local $2
              i32.const 0
              i32.store
              br $__rjti$1
            end ;; $block
          else
            get_local $3
            i32.eqz
            br_if $__rjti$2
          end ;; $if_1
          br $__rjto$2
        end ;; $__rjti$1
        get_local $3
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $7
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $10
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $9
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    get_global $STACKTOP
    set_local $9
    get_global $STACKTOP
    i32.const 240
    i32.add
    set_global $STACKTOP
    get_local $9
    i32.const 184
    i32.add
    tee_local $11
    get_local $3
    get_local $9
    i32.const 200
    i32.add
    tee_local $20
    get_local $9
    i32.const 199
    i32.add
    tee_local $7
    get_local $9
    i32.const 198
    i32.add
    tee_local $6
    call $__ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_
    get_local $9
    i32.const 172
    i32.add
    tee_local $8
    i32.const 0
    i32.store
    get_local $8
    i32.const 0
    i32.store offset=4
    get_local $8
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $8
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $8
    i32.const 8
    i32.add
    set_local $17
    get_local $9
    i32.const 8
    i32.add
    set_local $14
    get_local $9
    i32.const 4
    i32.add
    set_local $15
    get_local $9
    set_local $12
    get_local $9
    i32.const 197
    i32.add
    set_local $13
    get_local $9
    i32.const 196
    i32.add
    set_local $18
    get_local $8
    get_local $8
    i32.const 11
    i32.add
    tee_local $10
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_3 (result i32)
      get_local $17
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_3
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $9
    i32.const 168
    i32.add
    tee_local $16
    get_local $10
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_4 (result i32)
      get_local $8
      i32.load
    else
      get_local $8
    end ;; $_4
    tee_local $3
    i32.store
    get_local $15
    get_local $14
    i32.store
    get_local $12
    i32.const 0
    i32.store
    get_local $13
    i32.const 1
    i32.store8
    get_local $18
    i32.const 69
    i32.store8
    get_local $8
    i32.const 4
    i32.add
    set_local $21
    get_local $7
    i32.load8_s
    set_local $22
    get_local $6
    i32.load8_s
    set_local $23
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L8
      block $label$break$L8
        get_local $0
        if $_5
          get_local $0
          i32.load offset=12
          get_local $0
          i32.load offset=16
          i32.eq
          if $_6
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_7
              block $_8
                get_local $1
                i32.const 0
                i32.store
                i32.const 0
                set_local $0
              end ;; $_8
            end ;; $_7
          end ;; $_6
        else
          i32.const 0
          set_local $0
        end ;; $_5
        get_local $0
        i32.eqz
        set_local $6
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $7
            i32.eqz
            br_if $__rjti$0
            get_local $7
            i32.load offset=12
            get_local $7
            i32.load offset=16
            i32.ne
            if $_9
              get_local $6
              if $_10
                br $__rjto$0
              else
                br $label$break$L8
              end ;; $_10
            end ;; $_9
            get_local $7
            get_local $7
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_11
              block $_12
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_12
            else
              get_local $6
              i32.eqz
              br_if $label$break$L8
            end ;; $_11
            br $__rjto$0
          end ;; $__rjti$0
          get_local $6
          if $_13
            block $_14
              i32.const 0
              set_local $7
              br $label$break$L8
            end ;; $_14
          else
            i32.const 0
            set_local $7
          end ;; $_13
        end ;; $__rjto$0
        get_local $16
        i32.load
        get_local $3
        get_local $10
        i32.load8_s
        tee_local $6
        i32.const 0
        i32.lt_s
        if $_15 (result i32)
          get_local $21
          i32.load
        else
          get_local $6
          i32.const 255
          i32.and
        end ;; $_15
        tee_local $6
        i32.add
        i32.eq
        if $_16
          block $_17
            get_local $8
            get_local $6
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $8
            get_local $10
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_18 (result i32)
              get_local $17
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_18
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $16
            get_local $10
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_19 (result i32)
              get_local $8
              i32.load
            else
              get_local $8
            end ;; $_19
            tee_local $3
            get_local $6
            i32.add
            i32.store
          end ;; $_17
        end ;; $_16
        get_local $0
        i32.const 12
        i32.add
        tee_local $6
        i32.load
        tee_local $19
        get_local $0
        i32.const 16
        i32.add
        tee_local $24
        i32.load
        i32.eq
        if $_20 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $19
          i32.load8_u
        end ;; $_20
        tee_local $19
        i32.const 255
        i32.and
        get_local $13
        get_local $18
        get_local $3
        get_local $16
        get_local $22
        get_local $23
        get_local $11
        get_local $14
        get_local $15
        get_local $12
        get_local $20
        call $__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_
        br_if $label$break$L8
        get_local $6
        i32.load
        tee_local $7
        get_local $24
        i32.load
        i32.eq
        if $_21
          block $_22
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L8
          end ;; $_22
        else
          block $_23
            get_local $6
            get_local $7
            i32.const 1
            i32.add
            i32.store
            br $label$continue$L8
          end ;; $_23
        end ;; $_21
      end ;; $label$break$L8
    end ;; $label$continue$L8
    get_local $11
    i32.load8_s offset=11
    set_local $6
    get_local $15
    i32.load
    set_local $10
    get_local $13
    i32.load8_s
    if $_24 (result i32)
      get_local $6
      i32.const 0
      i32.lt_s
      if $_25 (result i32)
        get_local $11
        i32.load offset=4
      else
        get_local $6
        i32.const 255
        i32.and
      end ;; $_25
      i32.eqz
    else
      i32.const 1
    end ;; $_24
    i32.eqz
    if $_26
      get_local $10
      get_local $14
      i32.sub
      i32.const 160
      i32.lt_s
      if $_27
        block $_28
          get_local $12
          i32.load
          set_local $13
          get_local $15
          get_local $10
          i32.const 4
          i32.add
          tee_local $12
          i32.store
          get_local $10
          get_local $13
          i32.store
          get_local $12
          set_local $10
        end ;; $_28
      end ;; $_27
    end ;; $_26
    get_local $5
    get_local $3
    get_local $16
    i32.load
    get_local $4
    call $__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj
    f32.demote/f64
    f32.store
    get_local $11
    get_local $14
    get_local $10
    get_local $4
    call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
    get_local $0
    if $_29
      get_local $0
      i32.load offset=12
      get_local $0
      i32.load offset=16
      i32.eq
      if $_30
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_31
          block $_32
            get_local $1
            i32.const 0
            i32.store
            i32.const 0
            set_local $0
          end ;; $_32
        end ;; $_31
      end ;; $_30
    else
      i32.const 0
      set_local $0
    end ;; $_29
    get_local $0
    i32.eqz
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $7
          i32.eqz
          br_if $__rjti$1
          get_local $7
          i32.load offset=12
          get_local $7
          i32.load offset=16
          i32.eq
          if $if
            get_local $7
            get_local $7
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $if_1
              block $block
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$1
              end ;; $block
            end ;; $if_1
          end ;; $if
          get_local $0
          i32.eqz
          br_if $__rjti$2
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $8
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $9
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    get_global $STACKTOP
    set_local $9
    get_global $STACKTOP
    i32.const 240
    i32.add
    set_global $STACKTOP
    get_local $9
    i32.const 184
    i32.add
    tee_local $11
    get_local $3
    get_local $9
    i32.const 200
    i32.add
    tee_local $20
    get_local $9
    i32.const 199
    i32.add
    tee_local $7
    get_local $9
    i32.const 198
    i32.add
    tee_local $6
    call $__ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_
    get_local $9
    i32.const 172
    i32.add
    tee_local $8
    i32.const 0
    i32.store
    get_local $8
    i32.const 0
    i32.store offset=4
    get_local $8
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $8
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $8
    i32.const 8
    i32.add
    set_local $17
    get_local $9
    i32.const 8
    i32.add
    set_local $14
    get_local $9
    i32.const 4
    i32.add
    set_local $15
    get_local $9
    set_local $12
    get_local $9
    i32.const 197
    i32.add
    set_local $13
    get_local $9
    i32.const 196
    i32.add
    set_local $18
    get_local $8
    get_local $8
    i32.const 11
    i32.add
    tee_local $10
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_3 (result i32)
      get_local $17
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_3
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $9
    i32.const 168
    i32.add
    tee_local $16
    get_local $10
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_4 (result i32)
      get_local $8
      i32.load
    else
      get_local $8
    end ;; $_4
    tee_local $3
    i32.store
    get_local $15
    get_local $14
    i32.store
    get_local $12
    i32.const 0
    i32.store
    get_local $13
    i32.const 1
    i32.store8
    get_local $18
    i32.const 69
    i32.store8
    get_local $8
    i32.const 4
    i32.add
    set_local $21
    get_local $7
    i32.load8_s
    set_local $22
    get_local $6
    i32.load8_s
    set_local $23
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L8
      block $label$break$L8
        get_local $0
        if $_5
          get_local $0
          i32.load offset=12
          get_local $0
          i32.load offset=16
          i32.eq
          if $_6
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_7
              block $_8
                get_local $1
                i32.const 0
                i32.store
                i32.const 0
                set_local $0
              end ;; $_8
            end ;; $_7
          end ;; $_6
        else
          i32.const 0
          set_local $0
        end ;; $_5
        get_local $0
        i32.eqz
        set_local $6
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $7
            i32.eqz
            br_if $__rjti$0
            get_local $7
            i32.load offset=12
            get_local $7
            i32.load offset=16
            i32.ne
            if $_9
              get_local $6
              if $_10
                br $__rjto$0
              else
                br $label$break$L8
              end ;; $_10
            end ;; $_9
            get_local $7
            get_local $7
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_11
              block $_12
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_12
            else
              get_local $6
              i32.eqz
              br_if $label$break$L8
            end ;; $_11
            br $__rjto$0
          end ;; $__rjti$0
          get_local $6
          if $_13
            block $_14
              i32.const 0
              set_local $7
              br $label$break$L8
            end ;; $_14
          else
            i32.const 0
            set_local $7
          end ;; $_13
        end ;; $__rjto$0
        get_local $16
        i32.load
        get_local $3
        get_local $10
        i32.load8_s
        tee_local $6
        i32.const 0
        i32.lt_s
        if $_15 (result i32)
          get_local $21
          i32.load
        else
          get_local $6
          i32.const 255
          i32.and
        end ;; $_15
        tee_local $6
        i32.add
        i32.eq
        if $_16
          block $_17
            get_local $8
            get_local $6
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $8
            get_local $10
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_18 (result i32)
              get_local $17
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_18
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $16
            get_local $10
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_19 (result i32)
              get_local $8
              i32.load
            else
              get_local $8
            end ;; $_19
            tee_local $3
            get_local $6
            i32.add
            i32.store
          end ;; $_17
        end ;; $_16
        get_local $0
        i32.const 12
        i32.add
        tee_local $6
        i32.load
        tee_local $19
        get_local $0
        i32.const 16
        i32.add
        tee_local $24
        i32.load
        i32.eq
        if $_20 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $19
          i32.load8_u
        end ;; $_20
        tee_local $19
        i32.const 255
        i32.and
        get_local $13
        get_local $18
        get_local $3
        get_local $16
        get_local $22
        get_local $23
        get_local $11
        get_local $14
        get_local $15
        get_local $12
        get_local $20
        call $__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_
        br_if $label$break$L8
        get_local $6
        i32.load
        tee_local $7
        get_local $24
        i32.load
        i32.eq
        if $_21
          block $_22
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L8
          end ;; $_22
        else
          block $_23
            get_local $6
            get_local $7
            i32.const 1
            i32.add
            i32.store
            br $label$continue$L8
          end ;; $_23
        end ;; $_21
      end ;; $label$break$L8
    end ;; $label$continue$L8
    get_local $11
    i32.load8_s offset=11
    set_local $6
    get_local $15
    i32.load
    set_local $10
    get_local $13
    i32.load8_s
    if $_24 (result i32)
      get_local $6
      i32.const 0
      i32.lt_s
      if $_25 (result i32)
        get_local $11
        i32.load offset=4
      else
        get_local $6
        i32.const 255
        i32.and
      end ;; $_25
      i32.eqz
    else
      i32.const 1
    end ;; $_24
    i32.eqz
    if $_26
      get_local $10
      get_local $14
      i32.sub
      i32.const 160
      i32.lt_s
      if $_27
        block $_28
          get_local $12
          i32.load
          set_local $13
          get_local $15
          get_local $10
          i32.const 4
          i32.add
          tee_local $12
          i32.store
          get_local $10
          get_local $13
          i32.store
          get_local $12
          set_local $10
        end ;; $_28
      end ;; $_27
    end ;; $_26
    get_local $5
    get_local $3
    get_local $16
    i32.load
    get_local $4
    call $__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj
    f64.store
    get_local $11
    get_local $14
    get_local $10
    get_local $4
    call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
    get_local $0
    if $_29
      get_local $0
      i32.load offset=12
      get_local $0
      i32.load offset=16
      i32.eq
      if $_30
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_31
          block $_32
            get_local $1
            i32.const 0
            i32.store
            i32.const 0
            set_local $0
          end ;; $_32
        end ;; $_31
      end ;; $_30
    else
      i32.const 0
      set_local $0
    end ;; $_29
    get_local $0
    i32.eqz
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $7
          i32.eqz
          br_if $__rjti$1
          get_local $7
          i32.load offset=12
          get_local $7
          i32.load offset=16
          i32.eq
          if $if
            get_local $7
            get_local $7
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $if_1
              block $block
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$1
              end ;; $block
            end ;; $if_1
          end ;; $if
          get_local $0
          i32.eqz
          br_if $__rjti$2
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $8
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $9
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 224
    i32.add
    set_global $STACKTOP
    get_local $10
    i32.const 198
    i32.add
    set_local $16
    get_local $10
    i32.const 196
    i32.add
    set_local $6
    get_local $10
    i32.const 184
    i32.add
    set_local $11
    get_local $10
    i32.const 172
    i32.add
    set_local $7
    block $switch (result i32)
      block $switch-default
        block $switch-case1
          block $switch-case0
            block $switch-case
              get_local $3
              i32.load offset=4
              i32.const 74
              i32.and
              br_table
                $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-case
                $switch-default ;; default
            end ;; $switch-case
            i32.const 8
            br $switch
          end ;; $switch-case0
          i32.const 16
          br $switch
        end ;; $switch-case1
        i32.const 0
        br $switch
      end ;; $switch-default
      i32.const 10
    end ;; $switch
    set_local $17
    get_local $11
    get_local $3
    get_local $16
    get_local $6
    call $__ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc
    get_local $7
    i32.const 0
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $7
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $7
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $7
    i32.const 8
    i32.add
    set_local $18
    get_local $10
    i32.const 8
    i32.add
    set_local $13
    get_local $10
    i32.const 4
    i32.add
    set_local $14
    get_local $10
    set_local $12
    get_local $7
    get_local $7
    i32.const 11
    i32.add
    tee_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_3 (result i32)
      get_local $18
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_3
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $10
    i32.const 168
    i32.add
    tee_local $15
    get_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_4 (result i32)
      get_local $7
      i32.load
    else
      get_local $7
    end ;; $_4
    tee_local $3
    i32.store
    get_local $14
    get_local $13
    i32.store
    get_local $12
    i32.const 0
    i32.store
    get_local $7
    i32.const 4
    i32.add
    set_local $20
    get_local $6
    i32.load8_s
    set_local $21
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L13
      block $label$break$L13
        get_local $0
        if $_5
          get_local $0
          i32.load offset=12
          get_local $0
          i32.load offset=16
          i32.eq
          if $_6
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_7
              block $_8
                get_local $1
                i32.const 0
                i32.store
                i32.const 0
                set_local $0
              end ;; $_8
            end ;; $_7
          end ;; $_6
        else
          i32.const 0
          set_local $0
        end ;; $_5
        get_local $0
        i32.eqz
        set_local $8
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $6
            i32.eqz
            br_if $__rjti$0
            get_local $6
            i32.load offset=12
            get_local $6
            i32.load offset=16
            i32.ne
            if $_9
              get_local $8
              if $_10
                br $__rjto$0
              else
                br $label$break$L13
              end ;; $_10
            end ;; $_9
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_11
              block $_12
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_12
            else
              get_local $8
              i32.eqz
              br_if $label$break$L13
            end ;; $_11
            br $__rjto$0
          end ;; $__rjti$0
          get_local $8
          if $_13
            block $_14
              i32.const 0
              set_local $6
              br $label$break$L13
            end ;; $_14
          else
            i32.const 0
            set_local $6
          end ;; $_13
        end ;; $__rjto$0
        get_local $15
        i32.load
        get_local $3
        get_local $9
        i32.load8_s
        tee_local $8
        i32.const 0
        i32.lt_s
        if $_15 (result i32)
          get_local $20
          i32.load
        else
          get_local $8
          i32.const 255
          i32.and
        end ;; $_15
        tee_local $8
        i32.add
        i32.eq
        if $_16
          block $_17
            get_local $7
            get_local $8
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $7
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_18 (result i32)
              get_local $18
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_18
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $15
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_19 (result i32)
              get_local $7
              i32.load
            else
              get_local $7
            end ;; $_19
            tee_local $3
            get_local $8
            i32.add
            i32.store
          end ;; $_17
        end ;; $_16
        get_local $0
        i32.const 12
        i32.add
        tee_local $8
        i32.load
        tee_local $19
        get_local $0
        i32.const 16
        i32.add
        tee_local $22
        i32.load
        i32.eq
        if $_20 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $19
          i32.load8_u
        end ;; $_20
        tee_local $19
        i32.const 255
        i32.and
        get_local $17
        get_local $3
        get_local $15
        get_local $12
        get_local $21
        get_local $11
        get_local $13
        get_local $14
        get_local $16
        call $__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_
        br_if $label$break$L13
        get_local $8
        i32.load
        tee_local $6
        get_local $22
        i32.load
        i32.eq
        if $_21
          block $_22
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L13
          end ;; $_22
        else
          block $_23
            get_local $8
            get_local $6
            i32.const 1
            i32.add
            i32.store
            br $label$continue$L13
          end ;; $_23
        end ;; $_21
      end ;; $label$break$L13
    end ;; $label$continue$L13
    get_local $14
    i32.load
    set_local $9
    get_local $11
    i32.load8_s offset=11
    tee_local $8
    i32.const 0
    i32.lt_s
    if $_24 (result i32)
      get_local $11
      i32.load offset=4
    else
      get_local $8
      i32.const 255
      i32.and
    end ;; $_24
    if $_25
      get_local $9
      get_local $13
      i32.sub
      i32.const 160
      i32.lt_s
      if $_26
        block $_27
          get_local $12
          i32.load
          set_local $8
          get_local $14
          get_local $9
          i32.const 4
          i32.add
          tee_local $12
          i32.store
          get_local $9
          get_local $8
          i32.store
          get_local $12
          set_local $9
        end ;; $_27
      end ;; $_26
    end ;; $_25
    get_local $5
    get_local $3
    get_local $15
    i32.load
    get_local $4
    get_local $17
    call $__ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji
    i32.store
    get_local $5
    get_global $tempRet0
    i32.store offset=4
    get_local $11
    get_local $13
    get_local $9
    get_local $4
    call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
    get_local $0
    if $_28
      get_local $0
      i32.load offset=12
      get_local $0
      i32.load offset=16
      i32.eq
      if $_29
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_30
          block $_31
            get_local $1
            i32.const 0
            i32.store
            i32.const 0
            set_local $0
          end ;; $_31
        end ;; $_30
      end ;; $_29
    else
      i32.const 0
      set_local $0
    end ;; $_28
    get_local $0
    i32.eqz
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $6
          i32.eqz
          br_if $__rjti$1
          get_local $6
          i32.load offset=12
          get_local $6
          i32.load offset=16
          i32.eq
          if $if
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $if_1
              block $block
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$1
              end ;; $block
            end ;; $if_1
          end ;; $if
          get_local $0
          i32.eqz
          br_if $__rjti$2
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $7
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $10
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 224
    i32.add
    set_global $STACKTOP
    get_local $10
    i32.const 198
    i32.add
    set_local $16
    get_local $10
    i32.const 196
    i32.add
    set_local $6
    get_local $10
    i32.const 184
    i32.add
    set_local $11
    get_local $10
    i32.const 172
    i32.add
    set_local $7
    block $switch (result i32)
      block $switch-default
        block $switch-case1
          block $switch-case0
            block $switch-case
              get_local $3
              i32.load offset=4
              i32.const 74
              i32.and
              br_table
                $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-case
                $switch-default ;; default
            end ;; $switch-case
            i32.const 8
            br $switch
          end ;; $switch-case0
          i32.const 16
          br $switch
        end ;; $switch-case1
        i32.const 0
        br $switch
      end ;; $switch-default
      i32.const 10
    end ;; $switch
    set_local $17
    get_local $11
    get_local $3
    get_local $16
    get_local $6
    call $__ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc
    get_local $7
    i32.const 0
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $7
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $7
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $7
    i32.const 8
    i32.add
    set_local $18
    get_local $10
    i32.const 8
    i32.add
    set_local $13
    get_local $10
    i32.const 4
    i32.add
    set_local $14
    get_local $10
    set_local $12
    get_local $7
    get_local $7
    i32.const 11
    i32.add
    tee_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_3 (result i32)
      get_local $18
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_3
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $10
    i32.const 168
    i32.add
    tee_local $15
    get_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_4 (result i32)
      get_local $7
      i32.load
    else
      get_local $7
    end ;; $_4
    tee_local $3
    i32.store
    get_local $14
    get_local $13
    i32.store
    get_local $12
    i32.const 0
    i32.store
    get_local $7
    i32.const 4
    i32.add
    set_local $20
    get_local $6
    i32.load8_s
    set_local $21
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L13
      block $label$break$L13
        get_local $0
        if $_5
          get_local $0
          i32.load offset=12
          get_local $0
          i32.load offset=16
          i32.eq
          if $_6
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_7
              block $_8
                get_local $1
                i32.const 0
                i32.store
                i32.const 0
                set_local $0
              end ;; $_8
            end ;; $_7
          end ;; $_6
        else
          i32.const 0
          set_local $0
        end ;; $_5
        get_local $0
        i32.eqz
        set_local $8
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $6
            i32.eqz
            br_if $__rjti$0
            get_local $6
            i32.load offset=12
            get_local $6
            i32.load offset=16
            i32.ne
            if $_9
              get_local $8
              if $_10
                br $__rjto$0
              else
                br $label$break$L13
              end ;; $_10
            end ;; $_9
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_11
              block $_12
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_12
            else
              get_local $8
              i32.eqz
              br_if $label$break$L13
            end ;; $_11
            br $__rjto$0
          end ;; $__rjti$0
          get_local $8
          if $_13
            block $_14
              i32.const 0
              set_local $6
              br $label$break$L13
            end ;; $_14
          else
            i32.const 0
            set_local $6
          end ;; $_13
        end ;; $__rjto$0
        get_local $15
        i32.load
        get_local $3
        get_local $9
        i32.load8_s
        tee_local $8
        i32.const 0
        i32.lt_s
        if $_15 (result i32)
          get_local $20
          i32.load
        else
          get_local $8
          i32.const 255
          i32.and
        end ;; $_15
        tee_local $8
        i32.add
        i32.eq
        if $_16
          block $_17
            get_local $7
            get_local $8
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $7
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_18 (result i32)
              get_local $18
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_18
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $15
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_19 (result i32)
              get_local $7
              i32.load
            else
              get_local $7
            end ;; $_19
            tee_local $3
            get_local $8
            i32.add
            i32.store
          end ;; $_17
        end ;; $_16
        get_local $0
        i32.const 12
        i32.add
        tee_local $8
        i32.load
        tee_local $19
        get_local $0
        i32.const 16
        i32.add
        tee_local $22
        i32.load
        i32.eq
        if $_20 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $19
          i32.load8_u
        end ;; $_20
        tee_local $19
        i32.const 255
        i32.and
        get_local $17
        get_local $3
        get_local $15
        get_local $12
        get_local $21
        get_local $11
        get_local $13
        get_local $14
        get_local $16
        call $__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_
        br_if $label$break$L13
        get_local $8
        i32.load
        tee_local $6
        get_local $22
        i32.load
        i32.eq
        if $_21
          block $_22
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L13
          end ;; $_22
        else
          block $_23
            get_local $8
            get_local $6
            i32.const 1
            i32.add
            i32.store
            br $label$continue$L13
          end ;; $_23
        end ;; $_21
      end ;; $label$break$L13
    end ;; $label$continue$L13
    get_local $14
    i32.load
    set_local $9
    get_local $11
    i32.load8_s offset=11
    tee_local $8
    i32.const 0
    i32.lt_s
    if $_24 (result i32)
      get_local $11
      i32.load offset=4
    else
      get_local $8
      i32.const 255
      i32.and
    end ;; $_24
    if $_25
      get_local $9
      get_local $13
      i32.sub
      i32.const 160
      i32.lt_s
      if $_26
        block $_27
          get_local $12
          i32.load
          set_local $8
          get_local $14
          get_local $9
          i32.const 4
          i32.add
          tee_local $12
          i32.store
          get_local $9
          get_local $8
          i32.store
          get_local $12
          set_local $9
        end ;; $_27
      end ;; $_26
    end ;; $_25
    get_local $5
    get_local $3
    get_local $15
    i32.load
    get_local $4
    get_local $17
    call $__ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji
    i32.store
    get_local $5
    get_global $tempRet0
    i32.store offset=4
    get_local $11
    get_local $13
    get_local $9
    get_local $4
    call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
    get_local $0
    if $_28
      get_local $0
      i32.load offset=12
      get_local $0
      i32.load offset=16
      i32.eq
      if $_29
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_30
          block $_31
            get_local $1
            i32.const 0
            i32.store
            i32.const 0
            set_local $0
          end ;; $_31
        end ;; $_30
      end ;; $_29
    else
      i32.const 0
      set_local $0
    end ;; $_28
    get_local $0
    i32.eqz
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $6
          i32.eqz
          br_if $__rjti$1
          get_local $6
          i32.load offset=12
          get_local $6
          i32.load offset=16
          i32.eq
          if $if
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $if_1
              block $block
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$1
              end ;; $block
            end ;; $if_1
          end ;; $if
          get_local $0
          i32.eqz
          br_if $__rjti$2
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $7
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $10
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE (type $_5)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    get_global $STACKTOP
    set_local $16
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $10
    get_local $16
    tee_local $12
    get_local $6
    i32.const 19248
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $13
    get_local $13
    i32.load
    i32.load offset=20
    i32.const 63
    i32.and
    i32.const 176
    i32.add
    call_indirect (type $FUNCSIG$vii)
    get_local $5
    get_local $3
    i32.store
    block $label$break$L12
      block $__rjti$0
        get_local $2
        tee_local $18
        block $_1 (result i32)
          block $switch
            block $switch-default
              get_local $0
              i32.load8_s
              tee_local $6
              i32.const 43
              i32.sub
              br_table
                $switch-default $switch $switch-default
                $switch ;; default
            end ;; $switch-default
            get_local $10
            get_local $6
            get_local $10
            i32.load
            i32.load offset=44
            i32.const 15
            i32.and
            i32.const 413
            i32.add
            call_indirect (type $FUNCSIG$iii)
            set_local $6
            get_local $5
            get_local $5
            i32.load
            tee_local $7
            i32.const 4
            i32.add
            i32.store
            get_local $7
            get_local $6
            i32.store
            get_local $0
            i32.const 1
            i32.add
            br $_1
          end ;; $switch
          get_local $0
        end ;; $_1
        tee_local $6
        i32.sub
        i32.const 1
        i32.gt_s
        if $switch-case
          get_local $6
          i32.load8_s
          i32.const 48
          i32.eq
          if $_2
            block $_3
              block $switch1
                block $switch-default4
                  block $switch-case2
                    get_local $6
                    i32.const 1
                    i32.add
                    tee_local $7
                    i32.load8_s
                    i32.const 88
                    i32.sub
                    br_table
                      $switch-case2 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4
                      $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4
                      $switch-case2
                      $switch-default4 ;; default
                  end ;; $switch-case2
                  br $switch1
                end ;; $switch-default4
                get_local $6
                set_local $7
                br $__rjti$0
              end ;; $switch1
              get_local $10
              i32.const 48
              get_local $10
              i32.load
              i32.load offset=44
              i32.const 15
              i32.and
              i32.const 413
              i32.add
              call_indirect (type $FUNCSIG$iii)
              set_local $8
              get_local $5
              get_local $5
              i32.load
              tee_local $9
              i32.const 4
              i32.add
              i32.store
              get_local $9
              get_local $8
              i32.store
              get_local $10
              get_local $7
              i32.load8_s
              get_local $10
              i32.load
              i32.load offset=44
              i32.const 15
              i32.and
              i32.const 413
              i32.add
              call_indirect (type $FUNCSIG$iii)
              set_local $7
              get_local $5
              get_local $5
              i32.load
              tee_local $8
              i32.const 4
              i32.add
              i32.store
              get_local $8
              get_local $7
              i32.store
              get_local $6
              i32.const 2
              i32.add
              tee_local $6
              set_local $7
              loop $while-in
                get_local $7
                get_local $2
                i32.ge_u
                br_if $label$break$L12
                get_local $7
                i32.load8_s
                call $__ZNSt3__26__clocEv
                call $_isxdigit_l
                i32.eqz
                br_if $label$break$L12
                get_local $7
                i32.const 1
                i32.add
                set_local $7
                br $while-in
              end ;; $while-in
            end ;; $_3
          else
            block $_4
              get_local $6
              set_local $7
              br $__rjti$0
            end ;; $_4
          end ;; $_2
        else
          block $_5
            get_local $6
            set_local $7
            br $__rjti$0
          end ;; $_5
        end ;; $switch-case
        br $label$break$L12
      end ;; $__rjti$0
      loop $while-in7
        get_local $7
        get_local $2
        i32.ge_u
        br_if $label$break$L12
        get_local $7
        i32.load8_s
        call $__ZNSt3__26__clocEv
        call $_isdigit_l
        i32.eqz
        br_if $label$break$L12
        get_local $7
        i32.const 1
        i32.add
        set_local $7
        br $while-in7
      end ;; $while-in7
    end ;; $label$break$L12
    get_local $12
    i32.const 4
    i32.add
    set_local $17
    block $label$break$L18
      get_local $12
      i32.const 11
      i32.add
      tee_local $19
      i32.load8_s
      tee_local $8
      i32.const 0
      i32.lt_s
      if $_6 (result i32)
        get_local $17
        i32.load
      else
        get_local $8
        i32.const 255
        i32.and
      end ;; $_6
      if $_7
        block $_8
          block $label$break$L21
            get_local $6
            get_local $7
            i32.ne
            if $_9
              block $_10
                get_local $7
                set_local $8
                get_local $6
                set_local $9
                loop $while-in11
                  get_local $9
                  get_local $8
                  i32.const -1
                  i32.add
                  tee_local $8
                  i32.ge_u
                  br_if $label$break$L21
                  get_local $9
                  i32.load8_s
                  set_local $11
                  get_local $9
                  get_local $8
                  i32.load8_s
                  i32.store8
                  get_local $8
                  get_local $11
                  i32.store8
                  get_local $9
                  i32.const 1
                  i32.add
                  set_local $9
                  br $while-in11
                end ;; $while-in11
              end ;; $_10
            end ;; $_9
          end ;; $label$break$L21
          get_local $13
          get_local $13
          i32.load
          i32.load offset=16
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
          set_local $20
          i32.const 0
          set_local $11
          i32.const 0
          set_local $8
          get_local $6
          set_local $9
          loop $while-in13
            get_local $9
            get_local $7
            i32.lt_u
            if $_11
              block $_12
                get_local $19
                i32.load8_s
                tee_local $14
                i32.const 0
                i32.lt_s
                tee_local $15
                if $_13 (result i32)
                  get_local $12
                  i32.load
                else
                  get_local $12
                end ;; $_13
                get_local $8
                i32.add
                i32.load8_s
                tee_local $21
                i32.const 0
                i32.gt_s
                get_local $11
                get_local $21
                i32.eq
                i32.and
                if $_14
                  block $_15
                    get_local $5
                    get_local $5
                    i32.load
                    tee_local $11
                    i32.const 4
                    i32.add
                    i32.store
                    get_local $11
                    get_local $20
                    i32.store
                    i32.const 0
                    set_local $11
                    get_local $8
                    get_local $15
                    if $_16 (result i32)
                      get_local $17
                      i32.load
                    else
                      get_local $14
                      i32.const 255
                      i32.and
                    end ;; $_16
                    i32.const -1
                    i32.add
                    i32.lt_u
                    get_local $8
                    i32.add
                    set_local $8
                  end ;; $_15
                end ;; $_14
                get_local $10
                get_local $9
                i32.load8_s
                get_local $10
                i32.load
                i32.load offset=44
                i32.const 15
                i32.and
                i32.const 413
                i32.add
                call_indirect (type $FUNCSIG$iii)
                set_local $14
                get_local $5
                get_local $5
                i32.load
                tee_local $15
                i32.const 4
                i32.add
                i32.store
                get_local $15
                get_local $14
                i32.store
                get_local $11
                i32.const 1
                i32.add
                set_local $11
                get_local $9
                i32.const 1
                i32.add
                set_local $9
                br $while-in13
              end ;; $_12
            end ;; $_11
          end ;; $while-in13
          get_local $3
          get_local $6
          get_local $0
          i32.sub
          i32.const 2
          i32.shl
          i32.add
          tee_local $9
          get_local $5
          i32.load
          tee_local $11
          i32.eq
          if $_17
            block $_18
              get_local $10
              set_local $8
              get_local $9
              set_local $6
            end ;; $_18
          else
            block $_19
              get_local $11
              set_local $6
              loop $while-in15
                get_local $9
                get_local $6
                i32.const -4
                i32.add
                tee_local $6
                i32.ge_u
                if $_20
                  block $_21
                    get_local $10
                    set_local $8
                    get_local $11
                    set_local $6
                    br $label$break$L18
                  end ;; $_21
                else
                  block $_22
                    get_local $9
                    i32.load
                    set_local $8
                    get_local $9
                    get_local $6
                    i32.load
                    i32.store
                    get_local $6
                    get_local $8
                    i32.store
                    get_local $9
                    i32.const 4
                    i32.add
                    set_local $9
                    br $while-in15
                  end ;; $_22
                end ;; $_20
              end ;; $while-in15
            end ;; $_19
          end ;; $_17
        end ;; $_8
      else
        block $_23
          get_local $10
          get_local $6
          get_local $7
          get_local $5
          i32.load
          get_local $10
          i32.load
          i32.load offset=48
          i32.const 7
          i32.and
          i32.const 397
          i32.add
          call_indirect (type $FUNCSIG$iiiii)
          drop
          get_local $5
          get_local $5
          i32.load
          get_local $7
          get_local $6
          i32.sub
          i32.const 2
          i32.shl
          i32.add
          tee_local $6
          i32.store
          get_local $10
          set_local $8
        end ;; $_23
      end ;; $_7
    end ;; $label$break$L18
    block $__rjto$1
      block $__rjti$1
        loop $while-in17
          get_local $7
          get_local $2
          i32.lt_u
          if $if
            block $block
              get_local $7
              i32.load8_s
              tee_local $6
              i32.const 46
              i32.eq
              br_if $__rjti$1
              get_local $10
              get_local $6
              get_local $8
              i32.load
              i32.load offset=44
              i32.const 15
              i32.and
              i32.const 413
              i32.add
              call_indirect (type $FUNCSIG$iii)
              set_local $9
              get_local $5
              get_local $5
              i32.load
              tee_local $11
              i32.const 4
              i32.add
              tee_local $6
              i32.store
              get_local $11
              get_local $9
              i32.store
              get_local $7
              i32.const 1
              i32.add
              set_local $7
              br $while-in17
            end ;; $block
          end ;; $if
        end ;; $while-in17
        br $__rjto$1
      end ;; $__rjti$1
      get_local $13
      get_local $13
      i32.load
      i32.load offset=12
      i32.const 63
      i32.and
      i32.const 312
      i32.add
      call_indirect (type $FUNCSIG$ii)
      set_local $8
      get_local $5
      get_local $5
      i32.load
      tee_local $9
      i32.const 4
      i32.add
      tee_local $6
      i32.store
      get_local $9
      get_local $8
      i32.store
      get_local $7
      i32.const 1
      i32.add
      set_local $7
    end ;; $__rjto$1
    get_local $10
    get_local $7
    get_local $2
    get_local $6
    get_local $10
    i32.load
    i32.load offset=48
    i32.const 7
    i32.and
    i32.const 397
    i32.add
    call_indirect (type $FUNCSIG$iiiii)
    drop
    get_local $5
    get_local $5
    i32.load
    get_local $18
    get_local $7
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    tee_local $5
    i32.store
    get_local $4
    get_local $1
    get_local $2
    i32.eq
    if $if_1 (result i32)
      get_local $5
    else
      get_local $3
      get_local $1
      get_local $0
      i32.sub
      i32.const 2
      i32.shl
      i32.add
    end ;; $if_1
    i32.store
    get_local $12
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $16
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 224
    i32.add
    set_global $STACKTOP
    get_local $10
    i32.const 198
    i32.add
    set_local $16
    get_local $10
    i32.const 196
    i32.add
    set_local $6
    get_local $10
    i32.const 184
    i32.add
    set_local $11
    get_local $10
    i32.const 172
    i32.add
    set_local $7
    block $switch (result i32)
      block $switch-default
        block $switch-case1
          block $switch-case0
            block $switch-case
              get_local $3
              i32.load offset=4
              i32.const 74
              i32.and
              br_table
                $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-case
                $switch-default ;; default
            end ;; $switch-case
            i32.const 8
            br $switch
          end ;; $switch-case0
          i32.const 16
          br $switch
        end ;; $switch-case1
        i32.const 0
        br $switch
      end ;; $switch-default
      i32.const 10
    end ;; $switch
    set_local $17
    get_local $11
    get_local $3
    get_local $16
    get_local $6
    call $__ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc
    get_local $7
    i32.const 0
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $7
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $7
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $7
    i32.const 8
    i32.add
    set_local $18
    get_local $10
    i32.const 8
    i32.add
    set_local $13
    get_local $10
    i32.const 4
    i32.add
    set_local $14
    get_local $10
    set_local $12
    get_local $7
    get_local $7
    i32.const 11
    i32.add
    tee_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_3 (result i32)
      get_local $18
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_3
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $10
    i32.const 168
    i32.add
    tee_local $15
    get_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_4 (result i32)
      get_local $7
      i32.load
    else
      get_local $7
    end ;; $_4
    tee_local $3
    i32.store
    get_local $14
    get_local $13
    i32.store
    get_local $12
    i32.const 0
    i32.store
    get_local $7
    i32.const 4
    i32.add
    set_local $20
    get_local $6
    i32.load8_s
    set_local $21
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L13
      block $label$break$L13
        get_local $0
        if $_5
          get_local $0
          i32.load offset=12
          get_local $0
          i32.load offset=16
          i32.eq
          if $_6
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_7
              block $_8
                get_local $1
                i32.const 0
                i32.store
                i32.const 0
                set_local $0
              end ;; $_8
            end ;; $_7
          end ;; $_6
        else
          i32.const 0
          set_local $0
        end ;; $_5
        get_local $0
        i32.eqz
        set_local $8
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $6
            i32.eqz
            br_if $__rjti$0
            get_local $6
            i32.load offset=12
            get_local $6
            i32.load offset=16
            i32.ne
            if $_9
              get_local $8
              if $_10
                br $__rjto$0
              else
                br $label$break$L13
              end ;; $_10
            end ;; $_9
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_11
              block $_12
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_12
            else
              get_local $8
              i32.eqz
              br_if $label$break$L13
            end ;; $_11
            br $__rjto$0
          end ;; $__rjti$0
          get_local $8
          if $_13
            block $_14
              i32.const 0
              set_local $6
              br $label$break$L13
            end ;; $_14
          else
            i32.const 0
            set_local $6
          end ;; $_13
        end ;; $__rjto$0
        get_local $15
        i32.load
        get_local $3
        get_local $9
        i32.load8_s
        tee_local $8
        i32.const 0
        i32.lt_s
        if $_15 (result i32)
          get_local $20
          i32.load
        else
          get_local $8
          i32.const 255
          i32.and
        end ;; $_15
        tee_local $8
        i32.add
        i32.eq
        if $_16
          block $_17
            get_local $7
            get_local $8
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $7
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_18 (result i32)
              get_local $18
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_18
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $15
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_19 (result i32)
              get_local $7
              i32.load
            else
              get_local $7
            end ;; $_19
            tee_local $3
            get_local $8
            i32.add
            i32.store
          end ;; $_17
        end ;; $_16
        get_local $0
        i32.const 12
        i32.add
        tee_local $8
        i32.load
        tee_local $19
        get_local $0
        i32.const 16
        i32.add
        tee_local $22
        i32.load
        i32.eq
        if $_20 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $19
          i32.load8_u
        end ;; $_20
        tee_local $19
        i32.const 255
        i32.and
        get_local $17
        get_local $3
        get_local $15
        get_local $12
        get_local $21
        get_local $11
        get_local $13
        get_local $14
        get_local $16
        call $__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_
        br_if $label$break$L13
        get_local $8
        i32.load
        tee_local $6
        get_local $22
        i32.load
        i32.eq
        if $_21
          block $_22
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L13
          end ;; $_22
        else
          block $_23
            get_local $8
            get_local $6
            i32.const 1
            i32.add
            i32.store
            br $label$continue$L13
          end ;; $_23
        end ;; $_21
      end ;; $label$break$L13
    end ;; $label$continue$L13
    get_local $14
    i32.load
    set_local $9
    get_local $11
    i32.load8_s offset=11
    tee_local $8
    i32.const 0
    i32.lt_s
    if $_24 (result i32)
      get_local $11
      i32.load offset=4
    else
      get_local $8
      i32.const 255
      i32.and
    end ;; $_24
    if $_25
      get_local $9
      get_local $13
      i32.sub
      i32.const 160
      i32.lt_s
      if $_26
        block $_27
          get_local $12
          i32.load
          set_local $8
          get_local $14
          get_local $9
          i32.const 4
          i32.add
          tee_local $12
          i32.store
          get_local $9
          get_local $8
          i32.store
          get_local $12
          set_local $9
        end ;; $_27
      end ;; $_26
    end ;; $_25
    get_local $5
    get_local $3
    get_local $15
    i32.load
    get_local $4
    get_local $17
    call $__ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji
    i32.store16
    get_local $11
    get_local $13
    get_local $9
    get_local $4
    call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
    get_local $0
    if $_28
      get_local $0
      i32.load offset=12
      get_local $0
      i32.load offset=16
      i32.eq
      if $_29
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_30
          block $_31
            get_local $1
            i32.const 0
            i32.store
            i32.const 0
            set_local $0
          end ;; $_31
        end ;; $_30
      end ;; $_29
    else
      i32.const 0
      set_local $0
    end ;; $_28
    get_local $0
    i32.eqz
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $6
          i32.eqz
          br_if $__rjti$1
          get_local $6
          i32.load offset=12
          get_local $6
          i32.load offset=16
          i32.eq
          if $if
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $if_1
              block $block
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$1
              end ;; $block
            end ;; $if_1
          end ;; $if
          get_local $0
          i32.eqz
          br_if $__rjti$2
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $7
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $10
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 224
    i32.add
    set_global $STACKTOP
    get_local $10
    i32.const 198
    i32.add
    set_local $16
    get_local $10
    i32.const 196
    i32.add
    set_local $6
    get_local $10
    i32.const 184
    i32.add
    set_local $11
    get_local $10
    i32.const 172
    i32.add
    set_local $7
    block $switch (result i32)
      block $switch-default
        block $switch-case1
          block $switch-case0
            block $switch-case
              get_local $3
              i32.load offset=4
              i32.const 74
              i32.and
              br_table
                $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-case
                $switch-default ;; default
            end ;; $switch-case
            i32.const 8
            br $switch
          end ;; $switch-case0
          i32.const 16
          br $switch
        end ;; $switch-case1
        i32.const 0
        br $switch
      end ;; $switch-default
      i32.const 10
    end ;; $switch
    set_local $17
    get_local $11
    get_local $3
    get_local $16
    get_local $6
    call $__ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc
    get_local $7
    i32.const 0
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $7
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $7
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $7
    i32.const 8
    i32.add
    set_local $18
    get_local $10
    i32.const 8
    i32.add
    set_local $13
    get_local $10
    i32.const 4
    i32.add
    set_local $14
    get_local $10
    set_local $12
    get_local $7
    get_local $7
    i32.const 11
    i32.add
    tee_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_3 (result i32)
      get_local $18
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_3
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $10
    i32.const 168
    i32.add
    tee_local $15
    get_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_4 (result i32)
      get_local $7
      i32.load
    else
      get_local $7
    end ;; $_4
    tee_local $3
    i32.store
    get_local $14
    get_local $13
    i32.store
    get_local $12
    i32.const 0
    i32.store
    get_local $7
    i32.const 4
    i32.add
    set_local $20
    get_local $6
    i32.load8_s
    set_local $21
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L13
      block $label$break$L13
        get_local $0
        if $_5
          get_local $0
          i32.load offset=12
          get_local $0
          i32.load offset=16
          i32.eq
          if $_6
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_7
              block $_8
                get_local $1
                i32.const 0
                i32.store
                i32.const 0
                set_local $0
              end ;; $_8
            end ;; $_7
          end ;; $_6
        else
          i32.const 0
          set_local $0
        end ;; $_5
        get_local $0
        i32.eqz
        set_local $8
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $6
            i32.eqz
            br_if $__rjti$0
            get_local $6
            i32.load offset=12
            get_local $6
            i32.load offset=16
            i32.ne
            if $_9
              get_local $8
              if $_10
                br $__rjto$0
              else
                br $label$break$L13
              end ;; $_10
            end ;; $_9
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_11
              block $_12
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_12
            else
              get_local $8
              i32.eqz
              br_if $label$break$L13
            end ;; $_11
            br $__rjto$0
          end ;; $__rjti$0
          get_local $8
          if $_13
            block $_14
              i32.const 0
              set_local $6
              br $label$break$L13
            end ;; $_14
          else
            i32.const 0
            set_local $6
          end ;; $_13
        end ;; $__rjto$0
        get_local $15
        i32.load
        get_local $3
        get_local $9
        i32.load8_s
        tee_local $8
        i32.const 0
        i32.lt_s
        if $_15 (result i32)
          get_local $20
          i32.load
        else
          get_local $8
          i32.const 255
          i32.and
        end ;; $_15
        tee_local $8
        i32.add
        i32.eq
        if $_16
          block $_17
            get_local $7
            get_local $8
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $7
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_18 (result i32)
              get_local $18
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_18
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $15
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_19 (result i32)
              get_local $7
              i32.load
            else
              get_local $7
            end ;; $_19
            tee_local $3
            get_local $8
            i32.add
            i32.store
          end ;; $_17
        end ;; $_16
        get_local $0
        i32.const 12
        i32.add
        tee_local $8
        i32.load
        tee_local $19
        get_local $0
        i32.const 16
        i32.add
        tee_local $22
        i32.load
        i32.eq
        if $_20 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $19
          i32.load8_u
        end ;; $_20
        tee_local $19
        i32.const 255
        i32.and
        get_local $17
        get_local $3
        get_local $15
        get_local $12
        get_local $21
        get_local $11
        get_local $13
        get_local $14
        get_local $16
        call $__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_
        br_if $label$break$L13
        get_local $8
        i32.load
        tee_local $6
        get_local $22
        i32.load
        i32.eq
        if $_21
          block $_22
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L13
          end ;; $_22
        else
          block $_23
            get_local $8
            get_local $6
            i32.const 1
            i32.add
            i32.store
            br $label$continue$L13
          end ;; $_23
        end ;; $_21
      end ;; $label$break$L13
    end ;; $label$continue$L13
    get_local $14
    i32.load
    set_local $9
    get_local $11
    i32.load8_s offset=11
    tee_local $8
    i32.const 0
    i32.lt_s
    if $_24 (result i32)
      get_local $11
      i32.load offset=4
    else
      get_local $8
      i32.const 255
      i32.and
    end ;; $_24
    if $_25
      get_local $9
      get_local $13
      i32.sub
      i32.const 160
      i32.lt_s
      if $_26
        block $_27
          get_local $12
          i32.load
          set_local $8
          get_local $14
          get_local $9
          i32.const 4
          i32.add
          tee_local $12
          i32.store
          get_local $9
          get_local $8
          i32.store
          get_local $12
          set_local $9
        end ;; $_27
      end ;; $_26
    end ;; $_25
    get_local $5
    get_local $3
    get_local $15
    i32.load
    get_local $4
    get_local $17
    call $__ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji
    i32.store
    get_local $11
    get_local $13
    get_local $9
    get_local $4
    call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
    get_local $0
    if $_28
      get_local $0
      i32.load offset=12
      get_local $0
      i32.load offset=16
      i32.eq
      if $_29
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_30
          block $_31
            get_local $1
            i32.const 0
            i32.store
            i32.const 0
            set_local $0
          end ;; $_31
        end ;; $_30
      end ;; $_29
    else
      i32.const 0
      set_local $0
    end ;; $_28
    get_local $0
    i32.eqz
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $6
          i32.eqz
          br_if $__rjti$1
          get_local $6
          i32.load offset=12
          get_local $6
          i32.load offset=16
          i32.eq
          if $if
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $if_1
              block $block
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$1
              end ;; $block
            end ;; $if_1
          end ;; $if
          get_local $0
          i32.eqz
          br_if $__rjti$2
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $7
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $10
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 224
    i32.add
    set_global $STACKTOP
    get_local $10
    i32.const 198
    i32.add
    set_local $16
    get_local $10
    i32.const 196
    i32.add
    set_local $6
    get_local $10
    i32.const 184
    i32.add
    set_local $11
    get_local $10
    i32.const 172
    i32.add
    set_local $7
    block $switch (result i32)
      block $switch-default
        block $switch-case1
          block $switch-case0
            block $switch-case
              get_local $3
              i32.load offset=4
              i32.const 74
              i32.and
              br_table
                $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
                $switch-case
                $switch-default ;; default
            end ;; $switch-case
            i32.const 8
            br $switch
          end ;; $switch-case0
          i32.const 16
          br $switch
        end ;; $switch-case1
        i32.const 0
        br $switch
      end ;; $switch-default
      i32.const 10
    end ;; $switch
    set_local $17
    get_local $11
    get_local $3
    get_local $16
    get_local $6
    call $__ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc
    get_local $7
    i32.const 0
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $7
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $7
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $7
    i32.const 8
    i32.add
    set_local $18
    get_local $10
    i32.const 8
    i32.add
    set_local $13
    get_local $10
    i32.const 4
    i32.add
    set_local $14
    get_local $10
    set_local $12
    get_local $7
    get_local $7
    i32.const 11
    i32.add
    tee_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_3 (result i32)
      get_local $18
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_3
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $10
    i32.const 168
    i32.add
    tee_local $15
    get_local $9
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_4 (result i32)
      get_local $7
      i32.load
    else
      get_local $7
    end ;; $_4
    tee_local $3
    i32.store
    get_local $14
    get_local $13
    i32.store
    get_local $12
    i32.const 0
    i32.store
    get_local $7
    i32.const 4
    i32.add
    set_local $20
    get_local $6
    i32.load8_s
    set_local $21
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L13
      block $label$break$L13
        get_local $0
        if $_5
          get_local $0
          i32.load offset=12
          get_local $0
          i32.load offset=16
          i32.eq
          if $_6
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_7
              block $_8
                get_local $1
                i32.const 0
                i32.store
                i32.const 0
                set_local $0
              end ;; $_8
            end ;; $_7
          end ;; $_6
        else
          i32.const 0
          set_local $0
        end ;; $_5
        get_local $0
        i32.eqz
        set_local $8
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $6
            i32.eqz
            br_if $__rjti$0
            get_local $6
            i32.load offset=12
            get_local $6
            i32.load offset=16
            i32.ne
            if $_9
              get_local $8
              if $_10
                br $__rjto$0
              else
                br $label$break$L13
              end ;; $_10
            end ;; $_9
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_11
              block $_12
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_12
            else
              get_local $8
              i32.eqz
              br_if $label$break$L13
            end ;; $_11
            br $__rjto$0
          end ;; $__rjti$0
          get_local $8
          if $_13
            block $_14
              i32.const 0
              set_local $6
              br $label$break$L13
            end ;; $_14
          else
            i32.const 0
            set_local $6
          end ;; $_13
        end ;; $__rjto$0
        get_local $15
        i32.load
        get_local $3
        get_local $9
        i32.load8_s
        tee_local $8
        i32.const 0
        i32.lt_s
        if $_15 (result i32)
          get_local $20
          i32.load
        else
          get_local $8
          i32.const 255
          i32.and
        end ;; $_15
        tee_local $8
        i32.add
        i32.eq
        if $_16
          block $_17
            get_local $7
            get_local $8
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $7
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_18 (result i32)
              get_local $18
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_18
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $15
            get_local $9
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_19 (result i32)
              get_local $7
              i32.load
            else
              get_local $7
            end ;; $_19
            tee_local $3
            get_local $8
            i32.add
            i32.store
          end ;; $_17
        end ;; $_16
        get_local $0
        i32.const 12
        i32.add
        tee_local $8
        i32.load
        tee_local $19
        get_local $0
        i32.const 16
        i32.add
        tee_local $22
        i32.load
        i32.eq
        if $_20 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $19
          i32.load8_u
        end ;; $_20
        tee_local $19
        i32.const 255
        i32.and
        get_local $17
        get_local $3
        get_local $15
        get_local $12
        get_local $21
        get_local $11
        get_local $13
        get_local $14
        get_local $16
        call $__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_
        br_if $label$break$L13
        get_local $8
        i32.load
        tee_local $6
        get_local $22
        i32.load
        i32.eq
        if $_21
          block $_22
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L13
          end ;; $_22
        else
          block $_23
            get_local $8
            get_local $6
            i32.const 1
            i32.add
            i32.store
            br $label$continue$L13
          end ;; $_23
        end ;; $_21
      end ;; $label$break$L13
    end ;; $label$continue$L13
    get_local $14
    i32.load
    set_local $9
    get_local $11
    i32.load8_s offset=11
    tee_local $8
    i32.const 0
    i32.lt_s
    if $_24 (result i32)
      get_local $11
      i32.load offset=4
    else
      get_local $8
      i32.const 255
      i32.and
    end ;; $_24
    if $_25
      get_local $9
      get_local $13
      i32.sub
      i32.const 160
      i32.lt_s
      if $_26
        block $_27
          get_local $12
          i32.load
          set_local $8
          get_local $14
          get_local $9
          i32.const 4
          i32.add
          tee_local $12
          i32.store
          get_local $9
          get_local $8
          i32.store
          get_local $12
          set_local $9
        end ;; $_27
      end ;; $_26
    end ;; $_25
    get_local $5
    get_local $3
    get_local $15
    i32.load
    get_local $4
    get_local $17
    call $__ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji
    i32.store
    get_local $11
    get_local $13
    get_local $9
    get_local $4
    call $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj
    get_local $0
    if $_28
      get_local $0
      i32.load offset=12
      get_local $0
      i32.load offset=16
      i32.eq
      if $_29
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_30
          block $_31
            get_local $1
            i32.const 0
            i32.store
            i32.const 0
            set_local $0
          end ;; $_31
        end ;; $_30
      end ;; $_29
    else
      i32.const 0
      set_local $0
    end ;; $_28
    get_local $0
    i32.eqz
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $6
          i32.eqz
          br_if $__rjti$1
          get_local $6
          i32.load offset=12
          get_local $6
          i32.load offset=16
          i32.eq
          if $if
            get_local $6
            get_local $6
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $if_1
              block $block
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$1
              end ;; $block
            end ;; $if_1
          end ;; $if
          get_local $0
          i32.eqz
          br_if $__rjti$2
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $7
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $10
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    get_global $STACKTOP
    set_local $9
    get_global $STACKTOP
    i32.const 240
    i32.add
    set_global $STACKTOP
    get_local $9
    i32.const 208
    i32.add
    set_local $13
    get_local $9
    i32.const 192
    i32.add
    set_local $0
    get_local $9
    i32.const 180
    i32.add
    set_local $6
    get_local $9
    i32.const 196
    i32.add
    tee_local $10
    i32.const 0
    i32.store
    get_local $10
    i32.const 0
    i32.store offset=4
    get_local $10
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $7
    loop $while-in
      get_local $7
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $10
          get_local $7
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $7
          i32.const 1
          i32.add
          set_local $7
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $0
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $3
    i32.store
    get_local $0
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $0
    i32.const 13937
    i32.const 13963
    get_local $13
    get_local $0
    i32.load
    i32.load offset=32
    i32.const 7
    i32.and
    i32.const 397
    i32.add
    call_indirect (type $FUNCSIG$iiiii)
    drop
    get_local $3
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $6
    i32.const 0
    i32.store
    get_local $6
    i32.const 0
    i32.store offset=4
    get_local $6
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in1
      get_local $0
      i32.const 3
      i32.ne
      if $_3
        block $_4
          get_local $6
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in1
        end ;; $_4
      end ;; $_3
    end ;; $while-in1
    get_local $6
    i32.const 8
    i32.add
    set_local $14
    get_local $9
    set_local $15
    get_local $9
    i32.const 16
    i32.add
    set_local $16
    get_local $9
    i32.const 8
    i32.add
    set_local $17
    get_local $9
    i32.const 4
    i32.add
    set_local $18
    get_local $6
    get_local $6
    i32.const 11
    i32.add
    tee_local $11
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_5 (result i32)
      get_local $14
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $_5
    tee_local $0
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $9
    i32.const 176
    i32.add
    tee_local $12
    get_local $11
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_6 (result i32)
      get_local $6
      i32.load
    else
      get_local $6
    end ;; $_6
    tee_local $3
    i32.store
    get_local $17
    get_local $16
    i32.store
    get_local $18
    i32.const 0
    i32.store
    get_local $6
    i32.const 4
    i32.add
    set_local $21
    get_local $1
    i32.load
    set_local $0
    loop $label$continue$L12
      block $label$break$L12
        get_local $0
        if $_7
          get_local $0
          i32.load offset=12
          get_local $0
          i32.load offset=16
          i32.eq
          if $_8
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_9
              block $_10
                get_local $1
                i32.const 0
                i32.store
                i32.const 0
                set_local $0
              end ;; $_10
            end ;; $_9
          end ;; $_8
        else
          i32.const 0
          set_local $0
        end ;; $_7
        get_local $0
        i32.eqz
        set_local $8
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $7
            i32.eqz
            br_if $__rjti$0
            get_local $7
            i32.load offset=12
            get_local $7
            i32.load offset=16
            i32.ne
            if $_11
              get_local $8
              if $_12
                br $__rjto$0
              else
                br $label$break$L12
              end ;; $_12
            end ;; $_11
            get_local $7
            get_local $7
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_13
              block $_14
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_14
            else
              get_local $8
              i32.eqz
              br_if $label$break$L12
            end ;; $_13
            br $__rjto$0
          end ;; $__rjti$0
          get_local $8
          if $_15
            block $_16
              i32.const 0
              set_local $7
              br $label$break$L12
            end ;; $_16
          else
            i32.const 0
            set_local $7
          end ;; $_15
        end ;; $__rjto$0
        get_local $12
        i32.load
        get_local $3
        get_local $11
        i32.load8_s
        tee_local $8
        i32.const 0
        i32.lt_s
        if $_17 (result i32)
          get_local $21
          i32.load
        else
          get_local $8
          i32.const 255
          i32.and
        end ;; $_17
        tee_local $8
        i32.add
        i32.eq
        if $_18
          block $_19
            get_local $6
            get_local $8
            i32.const 1
            i32.shl
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $6
            get_local $11
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_20 (result i32)
              get_local $14
              i32.load
              i32.const 2147483647
              i32.and
              i32.const -1
              i32.add
            else
              i32.const 10
            end ;; $_20
            tee_local $3
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
            get_local $12
            get_local $11
            i32.load8_s
            i32.const 0
            i32.lt_s
            if $_21 (result i32)
              get_local $6
              i32.load
            else
              get_local $6
            end ;; $_21
            tee_local $3
            get_local $8
            i32.add
            i32.store
          end ;; $_19
        end ;; $_18
        get_local $0
        i32.const 12
        i32.add
        tee_local $19
        i32.load
        tee_local $20
        get_local $0
        i32.const 16
        i32.add
        tee_local $8
        i32.load
        i32.eq
        if $_22 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $20
          i32.load8_u
        end ;; $_22
        tee_local $20
        i32.const 255
        i32.and
        i32.const 16
        get_local $3
        get_local $12
        get_local $18
        i32.const 0
        get_local $10
        get_local $16
        get_local $17
        get_local $13
        call $__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_
        br_if $label$break$L12
        get_local $19
        i32.load
        tee_local $7
        get_local $8
        i32.load
        i32.eq
        if $_23
          block $_24
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L12
          end ;; $_24
        else
          block $_25
            get_local $19
            get_local $7
            i32.const 1
            i32.add
            i32.store
            br $label$continue$L12
          end ;; $_25
        end ;; $_23
      end ;; $label$break$L12
    end ;; $label$continue$L12
    get_local $6
    get_local $12
    i32.load
    get_local $3
    i32.sub
    i32.const 0
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc
    get_local $11
    i32.load8_s
    i32.const 0
    i32.lt_s
    if $_26 (result i32)
      get_local $6
      i32.load
    else
      get_local $6
    end ;; $_26
    set_local $3
    call $__ZNSt3__26__clocEv
    set_local $8
    get_local $15
    get_local $5
    i32.store
    get_local $3
    get_local $8
    i32.const 13972
    get_local $15
    call $__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z
    i32.const 1
    i32.ne
    if $_27
      get_local $4
      i32.const 4
      i32.store
    end ;; $_27
    get_local $0
    if $_28
      get_local $0
      i32.load offset=12
      get_local $0
      i32.load offset=16
      i32.eq
      if $_29
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_30
          block $_31
            get_local $1
            i32.const 0
            i32.store
            i32.const 0
            set_local $0
          end ;; $_31
        end ;; $_30
      end ;; $_29
    else
      i32.const 0
      set_local $0
    end ;; $_28
    get_local $0
    i32.eqz
    set_local $0
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $7
          i32.eqz
          br_if $__rjti$1
          get_local $7
          i32.load offset=12
          get_local $7
          i32.load offset=16
          i32.eq
          if $if
            get_local $7
            get_local $7
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $if_1
              block $block
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$1
              end ;; $block
            end ;; $if_1
          end ;; $if
          get_local $0
          i32.eqz
          br_if $__rjti$2
          br $__rjto$2
        end ;; $__rjti$1
        get_local $0
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $4
      get_local $4
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    get_local $1
    i32.load
    set_local $0
    get_local $6
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $10
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $9
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    get_local $0
    i32.load
    tee_local $6
    if $_1 (result i32)
      get_local $6
      i32.load offset=12
      tee_local $5
      get_local $6
      i32.load offset=16
      i32.eq
      if $_2 (result i32)
        get_local $6
        get_local $6
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $5
        i32.load
      end ;; $_2
      tee_local $5
      i32.const -1
      i32.eq
      if $_3 (result i32)
        block $_4 (result i32)
          get_local $0
          i32.const 0
          i32.store
          i32.const 1
        end ;; $_4
      else
        get_local $0
        i32.load
        i32.eqz
      end ;; $_3
    else
      i32.const 1
    end ;; $_1
    set_local $7
    block $label$break$L22
      block $__rjti$3
        block $__rjti$2
          get_local $1
          i32.load
          tee_local $5
          if $_5
            get_local $5
            i32.load offset=12
            tee_local $6
            get_local $5
            i32.load offset=16
            i32.eq
            if $_6 (result i32)
              get_local $5
              get_local $5
              i32.load
              i32.load offset=36
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
            else
              get_local $6
              i32.load
            end ;; $_6
            tee_local $6
            i32.const -1
            i32.eq
            if $_7
              get_local $1
              i32.const 0
              i32.store
            else
              get_local $7
              if $_8
                br $__rjti$3
              else
                br $__rjti$2
              end ;; $_8
            end ;; $_7
          end ;; $_5
          get_local $7
          i32.eqz
          if $_9
            block $_10
              i32.const 0
              set_local $5
              br $__rjti$3
            end ;; $_10
          end ;; $_9
        end ;; $__rjti$2
        get_local $2
        get_local $2
        i32.load
        i32.const 6
        i32.or
        i32.store
        i32.const 0
        set_local $3
        br $label$break$L22
      end ;; $__rjti$3
      get_local $3
      i32.const 2048
      get_local $0
      i32.load
      tee_local $7
      i32.load offset=12
      tee_local $6
      get_local $7
      i32.load offset=16
      i32.eq
      if $_11 (result i32)
        get_local $7
        get_local $7
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $6
        i32.load
      end ;; $_11
      tee_local $6
      get_local $3
      i32.load
      i32.load offset=12
      i32.const 31
      i32.and
      i32.const 8
      i32.add
      call_indirect (type $FUNCSIG$iiii)
      i32.eqz
      if $_12
        block $_13
          get_local $2
          get_local $2
          i32.load
          i32.const 4
          i32.or
          i32.store
          i32.const 0
          set_local $3
          br $label$break$L22
        end ;; $_13
      end ;; $_12
      get_local $3
      get_local $6
      i32.const 0
      get_local $3
      i32.load
      i32.load offset=52
      i32.const 31
      i32.and
      i32.const 8
      i32.add
      call_indirect (type $FUNCSIG$iiii)
      i32.const 24
      i32.shl
      i32.const 24
      i32.shr_s
      set_local $9
      get_local $0
      i32.load
      tee_local $8
      i32.const 12
      i32.add
      tee_local $7
      i32.load
      tee_local $6
      get_local $8
      i32.load offset=16
      i32.eq
      if $_14 (result i32)
        block $_15 (result i32)
          get_local $8
          get_local $8
          i32.load
          i32.load offset=40
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
          drop
          get_local $4
          set_local $6
          get_local $5
          set_local $4
          get_local $5
          set_local $7
          get_local $9
        end ;; $_15
      else
        block $_16 (result i32)
          get_local $7
          get_local $6
          i32.const 4
          i32.add
          i32.store
          get_local $4
          set_local $6
          get_local $5
          set_local $4
          get_local $5
          set_local $7
          get_local $9
        end ;; $_16
      end ;; $_14
      set_local $5
      loop $while-in
        block $while-out
          get_local $5
          i32.const -48
          i32.add
          set_local $9
          get_local $0
          i32.load
          tee_local $8
          if $_17 (result i32)
            get_local $8
            i32.load offset=12
            tee_local $5
            get_local $8
            i32.load offset=16
            i32.eq
            if $_18 (result i32)
              get_local $8
              get_local $8
              i32.load
              i32.load offset=36
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
            else
              get_local $5
              i32.load
            end ;; $_18
            tee_local $5
            i32.const -1
            i32.eq
            if $_19 (result i32)
              block $_20 (result i32)
                get_local $0
                i32.const 0
                i32.store
                i32.const 1
              end ;; $_20
            else
              get_local $0
              i32.load
              i32.eqz
            end ;; $_19
          else
            i32.const 1
          end ;; $_17
          set_local $10
          get_local $7
          if $_21 (result i32)
            get_local $7
            i32.load offset=12
            tee_local $5
            get_local $7
            i32.load offset=16
            i32.eq
            if $_22 (result i32)
              get_local $7
              get_local $7
              i32.load
              i32.load offset=36
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
            else
              get_local $5
              i32.load
            end ;; $_22
            tee_local $5
            i32.const -1
            i32.eq
            if $_23 (result i32)
              block $_24 (result i32)
                get_local $1
                i32.const 0
                i32.store
                i32.const 0
                set_local $7
                i32.const 1
                set_local $8
                i32.const 0
              end ;; $_24
            else
              block $_25 (result i32)
                get_local $4
                set_local $7
                get_local $4
                i32.eqz
                set_local $8
                get_local $4
              end ;; $_25
            end ;; $_23
          else
            block $_26 (result i32)
              i32.const 0
              set_local $7
              i32.const 1
              set_local $8
              get_local $4
            end ;; $_26
          end ;; $_21
          set_local $5
          get_local $0
          i32.load
          set_local $4
          get_local $6
          i32.const 1
          i32.gt_s
          get_local $10
          get_local $8
          i32.xor
          i32.and
          i32.eqz
          if $_27
            block $_28
              get_local $9
              set_local $3
              br $while-out
            end ;; $_28
          end ;; $_27
          get_local $3
          i32.const 2048
          get_local $4
          i32.load offset=12
          tee_local $8
          get_local $4
          i32.load offset=16
          i32.eq
          if $_29 (result i32)
            get_local $4
            get_local $4
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $8
            i32.load
          end ;; $_29
          tee_local $4
          get_local $3
          i32.load
          i32.load offset=12
          i32.const 31
          i32.and
          i32.const 8
          i32.add
          call_indirect (type $FUNCSIG$iiii)
          i32.eqz
          if $_30
            block $_31
              get_local $9
              set_local $3
              br $label$break$L22
            end ;; $_31
          end ;; $_30
          get_local $6
          i32.const -1
          i32.add
          set_local $6
          get_local $3
          get_local $4
          i32.const 0
          get_local $3
          i32.load
          i32.load offset=52
          i32.const 31
          i32.and
          i32.const 8
          i32.add
          call_indirect (type $FUNCSIG$iiii)
          i32.const 24
          i32.shl
          i32.const 24
          i32.shr_s
          get_local $9
          i32.const 10
          i32.mul
          i32.add
          set_local $9
          get_local $0
          i32.load
          tee_local $10
          i32.const 12
          i32.add
          tee_local $8
          i32.load
          tee_local $4
          get_local $10
          i32.load offset=16
          i32.eq
          if $_32
            block $_33
              get_local $10
              get_local $10
              i32.load
              i32.load offset=40
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
              drop
              get_local $5
              set_local $4
              get_local $9
              set_local $5
              br $while-in
            end ;; $_33
          else
            block $_34
              get_local $8
              get_local $4
              i32.const 4
              i32.add
              i32.store
              get_local $5
              set_local $4
              get_local $9
              set_local $5
              br $while-in
            end ;; $_34
          end ;; $_32
        end ;; $while-out
      end ;; $while-in
      get_local $4
      if $_35 (result i32)
        get_local $4
        i32.load offset=12
        tee_local $6
        get_local $4
        i32.load offset=16
        i32.eq
        if $_36 (result i32)
          get_local $4
          get_local $4
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $6
          i32.load
        end ;; $_36
        tee_local $4
        i32.const -1
        i32.eq
        if $_37 (result i32)
          block $_38 (result i32)
            get_local $0
            i32.const 0
            i32.store
            i32.const 1
          end ;; $_38
        else
          get_local $0
          i32.load
          i32.eqz
        end ;; $_37
      else
        i32.const 1
      end ;; $_35
      set_local $4
      block $__rjto$0
        block $__rjti$0
          get_local $5
          i32.eqz
          br_if $__rjti$0
          get_local $5
          i32.load offset=12
          tee_local $0
          get_local $5
          i32.load offset=16
          i32.eq
          if $if (result i32)
            get_local $5
            get_local $5
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $0
            i32.load
          end ;; $if
          tee_local $0
          i32.const -1
          i32.eq
          if $if_1
            block $block
              get_local $1
              i32.const 0
              i32.store
              br $__rjti$0
            end ;; $block
          else
            get_local $4
            br_if $label$break$L22
          end ;; $if_1
          br $__rjto$0
        end ;; $__rjti$0
        get_local $4
        i32.eqz
        br_if $label$break$L22
      end ;; $__rjto$0
      get_local $2
      get_local $2
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $label$break$L22
    get_local $3
    )
  
  (func $__ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE (type $_5)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    get_global $STACKTOP
    set_local $15
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $9
    get_local $15
    tee_local $12
    get_local $6
    i32.const 19220
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $13
    get_local $13
    i32.load
    i32.load offset=20
    i32.const 63
    i32.and
    i32.const 176
    i32.add
    call_indirect (type $FUNCSIG$vii)
    get_local $5
    get_local $3
    i32.store
    block $label$break$L12
      block $__rjti$0
        get_local $2
        tee_local $18
        block $_1 (result i32)
          block $switch
            block $switch-default
              get_local $0
              i32.load8_s
              tee_local $6
              i32.const 43
              i32.sub
              br_table
                $switch-default $switch $switch-default
                $switch ;; default
            end ;; $switch-default
            get_local $9
            get_local $6
            get_local $9
            i32.load
            i32.load offset=28
            i32.const 15
            i32.and
            i32.const 413
            i32.add
            call_indirect (type $FUNCSIG$iii)
            set_local $6
            get_local $5
            get_local $5
            i32.load
            tee_local $7
            i32.const 1
            i32.add
            i32.store
            get_local $7
            get_local $6
            i32.store8
            get_local $0
            i32.const 1
            i32.add
            br $_1
          end ;; $switch
          get_local $0
        end ;; $_1
        tee_local $6
        i32.sub
        i32.const 1
        i32.gt_s
        if $switch-case
          get_local $6
          i32.load8_s
          i32.const 48
          i32.eq
          if $_2
            block $_3
              block $switch1
                block $switch-default4
                  block $switch-case2
                    get_local $6
                    i32.const 1
                    i32.add
                    tee_local $7
                    i32.load8_s
                    i32.const 88
                    i32.sub
                    br_table
                      $switch-case2 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4
                      $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4
                      $switch-case2
                      $switch-default4 ;; default
                  end ;; $switch-case2
                  br $switch1
                end ;; $switch-default4
                get_local $6
                set_local $7
                br $__rjti$0
              end ;; $switch1
              get_local $9
              i32.const 48
              get_local $9
              i32.load
              i32.load offset=28
              i32.const 15
              i32.and
              i32.const 413
              i32.add
              call_indirect (type $FUNCSIG$iii)
              set_local $8
              get_local $5
              get_local $5
              i32.load
              tee_local $10
              i32.const 1
              i32.add
              i32.store
              get_local $10
              get_local $8
              i32.store8
              get_local $9
              get_local $7
              i32.load8_s
              get_local $9
              i32.load
              i32.load offset=28
              i32.const 15
              i32.and
              i32.const 413
              i32.add
              call_indirect (type $FUNCSIG$iii)
              set_local $7
              get_local $5
              get_local $5
              i32.load
              tee_local $8
              i32.const 1
              i32.add
              i32.store
              get_local $8
              get_local $7
              i32.store8
              get_local $6
              i32.const 2
              i32.add
              tee_local $6
              set_local $7
              loop $while-in
                get_local $7
                get_local $2
                i32.ge_u
                br_if $label$break$L12
                get_local $7
                i32.load8_s
                call $__ZNSt3__26__clocEv
                call $_isxdigit_l
                i32.eqz
                br_if $label$break$L12
                get_local $7
                i32.const 1
                i32.add
                set_local $7
                br $while-in
              end ;; $while-in
            end ;; $_3
          else
            block $_4
              get_local $6
              set_local $7
              br $__rjti$0
            end ;; $_4
          end ;; $_2
        else
          block $_5
            get_local $6
            set_local $7
            br $__rjti$0
          end ;; $_5
        end ;; $switch-case
        br $label$break$L12
      end ;; $__rjti$0
      loop $while-in7
        get_local $7
        get_local $2
        i32.ge_u
        br_if $label$break$L12
        get_local $7
        i32.load8_s
        call $__ZNSt3__26__clocEv
        call $_isdigit_l
        i32.eqz
        br_if $label$break$L12
        get_local $7
        i32.const 1
        i32.add
        set_local $7
        br $while-in7
      end ;; $while-in7
    end ;; $label$break$L12
    get_local $12
    i32.const 4
    i32.add
    set_local $16
    block $label$break$L18
      get_local $12
      i32.const 11
      i32.add
      tee_local $17
      i32.load8_s
      tee_local $8
      i32.const 0
      i32.lt_s
      if $_6 (result i32)
        get_local $16
        i32.load
      else
        get_local $8
        i32.const 255
        i32.and
      end ;; $_6
      if $_7
        block $_8
          block $label$break$L21
            get_local $6
            get_local $7
            i32.ne
            if $_9
              block $_10
                get_local $7
                set_local $8
                get_local $6
                set_local $10
                loop $while-in11
                  get_local $10
                  get_local $8
                  i32.const -1
                  i32.add
                  tee_local $8
                  i32.ge_u
                  br_if $label$break$L21
                  get_local $10
                  i32.load8_s
                  set_local $11
                  get_local $10
                  get_local $8
                  i32.load8_s
                  i32.store8
                  get_local $8
                  get_local $11
                  i32.store8
                  get_local $10
                  i32.const 1
                  i32.add
                  set_local $10
                  br $while-in11
                end ;; $while-in11
              end ;; $_10
            end ;; $_9
          end ;; $label$break$L21
          get_local $13
          get_local $13
          i32.load
          i32.load offset=16
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
          set_local $19
          i32.const 0
          set_local $11
          i32.const 0
          set_local $8
          get_local $6
          set_local $10
          loop $while-in13
            get_local $10
            get_local $7
            i32.lt_u
            if $_11
              block $_12
                get_local $17
                i32.load8_s
                i32.const 0
                i32.lt_s
                if $_13 (result i32)
                  get_local $12
                  i32.load
                else
                  get_local $12
                end ;; $_13
                get_local $8
                i32.add
                i32.load8_s
                tee_local $14
                i32.const 0
                i32.gt_s
                get_local $11
                get_local $14
                i32.eq
                i32.and
                if $_14
                  block $_15
                    get_local $5
                    get_local $5
                    i32.load
                    tee_local $11
                    i32.const 1
                    i32.add
                    i32.store
                    get_local $11
                    get_local $19
                    i32.store8
                    i32.const 0
                    set_local $11
                    get_local $8
                    get_local $17
                    i32.load8_s
                    tee_local $14
                    i32.const 0
                    i32.lt_s
                    if $_16 (result i32)
                      get_local $16
                      i32.load
                    else
                      get_local $14
                      i32.const 255
                      i32.and
                    end ;; $_16
                    i32.const -1
                    i32.add
                    i32.lt_u
                    get_local $8
                    i32.add
                    set_local $8
                  end ;; $_15
                end ;; $_14
                get_local $9
                get_local $10
                i32.load8_s
                get_local $9
                i32.load
                i32.load offset=28
                i32.const 15
                i32.and
                i32.const 413
                i32.add
                call_indirect (type $FUNCSIG$iii)
                set_local $14
                get_local $5
                get_local $5
                i32.load
                tee_local $20
                i32.const 1
                i32.add
                i32.store
                get_local $20
                get_local $14
                i32.store8
                get_local $11
                i32.const 1
                i32.add
                set_local $11
                get_local $10
                i32.const 1
                i32.add
                set_local $10
                br $while-in13
              end ;; $_12
            end ;; $_11
          end ;; $while-in13
          get_local $3
          get_local $6
          get_local $0
          i32.sub
          i32.add
          tee_local $8
          get_local $5
          i32.load
          tee_local $6
          i32.eq
          if $_17
            get_local $9
            set_local $6
          else
            loop $while-in15
              get_local $8
              get_local $6
              i32.const -1
              i32.add
              tee_local $6
              i32.ge_u
              if $_18
                block $_19
                  get_local $9
                  set_local $6
                  br $label$break$L18
                end ;; $_19
              else
                block $_20
                  get_local $8
                  i32.load8_s
                  set_local $10
                  get_local $8
                  get_local $6
                  i32.load8_s
                  i32.store8
                  get_local $6
                  get_local $10
                  i32.store8
                  get_local $8
                  i32.const 1
                  i32.add
                  set_local $8
                  br $while-in15
                end ;; $_20
              end ;; $_18
            end ;; $while-in15
          end ;; $_17
        end ;; $_8
      else
        block $_21
          get_local $9
          get_local $6
          get_local $7
          get_local $5
          i32.load
          get_local $9
          i32.load
          i32.load offset=32
          i32.const 7
          i32.and
          i32.const 397
          i32.add
          call_indirect (type $FUNCSIG$iiiii)
          drop
          get_local $5
          get_local $5
          i32.load
          get_local $7
          get_local $6
          i32.sub
          i32.add
          i32.store
          get_local $9
          set_local $6
        end ;; $_21
      end ;; $_7
    end ;; $label$break$L18
    block $__rjto$1
      block $__rjti$1
        loop $while-in17
          get_local $7
          get_local $2
          i32.lt_u
          if $if
            block $block
              get_local $7
              i32.load8_s
              tee_local $8
              i32.const 46
              i32.eq
              br_if $__rjti$1
              get_local $9
              get_local $8
              get_local $6
              i32.load
              i32.load offset=28
              i32.const 15
              i32.and
              i32.const 413
              i32.add
              call_indirect (type $FUNCSIG$iii)
              set_local $8
              get_local $5
              get_local $5
              i32.load
              tee_local $10
              i32.const 1
              i32.add
              i32.store
              get_local $10
              get_local $8
              i32.store8
              get_local $7
              i32.const 1
              i32.add
              set_local $7
              br $while-in17
            end ;; $block
          end ;; $if
        end ;; $while-in17
        br $__rjto$1
      end ;; $__rjti$1
      get_local $13
      get_local $13
      i32.load
      i32.load offset=12
      i32.const 63
      i32.and
      i32.const 312
      i32.add
      call_indirect (type $FUNCSIG$ii)
      set_local $6
      get_local $5
      get_local $5
      i32.load
      tee_local $8
      i32.const 1
      i32.add
      i32.store
      get_local $8
      get_local $6
      i32.store8
      get_local $7
      i32.const 1
      i32.add
      set_local $7
    end ;; $__rjto$1
    get_local $9
    get_local $7
    get_local $2
    get_local $5
    i32.load
    get_local $9
    i32.load
    i32.load offset=32
    i32.const 7
    i32.and
    i32.const 397
    i32.add
    call_indirect (type $FUNCSIG$iiiii)
    drop
    get_local $5
    get_local $5
    i32.load
    get_local $18
    get_local $7
    i32.sub
    i32.add
    tee_local $5
    i32.store
    get_local $4
    get_local $1
    get_local $2
    i32.eq
    if $if_1 (result i32)
      get_local $5
    else
      get_local $3
      get_local $1
      get_local $0
      i32.sub
      i32.add
    end ;; $if_1
    i32.store
    get_local $12
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $15
    set_global $STACKTOP
    )
  
  (func $__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib (type $FUNCSIG$viiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    block $label$break$L1
      get_local $0
      get_local $1
      i32.load offset=8
      i32.eq
      if $_1
        get_local $1
        i32.load offset=4
        get_local $2
        i32.eq
        if $_2
          get_local $1
          i32.const 28
          i32.add
          tee_local $0
          i32.load
          i32.const 1
          i32.ne
          if $_3
            get_local $0
            get_local $3
            i32.store
          end ;; $_3
        end ;; $_2
      else
        block $_4
          get_local $0
          get_local $1
          i32.load
          i32.ne
          if $_5
            block $_6
              get_local $0
              i32.load offset=12
              set_local $5
              get_local $0
              i32.const 16
              i32.add
              get_local $1
              get_local $2
              get_local $3
              get_local $4
              call $__ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib
              get_local $5
              i32.const 1
              i32.le_s
              br_if $label$break$L1
              get_local $0
              i32.const 16
              i32.add
              get_local $5
              i32.const 3
              i32.shl
              i32.add
              set_local $7
              get_local $0
              i32.const 24
              i32.add
              set_local $5
              get_local $0
              i32.load offset=8
              tee_local $6
              i32.const 2
              i32.and
              i32.eqz
              if $_7
                get_local $1
                i32.const 36
                i32.add
                tee_local $0
                i32.load
                i32.const 1
                i32.ne
                if $_8
                  block $_9
                    get_local $6
                    i32.const 1
                    i32.and
                    i32.eqz
                    if $_10
                      block $_11
                        get_local $1
                        i32.const 54
                        i32.add
                        set_local $6
                        loop $while-in
                          get_local $6
                          i32.load8_s
                          br_if $label$break$L1
                          get_local $0
                          i32.load
                          i32.const 1
                          i32.eq
                          br_if $label$break$L1
                          get_local $5
                          get_local $1
                          get_local $2
                          get_local $3
                          get_local $4
                          call $__ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib
                          get_local $5
                          i32.const 8
                          i32.add
                          tee_local $5
                          get_local $7
                          i32.lt_u
                          br_if $while-in
                          br $label$break$L1
                        end ;; $while-in
                      end ;; $_11
                    end ;; $_10
                    get_local $1
                    i32.const 24
                    i32.add
                    set_local $6
                    get_local $1
                    i32.const 54
                    i32.add
                    set_local $8
                    loop $while-in1
                      get_local $8
                      i32.load8_s
                      br_if $label$break$L1
                      get_local $0
                      i32.load
                      i32.const 1
                      i32.eq
                      if $_12
                        get_local $6
                        i32.load
                        i32.const 1
                        i32.eq
                        br_if $label$break$L1
                      end ;; $_12
                      get_local $5
                      get_local $1
                      get_local $2
                      get_local $3
                      get_local $4
                      call $__ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib
                      get_local $5
                      i32.const 8
                      i32.add
                      tee_local $5
                      get_local $7
                      i32.lt_u
                      br_if $while-in1
                      br $label$break$L1
                    end ;; $while-in1
                  end ;; $_9
                end ;; $_8
              end ;; $_7
              get_local $1
              i32.const 54
              i32.add
              set_local $0
              loop $while-in3
                get_local $0
                i32.load8_s
                br_if $label$break$L1
                get_local $5
                get_local $1
                get_local $2
                get_local $3
                get_local $4
                call $__ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib
                get_local $5
                i32.const 8
                i32.add
                tee_local $5
                get_local $7
                i32.lt_u
                br_if $while-in3
                br $label$break$L1
              end ;; $while-in3
            end ;; $_6
          end ;; $_5
          get_local $1
          i32.load offset=16
          get_local $2
          i32.ne
          if $_13
            get_local $1
            i32.const 20
            i32.add
            tee_local $11
            i32.load
            get_local $2
            i32.ne
            if $_14
              block $_15
                get_local $1
                get_local $3
                i32.store offset=32
                get_local $1
                i32.const 44
                i32.add
                tee_local $12
                i32.load
                i32.const 4
                i32.eq
                br_if $label$break$L1
                get_local $0
                i32.const 16
                i32.add
                get_local $0
                i32.load offset=12
                i32.const 3
                i32.shl
                i32.add
                set_local $13
                get_local $1
                i32.const 52
                i32.add
                set_local $7
                get_local $1
                i32.const 53
                i32.add
                set_local $6
                get_local $1
                i32.const 54
                i32.add
                set_local $8
                get_local $0
                i32.const 8
                i32.add
                set_local $9
                get_local $1
                i32.const 24
                i32.add
                set_local $10
                i32.const 0
                set_local $3
                i32.const 0
                set_local $5
                get_local $0
                i32.const 16
                i32.add
                set_local $0
                get_local $12
                block $__rjto$1 (result i32)
                  block $__rjti$1
                    block $__rjti$0
                      loop $label$continue$L34
                        get_local $0
                        get_local $13
                        i32.ge_u
                        br_if $__rjti$0
                        get_local $7
                        i32.const 0
                        i32.store8
                        get_local $6
                        i32.const 0
                        i32.store8
                        get_local $0
                        get_local $1
                        get_local $2
                        get_local $2
                        i32.const 1
                        get_local $4
                        call $__ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib
                        get_local $8
                        i32.load8_s
                        br_if $__rjti$0
                        block $do-once
                          get_local $6
                          i32.load8_s
                          if $if
                            block $block
                              get_local $7
                              i32.load8_s
                              i32.eqz
                              if $if_1
                                get_local $9
                                i32.load
                                i32.const 1
                                i32.and
                                if $if_2
                                  block $block_1
                                    i32.const 1
                                    set_local $5
                                    br $do-once
                                  end ;; $block_1
                                else
                                  block $block_2
                                    i32.const 1
                                    set_local $5
                                    br $__rjti$0
                                  end ;; $block_2
                                end ;; $if_2
                              end ;; $if_1
                              get_local $10
                              i32.load
                              i32.const 1
                              i32.eq
                              br_if $__rjti$1
                              get_local $9
                              i32.load
                              i32.const 2
                              i32.and
                              i32.eqz
                              br_if $__rjti$1
                              i32.const 1
                              set_local $3
                              i32.const 1
                              set_local $5
                            end ;; $block
                          end ;; $if
                        end ;; $do-once
                        get_local $0
                        i32.const 8
                        i32.add
                        set_local $0
                        br $label$continue$L34
                      end ;; $label$continue$L34
                    end ;; $__rjti$0
                    get_local $3
                    i32.eqz
                    if $if_3
                      block $block_3
                        get_local $11
                        get_local $2
                        i32.store
                        get_local $1
                        i32.const 40
                        i32.add
                        tee_local $0
                        get_local $0
                        i32.load
                        i32.const 1
                        i32.add
                        i32.store
                        get_local $1
                        i32.load offset=36
                        i32.const 1
                        i32.eq
                        if $if_4
                          get_local $10
                          i32.load
                          i32.const 2
                          i32.eq
                          if $if_5
                            block $block_4
                              get_local $8
                              i32.const 1
                              i32.store8
                              get_local $5
                              br_if $__rjti$1
                              i32.const 4
                              br $__rjto$1
                            end ;; $block_4
                          end ;; $if_5
                        end ;; $if_4
                      end ;; $block_3
                    end ;; $if_3
                    get_local $5
                    br_if $__rjti$1
                    i32.const 4
                    br $__rjto$1
                  end ;; $__rjti$1
                  i32.const 3
                end ;; $__rjto$1
                tee_local $0
                i32.store
                br $label$break$L1
              end ;; $_15
            end ;; $_14
          end ;; $_13
          get_local $3
          i32.const 1
          i32.eq
          if $if_6
            get_local $1
            i32.const 1
            i32.store offset=32
          end ;; $if_6
        end ;; $_4
      end ;; $_1
    end ;; $label$break$L1
    )
  
  (func $_try_realloc_chunk (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    get_local $0
    get_local $0
    i32.const 4
    i32.add
    tee_local $9
    i32.load
    tee_local $8
    i32.const -8
    i32.and
    tee_local $3
    i32.add
    set_local $6
    get_local $8
    i32.const 3
    i32.and
    tee_local $7
    i32.const 1
    i32.ne
    get_local $0
    i32.const 17680
    i32.load
    tee_local $11
    i32.ge_u
    i32.and
    get_local $0
    get_local $6
    i32.lt_u
    i32.and
    i32.eqz
    if $_1
      call $_abort
    end ;; $_1
    get_local $6
    i32.load offset=4
    tee_local $5
    i32.const 1
    i32.and
    i32.eqz
    if $_2
      call $_abort
    end ;; $_2
    get_local $7
    i32.eqz
    if $_3
      block $_4
        get_local $1
        i32.const 256
        i32.lt_u
        if $_5
          i32.const 0
          return
        end ;; $_5
        get_local $3
        get_local $1
        i32.const 4
        i32.add
        i32.ge_u
        if $_6
          get_local $3
          get_local $1
          i32.sub
          i32.const 18144
          i32.load
          i32.const 1
          i32.shl
          i32.le_u
          if $_7
            get_local $0
            return
          end ;; $_7
        end ;; $_6
        i32.const 0
        return
      end ;; $_4
    end ;; $_3
    get_local $3
    get_local $1
    i32.ge_u
    if $_8
      block $_9
        get_local $3
        get_local $1
        i32.sub
        tee_local $2
        i32.const 15
        i32.le_u
        if $_10
          get_local $0
          return
        end ;; $_10
        get_local $9
        get_local $8
        i32.const 1
        i32.and
        get_local $1
        i32.or
        i32.const 2
        i32.or
        i32.store
        get_local $0
        get_local $1
        i32.add
        tee_local $1
        get_local $2
        i32.const 3
        i32.or
        i32.store offset=4
        get_local $1
        get_local $2
        i32.add
        i32.const 4
        i32.add
        tee_local $3
        get_local $3
        i32.load
        i32.const 1
        i32.or
        i32.store
        get_local $1
        get_local $2
        call $_dispose_chunk
        get_local $0
        return
      end ;; $_9
    end ;; $_8
    get_local $6
    i32.const 17688
    i32.load
    i32.eq
    if $_11
      block $_12
        i32.const 17676
        i32.load
        get_local $3
        i32.add
        tee_local $2
        get_local $1
        i32.le_u
        if $_13
          i32.const 0
          return
        end ;; $_13
        get_local $9
        get_local $8
        i32.const 1
        i32.and
        get_local $1
        i32.or
        i32.const 2
        i32.or
        i32.store
        get_local $0
        get_local $1
        i32.add
        tee_local $3
        get_local $2
        get_local $1
        i32.sub
        tee_local $1
        i32.const 1
        i32.or
        i32.store offset=4
        i32.const 17688
        get_local $3
        i32.store
        i32.const 17676
        get_local $1
        i32.store
        get_local $0
        return
      end ;; $_12
    end ;; $_11
    get_local $6
    i32.const 17684
    i32.load
    i32.eq
    if $_14
      block $_15
        i32.const 17672
        i32.load
        get_local $3
        i32.add
        tee_local $3
        get_local $1
        i32.lt_u
        if $_16
          i32.const 0
          return
        end ;; $_16
        get_local $3
        get_local $1
        i32.sub
        tee_local $2
        i32.const 15
        i32.gt_u
        if $_17
          block $_18
            get_local $0
            get_local $1
            i32.add
            tee_local $3
            get_local $2
            i32.add
            set_local $4
            get_local $9
            get_local $8
            i32.const 1
            i32.and
            get_local $1
            i32.or
            i32.const 2
            i32.or
            i32.store
            get_local $3
            get_local $2
            i32.const 1
            i32.or
            i32.store offset=4
            get_local $4
            get_local $2
            i32.store
            get_local $4
            i32.const 4
            i32.add
            tee_local $1
            get_local $1
            i32.load
            i32.const -2
            i32.and
            i32.store
          end ;; $_18
        else
          block $_19
            get_local $9
            get_local $8
            i32.const 1
            i32.and
            get_local $3
            i32.or
            i32.const 2
            i32.or
            i32.store
            get_local $0
            get_local $3
            i32.add
            i32.const 4
            i32.add
            tee_local $1
            get_local $1
            i32.load
            i32.const 1
            i32.or
            i32.store
            i32.const 0
            set_local $3
            i32.const 0
            set_local $2
          end ;; $_19
        end ;; $_17
        i32.const 17672
        get_local $2
        i32.store
        i32.const 17684
        get_local $3
        i32.store
        get_local $0
        return
      end ;; $_15
    end ;; $_14
    get_local $5
    i32.const 2
    i32.and
    if $_20
      i32.const 0
      return
    end ;; $_20
    get_local $5
    i32.const -8
    i32.and
    get_local $3
    i32.add
    tee_local $13
    get_local $1
    i32.lt_u
    if $_21
      i32.const 0
      return
    end ;; $_21
    get_local $13
    get_local $1
    i32.sub
    set_local $12
    get_local $5
    i32.const 3
    i32.shr_u
    set_local $3
    block $do-once
      get_local $5
      i32.const 256
      i32.lt_u
      if $_22
        block $_23
          get_local $6
          i32.load offset=12
          set_local $4
          get_local $6
          i32.load offset=8
          tee_local $5
          get_local $3
          i32.const 3
          i32.shl
          i32.const 17704
          i32.add
          tee_local $7
          i32.ne
          if $_24
            block $_25
              get_local $5
              get_local $11
              i32.lt_u
              if $_26
                call $_abort
              end ;; $_26
              get_local $5
              i32.load offset=12
              get_local $6
              i32.ne
              if $_27
                call $_abort
              end ;; $_27
            end ;; $_25
          end ;; $_24
          get_local $4
          get_local $5
          i32.eq
          if $_28
            block $_29
              i32.const 17664
              i32.const 17664
              i32.load
              i32.const 1
              get_local $3
              i32.shl
              i32.const -1
              i32.xor
              i32.and
              i32.store
              br $do-once
            end ;; $_29
          end ;; $_28
          get_local $4
          get_local $7
          i32.eq
          if $_30
            get_local $4
            i32.const 8
            i32.add
            set_local $2
          else
            block $_31
              get_local $4
              get_local $11
              i32.lt_u
              if $_32
                call $_abort
              end ;; $_32
              get_local $4
              i32.const 8
              i32.add
              tee_local $3
              i32.load
              get_local $6
              i32.eq
              if $_33
                get_local $3
                set_local $2
              else
                call $_abort
              end ;; $_33
            end ;; $_31
          end ;; $_30
          get_local $5
          get_local $4
          i32.store offset=12
          get_local $2
          get_local $5
          i32.store
        end ;; $_23
      else
        block $_34
          get_local $6
          i32.load offset=24
          set_local $10
          block $do-once0
            get_local $6
            i32.load offset=12
            tee_local $2
            get_local $6
            i32.eq
            if $_35
              block $_36
                get_local $6
                i32.const 16
                i32.add
                tee_local $3
                i32.const 4
                i32.add
                tee_local $5
                i32.load
                tee_local $2
                if $_37
                  get_local $5
                  set_local $3
                else
                  get_local $3
                  i32.load
                  tee_local $2
                  i32.eqz
                  if $_38
                    block $_39
                      i32.const 0
                      set_local $4
                      br $do-once0
                    end ;; $_39
                  end ;; $_38
                end ;; $_37
                loop $while-in
                  get_local $2
                  i32.const 20
                  i32.add
                  tee_local $5
                  i32.load
                  tee_local $7
                  if $if
                    block $block
                      get_local $7
                      set_local $2
                      get_local $5
                      set_local $3
                      br $while-in
                    end ;; $block
                  end ;; $if
                  get_local $2
                  i32.const 16
                  i32.add
                  tee_local $5
                  i32.load
                  tee_local $7
                  if $if_1
                    block $block_1
                      get_local $7
                      set_local $2
                      get_local $5
                      set_local $3
                      br $while-in
                    end ;; $block_1
                  end ;; $if_1
                end ;; $while-in
                get_local $3
                get_local $11
                i32.lt_u
                if $if_2
                  call $_abort
                else
                  block $block_2
                    get_local $3
                    i32.const 0
                    i32.store
                    get_local $2
                    set_local $4
                  end ;; $block_2
                end ;; $if_2
              end ;; $_36
            else
              block $block_3
                get_local $6
                i32.load offset=8
                tee_local $3
                get_local $11
                i32.lt_u
                if $if_3
                  call $_abort
                end ;; $if_3
                get_local $3
                i32.const 12
                i32.add
                tee_local $5
                i32.load
                get_local $6
                i32.ne
                if $if_4
                  call $_abort
                end ;; $if_4
                get_local $2
                i32.const 8
                i32.add
                tee_local $7
                i32.load
                get_local $6
                i32.eq
                if $if_5
                  block $block_4
                    get_local $5
                    get_local $2
                    i32.store
                    get_local $7
                    get_local $3
                    i32.store
                    get_local $2
                    set_local $4
                  end ;; $block_4
                else
                  call $_abort
                end ;; $if_5
              end ;; $block_3
            end ;; $_35
          end ;; $do-once0
          get_local $10
          if $if_6
            block $block_5
              get_local $6
              get_local $6
              i32.load offset=28
              tee_local $2
              i32.const 2
              i32.shl
              i32.const 17968
              i32.add
              tee_local $3
              i32.load
              i32.eq
              if $if_7
                block $block_6
                  get_local $3
                  get_local $4
                  i32.store
                  get_local $4
                  i32.eqz
                  if $if_8
                    block $block_7
                      i32.const 17668
                      i32.const 17668
                      i32.load
                      i32.const 1
                      get_local $2
                      i32.shl
                      i32.const -1
                      i32.xor
                      i32.and
                      i32.store
                      br $do-once
                    end ;; $block_7
                  end ;; $if_8
                end ;; $block_6
              else
                block $block_8
                  get_local $10
                  i32.const 17680
                  i32.load
                  i32.lt_u
                  if $if_9
                    call $_abort
                  end ;; $if_9
                  get_local $10
                  i32.const 16
                  i32.add
                  tee_local $2
                  i32.load
                  get_local $6
                  i32.eq
                  if $if_10
                    get_local $2
                    get_local $4
                    i32.store
                  else
                    get_local $10
                    get_local $4
                    i32.store offset=20
                  end ;; $if_10
                  get_local $4
                  i32.eqz
                  br_if $do-once
                end ;; $block_8
              end ;; $if_7
              get_local $4
              i32.const 17680
              i32.load
              tee_local $3
              i32.lt_u
              if $if_11
                call $_abort
              end ;; $if_11
              get_local $4
              get_local $10
              i32.store offset=24
              get_local $6
              i32.const 16
              i32.add
              tee_local $5
              i32.load
              tee_local $2
              if $if_12
                get_local $2
                get_local $3
                i32.lt_u
                if $if_13
                  call $_abort
                else
                  block $block_9
                    get_local $4
                    get_local $2
                    i32.store offset=16
                    get_local $2
                    get_local $4
                    i32.store offset=24
                  end ;; $block_9
                end ;; $if_13
              end ;; $if_12
              get_local $5
              i32.load offset=4
              tee_local $2
              if $if_14
                get_local $2
                i32.const 17680
                i32.load
                i32.lt_u
                if $if_15
                  call $_abort
                else
                  block $block_10
                    get_local $4
                    get_local $2
                    i32.store offset=20
                    get_local $2
                    get_local $4
                    i32.store offset=24
                  end ;; $block_10
                end ;; $if_15
              end ;; $if_14
            end ;; $block_5
          end ;; $if_6
        end ;; $_34
      end ;; $_22
    end ;; $do-once
    get_local $12
    i32.const 16
    i32.lt_u
    if $if_16 (result i32)
      block $block_11 (result i32)
        get_local $9
        get_local $13
        get_local $8
        i32.const 1
        i32.and
        i32.or
        i32.const 2
        i32.or
        i32.store
        get_local $0
        get_local $13
        i32.add
        i32.const 4
        i32.add
        tee_local $1
        get_local $1
        i32.load
        i32.const 1
        i32.or
        i32.store
        get_local $0
      end ;; $block_11
    else
      block $block_12 (result i32)
        get_local $9
        get_local $8
        i32.const 1
        i32.and
        get_local $1
        i32.or
        i32.const 2
        i32.or
        i32.store
        get_local $0
        get_local $1
        i32.add
        tee_local $1
        get_local $12
        i32.const 3
        i32.or
        i32.store offset=4
        get_local $1
        get_local $12
        i32.add
        i32.const 4
        i32.add
        tee_local $2
        get_local $2
        i32.load
        i32.const 1
        i32.or
        i32.store
        get_local $1
        get_local $12
        call $_dispose_chunk
        get_local $0
      end ;; $block_12
    end ;; $if_16
    )
  
  (func $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    get_local $0
    i32.load
    tee_local $6
    if $_1
      get_local $6
      i32.load offset=12
      get_local $6
      i32.load offset=16
      i32.eq
      if $_2
        get_local $6
        get_local $6
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_3 (result i32)
          block $_4 (result i32)
            get_local $0
            i32.const 0
            i32.store
            i32.const 0
          end ;; $_4
        else
          get_local $0
          i32.load
        end ;; $_3
        set_local $6
      end ;; $_2
    else
      i32.const 0
      set_local $6
    end ;; $_1
    get_local $6
    i32.eqz
    set_local $6
    block $label$break$L16 (result i32)
      block $__rjti$3
        block $__rjti$2
          block $__rjti$1
            get_local $1
            i32.load
            tee_local $5
            if $_5
              block $_6
                get_local $5
                i32.load offset=12
                get_local $5
                i32.load offset=16
                i32.eq
                if $_7
                  get_local $5
                  get_local $5
                  i32.load
                  i32.load offset=36
                  i32.const 63
                  i32.and
                  i32.const 312
                  i32.add
                  call_indirect (type $FUNCSIG$ii)
                  i32.const -1
                  i32.eq
                  if $_8
                    block $_9
                      get_local $1
                      i32.const 0
                      i32.store
                      br $__rjti$1
                    end ;; $_9
                  end ;; $_8
                end ;; $_7
                get_local $6
                i32.eqz
                br_if $__rjti$2
                br $__rjti$3
              end ;; $_6
            end ;; $_5
          end ;; $__rjti$1
          get_local $6
          i32.eqz
          if $_10
            block $_11
              i32.const 0
              set_local $5
              br $__rjti$3
            end ;; $_11
          end ;; $_10
        end ;; $__rjti$2
        get_local $2
        get_local $2
        i32.load
        i32.const 6
        i32.or
        i32.store
        i32.const 0
        br $label$break$L16
      end ;; $__rjti$3
      get_local $0
      i32.load
      tee_local $8
      i32.load offset=12
      tee_local $6
      get_local $8
      i32.load offset=16
      i32.eq
      if $_12 (result i32)
        get_local $8
        get_local $8
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $6
        i32.load8_s
      end ;; $_12
      tee_local $8
      i32.const 255
      i32.and
      tee_local $6
      i32.const 24
      i32.shl
      i32.const 24
      i32.shr_s
      i32.const -1
      i32.gt_s
      if $_13
        get_local $3
        i32.const 8
        i32.add
        tee_local $11
        i32.load
        get_local $8
        i32.const 24
        i32.shl
        i32.const 24
        i32.shr_s
        i32.const 1
        i32.shl
        i32.add
        i32.load16_s
        i32.const 2048
        i32.and
        if $_14
          block $_15
            get_local $3
            get_local $6
            i32.const 0
            get_local $3
            i32.load
            i32.load offset=36
            i32.const 31
            i32.and
            i32.const 8
            i32.add
            call_indirect (type $FUNCSIG$iiii)
            i32.const 24
            i32.shl
            i32.const 24
            i32.shr_s
            set_local $8
            get_local $0
            i32.load
            tee_local $7
            i32.const 12
            i32.add
            tee_local $9
            i32.load
            tee_local $6
            get_local $7
            i32.load offset=16
            i32.eq
            if $_16 (result i32)
              block $_17 (result i32)
                get_local $7
                get_local $7
                i32.load
                i32.load offset=40
                i32.const 63
                i32.and
                i32.const 312
                i32.add
                call_indirect (type $FUNCSIG$ii)
                drop
                get_local $4
                set_local $9
                get_local $5
              end ;; $_17
            else
              block $_18 (result i32)
                get_local $9
                get_local $6
                i32.const 1
                i32.add
                i32.store
                get_local $4
                set_local $9
                get_local $5
              end ;; $_18
            end ;; $_16
            set_local $4
            loop $while-in
              block $while-out
                get_local $0
                i32.load
                tee_local $7
                if $_19
                  get_local $7
                  i32.load offset=12
                  get_local $7
                  i32.load offset=16
                  i32.eq
                  if $_20
                    get_local $7
                    get_local $7
                    i32.load
                    i32.load offset=36
                    i32.const 63
                    i32.and
                    i32.const 312
                    i32.add
                    call_indirect (type $FUNCSIG$ii)
                    i32.const -1
                    i32.eq
                    if $_21 (result i32)
                      block $_22 (result i32)
                        get_local $0
                        i32.const 0
                        i32.store
                        i32.const 0
                      end ;; $_22
                    else
                      get_local $0
                      i32.load
                    end ;; $_21
                    set_local $7
                  end ;; $_20
                else
                  i32.const 0
                  set_local $7
                end ;; $_19
                get_local $5
                if $_23 (result i32)
                  get_local $5
                  i32.load offset=12
                  get_local $5
                  i32.load offset=16
                  i32.eq
                  if $_24 (result i32)
                    get_local $5
                    get_local $5
                    i32.load
                    i32.load offset=36
                    i32.const 63
                    i32.and
                    i32.const 312
                    i32.add
                    call_indirect (type $FUNCSIG$ii)
                    i32.const -1
                    i32.eq
                    if $_25 (result i32)
                      block $_26 (result i32)
                        get_local $1
                        i32.const 0
                        i32.store
                        i32.const 0
                        set_local $5
                        i32.const 0
                      end ;; $_26
                    else
                      block $_27 (result i32)
                        get_local $4
                        set_local $5
                        get_local $4
                      end ;; $_27
                    end ;; $_25
                  else
                    get_local $4
                  end ;; $_24
                else
                  block $_28 (result i32)
                    i32.const 0
                    set_local $5
                    get_local $4
                  end ;; $_28
                end ;; $_23
                set_local $6
                get_local $8
                i32.const -48
                i32.add
                set_local $4
                get_local $0
                i32.load
                set_local $8
                get_local $9
                i32.const 1
                i32.gt_s
                get_local $7
                i32.eqz
                get_local $5
                i32.eqz
                i32.xor
                i32.and
                i32.eqz
                if $_29
                  block $_30
                    get_local $8
                    set_local $5
                    get_local $4
                    set_local $3
                    br $while-out
                  end ;; $_30
                end ;; $_29
                get_local $4
                get_local $8
                i32.load offset=12
                tee_local $7
                get_local $8
                i32.load offset=16
                i32.eq
                if $_31 (result i32)
                  get_local $8
                  get_local $8
                  i32.load
                  i32.load offset=36
                  i32.const 63
                  i32.and
                  i32.const 312
                  i32.add
                  call_indirect (type $FUNCSIG$ii)
                else
                  get_local $7
                  i32.load8_s
                end ;; $_31
                tee_local $7
                i32.const 255
                i32.and
                tee_local $8
                i32.const 24
                i32.shl
                i32.const 24
                i32.shr_s
                i32.const -1
                i32.le_s
                br_if $label$break$L16
                drop
                get_local $4
                get_local $11
                i32.load
                get_local $7
                i32.const 24
                i32.shl
                i32.const 24
                i32.shr_s
                i32.const 1
                i32.shl
                i32.add
                i32.load16_s
                i32.const 2048
                i32.and
                i32.eqz
                br_if $label$break$L16
                drop
                get_local $9
                i32.const -1
                i32.add
                set_local $9
                get_local $3
                get_local $8
                i32.const 0
                get_local $3
                i32.load
                i32.load offset=36
                i32.const 31
                i32.and
                i32.const 8
                i32.add
                call_indirect (type $FUNCSIG$iiii)
                i32.const 24
                i32.shl
                i32.const 24
                i32.shr_s
                get_local $4
                i32.const 10
                i32.mul
                i32.add
                set_local $8
                get_local $0
                i32.load
                tee_local $10
                i32.const 12
                i32.add
                tee_local $7
                i32.load
                tee_local $4
                get_local $10
                i32.load offset=16
                i32.eq
                if $_32
                  block $_33
                    get_local $10
                    get_local $10
                    i32.load
                    i32.load offset=40
                    i32.const 63
                    i32.and
                    i32.const 312
                    i32.add
                    call_indirect (type $FUNCSIG$ii)
                    drop
                    get_local $6
                    set_local $4
                    br $while-in
                  end ;; $_33
                else
                  block $_34
                    get_local $7
                    get_local $4
                    i32.const 1
                    i32.add
                    i32.store
                    get_local $6
                    set_local $4
                    br $while-in
                  end ;; $_34
                end ;; $_32
              end ;; $while-out
            end ;; $while-in
            get_local $5
            if $_35
              get_local $5
              i32.load offset=12
              get_local $5
              i32.load offset=16
              i32.eq
              if $_36
                get_local $5
                get_local $5
                i32.load
                i32.load offset=36
                i32.const 63
                i32.and
                i32.const 312
                i32.add
                call_indirect (type $FUNCSIG$ii)
                i32.const -1
                i32.eq
                if $_37 (result i32)
                  block $_38 (result i32)
                    get_local $0
                    i32.const 0
                    i32.store
                    i32.const 0
                  end ;; $_38
                else
                  get_local $0
                  i32.load
                end ;; $_37
                set_local $5
              end ;; $_36
            else
              i32.const 0
              set_local $5
            end ;; $_35
            get_local $5
            i32.eqz
            set_local $0
            block $__rjto$0
              block $__rjti$0
                get_local $6
                i32.eqz
                br_if $__rjti$0
                get_local $6
                i32.load offset=12
                get_local $6
                i32.load offset=16
                i32.eq
                if $if
                  get_local $6
                  get_local $6
                  i32.load
                  i32.load offset=36
                  i32.const 63
                  i32.and
                  i32.const 312
                  i32.add
                  call_indirect (type $FUNCSIG$ii)
                  i32.const -1
                  i32.eq
                  if $if_1
                    block $block
                      get_local $1
                      i32.const 0
                      i32.store
                      br $__rjti$0
                    end ;; $block
                  end ;; $if_1
                end ;; $if
                get_local $3
                get_local $0
                br_if $label$break$L16
                drop
                br $__rjto$0
              end ;; $__rjti$0
              get_local $3
              get_local $0
              i32.eqz
              br_if $label$break$L16
              drop
            end ;; $__rjto$0
            get_local $2
            get_local $2
            i32.load
            i32.const 2
            i32.or
            i32.store
            get_local $3
            br $label$break$L16
          end ;; $_15
        end ;; $_14
      end ;; $_13
      get_local $2
      get_local $2
      i32.load
      i32.const 4
      i32.or
      i32.store
      i32.const 0
    end ;; $label$break$L16
    tee_local $0
    )
  
  (func $_fmod (type $_6)
    (param $0 f64)
    (param $1 f64)
    (result f64)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    get_global $tempDoublePtr
    get_local $0
    f64.store
    get_global $tempDoublePtr
    i32.load
    set_local $7
    get_global $tempDoublePtr
    i32.load offset=4
    set_local $8
    get_global $tempDoublePtr
    get_local $1
    f64.store
    get_global $tempDoublePtr
    i32.load
    set_local $9
    get_global $tempDoublePtr
    i32.load offset=4
    set_local $5
    get_local $7
    get_local $8
    i32.const 52
    call $_bitshift64Lshr
    i32.const 2047
    i32.and
    set_local $4
    get_local $9
    get_local $5
    i32.const 52
    call $_bitshift64Lshr
    i32.const 2047
    i32.and
    set_local $11
    get_local $8
    i32.const -2147483648
    i32.and
    set_local $12
    block $__rjto$0 (result f64)
      block $__rjti$0
        get_local $9
        get_local $5
        i32.const 1
        call $_bitshift64Shl
        tee_local $10
        i32.eqz
        get_global $tempRet0
        tee_local $6
        i32.eqz
        i32.and
        br_if $__rjti$0
        get_global $tempDoublePtr
        get_local $1
        f64.abs
        f64.store
        get_global $tempDoublePtr
        i32.load offset=4
        tee_local $2
        i32.const 2146435072
        i32.gt_u
        get_local $2
        i32.const 2146435072
        i32.eq
        get_global $tempDoublePtr
        i32.load
        i32.const 0
        i32.gt_u
        i32.and
        i32.or
        get_local $4
        i32.const 2047
        i32.eq
        i32.or
        br_if $__rjti$0
        get_local $7
        get_local $8
        i32.const 1
        call $_bitshift64Shl
        set_local $3
        get_global $tempRet0
        tee_local $2
        get_local $6
        i32.gt_u
        get_local $2
        get_local $6
        i32.eq
        get_local $3
        get_local $10
        i32.gt_u
        i32.and
        i32.or
        i32.eqz
        if $_1
          get_local $3
          get_local $10
          i32.eq
          get_local $2
          get_local $6
          i32.eq
          i32.and
          if $_2 (result f64)
            get_local $0
            f64.const 0x0.0000000000000p+0
            f64.mul
          else
            get_local $0
          end ;; $_2
          return
        end ;; $_1
        get_local $4
        if $_3 (result i32)
          get_local $8
          i32.const 1048575
          i32.and
          i32.const 1048576
          i32.or
        else
          block $_4 (result i32)
            get_local $7
            get_local $8
            i32.const 12
            call $_bitshift64Shl
            set_local $2
            get_global $tempRet0
            tee_local $4
            i32.const -1
            i32.gt_s
            get_local $4
            i32.const -1
            i32.eq
            get_local $2
            i32.const -1
            i32.gt_u
            i32.and
            i32.or
            if $_5
              block $_6
                get_local $2
                set_local $3
                get_local $4
                set_local $2
                i32.const 0
                set_local $4
                loop $while-in
                  get_local $4
                  i32.const -1
                  i32.add
                  set_local $4
                  get_local $3
                  get_local $2
                  i32.const 1
                  call $_bitshift64Shl
                  set_local $3
                  get_global $tempRet0
                  tee_local $2
                  i32.const -1
                  i32.gt_s
                  get_local $2
                  i32.const -1
                  i32.eq
                  get_local $3
                  i32.const -1
                  i32.gt_u
                  i32.and
                  i32.or
                  br_if $while-in
                end ;; $while-in
              end ;; $_6
            else
              i32.const 0
              set_local $4
            end ;; $_5
            get_local $7
            get_local $8
            i32.const 1
            get_local $4
            i32.sub
            call $_bitshift64Shl
            set_local $7
            get_global $tempRet0
          end ;; $_4
        end ;; $_3
        set_local $10
        get_local $11
        if $_7 (result i32)
          get_local $5
          i32.const 1048575
          i32.and
          i32.const 1048576
          i32.or
        else
          block $_8 (result i32)
            get_local $9
            get_local $5
            i32.const 12
            call $_bitshift64Shl
            set_local $3
            get_global $tempRet0
            tee_local $2
            i32.const -1
            i32.gt_s
            get_local $2
            i32.const -1
            i32.eq
            get_local $3
            i32.const -1
            i32.gt_u
            i32.and
            i32.or
            if $_9
              block $_10
                get_local $3
                set_local $6
                get_local $2
                set_local $3
                i32.const 0
                set_local $2
                loop $while-in1
                  get_local $2
                  i32.const -1
                  i32.add
                  set_local $2
                  get_local $6
                  get_local $3
                  i32.const 1
                  call $_bitshift64Shl
                  set_local $6
                  get_global $tempRet0
                  tee_local $3
                  i32.const -1
                  i32.gt_s
                  get_local $3
                  i32.const -1
                  i32.eq
                  get_local $6
                  i32.const -1
                  i32.gt_u
                  i32.and
                  i32.or
                  br_if $while-in1
                end ;; $while-in1
              end ;; $_10
            else
              i32.const 0
              set_local $2
            end ;; $_9
            get_local $9
            get_local $5
            i32.const 1
            get_local $2
            i32.sub
            call $_bitshift64Shl
            set_local $9
            get_local $2
            set_local $11
            get_global $tempRet0
          end ;; $_8
        end ;; $_7
        set_local $8
        get_local $7
        get_local $10
        get_local $9
        get_local $8
        call $_i64Subtract
        set_local $2
        get_global $tempRet0
        tee_local $5
        i32.const -1
        i32.gt_s
        get_local $5
        i32.const -1
        i32.eq
        get_local $2
        i32.const -1
        i32.gt_u
        i32.and
        i32.or
        set_local $6
        block $label$break$L23
          get_local $4
          get_local $11
          i32.gt_s
          if $_11
            block $_12
              get_local $2
              set_local $3
              get_local $5
              set_local $2
              loop $while-in4
                block $while-out3
                  get_local $6
                  if $_13
                    get_local $7
                    get_local $9
                    i32.eq
                    get_local $10
                    get_local $8
                    i32.eq
                    i32.and
                    br_if $while-out3
                  else
                    block $_14
                      get_local $7
                      set_local $3
                      get_local $10
                      set_local $2
                    end ;; $_14
                  end ;; $_13
                  get_local $3
                  get_local $2
                  i32.const 1
                  call $_bitshift64Shl
                  tee_local $7
                  get_global $tempRet0
                  tee_local $10
                  get_local $9
                  get_local $8
                  call $_i64Subtract
                  set_local $3
                  get_global $tempRet0
                  tee_local $5
                  i32.const -1
                  i32.gt_s
                  get_local $5
                  i32.const -1
                  i32.eq
                  get_local $3
                  i32.const -1
                  i32.gt_u
                  i32.and
                  i32.or
                  set_local $2
                  get_local $4
                  i32.const -1
                  i32.add
                  tee_local $4
                  get_local $11
                  i32.gt_s
                  if $_15
                    block $_16
                      get_local $2
                      set_local $6
                      get_local $5
                      set_local $2
                      br $while-in4
                    end ;; $_16
                  else
                    block $_17
                      get_local $2
                      set_local $6
                      get_local $3
                      set_local $2
                      get_local $5
                      set_local $3
                      br $label$break$L23
                    end ;; $_17
                  end ;; $_15
                end ;; $while-out3
              end ;; $while-in4
              get_local $0
              f64.const 0x0.0000000000000p+0
              f64.mul
              br $__rjto$0
            end ;; $_12
          else
            get_local $5
            set_local $3
          end ;; $_11
        end ;; $label$break$L23
        get_local $6
        if $_18
          get_local $0
          f64.const 0x0.0000000000000p+0
          f64.mul
          get_local $7
          get_local $9
          i32.eq
          get_local $10
          get_local $8
          i32.eq
          i32.and
          br_if $__rjto$0
          drop
        else
          block $_19
            get_local $10
            set_local $3
            get_local $7
            set_local $2
          end ;; $_19
        end ;; $_18
        get_local $3
        i32.const 1048576
        i32.lt_u
        get_local $3
        i32.const 1048576
        i32.eq
        get_local $2
        i32.const 0
        i32.lt_u
        i32.and
        i32.or
        if $_20
          loop $while-in6
            get_local $2
            get_local $3
            i32.const 1
            call $_bitshift64Shl
            set_local $2
            get_local $4
            i32.const -1
            i32.add
            set_local $4
            get_global $tempRet0
            tee_local $3
            i32.const 1048576
            i32.lt_u
            get_local $3
            i32.const 1048576
            i32.eq
            get_local $2
            i32.const 0
            i32.lt_u
            i32.and
            i32.or
            br_if $while-in6
          end ;; $while-in6
        end ;; $_20
        get_local $4
        i32.const 0
        i32.gt_s
        if $if (result i32)
          block $block (result i32)
            get_local $2
            get_local $3
            i32.const 0
            i32.const -1048576
            call $_i64Add
            set_local $3
            get_global $tempRet0
            set_local $2
            get_local $3
            get_local $4
            i32.const 0
            i32.const 52
            call $_bitshift64Shl
            tee_local $4
            i32.or
            set_local $4
            get_local $2
            get_global $tempRet0
            i32.or
          end ;; $block
        else
          block $block_1 (result i32)
            get_local $2
            get_local $3
            i32.const 1
            get_local $4
            i32.sub
            call $_bitshift64Lshr
            set_local $4
            get_global $tempRet0
          end ;; $block_1
        end ;; $if
        set_local $2
        get_global $tempDoublePtr
        get_local $4
        i32.store
        get_global $tempDoublePtr
        get_local $2
        get_local $12
        i32.or
        i32.store offset=4
        get_global $tempDoublePtr
        f64.load
        br $__rjto$0
      end ;; $__rjti$0
      get_local $0
      get_local $1
      f64.mul
      tee_local $0
      get_local $0
      f64.div
    end ;; $__rjto$0
    tee_local $0
    )
  
  (func $__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe (type $FUNCSIG$iiiiiid)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 f64)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 1008
    i32.add
    set_global $STACKTOP
    get_local $7
    set_local $0
    get_local $7
    i32.const 488
    i32.add
    set_local $10
    get_local $7
    i32.const 888
    i32.add
    tee_local $8
    get_local $7
    i32.const 896
    i32.add
    tee_local $13
    i32.store
    get_local $7
    i32.const 8
    i32.add
    tee_local $15
    get_local $5
    f64.store
    get_local $13
    i32.const 100
    i32.const 15437
    get_local $15
    call $_snprintf
    tee_local $6
    i32.const 99
    i32.gt_u
    if $_1 (result i32)
      block $_2 (result i32)
        call $__ZNSt3__26__clocEv
        set_local $10
        get_local $0
        get_local $5
        f64.store
        get_local $8
        get_local $10
        i32.const 15437
        get_local $0
        call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
        set_local $6
        get_local $8
        i32.load
        tee_local $0
        i32.eqz
        if $_3
          get_local $8
          i32.load
          set_local $0
        end ;; $_3
        get_local $6
        i32.const 2
        i32.shl
        call $_malloc
        tee_local $10
        set_local $13
        get_local $10
        if $_4 (result i32)
          block $_5 (result i32)
            get_local $0
            set_local $14
            get_local $6
          end ;; $_5
        else
          block $_6 (result i32)
            i32.const 0
            set_local $10
            get_local $0
            set_local $14
            get_local $6
          end ;; $_6
        end ;; $_4
      end ;; $_2
    else
      block $_7 (result i32)
        i32.const 0
        set_local $13
        i32.const 0
        set_local $14
        get_local $6
      end ;; $_7
    end ;; $_1
    set_local $0
    get_local $7
    i32.const 480
    i32.add
    tee_local $16
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $22
    i32.store
    get_local $16
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $17
    get_local $8
    i32.load
    tee_local $6
    get_local $6
    get_local $0
    i32.add
    get_local $10
    get_local $17
    i32.load
    i32.load offset=48
    i32.const 7
    i32.and
    i32.const 397
    i32.add
    call_indirect (type $FUNCSIG$iiiii)
    drop
    get_local $0
    if $_8 (result i32)
      get_local $8
      i32.load
      i32.load8_s
      i32.const 45
      i32.eq
    else
      i32.const 0
    end ;; $_8
    set_local $18
    get_local $7
    i32.const 892
    i32.add
    set_local $19
    get_local $7
    i32.const 476
    i32.add
    set_local $20
    get_local $7
    i32.const 472
    i32.add
    set_local $21
    get_local $7
    i32.const 448
    i32.add
    set_local $8
    get_local $7
    i32.const 436
    i32.add
    set_local $9
    get_local $7
    i32.const 432
    i32.add
    set_local $11
    get_local $7
    i32.const 460
    i32.add
    tee_local $12
    i32.const 0
    i32.store
    get_local $12
    i32.const 0
    i32.store offset=4
    get_local $12
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $6
    loop $while-in
      get_local $6
      i32.const 3
      i32.ne
      if $_9
        block $_10
          get_local $12
          get_local $6
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $6
          i32.const 1
          i32.add
          set_local $6
          br $while-in
        end ;; $_10
      end ;; $_9
    end ;; $while-in
    get_local $8
    i32.const 0
    i32.store
    get_local $8
    i32.const 0
    i32.store offset=4
    get_local $8
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $6
    loop $while-in1
      get_local $6
      i32.const 3
      i32.ne
      if $_11
        block $_12
          get_local $8
          get_local $6
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $6
          i32.const 1
          i32.add
          set_local $6
          br $while-in1
        end ;; $_12
      end ;; $_11
    end ;; $while-in1
    get_local $9
    i32.const 0
    i32.store
    get_local $9
    i32.const 0
    i32.store offset=4
    get_local $9
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $6
    loop $while-in3
      get_local $6
      i32.const 3
      i32.ne
      if $if
        block $block
          get_local $9
          get_local $6
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $6
          i32.const 1
          i32.add
          set_local $6
          br $while-in3
        end ;; $block
      end ;; $if
    end ;; $while-in3
    get_local $2
    get_local $18
    get_local $16
    get_local $19
    get_local $20
    get_local $21
    get_local $12
    get_local $8
    get_local $9
    get_local $11
    call $__ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri
    get_local $0
    get_local $11
    i32.load
    tee_local $11
    i32.gt_s
    if $if_1 (result i32)
      block $block_1 (result i32)
        get_local $8
        i32.load8_s offset=11
        set_local $2
        get_local $9
        i32.load8_s offset=11
        tee_local $6
        i32.const 0
        i32.lt_s
        if $if_2 (result i32)
          get_local $9
          i32.load offset=4
        else
          get_local $6
          i32.const 255
          i32.and
        end ;; $if_2
        get_local $0
        get_local $11
        i32.sub
        i32.const 1
        i32.shl
        i32.const 1
        i32.or
        i32.add
        get_local $2
        i32.const 0
        i32.lt_s
        if $if_3 (result i32)
          get_local $8
          i32.load offset=4
        else
          get_local $2
          i32.const 255
          i32.and
        end ;; $if_3
        i32.add
      end ;; $block_1
    else
      block $block_2 (result i32)
        get_local $8
        i32.load8_s offset=11
        set_local $2
        get_local $9
        i32.load8_s offset=11
        tee_local $6
        i32.const 0
        i32.lt_s
        if $if_4 (result i32)
          get_local $9
          i32.load offset=4
        else
          get_local $6
          i32.const 255
          i32.and
        end ;; $if_4
        i32.const 2
        i32.add
        get_local $2
        i32.const 0
        i32.lt_s
        if $if_5 (result i32)
          get_local $8
          i32.load offset=4
        else
          get_local $2
          i32.const 255
          i32.and
        end ;; $if_5
        i32.add
      end ;; $block_2
    end ;; $if_1
    set_local $2
    get_local $7
    i32.const 32
    i32.add
    set_local $6
    get_local $2
    get_local $11
    i32.add
    tee_local $2
    i32.const 100
    i32.gt_u
    if $if_6
      block $block_3
        get_local $2
        i32.const 2
        i32.shl
        call $_malloc
        tee_local $6
        set_local $2
        get_local $6
        i32.eqz
        if $if_7
          i32.const 0
          set_local $6
        end ;; $if_7
      end ;; $block_3
    else
      i32.const 0
      set_local $2
    end ;; $if_6
    get_local $6
    get_local $7
    i32.const 24
    i32.add
    tee_local $23
    get_local $7
    i32.const 16
    i32.add
    tee_local $24
    get_local $3
    i32.load offset=4
    get_local $10
    get_local $10
    get_local $0
    i32.const 2
    i32.shl
    i32.add
    get_local $17
    get_local $18
    get_local $19
    get_local $20
    i32.load
    get_local $21
    i32.load
    get_local $12
    get_local $8
    get_local $9
    get_local $11
    call $__ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i
    get_local $7
    i32.const 20
    i32.add
    tee_local $0
    get_local $1
    i32.load
    i32.store
    get_local $23
    i32.load
    set_local $1
    get_local $24
    i32.load
    set_local $10
    get_local $15
    get_local $0
    i32.load
    i32.store
    get_local $15
    get_local $6
    get_local $1
    get_local $10
    get_local $3
    get_local $4
    call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $1
    get_local $2
    if $if_8 (result i32)
      block $block_4 (result i32)
        get_local $2
        call $_free
        get_local $16
        i32.load
      end ;; $block_4
    else
      get_local $22
    end ;; $if_8
    set_local $0
    get_local $9
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $8
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $12
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $0
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $13
    if $if_9
      get_local $13
      call $_free
    end ;; $if_9
    get_local $14
    if $if_10
      get_local $14
      call $_free
    end ;; $if_10
    get_local $7
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce (type $FUNCSIG$iiiiiid)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 f64)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 384
    i32.add
    set_global $STACKTOP
    get_local $7
    set_local $0
    get_local $7
    i32.const 184
    i32.add
    set_local $10
    get_local $7
    i32.const 72
    i32.add
    tee_local $8
    get_local $7
    i32.const 284
    i32.add
    tee_local $13
    i32.store
    get_local $7
    i32.const 8
    i32.add
    tee_local $15
    get_local $5
    f64.store
    get_local $13
    i32.const 100
    i32.const 15437
    get_local $15
    call $_snprintf
    tee_local $6
    i32.const 99
    i32.gt_u
    if $_1 (result i32)
      block $_2 (result i32)
        call $__ZNSt3__26__clocEv
        set_local $10
        get_local $0
        get_local $5
        f64.store
        get_local $8
        get_local $10
        i32.const 15437
        get_local $0
        call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
        set_local $6
        get_local $8
        i32.load
        tee_local $0
        i32.eqz
        if $_3
          get_local $8
          i32.load
          set_local $0
        end ;; $_3
        get_local $6
        call $_malloc
        tee_local $10
        set_local $13
        get_local $10
        if $_4 (result i32)
          block $_5 (result i32)
            get_local $0
            set_local $14
            get_local $6
          end ;; $_5
        else
          block $_6 (result i32)
            i32.const 0
            set_local $10
            get_local $0
            set_local $14
            get_local $6
          end ;; $_6
        end ;; $_4
      end ;; $_2
    else
      block $_7 (result i32)
        i32.const 0
        set_local $13
        i32.const 0
        set_local $14
        get_local $6
      end ;; $_7
    end ;; $_1
    set_local $0
    get_local $7
    i32.const 68
    i32.add
    tee_local $16
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $22
    i32.store
    get_local $16
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $17
    get_local $8
    i32.load
    tee_local $6
    get_local $6
    get_local $0
    i32.add
    get_local $10
    get_local $17
    i32.load
    i32.load offset=32
    i32.const 7
    i32.and
    i32.const 397
    i32.add
    call_indirect (type $FUNCSIG$iiiii)
    drop
    get_local $0
    if $_8 (result i32)
      get_local $8
      i32.load
      i32.load8_s
      i32.const 45
      i32.eq
    else
      i32.const 0
    end ;; $_8
    set_local $18
    get_local $7
    i32.const 180
    i32.add
    set_local $19
    get_local $7
    i32.const 177
    i32.add
    set_local $20
    get_local $7
    i32.const 176
    i32.add
    set_local $21
    get_local $7
    i32.const 44
    i32.add
    set_local $8
    get_local $7
    i32.const 32
    i32.add
    set_local $9
    get_local $7
    i32.const 28
    i32.add
    set_local $11
    get_local $7
    i32.const 56
    i32.add
    tee_local $12
    i32.const 0
    i32.store
    get_local $12
    i32.const 0
    i32.store offset=4
    get_local $12
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $6
    loop $while-in
      get_local $6
      i32.const 3
      i32.ne
      if $_9
        block $_10
          get_local $12
          get_local $6
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $6
          i32.const 1
          i32.add
          set_local $6
          br $while-in
        end ;; $_10
      end ;; $_9
    end ;; $while-in
    get_local $8
    i32.const 0
    i32.store
    get_local $8
    i32.const 0
    i32.store offset=4
    get_local $8
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $6
    loop $while-in1
      get_local $6
      i32.const 3
      i32.ne
      if $_11
        block $_12
          get_local $8
          get_local $6
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $6
          i32.const 1
          i32.add
          set_local $6
          br $while-in1
        end ;; $_12
      end ;; $_11
    end ;; $while-in1
    get_local $9
    i32.const 0
    i32.store
    get_local $9
    i32.const 0
    i32.store offset=4
    get_local $9
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $6
    loop $while-in3
      get_local $6
      i32.const 3
      i32.ne
      if $if
        block $block
          get_local $9
          get_local $6
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $6
          i32.const 1
          i32.add
          set_local $6
          br $while-in3
        end ;; $block
      end ;; $if
    end ;; $while-in3
    get_local $2
    get_local $18
    get_local $16
    get_local $19
    get_local $20
    get_local $21
    get_local $12
    get_local $8
    get_local $9
    get_local $11
    call $__ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri
    get_local $0
    get_local $11
    i32.load
    tee_local $11
    i32.gt_s
    if $if_1 (result i32)
      block $block_1 (result i32)
        get_local $8
        i32.load8_s offset=11
        set_local $2
        get_local $9
        i32.load8_s offset=11
        tee_local $6
        i32.const 0
        i32.lt_s
        if $if_2 (result i32)
          get_local $9
          i32.load offset=4
        else
          get_local $6
          i32.const 255
          i32.and
        end ;; $if_2
        get_local $0
        get_local $11
        i32.sub
        i32.const 1
        i32.shl
        i32.const 1
        i32.or
        i32.add
        get_local $2
        i32.const 0
        i32.lt_s
        if $if_3 (result i32)
          get_local $8
          i32.load offset=4
        else
          get_local $2
          i32.const 255
          i32.and
        end ;; $if_3
        i32.add
      end ;; $block_1
    else
      block $block_2 (result i32)
        get_local $8
        i32.load8_s offset=11
        set_local $2
        get_local $9
        i32.load8_s offset=11
        tee_local $6
        i32.const 0
        i32.lt_s
        if $if_4 (result i32)
          get_local $9
          i32.load offset=4
        else
          get_local $6
          i32.const 255
          i32.and
        end ;; $if_4
        i32.const 2
        i32.add
        get_local $2
        i32.const 0
        i32.lt_s
        if $if_5 (result i32)
          get_local $8
          i32.load offset=4
        else
          get_local $2
          i32.const 255
          i32.and
        end ;; $if_5
        i32.add
      end ;; $block_2
    end ;; $if_1
    set_local $2
    get_local $7
    i32.const 76
    i32.add
    set_local $6
    get_local $2
    get_local $11
    i32.add
    tee_local $2
    i32.const 100
    i32.gt_u
    if $if_6
      block $block_3
        get_local $2
        call $_malloc
        tee_local $6
        set_local $2
        get_local $6
        i32.eqz
        if $if_7
          i32.const 0
          set_local $6
        end ;; $if_7
      end ;; $block_3
    else
      i32.const 0
      set_local $2
    end ;; $if_6
    get_local $6
    get_local $7
    i32.const 24
    i32.add
    tee_local $23
    get_local $7
    i32.const 16
    i32.add
    tee_local $24
    get_local $3
    i32.load offset=4
    get_local $10
    get_local $10
    get_local $0
    i32.add
    get_local $17
    get_local $18
    get_local $19
    get_local $20
    i32.load8_s
    get_local $21
    i32.load8_s
    get_local $12
    get_local $8
    get_local $9
    get_local $11
    call $__ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i
    get_local $7
    i32.const 20
    i32.add
    tee_local $0
    get_local $1
    i32.load
    i32.store
    get_local $23
    i32.load
    set_local $1
    get_local $24
    i32.load
    set_local $10
    get_local $15
    get_local $0
    i32.load
    i32.store
    get_local $15
    get_local $6
    get_local $1
    get_local $10
    get_local $3
    get_local $4
    call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $1
    get_local $2
    if $if_8 (result i32)
      block $block_4 (result i32)
        get_local $2
        call $_free
        get_local $16
        i32.load
      end ;; $block_4
    else
      get_local $22
    end ;; $if_8
    set_local $0
    get_local $9
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $8
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $12
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $0
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $13
    if $if_9
      get_local $13
      call $_free
    end ;; $if_9
    get_local $14
    if $if_10
      get_local $14
      call $_free
    end ;; $if_10
    get_local $7
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    get_local $1
    set_local $10
    get_local $4
    i32.const 4
    i32.and
    if $_1 (result i32)
      get_local $10
      get_local $0
      i32.sub
      i32.const 2
      i32.gt_s
      if $_2 (result i32)
        get_local $0
        i32.load8_s
        i32.const -17
        i32.eq
        if $_3 (result i32)
          get_local $0
          i32.load8_s offset=1
          i32.const -69
          i32.eq
          if $_4 (result i32)
            block $_5 (result i32)
              i32.const 0
              set_local $6
              get_local $0
              i32.load8_s offset=2
              i32.const -65
              i32.eq
              if $_6 (result i32)
                get_local $0
                i32.const 3
                i32.add
              else
                get_local $0
              end ;; $_6
            end ;; $_5
          else
            block $_7 (result i32)
              i32.const 0
              set_local $6
              get_local $0
            end ;; $_7
          end ;; $_4
        else
          block $_8 (result i32)
            i32.const 0
            set_local $6
            get_local $0
          end ;; $_8
        end ;; $_3
      else
        block $_9 (result i32)
          i32.const 0
          set_local $6
          get_local $0
        end ;; $_9
      end ;; $_2
    else
      block $_10 (result i32)
        i32.const 0
        set_local $6
        get_local $0
      end ;; $_10
    end ;; $_1
    set_local $4
    block $__rjto$6 (result i32)
      block $__rjti$6
        block $__rjti$5
          block $__rjti$4
            block $__rjti$3
              block $__rjti$2
                block $__rjti$1
                  block $__rjti$0
                    loop $label$continue$L6
                      get_local $6
                      get_local $2
                      i32.lt_u
                      get_local $4
                      get_local $1
                      i32.lt_u
                      i32.and
                      i32.eqz
                      br_if $__rjti$6
                      get_local $4
                      i32.load8_s
                      tee_local $5
                      i32.const 255
                      i32.and
                      tee_local $8
                      get_local $3
                      i32.gt_u
                      br_if $__rjti$6
                      block $do-once (result i32)
                        get_local $5
                        i32.const -1
                        i32.gt_s
                        if $_11 (result i32)
                          get_local $4
                          i32.const 1
                          i32.add
                        else
                          block $_12 (result i32)
                            get_local $5
                            i32.const 255
                            i32.and
                            i32.const 194
                            i32.lt_s
                            br_if $__rjti$6
                            get_local $5
                            i32.const 255
                            i32.and
                            i32.const 224
                            i32.lt_s
                            if $_13
                              block $_14
                                get_local $10
                                get_local $4
                                i32.sub
                                i32.const 2
                                i32.lt_s
                                br_if $__rjti$6
                                get_local $4
                                i32.load8_u offset=1
                                tee_local $5
                                i32.const 192
                                i32.and
                                i32.const 128
                                i32.ne
                                br_if $__rjti$6
                                get_local $5
                                i32.const 63
                                i32.and
                                get_local $8
                                i32.const 6
                                i32.shl
                                i32.const 1984
                                i32.and
                                i32.or
                                get_local $3
                                i32.gt_u
                                br_if $__rjti$6
                                get_local $4
                                i32.const 2
                                i32.add
                                br $do-once
                              end ;; $_14
                            end ;; $_13
                            get_local $5
                            i32.const 255
                            i32.and
                            i32.const 240
                            i32.lt_s
                            if $_15
                              block $_16
                                get_local $10
                                get_local $4
                                tee_local $5
                                i32.sub
                                i32.const 3
                                i32.lt_s
                                br_if $__rjti$6
                                get_local $4
                                i32.load8_s offset=1
                                set_local $7
                                get_local $4
                                i32.load8_u offset=2
                                set_local $9
                                block $switch
                                  block $switch-default
                                    block $switch-case0
                                      block $switch-case
                                        get_local $8
                                        i32.const 224
                                        i32.sub
                                        br_table
                                          $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0
                                          $switch-default ;; default
                                      end ;; $switch-case
                                      get_local $7
                                      i32.const 224
                                      i32.and
                                      i32.const 160
                                      i32.ne
                                      br_if $__rjti$0
                                      br $switch
                                    end ;; $switch-case0
                                    get_local $7
                                    i32.const 224
                                    i32.and
                                    i32.const 128
                                    i32.ne
                                    br_if $__rjti$1
                                    br $switch
                                  end ;; $switch-default
                                  get_local $7
                                  i32.const 192
                                  i32.and
                                  i32.const 128
                                  i32.ne
                                  br_if $__rjti$2
                                end ;; $switch
                                get_local $9
                                tee_local $5
                                i32.const 192
                                i32.and
                                i32.const 128
                                i32.ne
                                br_if $__rjti$6
                                get_local $7
                                i32.const 255
                                i32.and
                                i32.const 6
                                i32.shl
                                i32.const 4032
                                i32.and
                                get_local $8
                                i32.const 12
                                i32.shl
                                i32.const 61440
                                i32.and
                                i32.or
                                get_local $5
                                i32.const 63
                                i32.and
                                i32.or
                                get_local $3
                                i32.gt_u
                                br_if $__rjti$6
                                get_local $4
                                i32.const 3
                                i32.add
                                br $do-once
                              end ;; $_16
                            end ;; $_15
                            get_local $5
                            i32.const 255
                            i32.and
                            i32.const 245
                            i32.ge_s
                            br_if $__rjti$6
                            get_local $2
                            get_local $6
                            i32.sub
                            i32.const 2
                            i32.lt_u
                            get_local $10
                            get_local $4
                            tee_local $5
                            i32.sub
                            i32.const 4
                            i32.lt_s
                            i32.or
                            br_if $__rjti$6
                            get_local $4
                            i32.load8_s offset=1
                            set_local $7
                            get_local $4
                            i32.load8_u offset=2
                            set_local $9
                            get_local $4
                            i32.load8_u offset=3
                            set_local $11
                            block $switch1
                              block $switch-default4
                                block $switch-case3
                                  block $switch-case2
                                    get_local $8
                                    i32.const 240
                                    i32.sub
                                    br_table
                                      $switch-case2 $switch-default4 $switch-default4 $switch-default4 $switch-case3
                                      $switch-default4 ;; default
                                  end ;; $switch-case2
                                  get_local $7
                                  i32.const 112
                                  i32.add
                                  i32.const 255
                                  i32.and
                                  i32.const 48
                                  i32.ge_s
                                  br_if $__rjti$3
                                  br $switch1
                                end ;; $switch-case3
                                get_local $7
                                i32.const 240
                                i32.and
                                i32.const 128
                                i32.ne
                                br_if $__rjti$4
                                br $switch1
                              end ;; $switch-default4
                              get_local $7
                              i32.const 192
                              i32.and
                              i32.const 128
                              i32.ne
                              br_if $__rjti$5
                            end ;; $switch1
                            get_local $9
                            tee_local $5
                            i32.const 192
                            i32.and
                            i32.const 128
                            i32.ne
                            br_if $__rjti$6
                            get_local $11
                            tee_local $9
                            i32.const 192
                            i32.and
                            i32.const 128
                            i32.ne
                            br_if $__rjti$6
                            get_local $7
                            i32.const 255
                            i32.and
                            i32.const 12
                            i32.shl
                            i32.const 258048
                            i32.and
                            get_local $8
                            i32.const 18
                            i32.shl
                            i32.const 1835008
                            i32.and
                            i32.or
                            get_local $5
                            i32.const 6
                            i32.shl
                            i32.const 4032
                            i32.and
                            i32.or
                            get_local $9
                            i32.const 63
                            i32.and
                            i32.or
                            get_local $3
                            i32.gt_u
                            br_if $__rjti$6
                            get_local $6
                            i32.const 1
                            i32.add
                            set_local $6
                            get_local $4
                            i32.const 4
                            i32.add
                          end ;; $_12
                        end ;; $_11
                      end ;; $do-once
                      set_local $4
                      get_local $6
                      i32.const 1
                      i32.add
                      set_local $6
                      br $label$continue$L6
                    end ;; $label$continue$L6
                  end ;; $__rjti$0
                  get_local $5
                  get_local $0
                  i32.sub
                  br $__rjto$6
                end ;; $__rjti$1
                get_local $5
                get_local $0
                i32.sub
                br $__rjto$6
              end ;; $__rjti$2
              get_local $5
              get_local $0
              i32.sub
              br $__rjto$6
            end ;; $__rjti$3
            get_local $5
            get_local $0
            i32.sub
            br $__rjto$6
          end ;; $__rjti$4
          get_local $5
          get_local $0
          i32.sub
          br $__rjto$6
        end ;; $__rjti$5
        get_local $5
        get_local $0
        i32.sub
        br $__rjto$6
      end ;; $__rjti$6
      get_local $4
      get_local $0
      i32.sub
    end ;; $__rjto$6
    tee_local $0
    )
  
  (func $__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 480
    i32.add
    set_global $STACKTOP
    get_local $7
    i32.const 464
    i32.add
    tee_local $15
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $18
    i32.store
    get_local $15
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $16
    get_local $5
    i32.const 4
    i32.add
    set_local $13
    get_local $5
    i32.const 11
    i32.add
    tee_local $14
    i32.load8_s
    tee_local $10
    i32.const 0
    i32.lt_s
    tee_local $0
    if $_1 (result i32)
      get_local $13
      i32.load
    else
      get_local $10
      i32.const 255
      i32.and
    end ;; $_1
    if $_2 (result i32)
      get_local $0
      if $_3 (result i32)
        get_local $5
        i32.load
      else
        get_local $5
      end ;; $_3
      i32.load
      get_local $16
      i32.const 45
      get_local $16
      i32.load
      i32.load offset=44
      i32.const 15
      i32.and
      i32.const 413
      i32.add
      call_indirect (type $FUNCSIG$iii)
      i32.eq
    else
      i32.const 0
    end ;; $_2
    set_local $19
    get_local $7
    i32.const 472
    i32.add
    set_local $20
    get_local $7
    i32.const 460
    i32.add
    set_local $21
    get_local $7
    i32.const 456
    i32.add
    set_local $22
    get_local $7
    i32.const 432
    i32.add
    set_local $8
    get_local $7
    i32.const 420
    i32.add
    set_local $9
    get_local $7
    i32.const 416
    i32.add
    set_local $6
    get_local $7
    i32.const 444
    i32.add
    tee_local $12
    i32.const 0
    i32.store
    get_local $12
    i32.const 0
    i32.store offset=4
    get_local $12
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_4
        block $_5
          get_local $12
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_5
      end ;; $_4
    end ;; $while-in
    get_local $8
    i32.const 0
    i32.store
    get_local $8
    i32.const 0
    i32.store offset=4
    get_local $8
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in1
      get_local $0
      i32.const 3
      i32.ne
      if $_6
        block $_7
          get_local $8
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in1
        end ;; $_7
      end ;; $_6
    end ;; $while-in1
    get_local $9
    i32.const 0
    i32.store
    get_local $9
    i32.const 0
    i32.store offset=4
    get_local $9
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in3
      get_local $0
      i32.const 3
      i32.ne
      if $if
        block $block
          get_local $9
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in3
        end ;; $block
      end ;; $if
    end ;; $while-in3
    get_local $2
    get_local $19
    get_local $15
    get_local $20
    get_local $21
    get_local $22
    get_local $12
    get_local $8
    get_local $9
    get_local $6
    call $__ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri
    get_local $13
    i32.load
    set_local $0
    get_local $14
    i32.load8_s
    tee_local $10
    i32.const 0
    i32.lt_s
    if $if_1 (result i32)
      get_local $0
    else
      get_local $10
      i32.const 255
      i32.and
    end ;; $if_1
    tee_local $2
    get_local $6
    i32.load
    tee_local $17
    i32.gt_s
    if $if_2 (result i32)
      block $block_1 (result i32)
        get_local $8
        i32.load8_s offset=11
        set_local $11
        get_local $9
        i32.load8_s offset=11
        tee_local $6
        i32.const 0
        i32.lt_s
        if $if_3 (result i32)
          get_local $9
          i32.load offset=4
        else
          get_local $6
          i32.const 255
          i32.and
        end ;; $if_3
        get_local $2
        get_local $17
        i32.sub
        i32.const 1
        i32.shl
        i32.const 1
        i32.or
        i32.add
        get_local $11
        i32.const 0
        i32.lt_s
        if $if_4 (result i32)
          get_local $8
          i32.load offset=4
        else
          get_local $11
          i32.const 255
          i32.and
        end ;; $if_4
        i32.add
      end ;; $block_1
    else
      block $block_2 (result i32)
        get_local $8
        i32.load8_s offset=11
        set_local $6
        get_local $9
        i32.load8_s offset=11
        tee_local $2
        i32.const 0
        i32.lt_s
        if $if_5 (result i32)
          get_local $9
          i32.load offset=4
        else
          get_local $2
          i32.const 255
          i32.and
        end ;; $if_5
        i32.const 2
        i32.add
        get_local $6
        i32.const 0
        i32.lt_s
        if $if_6 (result i32)
          get_local $8
          i32.load offset=4
        else
          get_local $6
          i32.const 255
          i32.and
        end ;; $if_6
        i32.add
      end ;; $block_2
    end ;; $if_2
    set_local $6
    get_local $7
    i32.const 16
    i32.add
    set_local $2
    get_local $6
    get_local $17
    i32.add
    tee_local $6
    i32.const 100
    i32.gt_u
    if $if_7
      block $block_3
        get_local $6
        i32.const 2
        i32.shl
        call $_malloc
        tee_local $11
        set_local $2
        get_local $11
        if $if_8 (result i32)
          block $block_4 (result i32)
            get_local $10
            set_local $6
            get_local $2
            set_local $10
            get_local $11
          end ;; $block_4
        else
          block $block_5 (result i32)
            get_local $14
            i32.load8_s
            set_local $6
            get_local $13
            i32.load
            set_local $0
            get_local $2
            set_local $10
            i32.const 0
          end ;; $block_5
        end ;; $if_8
        set_local $2
      end ;; $block_3
    else
      block $block_6
        get_local $10
        set_local $6
        i32.const 0
        set_local $10
      end ;; $block_6
    end ;; $if_7
    get_local $7
    i32.const 468
    i32.add
    set_local $23
    get_local $7
    set_local $11
    get_local $2
    get_local $7
    i32.const 8
    i32.add
    tee_local $24
    get_local $7
    i32.const 4
    i32.add
    tee_local $13
    get_local $3
    i32.load offset=4
    get_local $6
    i32.const 24
    i32.shl
    i32.const 24
    i32.shr_s
    i32.const 0
    i32.lt_s
    tee_local $14
    if $if_9 (result i32)
      get_local $5
      i32.load
      tee_local $5
    else
      get_local $5
    end ;; $if_9
    get_local $5
    get_local $14
    if $if_10 (result i32)
      get_local $0
    else
      get_local $6
      i32.const 255
      i32.and
    end ;; $if_10
    i32.const 2
    i32.shl
    i32.add
    get_local $16
    get_local $19
    get_local $20
    get_local $21
    i32.load
    get_local $22
    i32.load
    get_local $12
    get_local $8
    get_local $9
    get_local $17
    call $__ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i
    get_local $11
    get_local $1
    i32.load
    i32.store
    get_local $24
    i32.load
    set_local $1
    get_local $13
    i32.load
    set_local $0
    get_local $23
    get_local $11
    i32.load
    i32.store
    get_local $23
    get_local $2
    get_local $1
    get_local $0
    get_local $3
    get_local $4
    call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $0
    get_local $10
    if $if_11
      block $block_7
        get_local $10
        call $_free
        get_local $15
        i32.load
        set_local $18
      end ;; $block_7
    end ;; $if_11
    get_local $9
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $8
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $12
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $18
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $7
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    (local $19 i32)
    (local $20 i32)
    (local $21 i32)
    (local $22 i32)
    (local $23 i32)
    (local $24 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 176
    i32.add
    set_global $STACKTOP
    get_local $7
    i32.const 52
    i32.add
    tee_local $15
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $18
    i32.store
    get_local $15
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $16
    get_local $5
    i32.const 4
    i32.add
    set_local $13
    get_local $5
    i32.const 11
    i32.add
    tee_local $14
    i32.load8_s
    tee_local $10
    i32.const 0
    i32.lt_s
    tee_local $0
    if $_1 (result i32)
      get_local $13
      i32.load
    else
      get_local $10
      i32.const 255
      i32.and
    end ;; $_1
    if $_2 (result i32)
      get_local $0
      if $_3 (result i32)
        get_local $5
        i32.load
      else
        get_local $5
      end ;; $_3
      i32.load8_u
      get_local $16
      i32.const 45
      get_local $16
      i32.load
      i32.load offset=28
      i32.const 15
      i32.and
      i32.const 413
      i32.add
      call_indirect (type $FUNCSIG$iii)
      i32.const 255
      i32.and
      i32.eq
    else
      i32.const 0
    end ;; $_2
    set_local $19
    get_local $7
    i32.const 164
    i32.add
    set_local $20
    get_local $7
    i32.const 161
    i32.add
    set_local $21
    get_local $7
    i32.const 160
    i32.add
    set_local $22
    get_local $7
    i32.const 28
    i32.add
    set_local $8
    get_local $7
    i32.const 16
    i32.add
    set_local $9
    get_local $7
    i32.const 12
    i32.add
    set_local $6
    get_local $7
    i32.const 40
    i32.add
    tee_local $12
    i32.const 0
    i32.store
    get_local $12
    i32.const 0
    i32.store offset=4
    get_local $12
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $_4
        block $_5
          get_local $12
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_5
      end ;; $_4
    end ;; $while-in
    get_local $8
    i32.const 0
    i32.store
    get_local $8
    i32.const 0
    i32.store offset=4
    get_local $8
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in1
      get_local $0
      i32.const 3
      i32.ne
      if $_6
        block $_7
          get_local $8
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in1
        end ;; $_7
      end ;; $_6
    end ;; $while-in1
    get_local $9
    i32.const 0
    i32.store
    get_local $9
    i32.const 0
    i32.store offset=4
    get_local $9
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in3
      get_local $0
      i32.const 3
      i32.ne
      if $if
        block $block
          get_local $9
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in3
        end ;; $block
      end ;; $if
    end ;; $while-in3
    get_local $2
    get_local $19
    get_local $15
    get_local $20
    get_local $21
    get_local $22
    get_local $12
    get_local $8
    get_local $9
    get_local $6
    call $__ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri
    get_local $13
    i32.load
    set_local $0
    get_local $14
    i32.load8_s
    tee_local $10
    i32.const 0
    i32.lt_s
    if $if_1 (result i32)
      get_local $0
    else
      get_local $10
      i32.const 255
      i32.and
    end ;; $if_1
    tee_local $2
    get_local $6
    i32.load
    tee_local $17
    i32.gt_s
    if $if_2 (result i32)
      block $block_1 (result i32)
        get_local $8
        i32.load8_s offset=11
        set_local $11
        get_local $9
        i32.load8_s offset=11
        tee_local $6
        i32.const 0
        i32.lt_s
        if $if_3 (result i32)
          get_local $9
          i32.load offset=4
        else
          get_local $6
          i32.const 255
          i32.and
        end ;; $if_3
        get_local $2
        get_local $17
        i32.sub
        i32.const 1
        i32.shl
        i32.const 1
        i32.or
        i32.add
        get_local $11
        i32.const 0
        i32.lt_s
        if $if_4 (result i32)
          get_local $8
          i32.load offset=4
        else
          get_local $11
          i32.const 255
          i32.and
        end ;; $if_4
        i32.add
      end ;; $block_1
    else
      block $block_2 (result i32)
        get_local $8
        i32.load8_s offset=11
        set_local $6
        get_local $9
        i32.load8_s offset=11
        tee_local $2
        i32.const 0
        i32.lt_s
        if $if_5 (result i32)
          get_local $9
          i32.load offset=4
        else
          get_local $2
          i32.const 255
          i32.and
        end ;; $if_5
        i32.const 2
        i32.add
        get_local $6
        i32.const 0
        i32.lt_s
        if $if_6 (result i32)
          get_local $8
          i32.load offset=4
        else
          get_local $6
          i32.const 255
          i32.and
        end ;; $if_6
        i32.add
      end ;; $block_2
    end ;; $if_2
    set_local $6
    get_local $7
    i32.const 60
    i32.add
    set_local $2
    get_local $6
    get_local $17
    i32.add
    tee_local $6
    i32.const 100
    i32.gt_u
    if $if_7
      block $block_3
        get_local $6
        call $_malloc
        tee_local $11
        set_local $2
        get_local $11
        if $if_8 (result i32)
          block $block_4 (result i32)
            get_local $10
            set_local $6
            get_local $2
            set_local $10
            get_local $11
          end ;; $block_4
        else
          block $block_5 (result i32)
            get_local $14
            i32.load8_s
            set_local $6
            get_local $13
            i32.load
            set_local $0
            get_local $2
            set_local $10
            i32.const 0
          end ;; $block_5
        end ;; $if_8
        set_local $2
      end ;; $block_3
    else
      block $block_6
        get_local $10
        set_local $6
        i32.const 0
        set_local $10
      end ;; $block_6
    end ;; $if_7
    get_local $7
    i32.const 56
    i32.add
    set_local $23
    get_local $7
    set_local $11
    get_local $2
    get_local $7
    i32.const 8
    i32.add
    tee_local $24
    get_local $7
    i32.const 4
    i32.add
    tee_local $13
    get_local $3
    i32.load offset=4
    get_local $6
    i32.const 24
    i32.shl
    i32.const 24
    i32.shr_s
    i32.const 0
    i32.lt_s
    tee_local $14
    if $if_9 (result i32)
      get_local $5
      i32.load
      tee_local $5
    else
      get_local $5
    end ;; $if_9
    get_local $5
    get_local $14
    if $if_10 (result i32)
      get_local $0
    else
      get_local $6
      i32.const 255
      i32.and
    end ;; $if_10
    i32.add
    get_local $16
    get_local $19
    get_local $20
    get_local $21
    i32.load8_s
    get_local $22
    i32.load8_s
    get_local $12
    get_local $8
    get_local $9
    get_local $17
    call $__ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i
    get_local $11
    get_local $1
    i32.load
    i32.store
    get_local $24
    i32.load
    set_local $1
    get_local $13
    i32.load
    set_local $0
    get_local $23
    get_local $11
    i32.load
    i32.store
    get_local $23
    get_local $2
    get_local $1
    get_local $0
    get_local $3
    get_local $4
    call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $0
    get_local $10
    if $if_11
      block $block_7
        get_local $10
        call $_free
        get_local $15
        i32.load
        set_local $18
      end ;; $block_7
    end ;; $if_11
    get_local $9
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $8
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $12
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $18
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $7
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    get_local $1
    set_local $10
    get_local $4
    i32.const 4
    i32.and
    if $_1 (result i32)
      get_local $10
      get_local $0
      i32.sub
      i32.const 2
      i32.gt_s
      if $_2 (result i32)
        get_local $0
        i32.load8_s
        i32.const -17
        i32.eq
        if $_3 (result i32)
          get_local $0
          i32.load8_s offset=1
          i32.const -69
          i32.eq
          if $_4 (result i32)
            block $_5 (result i32)
              i32.const 0
              set_local $7
              get_local $0
              i32.load8_s offset=2
              i32.const -65
              i32.eq
              if $_6 (result i32)
                get_local $0
                i32.const 3
                i32.add
              else
                get_local $0
              end ;; $_6
            end ;; $_5
          else
            block $_7 (result i32)
              i32.const 0
              set_local $7
              get_local $0
            end ;; $_7
          end ;; $_4
        else
          block $_8 (result i32)
            i32.const 0
            set_local $7
            get_local $0
          end ;; $_8
        end ;; $_3
      else
        block $_9 (result i32)
          i32.const 0
          set_local $7
          get_local $0
        end ;; $_9
      end ;; $_2
    else
      block $_10 (result i32)
        i32.const 0
        set_local $7
        get_local $0
      end ;; $_10
    end ;; $_1
    set_local $4
    block $__rjto$6 (result i32)
      block $__rjti$6
        block $__rjti$5
          block $__rjti$4
            block $__rjti$3
              block $__rjti$2
                block $__rjti$1
                  block $__rjti$0
                    loop $label$continue$L6
                      get_local $7
                      get_local $2
                      i32.lt_u
                      get_local $4
                      get_local $1
                      i32.lt_u
                      i32.and
                      i32.eqz
                      br_if $__rjti$6
                      get_local $4
                      i32.load8_s
                      tee_local $5
                      i32.const 255
                      i32.and
                      set_local $8
                      block $do-once
                        get_local $5
                        i32.const -1
                        i32.gt_s
                        if $_11
                          block $_12
                            get_local $8
                            get_local $3
                            i32.gt_u
                            br_if $__rjti$6
                            get_local $4
                            i32.const 1
                            i32.add
                            set_local $4
                          end ;; $_12
                        else
                          block $_13
                            get_local $5
                            i32.const 255
                            i32.and
                            i32.const 194
                            i32.lt_s
                            br_if $__rjti$6
                            get_local $5
                            i32.const 255
                            i32.and
                            i32.const 224
                            i32.lt_s
                            if $_14
                              block $_15
                                get_local $10
                                get_local $4
                                i32.sub
                                i32.const 2
                                i32.lt_s
                                br_if $__rjti$6
                                get_local $4
                                i32.load8_u offset=1
                                tee_local $5
                                i32.const 192
                                i32.and
                                i32.const 128
                                i32.ne
                                br_if $__rjti$6
                                get_local $5
                                i32.const 63
                                i32.and
                                get_local $8
                                i32.const 6
                                i32.shl
                                i32.const 1984
                                i32.and
                                i32.or
                                get_local $3
                                i32.gt_u
                                br_if $__rjti$6
                                get_local $4
                                i32.const 2
                                i32.add
                                set_local $4
                                br $do-once
                              end ;; $_15
                            end ;; $_14
                            get_local $5
                            i32.const 255
                            i32.and
                            i32.const 240
                            i32.lt_s
                            if $_16
                              block $_17
                                get_local $10
                                get_local $4
                                tee_local $5
                                i32.sub
                                i32.const 3
                                i32.lt_s
                                br_if $__rjti$6
                                get_local $4
                                i32.load8_s offset=1
                                set_local $6
                                get_local $4
                                i32.load8_u offset=2
                                set_local $9
                                block $switch
                                  block $switch-default
                                    block $switch-case0
                                      block $switch-case
                                        get_local $8
                                        i32.const 224
                                        i32.sub
                                        br_table
                                          $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0
                                          $switch-default ;; default
                                      end ;; $switch-case
                                      get_local $6
                                      i32.const 224
                                      i32.and
                                      i32.const 160
                                      i32.ne
                                      br_if $__rjti$0
                                      br $switch
                                    end ;; $switch-case0
                                    get_local $6
                                    i32.const 224
                                    i32.and
                                    i32.const 128
                                    i32.ne
                                    br_if $__rjti$1
                                    br $switch
                                  end ;; $switch-default
                                  get_local $6
                                  i32.const 192
                                  i32.and
                                  i32.const 128
                                  i32.ne
                                  br_if $__rjti$2
                                end ;; $switch
                                get_local $9
                                tee_local $5
                                i32.const 192
                                i32.and
                                i32.const 128
                                i32.ne
                                br_if $__rjti$6
                                get_local $6
                                i32.const 255
                                i32.and
                                i32.const 6
                                i32.shl
                                i32.const 4032
                                i32.and
                                get_local $8
                                i32.const 12
                                i32.shl
                                i32.const 61440
                                i32.and
                                i32.or
                                get_local $5
                                i32.const 63
                                i32.and
                                i32.or
                                get_local $3
                                i32.gt_u
                                br_if $__rjti$6
                                get_local $4
                                i32.const 3
                                i32.add
                                set_local $4
                                br $do-once
                              end ;; $_17
                            end ;; $_16
                            get_local $5
                            i32.const 255
                            i32.and
                            i32.const 245
                            i32.ge_s
                            br_if $__rjti$6
                            get_local $10
                            get_local $4
                            tee_local $5
                            i32.sub
                            i32.const 4
                            i32.lt_s
                            br_if $__rjti$6
                            get_local $4
                            i32.load8_s offset=1
                            set_local $6
                            get_local $4
                            i32.load8_u offset=2
                            set_local $9
                            get_local $4
                            i32.load8_u offset=3
                            set_local $11
                            block $switch1
                              block $switch-default4
                                block $switch-case3
                                  block $switch-case2
                                    get_local $8
                                    i32.const 240
                                    i32.sub
                                    br_table
                                      $switch-case2 $switch-default4 $switch-default4 $switch-default4 $switch-case3
                                      $switch-default4 ;; default
                                  end ;; $switch-case2
                                  get_local $6
                                  i32.const 112
                                  i32.add
                                  i32.const 255
                                  i32.and
                                  i32.const 48
                                  i32.ge_s
                                  br_if $__rjti$3
                                  br $switch1
                                end ;; $switch-case3
                                get_local $6
                                i32.const 240
                                i32.and
                                i32.const 128
                                i32.ne
                                br_if $__rjti$4
                                br $switch1
                              end ;; $switch-default4
                              get_local $6
                              i32.const 192
                              i32.and
                              i32.const 128
                              i32.ne
                              br_if $__rjti$5
                            end ;; $switch1
                            get_local $9
                            tee_local $5
                            i32.const 192
                            i32.and
                            i32.const 128
                            i32.ne
                            br_if $__rjti$6
                            get_local $11
                            tee_local $9
                            i32.const 192
                            i32.and
                            i32.const 128
                            i32.ne
                            br_if $__rjti$6
                            get_local $6
                            i32.const 255
                            i32.and
                            i32.const 12
                            i32.shl
                            i32.const 258048
                            i32.and
                            get_local $8
                            i32.const 18
                            i32.shl
                            i32.const 1835008
                            i32.and
                            i32.or
                            get_local $5
                            i32.const 6
                            i32.shl
                            i32.const 4032
                            i32.and
                            i32.or
                            get_local $9
                            i32.const 63
                            i32.and
                            i32.or
                            get_local $3
                            i32.gt_u
                            br_if $__rjti$6
                            get_local $4
                            i32.const 4
                            i32.add
                            set_local $4
                          end ;; $_13
                        end ;; $_11
                      end ;; $do-once
                      get_local $7
                      i32.const 1
                      i32.add
                      set_local $7
                      br $label$continue$L6
                    end ;; $label$continue$L6
                  end ;; $__rjti$0
                  get_local $5
                  get_local $0
                  i32.sub
                  br $__rjto$6
                end ;; $__rjti$1
                get_local $5
                get_local $0
                i32.sub
                br $__rjto$6
              end ;; $__rjti$2
              get_local $5
              get_local $0
              i32.sub
              br $__rjto$6
            end ;; $__rjti$3
            get_local $5
            get_local $0
            i32.sub
            br $__rjto$6
          end ;; $__rjti$4
          get_local $5
          get_local $0
          i32.sub
          br $__rjto$6
        end ;; $__rjti$5
        get_local $5
        get_local $0
        i32.sub
        br $__rjto$6
      end ;; $__rjti$6
      get_local $4
      get_local $0
      i32.sub
    end ;; $__rjto$6
    tee_local $0
    )
  
  (func $__ZNSt3__26locale5__impC2Ej (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    (local $3 i32)
    get_local $0
    get_local $1
    i32.const -1
    i32.add
    i32.store offset=4
    get_local $0
    i32.const 9184
    i32.store
    get_local $0
    i32.const 8
    i32.add
    tee_local $2
    i32.const 28
    call $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej
    get_local $0
    i32.const 144
    i32.add
    tee_local $1
    i32.const 0
    i32.store
    get_local $1
    i32.const 0
    i32.store offset=4
    get_local $1
    i32.const 0
    i32.store offset=8
    get_local $1
    i32.const 13970
    i32.const 1
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj
    get_local $2
    i32.load
    set_local $2
    get_local $0
    i32.const 12
    i32.add
    tee_local $3
    i32.load
    set_local $1
    loop $while-in
      get_local $1
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $3
          get_local $1
          i32.const -4
          i32.add
          tee_local $1
          i32.store
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    i32.const 17116
    i32.const 0
    i32.store
    i32.const 17112
    i32.const 6848
    i32.store
    get_local $0
    i32.const 17112
    call $__ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_
    i32.const 17124
    i32.const 0
    i32.store
    i32.const 17120
    i32.const 6880
    i32.store
    get_local $0
    i32.const 17120
    call $__ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_
    i32.const 17128
    i32.const 0
    i32.const 0
    i32.const 1
    call $__ZNSt3__25ctypeIcEC2EPKtbj
    get_local $0
    i32.const 17128
    call $__ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_
    i32.const 17148
    i32.const 0
    i32.store
    i32.const 17144
    i32.const 9400
    i32.store
    get_local $0
    i32.const 17144
    call $__ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_
    i32.const 17156
    i32.const 0
    i32.store
    i32.const 17152
    i32.const 9468
    i32.store
    get_local $0
    i32.const 17152
    call $__ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_
    i32.const 17164
    i32.const 0
    i32.store
    i32.const 17160
    i32.const 9136
    i32.store
    i32.const 17168
    call $__ZNSt3__26__clocEv
    i32.store
    get_local $0
    i32.const 17160
    call $__ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_
    i32.const 17180
    i32.const 0
    i32.store
    i32.const 17176
    i32.const 9516
    i32.store
    get_local $0
    i32.const 17176
    call $__ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_
    i32.const 17188
    i32.const 0
    i32.store
    i32.const 17184
    i32.const 9564
    i32.store
    get_local $0
    i32.const 17184
    call $__ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_
    i32.const 17192
    i32.const 1
    call $__ZNSt3__28numpunctIcEC2Ej
    get_local $0
    i32.const 17192
    call $__ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_
    i32.const 17216
    i32.const 1
    call $__ZNSt3__28numpunctIwEC2Ej
    get_local $0
    i32.const 17216
    call $__ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_
    i32.const 17252
    i32.const 0
    i32.store
    i32.const 17248
    i32.const 6912
    i32.store
    get_local $0
    i32.const 17248
    call $__ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_
    i32.const 17260
    i32.const 0
    i32.store
    i32.const 17256
    i32.const 6976
    i32.store
    get_local $0
    i32.const 17256
    call $__ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_
    i32.const 17268
    i32.const 0
    i32.store
    i32.const 17264
    i32.const 7040
    i32.store
    get_local $0
    i32.const 17264
    call $__ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_
    i32.const 17276
    i32.const 0
    i32.store
    i32.const 17272
    i32.const 7092
    i32.store
    get_local $0
    i32.const 17272
    call $__ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_
    i32.const 17284
    i32.const 0
    i32.store
    i32.const 17280
    i32.const 8640
    i32.store
    get_local $0
    i32.const 17280
    call $__ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_
    i32.const 17292
    i32.const 0
    i32.store
    i32.const 17288
    i32.const 8696
    i32.store
    get_local $0
    i32.const 17288
    call $__ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_
    i32.const 17300
    i32.const 0
    i32.store
    i32.const 17296
    i32.const 8752
    i32.store
    get_local $0
    i32.const 17296
    call $__ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_
    i32.const 17308
    i32.const 0
    i32.store
    i32.const 17304
    i32.const 8808
    i32.store
    get_local $0
    i32.const 17304
    call $__ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_
    i32.const 17316
    i32.const 0
    i32.store
    i32.const 17312
    i32.const 8864
    i32.store
    get_local $0
    i32.const 17312
    call $__ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_
    i32.const 17324
    i32.const 0
    i32.store
    i32.const 17320
    i32.const 8892
    i32.store
    get_local $0
    i32.const 17320
    call $__ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_
    i32.const 17332
    i32.const 0
    i32.store
    i32.const 17328
    i32.const 8920
    i32.store
    get_local $0
    i32.const 17328
    call $__ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_
    i32.const 17340
    i32.const 0
    i32.store
    i32.const 17336
    i32.const 8948
    i32.store
    get_local $0
    i32.const 17336
    call $__ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_
    i32.const 17348
    i32.const 0
    i32.store
    i32.const 17344
    i32.const 7144
    i32.store
    i32.const 17352
    i32.const 7192
    i32.store
    get_local $0
    i32.const 17344
    call $__ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_
    i32.const 17364
    i32.const 0
    i32.store
    i32.const 17360
    i32.const 7228
    i32.store
    i32.const 17368
    i32.const 7276
    i32.store
    get_local $0
    i32.const 17360
    call $__ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_
    i32.const 17380
    i32.const 0
    i32.store
    i32.const 17376
    i32.const 9380
    i32.store
    i32.const 17384
    call $__ZNSt3__26__clocEv
    i32.store
    i32.const 17376
    i32.const 8592
    i32.store
    get_local $0
    i32.const 17376
    call $__ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_
    i32.const 17396
    i32.const 0
    i32.store
    i32.const 17392
    i32.const 9380
    i32.store
    i32.const 17400
    call $__ZNSt3__26__clocEv
    i32.store
    i32.const 17392
    i32.const 8616
    i32.store
    get_local $0
    i32.const 17392
    call $__ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_
    i32.const 17412
    i32.const 0
    i32.store
    i32.const 17408
    i32.const 8976
    i32.store
    get_local $0
    i32.const 17408
    call $__ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_
    i32.const 17420
    i32.const 0
    i32.store
    i32.const 17416
    i32.const 9008
    i32.store
    get_local $0
    i32.const 17416
    call $__ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_
    )
  
  (func $__ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE (type $_5)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    get_global $STACKTOP
    set_local $15
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $9
    get_local $15
    tee_local $11
    get_local $6
    i32.const 19248
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $10
    get_local $10
    i32.load
    i32.load offset=20
    i32.const 63
    i32.and
    i32.const 176
    i32.add
    call_indirect (type $FUNCSIG$vii)
    get_local $11
    i32.const 4
    i32.add
    set_local $16
    block $label$break$L1
      get_local $11
      i32.const 11
      i32.add
      tee_local $17
      i32.load8_s
      tee_local $6
      i32.const 0
      i32.lt_s
      if $_1 (result i32)
        get_local $16
        i32.load
      else
        get_local $6
        i32.const 255
        i32.and
      end ;; $_1
      if $_2
        block $_3
          get_local $5
          get_local $3
          i32.store
          block $label$break$L7
            get_local $2
            block $_4 (result i32)
              block $switch
                block $switch-default
                  get_local $0
                  i32.load8_s
                  tee_local $6
                  i32.const 43
                  i32.sub
                  br_table
                    $switch-default $switch $switch-default
                    $switch ;; default
                end ;; $switch-default
                get_local $9
                get_local $6
                get_local $9
                i32.load
                i32.load offset=44
                i32.const 15
                i32.and
                i32.const 413
                i32.add
                call_indirect (type $FUNCSIG$iii)
                set_local $6
                get_local $5
                get_local $5
                i32.load
                tee_local $7
                i32.const 4
                i32.add
                i32.store
                get_local $7
                get_local $6
                i32.store
                get_local $0
                i32.const 1
                i32.add
                br $_4
              end ;; $switch
              get_local $0
            end ;; $_4
            tee_local $6
            i32.sub
            i32.const 1
            i32.gt_s
            if $switch-case
              get_local $6
              i32.load8_s
              i32.const 48
              i32.eq
              if $_5
                block $_6
                  block $switch2
                    block $switch-default5
                      block $switch-case3
                        get_local $6
                        i32.const 1
                        i32.add
                        tee_local $7
                        i32.load8_s
                        i32.const 88
                        i32.sub
                        br_table
                          $switch-case3 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5
                          $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5
                          $switch-case3
                          $switch-default5 ;; default
                      end ;; $switch-case3
                      br $switch2
                    end ;; $switch-default5
                    br $label$break$L7
                  end ;; $switch2
                  get_local $9
                  i32.const 48
                  get_local $9
                  i32.load
                  i32.load offset=44
                  i32.const 15
                  i32.and
                  i32.const 413
                  i32.add
                  call_indirect (type $FUNCSIG$iii)
                  set_local $8
                  get_local $5
                  get_local $5
                  i32.load
                  tee_local $12
                  i32.const 4
                  i32.add
                  i32.store
                  get_local $12
                  get_local $8
                  i32.store
                  get_local $9
                  get_local $7
                  i32.load8_s
                  get_local $9
                  i32.load
                  i32.load offset=44
                  i32.const 15
                  i32.and
                  i32.const 413
                  i32.add
                  call_indirect (type $FUNCSIG$iii)
                  set_local $7
                  get_local $5
                  get_local $5
                  i32.load
                  tee_local $8
                  i32.const 4
                  i32.add
                  i32.store
                  get_local $8
                  get_local $7
                  i32.store
                  get_local $6
                  i32.const 2
                  i32.add
                  set_local $6
                end ;; $_6
              end ;; $_5
            end ;; $switch-case
          end ;; $label$break$L7
          block $label$break$L12
            get_local $6
            get_local $2
            i32.ne
            if $_7
              block $_8
                get_local $2
                set_local $7
                get_local $6
                set_local $8
                loop $while-in
                  get_local $8
                  get_local $7
                  i32.const -1
                  i32.add
                  tee_local $7
                  i32.ge_u
                  br_if $label$break$L12
                  get_local $8
                  i32.load8_s
                  set_local $12
                  get_local $8
                  get_local $7
                  i32.load8_s
                  i32.store8
                  get_local $7
                  get_local $12
                  i32.store8
                  get_local $8
                  i32.const 1
                  i32.add
                  set_local $8
                  br $while-in
                end ;; $while-in
              end ;; $_8
            end ;; $_7
          end ;; $label$break$L12
          get_local $10
          get_local $10
          i32.load
          i32.load offset=16
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
          set_local $12
          i32.const 0
          set_local $10
          i32.const 0
          set_local $7
          get_local $6
          set_local $8
          loop $while-in8
            get_local $8
            get_local $2
            i32.lt_u
            if $_9
              block $_10
                get_local $17
                i32.load8_s
                tee_local $13
                i32.const 0
                i32.lt_s
                tee_local $14
                if $_11 (result i32)
                  get_local $11
                  i32.load
                else
                  get_local $11
                end ;; $_11
                get_local $7
                i32.add
                i32.load8_s
                tee_local $18
                i32.const 0
                i32.ne
                get_local $10
                get_local $18
                i32.eq
                i32.and
                if $_12
                  block $_13
                    get_local $5
                    get_local $5
                    i32.load
                    tee_local $10
                    i32.const 4
                    i32.add
                    i32.store
                    get_local $10
                    get_local $12
                    i32.store
                    i32.const 0
                    set_local $10
                    get_local $7
                    get_local $14
                    if $_14 (result i32)
                      get_local $16
                      i32.load
                    else
                      get_local $13
                      i32.const 255
                      i32.and
                    end ;; $_14
                    i32.const -1
                    i32.add
                    i32.lt_u
                    get_local $7
                    i32.add
                    set_local $7
                  end ;; $_13
                end ;; $_12
                get_local $9
                get_local $8
                i32.load8_s
                get_local $9
                i32.load
                i32.load offset=44
                i32.const 15
                i32.and
                i32.const 413
                i32.add
                call_indirect (type $FUNCSIG$iii)
                set_local $13
                get_local $5
                get_local $5
                i32.load
                tee_local $14
                i32.const 4
                i32.add
                i32.store
                get_local $14
                get_local $13
                i32.store
                get_local $10
                i32.const 1
                i32.add
                set_local $10
                get_local $8
                i32.const 1
                i32.add
                set_local $8
                br $while-in8
              end ;; $_10
            end ;; $_9
          end ;; $while-in8
          get_local $3
          get_local $6
          get_local $0
          i32.sub
          i32.const 2
          i32.shl
          i32.add
          tee_local $6
          get_local $5
          i32.load
          tee_local $7
          i32.eq
          if $_15
            get_local $6
            set_local $5
          else
            block $_16
              get_local $7
              set_local $5
              loop $while-in10
                get_local $6
                get_local $5
                i32.const -4
                i32.add
                tee_local $5
                i32.ge_u
                if $if
                  block $block
                    get_local $7
                    set_local $5
                    br $label$break$L1
                  end ;; $block
                else
                  block $block_1
                    get_local $6
                    i32.load
                    set_local $8
                    get_local $6
                    get_local $5
                    i32.load
                    i32.store
                    get_local $5
                    get_local $8
                    i32.store
                    get_local $6
                    i32.const 4
                    i32.add
                    set_local $6
                    br $while-in10
                  end ;; $block_1
                end ;; $if
              end ;; $while-in10
            end ;; $_16
          end ;; $_15
        end ;; $_3
      else
        block $block_2
          get_local $9
          get_local $0
          get_local $2
          get_local $3
          get_local $9
          i32.load
          i32.load offset=48
          i32.const 7
          i32.and
          i32.const 397
          i32.add
          call_indirect (type $FUNCSIG$iiiii)
          drop
          get_local $5
          get_local $3
          get_local $2
          get_local $0
          i32.sub
          i32.const 2
          i32.shl
          i32.add
          tee_local $5
          i32.store
        end ;; $block_2
      end ;; $_2
    end ;; $label$break$L1
    get_local $4
    get_local $1
    get_local $2
    i32.eq
    if $if_1 (result i32)
      get_local $5
    else
      get_local $3
      get_local $1
      get_local $0
      i32.sub
      i32.const 2
      i32.shl
      i32.add
    end ;; $if_1
    i32.store
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $15
    set_global $STACKTOP
    )
  
  (func $__ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE (type $_5)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    get_global $STACKTOP
    set_local $14
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $9
    get_local $14
    tee_local $11
    get_local $6
    i32.const 19220
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $10
    get_local $10
    i32.load
    i32.load offset=20
    i32.const 63
    i32.and
    i32.const 176
    i32.add
    call_indirect (type $FUNCSIG$vii)
    get_local $11
    i32.const 4
    i32.add
    set_local $15
    get_local $11
    i32.const 11
    i32.add
    tee_local $16
    i32.load8_s
    tee_local $6
    i32.const 0
    i32.lt_s
    if $_1 (result i32)
      get_local $15
      i32.load
    else
      get_local $6
      i32.const 255
      i32.and
    end ;; $_1
    if $_2
      block $_3
        get_local $5
        get_local $3
        i32.store
        block $label$break$L7
          get_local $2
          block $_4 (result i32)
            block $switch
              block $switch-default
                get_local $0
                i32.load8_s
                tee_local $6
                i32.const 43
                i32.sub
                br_table
                  $switch-default $switch $switch-default
                  $switch ;; default
              end ;; $switch-default
              get_local $9
              get_local $6
              get_local $9
              i32.load
              i32.load offset=28
              i32.const 15
              i32.and
              i32.const 413
              i32.add
              call_indirect (type $FUNCSIG$iii)
              set_local $6
              get_local $5
              get_local $5
              i32.load
              tee_local $7
              i32.const 1
              i32.add
              i32.store
              get_local $7
              get_local $6
              i32.store8
              get_local $0
              i32.const 1
              i32.add
              br $_4
            end ;; $switch
            get_local $0
          end ;; $_4
          tee_local $6
          i32.sub
          i32.const 1
          i32.gt_s
          if $switch-case
            get_local $6
            i32.load8_s
            i32.const 48
            i32.eq
            if $_5
              block $_6
                block $switch1
                  block $switch-default4
                    block $switch-case2
                      get_local $6
                      i32.const 1
                      i32.add
                      tee_local $7
                      i32.load8_s
                      i32.const 88
                      i32.sub
                      br_table
                        $switch-case2 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4
                        $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4 $switch-default4
                        $switch-case2
                        $switch-default4 ;; default
                    end ;; $switch-case2
                    br $switch1
                  end ;; $switch-default4
                  br $label$break$L7
                end ;; $switch1
                get_local $9
                i32.const 48
                get_local $9
                i32.load
                i32.load offset=28
                i32.const 15
                i32.and
                i32.const 413
                i32.add
                call_indirect (type $FUNCSIG$iii)
                set_local $8
                get_local $5
                get_local $5
                i32.load
                tee_local $12
                i32.const 1
                i32.add
                i32.store
                get_local $12
                get_local $8
                i32.store8
                get_local $9
                get_local $7
                i32.load8_s
                get_local $9
                i32.load
                i32.load offset=28
                i32.const 15
                i32.and
                i32.const 413
                i32.add
                call_indirect (type $FUNCSIG$iii)
                set_local $7
                get_local $5
                get_local $5
                i32.load
                tee_local $8
                i32.const 1
                i32.add
                i32.store
                get_local $8
                get_local $7
                i32.store8
                get_local $6
                i32.const 2
                i32.add
                set_local $6
              end ;; $_6
            end ;; $_5
          end ;; $switch-case
        end ;; $label$break$L7
        block $label$break$L12
          get_local $6
          get_local $2
          i32.ne
          if $_7
            block $_8
              get_local $2
              set_local $7
              get_local $6
              set_local $8
              loop $while-in
                get_local $8
                get_local $7
                i32.const -1
                i32.add
                tee_local $7
                i32.ge_u
                br_if $label$break$L12
                get_local $8
                i32.load8_s
                set_local $12
                get_local $8
                get_local $7
                i32.load8_s
                i32.store8
                get_local $7
                get_local $12
                i32.store8
                get_local $8
                i32.const 1
                i32.add
                set_local $8
                br $while-in
              end ;; $while-in
            end ;; $_8
          end ;; $_7
        end ;; $label$break$L12
        get_local $10
        get_local $10
        i32.load
        i32.load offset=16
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        set_local $12
        i32.const 0
        set_local $10
        i32.const 0
        set_local $7
        get_local $6
        set_local $8
        loop $while-in7
          get_local $8
          get_local $2
          i32.lt_u
          if $_9
            block $_10
              get_local $16
              i32.load8_s
              i32.const 0
              i32.lt_s
              if $_11 (result i32)
                get_local $11
                i32.load
              else
                get_local $11
              end ;; $_11
              get_local $7
              i32.add
              i32.load8_s
              tee_local $13
              i32.const 0
              i32.ne
              get_local $10
              get_local $13
              i32.eq
              i32.and
              if $_12
                block $_13
                  get_local $5
                  get_local $5
                  i32.load
                  tee_local $10
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $10
                  get_local $12
                  i32.store8
                  i32.const 0
                  set_local $10
                  get_local $7
                  get_local $16
                  i32.load8_s
                  tee_local $13
                  i32.const 0
                  i32.lt_s
                  if $_14 (result i32)
                    get_local $15
                    i32.load
                  else
                    get_local $13
                    i32.const 255
                    i32.and
                  end ;; $_14
                  i32.const -1
                  i32.add
                  i32.lt_u
                  get_local $7
                  i32.add
                  set_local $7
                end ;; $_13
              end ;; $_12
              get_local $9
              get_local $8
              i32.load8_s
              get_local $9
              i32.load
              i32.load offset=28
              i32.const 15
              i32.and
              i32.const 413
              i32.add
              call_indirect (type $FUNCSIG$iii)
              set_local $13
              get_local $5
              get_local $5
              i32.load
              tee_local $17
              i32.const 1
              i32.add
              i32.store
              get_local $17
              get_local $13
              i32.store8
              get_local $10
              i32.const 1
              i32.add
              set_local $10
              get_local $8
              i32.const 1
              i32.add
              set_local $8
              br $while-in7
            end ;; $_10
          end ;; $_9
        end ;; $while-in7
        get_local $3
        get_local $6
        get_local $0
        i32.sub
        i32.add
        tee_local $7
        get_local $5
        i32.load
        tee_local $6
        i32.eq
        if $_15 (result i32)
          get_local $7
        else
          block $_16 (result i32)
            loop $while-in9
              get_local $7
              get_local $6
              i32.const -1
              i32.add
              tee_local $6
              i32.lt_u
              if $if
                block $block
                  get_local $7
                  i32.load8_s
                  set_local $8
                  get_local $7
                  get_local $6
                  i32.load8_s
                  i32.store8
                  get_local $6
                  get_local $8
                  i32.store8
                  get_local $7
                  i32.const 1
                  i32.add
                  set_local $7
                  br $while-in9
                end ;; $block
              end ;; $if
            end ;; $while-in9
            get_local $5
            i32.load
          end ;; $_16
        end ;; $_15
        set_local $5
      end ;; $_3
    else
      block $block_1
        get_local $9
        get_local $0
        get_local $2
        get_local $3
        get_local $9
        i32.load
        i32.load offset=32
        i32.const 7
        i32.and
        i32.const 397
        i32.add
        call_indirect (type $FUNCSIG$iiiii)
        drop
        get_local $5
        get_local $3
        get_local $2
        get_local $0
        i32.sub
        i32.add
        tee_local $5
        i32.store
      end ;; $block_1
    end ;; $_2
    get_local $4
    get_local $1
    get_local $2
    i32.eq
    if $if_1 (result i32)
      get_local $5
    else
      get_local $3
      get_local $1
      get_local $0
      i32.sub
      i32.add
    end ;; $if_1
    i32.store
    get_local $11
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $14
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe (type $FUNCSIG$iiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (result i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 576
    i32.add
    set_global $STACKTOP
    get_local $7
    set_local $14
    get_local $7
    i32.const 464
    i32.add
    set_local $15
    get_local $7
    i32.const 16
    i32.add
    tee_local $11
    get_local $7
    i32.const 24
    i32.add
    tee_local $9
    i32.store
    get_local $11
    i32.const 4
    i32.add
    tee_local $17
    i32.const 107
    i32.store
    get_local $7
    i32.const 8
    i32.add
    tee_local $13
    get_local $4
    call $__ZNKSt3__28ios_base6getlocEv
    i32.store
    get_local $13
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $0
    get_local $7
    i32.const 564
    i32.add
    tee_local $8
    i32.const 0
    i32.store8
    get_local $7
    i32.const 4
    i32.add
    tee_local $12
    get_local $2
    i32.load
    i32.store
    get_local $4
    i32.load offset=4
    set_local $10
    get_local $7
    i32.const 424
    i32.add
    tee_local $4
    get_local $12
    i32.load
    i32.store
    get_local $1
    get_local $4
    get_local $3
    get_local $13
    get_local $10
    get_local $5
    get_local $8
    get_local $0
    get_local $11
    get_local $7
    i32.const 12
    i32.add
    tee_local $16
    get_local $9
    i32.const 400
    i32.add
    call $__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_
    if $_1
      block $_2
        get_local $0
        i32.const 15331
        i32.const 15341
        get_local $4
        get_local $0
        i32.load
        i32.load offset=48
        i32.const 7
        i32.and
        i32.const 397
        i32.add
        call_indirect (type $FUNCSIG$iiiii)
        drop
        get_local $16
        i32.load
        tee_local $10
        get_local $11
        i32.load
        tee_local $9
        i32.sub
        tee_local $0
        i32.const 392
        i32.gt_s
        if $_3
          block $_4
            get_local $0
            i32.const 2
            i32.shr_s
            i32.const 2
            i32.add
            call $_malloc
            tee_local $0
            set_local $3
            get_local $0
            i32.eqz
            if $_5
              i32.const 0
              set_local $0
            end ;; $_5
          end ;; $_4
        else
          block $_6
            i32.const 0
            set_local $3
            get_local $15
            set_local $0
          end ;; $_6
        end ;; $_3
        get_local $8
        i32.load8_s
        if $_7
          block $_8
            get_local $0
            i32.const 45
            i32.store8
            get_local $0
            i32.const 1
            i32.add
            set_local $0
          end ;; $_8
        end ;; $_7
        get_local $4
        i32.const 40
        i32.add
        set_local $12
        get_local $4
        set_local $18
        get_local $0
        set_local $8
        loop $while-in
          get_local $9
          get_local $10
          i32.lt_u
          if $_9
            block $_10
              get_local $9
              i32.load
              set_local $10
              get_local $4
              set_local $0
              loop $while-in1
                block $while-out0
                  get_local $0
                  get_local $12
                  i32.eq
                  if $_11
                    block $_12
                      get_local $12
                      set_local $0
                      br $while-out0
                    end ;; $_12
                  end ;; $_11
                  get_local $0
                  i32.load
                  get_local $10
                  i32.ne
                  if $_13
                    block $_14
                      get_local $0
                      i32.const 4
                      i32.add
                      set_local $0
                      br $while-in1
                    end ;; $_14
                  end ;; $_13
                end ;; $while-out0
              end ;; $while-in1
              get_local $8
              get_local $0
              get_local $18
              i32.sub
              i32.const 2
              i32.shr_s
              i32.const 15331
              i32.add
              i32.load8_s
              i32.store8
              get_local $16
              i32.load
              set_local $10
              get_local $8
              i32.const 1
              i32.add
              set_local $8
              get_local $9
              i32.const 4
              i32.add
              set_local $9
              br $while-in
            end ;; $_10
          end ;; $_9
        end ;; $while-in
        get_local $8
        i32.const 0
        i32.store8
        get_local $14
        get_local $6
        i32.store
        get_local $15
        i32.const 15232
        get_local $14
        call $_sscanf
        drop
        get_local $3
        if $_15
          get_local $3
          call $_free
        end ;; $_15
      end ;; $_2
    end ;; $_1
    get_local $1
    i32.load
    tee_local $0
    if $_16 (result i32)
      get_local $0
      i32.load offset=12
      tee_local $3
      get_local $0
      i32.load offset=16
      i32.eq
      if $_17 (result i32)
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $3
        i32.load
      end ;; $_17
      tee_local $0
      i32.const -1
      i32.eq
      if $_18 (result i32)
        block $_19 (result i32)
          get_local $1
          i32.const 0
          i32.store
          i32.const 1
        end ;; $_19
      else
        get_local $1
        i32.load
        i32.eqz
      end ;; $_18
    else
      i32.const 1
    end ;; $_16
    set_local $0
    block $__rjto$1
      block $__rjti$1
        block $__rjti$0
          get_local $2
          i32.load
          tee_local $3
          i32.eqz
          br_if $__rjti$0
          get_local $3
          i32.load offset=12
          tee_local $4
          get_local $3
          i32.load offset=16
          i32.eq
          if $if (result i32)
            get_local $3
            get_local $3
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $4
            i32.load
          end ;; $if
          tee_local $3
          i32.const -1
          i32.eq
          if $if_1
            block $block
              get_local $2
              i32.const 0
              i32.store
              br $__rjti$0
            end ;; $block
          else
            get_local $0
            i32.eqz
            br_if $__rjti$1
          end ;; $if_1
          br $__rjto$1
        end ;; $__rjti$0
        get_local $0
        br_if $__rjti$1
        br $__rjto$1
      end ;; $__rjti$1
      get_local $5
      get_local $5
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$1
    get_local $1
    i32.load
    set_local $1
    get_local $13
    i32.load
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $11
    i32.load
    set_local $0
    get_local $11
    i32.const 0
    i32.store
    get_local $0
    if $if_2
      get_local $0
      get_local $17
      i32.load
      i32.const 127
      i32.and
      i32.const 48
      i32.add
      call_indirect (type $FUNCSIG$vi)
    end ;; $if_2
    get_local $7
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    get_local $2
    get_local $0
    i32.store
    get_local $5
    get_local $3
    i32.store
    get_local $7
    i32.const 4
    i32.and
    if $_1
      get_local $1
      tee_local $0
      get_local $2
      i32.load
      tee_local $3
      i32.sub
      i32.const 2
      i32.gt_s
      if $_2
        get_local $3
        i32.load8_s
        i32.const -17
        i32.eq
        if $_3
          get_local $3
          i32.load8_s offset=1
          i32.const -69
          i32.eq
          if $_4
            get_local $3
            i32.load8_s offset=2
            i32.const -65
            i32.eq
            if $_5
              get_local $2
              get_local $3
              i32.const 3
              i32.add
              i32.store
            end ;; $_5
          end ;; $_4
        end ;; $_3
      end ;; $_2
    else
      get_local $1
      set_local $0
    end ;; $_1
    get_local $4
    set_local $7
    block $__rjto$0
      block $__rjti$0
        loop $label$continue$L9
          block $label$break$L9
            get_local $2
            i32.load
            tee_local $8
            get_local $1
            i32.lt_u
            tee_local $3
            i32.eqz
            br_if $__rjti$0
            get_local $5
            i32.load
            tee_local $11
            get_local $4
            i32.ge_u
            br_if $__rjti$0
            get_local $8
            i32.load8_s
            tee_local $3
            i32.const 255
            i32.and
            tee_local $10
            get_local $6
            i32.gt_u
            if $_6
              block $_7
                i32.const 2
                set_local $0
                br $label$break$L9
              end ;; $_7
            end ;; $_6
            block $do-once
              get_local $3
              i32.const -1
              i32.gt_s
              if $_8
                block $_9
                  get_local $11
                  get_local $3
                  i32.const 255
                  i32.and
                  i32.store16
                  get_local $2
                  get_local $8
                  i32.const 1
                  i32.add
                  i32.store
                end ;; $_9
              else
                block $_10
                  get_local $3
                  i32.const 255
                  i32.and
                  i32.const 194
                  i32.lt_s
                  if $_11
                    block $_12
                      i32.const 2
                      set_local $0
                      br $label$break$L9
                    end ;; $_12
                  end ;; $_11
                  get_local $3
                  i32.const 255
                  i32.and
                  i32.const 224
                  i32.lt_s
                  if $_13
                    block $_14
                      get_local $0
                      get_local $8
                      i32.sub
                      i32.const 2
                      i32.lt_s
                      if $_15
                        block $_16
                          i32.const 1
                          set_local $0
                          br $label$break$L9
                        end ;; $_16
                      end ;; $_15
                      get_local $8
                      i32.load8_u offset=1
                      tee_local $3
                      i32.const 192
                      i32.and
                      i32.const 128
                      i32.ne
                      if $_17
                        block $_18
                          i32.const 2
                          set_local $0
                          br $label$break$L9
                        end ;; $_18
                      end ;; $_17
                      get_local $3
                      i32.const 63
                      i32.and
                      get_local $10
                      i32.const 6
                      i32.shl
                      i32.const 1984
                      i32.and
                      i32.or
                      tee_local $3
                      get_local $6
                      i32.gt_u
                      if $_19
                        block $_20
                          i32.const 2
                          set_local $0
                          br $label$break$L9
                        end ;; $_20
                      end ;; $_19
                      get_local $11
                      get_local $3
                      i32.store16
                      get_local $2
                      get_local $8
                      i32.const 2
                      i32.add
                      i32.store
                      br $do-once
                    end ;; $_14
                  end ;; $_13
                  get_local $3
                  i32.const 255
                  i32.and
                  i32.const 240
                  i32.lt_s
                  if $_21
                    block $_22
                      get_local $0
                      get_local $8
                      i32.sub
                      i32.const 3
                      i32.lt_s
                      if $_23
                        block $_24
                          i32.const 1
                          set_local $0
                          br $label$break$L9
                        end ;; $_24
                      end ;; $_23
                      get_local $8
                      i32.load8_s offset=1
                      set_local $3
                      get_local $8
                      i32.load8_u offset=2
                      set_local $9
                      block $switch
                        block $switch-default
                          block $switch-case0
                            block $switch-case
                              get_local $10
                              i32.const 224
                              i32.sub
                              br_table
                                $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0
                                $switch-default ;; default
                            end ;; $switch-case
                            get_local $3
                            i32.const 224
                            i32.and
                            i32.const 160
                            i32.ne
                            if $_25
                              block $_26
                                i32.const 2
                                set_local $0
                                br $label$break$L9
                              end ;; $_26
                            end ;; $_25
                            br $switch
                          end ;; $switch-case0
                          get_local $3
                          i32.const 224
                          i32.and
                          i32.const 128
                          i32.ne
                          if $_27
                            block $_28
                              i32.const 2
                              set_local $0
                              br $label$break$L9
                            end ;; $_28
                          end ;; $_27
                          br $switch
                        end ;; $switch-default
                        get_local $3
                        i32.const 192
                        i32.and
                        i32.const 128
                        i32.ne
                        if $_29
                          block $_30
                            i32.const 2
                            set_local $0
                            br $label$break$L9
                          end ;; $_30
                        end ;; $_29
                      end ;; $switch
                      get_local $9
                      tee_local $9
                      i32.const 192
                      i32.and
                      i32.const 128
                      i32.ne
                      if $_31
                        block $_32
                          i32.const 2
                          set_local $0
                          br $label$break$L9
                        end ;; $_32
                      end ;; $_31
                      get_local $3
                      i32.const 255
                      i32.and
                      i32.const 6
                      i32.shl
                      i32.const 4032
                      i32.and
                      get_local $10
                      i32.const 12
                      i32.shl
                      i32.or
                      get_local $9
                      i32.const 63
                      i32.and
                      i32.or
                      tee_local $3
                      i32.const 65535
                      i32.and
                      get_local $6
                      i32.gt_u
                      if $_33
                        block $_34
                          i32.const 2
                          set_local $0
                          br $label$break$L9
                        end ;; $_34
                      end ;; $_33
                      get_local $11
                      get_local $3
                      i32.store16
                      get_local $2
                      get_local $8
                      i32.const 3
                      i32.add
                      i32.store
                      br $do-once
                    end ;; $_22
                  end ;; $_21
                  get_local $3
                  i32.const 255
                  i32.and
                  i32.const 245
                  i32.ge_s
                  if $_35
                    block $_36
                      i32.const 2
                      set_local $0
                      br $label$break$L9
                    end ;; $_36
                  end ;; $_35
                  get_local $0
                  get_local $8
                  i32.sub
                  i32.const 4
                  i32.lt_s
                  if $_37
                    block $_38
                      i32.const 1
                      set_local $0
                      br $label$break$L9
                    end ;; $_38
                  end ;; $_37
                  get_local $8
                  i32.load8_s offset=1
                  set_local $3
                  get_local $8
                  i32.load8_u offset=2
                  set_local $9
                  get_local $8
                  i32.load8_u offset=3
                  set_local $12
                  block $switch1
                    block $switch-default4
                      block $switch-case3
                        block $switch-case2
                          get_local $10
                          i32.const 240
                          i32.sub
                          br_table
                            $switch-case2 $switch-default4 $switch-default4 $switch-default4 $switch-case3
                            $switch-default4 ;; default
                        end ;; $switch-case2
                        get_local $3
                        i32.const 112
                        i32.add
                        i32.const 255
                        i32.and
                        i32.const 48
                        i32.ge_s
                        if $if
                          block $block
                            i32.const 2
                            set_local $0
                            br $label$break$L9
                          end ;; $block
                        end ;; $if
                        br $switch1
                      end ;; $switch-case3
                      get_local $3
                      i32.const 240
                      i32.and
                      i32.const 128
                      i32.ne
                      if $if_1
                        block $block_1
                          i32.const 2
                          set_local $0
                          br $label$break$L9
                        end ;; $block_1
                      end ;; $if_1
                      br $switch1
                    end ;; $switch-default4
                    get_local $3
                    i32.const 192
                    i32.and
                    i32.const 128
                    i32.ne
                    if $if_2
                      block $block_2
                        i32.const 2
                        set_local $0
                        br $label$break$L9
                      end ;; $block_2
                    end ;; $if_2
                  end ;; $switch1
                  get_local $9
                  tee_local $8
                  i32.const 192
                  i32.and
                  i32.const 128
                  i32.ne
                  if $if_3
                    block $block_3
                      i32.const 2
                      set_local $0
                      br $label$break$L9
                    end ;; $block_3
                  end ;; $if_3
                  get_local $12
                  i32.const 255
                  i32.and
                  tee_local $9
                  i32.const 192
                  i32.and
                  i32.const 128
                  i32.ne
                  if $if_4
                    block $block_4
                      i32.const 2
                      set_local $0
                      br $label$break$L9
                    end ;; $block_4
                  end ;; $if_4
                  get_local $7
                  get_local $11
                  i32.sub
                  i32.const 4
                  i32.lt_s
                  if $if_5
                    block $block_5
                      i32.const 1
                      set_local $0
                      br $label$break$L9
                    end ;; $block_5
                  end ;; $if_5
                  get_local $3
                  i32.const 255
                  i32.and
                  tee_local $3
                  i32.const 12
                  i32.shl
                  i32.const 258048
                  i32.and
                  get_local $10
                  i32.const 7
                  i32.and
                  tee_local $10
                  i32.const 18
                  i32.shl
                  i32.or
                  get_local $8
                  i32.const 6
                  i32.shl
                  tee_local $12
                  i32.const 4032
                  i32.and
                  i32.or
                  get_local $9
                  i32.const 63
                  i32.and
                  tee_local $9
                  i32.or
                  get_local $6
                  i32.gt_u
                  if $if_6
                    block $block_6
                      i32.const 2
                      set_local $0
                      br $label$break$L9
                    end ;; $block_6
                  end ;; $if_6
                  get_local $11
                  get_local $3
                  i32.const 2
                  i32.shl
                  i32.const 60
                  i32.and
                  get_local $8
                  i32.const 4
                  i32.shr_u
                  i32.const 3
                  i32.and
                  i32.or
                  get_local $3
                  i32.const 4
                  i32.shr_u
                  i32.const 3
                  i32.and
                  get_local $10
                  i32.const 2
                  i32.shl
                  i32.or
                  i32.const 6
                  i32.shl
                  i32.const 16320
                  i32.add
                  i32.or
                  i32.const 55296
                  i32.or
                  i32.store16
                  get_local $5
                  get_local $11
                  i32.const 2
                  i32.add
                  tee_local $3
                  i32.store
                  get_local $3
                  get_local $9
                  get_local $12
                  i32.const 960
                  i32.and
                  i32.or
                  i32.const 56320
                  i32.or
                  i32.store16
                  get_local $2
                  get_local $2
                  i32.load
                  i32.const 4
                  i32.add
                  i32.store
                end ;; $_10
              end ;; $_8
            end ;; $do-once
            get_local $5
            get_local $5
            i32.load
            i32.const 2
            i32.add
            i32.store
            br $label$continue$L9
          end ;; $label$break$L9
        end ;; $label$continue$L9
        br $__rjto$0
      end ;; $__rjti$0
      get_local $3
      i32.const 1
      i32.and
      set_local $0
    end ;; $__rjto$0
    get_local $0
    )
  
  (func $__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_ (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    get_global $STACKTOP
    set_local $12
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $12
    set_local $13
    get_local $2
    set_local $8
    loop $while-in
      block $while-out
        get_local $8
        get_local $3
        i32.eq
        if $_1
          block $_2
            get_local $3
            set_local $8
            br $while-out
          end ;; $_2
        end ;; $_1
        get_local $8
        i32.load8_s
        if $_3
          block $_4
            get_local $8
            i32.const 1
            i32.add
            set_local $8
            br $while-in
          end ;; $_4
        end ;; $_3
      end ;; $while-out
    end ;; $while-in
    get_local $7
    get_local $5
    i32.store
    get_local $4
    get_local $2
    i32.store
    get_local $6
    set_local $14
    get_local $0
    i32.const 8
    i32.add
    set_local $11
    get_local $8
    set_local $0
    block $__rjto$6
      block $__rjti$6
        block $__rjti$5
          block $__rjti$4
            block $__rjti$3
              loop $while-in1
                get_local $5
                get_local $6
                i32.eq
                get_local $2
                get_local $3
                i32.eq
                i32.or
                br_if $__rjti$6
                get_local $1
                tee_local $8
                i32.load offset=4
                set_local $9
                get_local $13
                tee_local $10
                get_local $8
                i32.load
                i32.store
                get_local $10
                get_local $9
                i32.store offset=4
                get_local $11
                i32.load
                call $_uselocale
                set_local $10
                get_local $5
                get_local $4
                get_local $0
                tee_local $8
                get_local $2
                i32.sub
                get_local $14
                get_local $5
                i32.sub
                i32.const 2
                i32.shr_s
                get_local $1
                call $_mbsnrtowcs
                set_local $9
                get_local $10
                if $_5
                  get_local $10
                  call $_uselocale
                  drop
                end ;; $_5
                get_local $9
                i32.const -1
                i32.eq
                if $_6
                  block $_7
                    get_local $2
                    set_local $0
                    br $__rjti$3
                  end ;; $_7
                end ;; $_6
                get_local $7
                get_local $7
                i32.load
                get_local $9
                i32.const 2
                i32.shl
                i32.add
                tee_local $5
                i32.store
                get_local $5
                get_local $6
                i32.eq
                br_if $__rjti$4
                get_local $4
                i32.load
                set_local $2
                get_local $0
                get_local $3
                i32.eq
                if $_8
                  get_local $3
                  set_local $0
                else
                  block $_9
                    get_local $11
                    i32.load
                    call $_uselocale
                    set_local $0
                    get_local $5
                    get_local $2
                    i32.const 1
                    get_local $1
                    call $_mbrtowc
                    set_local $2
                    get_local $0
                    if $_10
                      get_local $0
                      call $_uselocale
                      drop
                    end ;; $_10
                    get_local $2
                    if $_11
                      block $_12
                        i32.const 2
                        set_local $0
                        br $__rjto$6
                      end ;; $_12
                    end ;; $_11
                    get_local $7
                    get_local $7
                    i32.load
                    i32.const 4
                    i32.add
                    i32.store
                    get_local $4
                    get_local $4
                    i32.load
                    i32.const 1
                    i32.add
                    tee_local $2
                    i32.store
                    get_local $2
                    set_local $0
                    loop $while-in3
                      block $while-out2
                        get_local $0
                        get_local $3
                        i32.eq
                        if $_13
                          block $_14
                            get_local $3
                            set_local $0
                            br $while-out2
                          end ;; $_14
                        end ;; $_13
                        get_local $0
                        i32.load8_s
                        if $_15
                          block $_16
                            get_local $0
                            i32.const 1
                            i32.add
                            set_local $0
                            br $while-in3
                          end ;; $_16
                        end ;; $_15
                      end ;; $while-out2
                    end ;; $while-in3
                    get_local $7
                    i32.load
                    set_local $5
                  end ;; $_9
                end ;; $_8
                br $while-in1
              end ;; $while-in1
            end ;; $__rjti$3
            block $__rjti$2
              block $__rjti$1
                block $__rjti$0
                  loop $label$continue$L29
                    get_local $7
                    get_local $5
                    i32.store
                    get_local $0
                    get_local $4
                    i32.load
                    i32.eq
                    br_if $__rjti$2
                    get_local $11
                    i32.load
                    call $_uselocale
                    set_local $1
                    get_local $5
                    get_local $0
                    get_local $8
                    get_local $0
                    i32.sub
                    get_local $13
                    call $_mbrtowc
                    set_local $2
                    get_local $1
                    if $_17
                      get_local $1
                      call $_uselocale
                      drop
                    end ;; $_17
                    block $switch (result i32)
                      block $switch-default
                        block $switch-case5
                          block $switch-case4
                            block $switch-case
                              get_local $2
                              i32.const -2
                              i32.sub
                              br_table
                                $switch-case4 $switch-case $switch-case5
                                $switch-default ;; default
                            end ;; $switch-case
                            br $__rjti$0
                          end ;; $switch-case4
                          br $__rjti$1
                        end ;; $switch-case5
                        get_local $0
                        i32.const 1
                        i32.add
                        br $switch
                      end ;; $switch-default
                      get_local $0
                      get_local $2
                      i32.add
                    end ;; $switch
                    set_local $0
                    get_local $7
                    i32.load
                    i32.const 4
                    i32.add
                    set_local $5
                    br $label$continue$L29
                  end ;; $label$continue$L29
                end ;; $__rjti$0
                get_local $4
                get_local $0
                i32.store
                i32.const 2
                set_local $0
                br $__rjto$6
              end ;; $__rjti$1
              get_local $4
              get_local $0
              i32.store
              i32.const 1
              set_local $0
              br $__rjto$6
            end ;; $__rjti$2
            get_local $4
            get_local $0
            i32.store
            get_local $0
            get_local $3
            i32.ne
            set_local $0
            br $__rjto$6
          end ;; $__rjti$4
          get_local $4
          i32.load
          set_local $2
          br $__rjti$6
        end ;; $__rjti$5
        br $__rjto$6
      end ;; $__rjti$6
      get_local $2
      get_local $3
      i32.ne
      set_local $0
    end ;; $__rjto$6
    get_local $12
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_ (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    get_global $STACKTOP
    set_local $10
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $10
    set_local $12
    get_local $10
    i32.const 8
    i32.add
    set_local $13
    get_local $2
    set_local $8
    loop $while-in
      block $while-out
        get_local $8
        get_local $3
        i32.eq
        if $_1
          block $_2
            get_local $3
            set_local $8
            br $while-out
          end ;; $_2
        end ;; $_1
        get_local $8
        i32.load
        if $_3
          block $_4
            get_local $8
            i32.const 4
            i32.add
            set_local $8
            br $while-in
          end ;; $_4
        end ;; $_3
      end ;; $while-out
    end ;; $while-in
    get_local $7
    get_local $5
    i32.store
    get_local $4
    get_local $2
    i32.store
    get_local $6
    set_local $14
    get_local $0
    i32.const 8
    i32.add
    set_local $11
    get_local $8
    set_local $0
    block $__rjto$4
      block $__rjti$4
        block $__rjti$3
          block $__rjti$2
            block $__rjti$1
              block $__rjti$0
                loop $label$continue$L6
                  get_local $5
                  get_local $6
                  i32.eq
                  get_local $2
                  get_local $3
                  i32.eq
                  i32.or
                  br_if $__rjti$4
                  get_local $1
                  tee_local $8
                  i32.load offset=4
                  set_local $15
                  get_local $12
                  tee_local $9
                  get_local $8
                  i32.load
                  i32.store
                  get_local $9
                  get_local $15
                  i32.store offset=4
                  get_local $11
                  i32.load
                  call $_uselocale
                  set_local $8
                  get_local $5
                  get_local $4
                  get_local $0
                  get_local $2
                  i32.sub
                  i32.const 2
                  i32.shr_s
                  get_local $14
                  get_local $5
                  i32.sub
                  get_local $1
                  call $_wcsnrtombs
                  set_local $9
                  get_local $8
                  if $_5
                    get_local $8
                    call $_uselocale
                    drop
                  end ;; $_5
                  block $switch-default
                    block $switch-case0
                      block $switch-case
                        get_local $9
                        i32.const -1
                        i32.sub
                        br_table
                          $switch-case $switch-case0
                          $switch-default ;; default
                      end ;; $switch-case
                      get_local $2
                      set_local $0
                      get_local $5
                      set_local $1
                      br $__rjti$0
                    end ;; $switch-case0
                    i32.const 1
                    set_local $0
                    br $__rjto$4
                  end ;; $switch-default
                  get_local $7
                  get_local $7
                  i32.load
                  get_local $9
                  i32.add
                  tee_local $5
                  i32.store
                  get_local $5
                  get_local $6
                  i32.eq
                  br_if $__rjti$2
                  get_local $0
                  get_local $3
                  i32.eq
                  if $_6
                    block $_7
                      get_local $4
                      i32.load
                      set_local $2
                      get_local $3
                      set_local $0
                    end ;; $_7
                  else
                    block $_8
                      get_local $11
                      i32.load
                      call $_uselocale
                      set_local $2
                      get_local $13
                      i32.const 0
                      get_local $1
                      call $_wcrtomb
                      set_local $0
                      get_local $2
                      if $_9
                        get_local $2
                        call $_uselocale
                        drop
                      end ;; $_9
                      get_local $0
                      i32.const -1
                      i32.eq
                      if $_10
                        block $_11
                          i32.const 2
                          set_local $0
                          br $__rjto$4
                        end ;; $_11
                      end ;; $_10
                      get_local $0
                      get_local $14
                      get_local $7
                      i32.load
                      i32.sub
                      i32.gt_u
                      if $_12
                        block $_13
                          i32.const 1
                          set_local $0
                          br $__rjto$4
                        end ;; $_13
                      else
                        get_local $13
                        set_local $2
                      end ;; $_12
                      loop $while-in2
                        get_local $0
                        if $_14
                          block $_15
                            get_local $2
                            i32.load8_s
                            set_local $5
                            get_local $7
                            get_local $7
                            i32.load
                            tee_local $8
                            i32.const 1
                            i32.add
                            i32.store
                            get_local $8
                            get_local $5
                            i32.store8
                            get_local $0
                            i32.const -1
                            i32.add
                            set_local $0
                            get_local $2
                            i32.const 1
                            i32.add
                            set_local $2
                            br $while-in2
                          end ;; $_15
                        end ;; $_14
                      end ;; $while-in2
                      get_local $4
                      get_local $4
                      i32.load
                      i32.const 4
                      i32.add
                      tee_local $2
                      i32.store
                      get_local $2
                      set_local $0
                      loop $while-in4
                        block $while-out3
                          get_local $0
                          get_local $3
                          i32.eq
                          if $_16
                            block $_17
                              get_local $3
                              set_local $0
                              br $while-out3
                            end ;; $_17
                          end ;; $_16
                          get_local $0
                          i32.load
                          if $_18
                            block $_19
                              get_local $0
                              i32.const 4
                              i32.add
                              set_local $0
                              br $while-in4
                            end ;; $_19
                          end ;; $_18
                        end ;; $while-out3
                      end ;; $while-in4
                      get_local $7
                      i32.load
                      set_local $5
                    end ;; $_8
                  end ;; $_6
                  br $label$continue$L6
                end ;; $label$continue$L6
              end ;; $__rjti$0
              get_local $7
              get_local $1
              i32.store
              loop $while-in6
                get_local $0
                get_local $4
                i32.load
                i32.ne
                if $if
                  block $block
                    get_local $0
                    i32.load
                    set_local $3
                    get_local $11
                    i32.load
                    call $_uselocale
                    set_local $2
                    get_local $1
                    get_local $3
                    get_local $12
                    call $_wcrtomb
                    set_local $1
                    get_local $2
                    if $if_1
                      get_local $2
                      call $_uselocale
                      drop
                    end ;; $if_1
                    get_local $1
                    i32.const -1
                    i32.ne
                    if $if_2
                      block $block_1
                        get_local $7
                        get_local $7
                        i32.load
                        get_local $1
                        i32.add
                        tee_local $1
                        i32.store
                        get_local $0
                        i32.const 4
                        i32.add
                        set_local $0
                        br $while-in6
                      end ;; $block_1
                    end ;; $if_2
                  end ;; $block
                end ;; $if
              end ;; $while-in6
              get_local $4
              get_local $0
              i32.store
              i32.const 2
              set_local $0
              br $__rjto$4
            end ;; $__rjti$1
            br $__rjto$4
          end ;; $__rjti$2
          get_local $4
          i32.load
          set_local $2
          br $__rjti$4
        end ;; $__rjti$3
        br $__rjto$4
      end ;; $__rjti$4
      get_local $2
      get_local $3
      i32.ne
      set_local $0
    end ;; $__rjto$4
    get_local $10
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe (type $FUNCSIG$iiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (result i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    (local $17 i32)
    (local $18 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 240
    i32.add
    set_global $STACKTOP
    get_local $7
    set_local $14
    get_local $7
    i32.const 36
    i32.add
    set_local $15
    get_local $7
    i32.const 16
    i32.add
    tee_local $11
    get_local $7
    i32.const 140
    i32.add
    tee_local $9
    i32.store
    get_local $11
    i32.const 4
    i32.add
    tee_local $17
    i32.const 107
    i32.store
    get_local $7
    i32.const 8
    i32.add
    tee_local $13
    get_local $4
    call $__ZNKSt3__28ios_base6getlocEv
    i32.store
    get_local $13
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $0
    get_local $7
    i32.const 136
    i32.add
    tee_local $8
    i32.const 0
    i32.store8
    get_local $7
    i32.const 4
    i32.add
    tee_local $12
    get_local $2
    i32.load
    i32.store
    get_local $4
    i32.load offset=4
    set_local $10
    get_local $7
    i32.const 24
    i32.add
    tee_local $4
    get_local $12
    i32.load
    i32.store
    get_local $1
    get_local $4
    get_local $3
    get_local $13
    get_local $10
    get_local $5
    get_local $8
    get_local $0
    get_local $11
    get_local $7
    i32.const 12
    i32.add
    tee_local $16
    get_local $9
    i32.const 100
    i32.add
    call $__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_
    if $_1
      block $_2
        get_local $0
        i32.const 15221
        i32.const 15231
        get_local $4
        get_local $0
        i32.load
        i32.load offset=32
        i32.const 7
        i32.and
        i32.const 397
        i32.add
        call_indirect (type $FUNCSIG$iiiii)
        drop
        get_local $16
        i32.load
        tee_local $10
        get_local $11
        i32.load
        tee_local $9
        i32.sub
        tee_local $0
        i32.const 98
        i32.gt_s
        if $_3
          block $_4
            get_local $0
            i32.const 2
            i32.add
            call $_malloc
            tee_local $0
            set_local $3
            get_local $0
            i32.eqz
            if $_5
              i32.const 0
              set_local $0
            end ;; $_5
          end ;; $_4
        else
          block $_6
            i32.const 0
            set_local $3
            get_local $15
            set_local $0
          end ;; $_6
        end ;; $_3
        get_local $8
        i32.load8_s
        if $_7
          block $_8
            get_local $0
            i32.const 45
            i32.store8
            get_local $0
            i32.const 1
            i32.add
            set_local $0
          end ;; $_8
        end ;; $_7
        get_local $4
        i32.const 10
        i32.add
        set_local $12
        get_local $4
        set_local $18
        get_local $0
        set_local $8
        loop $while-in
          get_local $9
          get_local $10
          i32.lt_u
          if $_9
            block $_10
              get_local $9
              i32.load8_s
              set_local $10
              get_local $4
              set_local $0
              loop $while-in1
                block $while-out0
                  get_local $0
                  get_local $12
                  i32.eq
                  if $_11
                    block $_12
                      get_local $12
                      set_local $0
                      br $while-out0
                    end ;; $_12
                  end ;; $_11
                  get_local $0
                  i32.load8_s
                  get_local $10
                  i32.ne
                  if $_13
                    block $_14
                      get_local $0
                      i32.const 1
                      i32.add
                      set_local $0
                      br $while-in1
                    end ;; $_14
                  end ;; $_13
                end ;; $while-out0
              end ;; $while-in1
              get_local $8
              get_local $0
              get_local $18
              i32.sub
              i32.const 15221
              i32.add
              i32.load8_s
              i32.store8
              get_local $16
              i32.load
              set_local $10
              get_local $8
              i32.const 1
              i32.add
              set_local $8
              get_local $9
              i32.const 1
              i32.add
              set_local $9
              br $while-in
            end ;; $_10
          end ;; $_9
        end ;; $while-in
        get_local $8
        i32.const 0
        i32.store8
        get_local $14
        get_local $6
        i32.store
        get_local $15
        i32.const 15232
        get_local $14
        call $_sscanf
        drop
        get_local $3
        if $_15
          get_local $3
          call $_free
        end ;; $_15
      end ;; $_2
    end ;; $_1
    get_local $1
    i32.load
    tee_local $0
    if $_16
      get_local $0
      i32.load offset=12
      get_local $0
      i32.load offset=16
      i32.eq
      if $_17
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_18 (result i32)
          block $_19 (result i32)
            get_local $1
            i32.const 0
            i32.store
            i32.const 0
          end ;; $_19
        else
          get_local $1
          i32.load
        end ;; $_18
        set_local $0
      end ;; $_17
    else
      i32.const 0
      set_local $0
    end ;; $_16
    get_local $0
    i32.eqz
    set_local $3
    block $__rjto$1
      block $__rjti$1
        block $__rjti$0
          get_local $2
          i32.load
          tee_local $0
          i32.eqz
          br_if $__rjti$0
          get_local $0
          i32.load offset=12
          get_local $0
          i32.load offset=16
          i32.eq
          if $if
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $if_1
              block $block
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $block
            end ;; $if_1
          end ;; $if
          get_local $3
          i32.eqz
          br_if $__rjti$1
          br $__rjto$1
        end ;; $__rjti$0
        get_local $3
        br_if $__rjti$1
        br $__rjto$1
      end ;; $__rjti$1
      get_local $5
      get_local $5
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$1
    get_local $1
    i32.load
    set_local $1
    get_local $13
    i32.load
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $11
    i32.load
    set_local $0
    get_local $11
    i32.const 0
    i32.store
    get_local $0
    if $if_2
      get_local $0
      get_local $17
      i32.load
      i32.const 127
      i32.and
      i32.const 48
      i32.add
      call_indirect (type $FUNCSIG$vi)
    end ;; $if_2
    get_local $7
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    (local $8 i32)
    (local $9 i32)
    get_local $2
    get_local $0
    i32.store
    get_local $5
    get_local $3
    i32.store
    block $label$break$L4
      block $__rjti$0
        get_local $7
        i32.const 2
        i32.and
        i32.eqz
        br_if $__rjti$0
        get_local $4
        get_local $3
        i32.sub
        i32.const 3
        i32.lt_s
        if $_1
          i32.const 1
          set_local $0
        else
          block $_2
            get_local $5
            get_local $3
            i32.const 1
            i32.add
            i32.store
            get_local $3
            i32.const -17
            i32.store8
            get_local $5
            get_local $5
            i32.load
            tee_local $0
            i32.const 1
            i32.add
            i32.store
            get_local $0
            i32.const -69
            i32.store8
            get_local $5
            get_local $5
            i32.load
            tee_local $0
            i32.const 1
            i32.add
            i32.store
            get_local $0
            i32.const -65
            i32.store8
            br $__rjti$0
          end ;; $_2
        end ;; $_1
        br $label$break$L4
      end ;; $__rjti$0
      get_local $1
      set_local $3
      get_local $2
      i32.load
      set_local $0
      loop $while-in
        get_local $0
        get_local $1
        i32.ge_u
        if $_3
          block $_4
            i32.const 0
            set_local $0
            br $label$break$L4
          end ;; $_4
        end ;; $_3
        get_local $0
        i32.load16_s
        tee_local $8
        i32.const 65535
        i32.and
        tee_local $7
        get_local $6
        i32.gt_u
        if $_5
          block $_6
            i32.const 2
            set_local $0
            br $label$break$L4
          end ;; $_6
        end ;; $_5
        block $do-once
          get_local $8
          i32.const 65535
          i32.and
          i32.const 128
          i32.lt_s
          if $if
            block $block
              get_local $4
              get_local $5
              i32.load
              tee_local $0
              i32.sub
              i32.const 1
              i32.lt_s
              if $if_1
                block $block_1
                  i32.const 1
                  set_local $0
                  br $label$break$L4
                end ;; $block_1
              end ;; $if_1
              get_local $5
              get_local $0
              i32.const 1
              i32.add
              i32.store
              get_local $0
              get_local $8
              i32.store8
            end ;; $block
          else
            block $block_2
              get_local $8
              i32.const 65535
              i32.and
              i32.const 2048
              i32.lt_s
              if $if_2
                block $block_3
                  get_local $4
                  get_local $5
                  i32.load
                  tee_local $0
                  i32.sub
                  i32.const 2
                  i32.lt_s
                  if $if_3
                    block $block_4
                      i32.const 1
                      set_local $0
                      br $label$break$L4
                    end ;; $block_4
                  end ;; $if_3
                  get_local $5
                  get_local $0
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $0
                  get_local $7
                  i32.const 6
                  i32.shr_u
                  i32.const 192
                  i32.or
                  i32.store8
                  get_local $5
                  get_local $5
                  i32.load
                  tee_local $0
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $0
                  get_local $7
                  i32.const 63
                  i32.and
                  i32.const 128
                  i32.or
                  i32.store8
                  br $do-once
                end ;; $block_3
              end ;; $if_2
              get_local $8
              i32.const 65535
              i32.and
              i32.const 55296
              i32.lt_s
              if $if_4
                block $block_5
                  get_local $4
                  get_local $5
                  i32.load
                  tee_local $0
                  i32.sub
                  i32.const 3
                  i32.lt_s
                  if $if_5
                    block $block_6
                      i32.const 1
                      set_local $0
                      br $label$break$L4
                    end ;; $block_6
                  end ;; $if_5
                  get_local $5
                  get_local $0
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $0
                  get_local $7
                  i32.const 12
                  i32.shr_u
                  i32.const 224
                  i32.or
                  i32.store8
                  get_local $5
                  get_local $5
                  i32.load
                  tee_local $0
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $0
                  get_local $7
                  i32.const 6
                  i32.shr_u
                  i32.const 63
                  i32.and
                  i32.const 128
                  i32.or
                  i32.store8
                  get_local $5
                  get_local $5
                  i32.load
                  tee_local $0
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $0
                  get_local $7
                  i32.const 63
                  i32.and
                  i32.const 128
                  i32.or
                  i32.store8
                  br $do-once
                end ;; $block_5
              end ;; $if_4
              get_local $8
              i32.const 65535
              i32.and
              i32.const 56320
              i32.ge_s
              if $if_6
                block $block_7
                  get_local $8
                  i32.const 65535
                  i32.and
                  i32.const 57344
                  i32.lt_s
                  if $if_7
                    block $block_8
                      i32.const 2
                      set_local $0
                      br $label$break$L4
                    end ;; $block_8
                  end ;; $if_7
                  get_local $4
                  get_local $5
                  i32.load
                  tee_local $0
                  i32.sub
                  i32.const 3
                  i32.lt_s
                  if $if_8
                    block $block_9
                      i32.const 1
                      set_local $0
                      br $label$break$L4
                    end ;; $block_9
                  end ;; $if_8
                  get_local $5
                  get_local $0
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $0
                  get_local $7
                  i32.const 12
                  i32.shr_u
                  i32.const 224
                  i32.or
                  i32.store8
                  get_local $5
                  get_local $5
                  i32.load
                  tee_local $0
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $0
                  get_local $7
                  i32.const 6
                  i32.shr_u
                  i32.const 63
                  i32.and
                  i32.const 128
                  i32.or
                  i32.store8
                  get_local $5
                  get_local $5
                  i32.load
                  tee_local $0
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $0
                  get_local $7
                  i32.const 63
                  i32.and
                  i32.const 128
                  i32.or
                  i32.store8
                  br $do-once
                end ;; $block_7
              end ;; $if_6
              get_local $3
              get_local $0
              i32.sub
              i32.const 4
              i32.lt_s
              if $if_9
                block $block_10
                  i32.const 1
                  set_local $0
                  br $label$break$L4
                end ;; $block_10
              end ;; $if_9
              get_local $0
              i32.const 2
              i32.add
              tee_local $8
              i32.load16_u
              tee_local $0
              i32.const 64512
              i32.and
              i32.const 56320
              i32.ne
              if $if_10
                block $block_11
                  i32.const 2
                  set_local $0
                  br $label$break$L4
                end ;; $block_11
              end ;; $if_10
              get_local $4
              get_local $5
              i32.load
              i32.sub
              i32.const 4
              i32.lt_s
              if $if_11
                block $block_12
                  i32.const 1
                  set_local $0
                  br $label$break$L4
                end ;; $block_12
              end ;; $if_11
              get_local $7
              i32.const 960
              i32.and
              tee_local $9
              i32.const 10
              i32.shl
              i32.const 65536
              i32.add
              get_local $7
              i32.const 10
              i32.shl
              i32.const 64512
              i32.and
              i32.or
              get_local $0
              i32.const 1023
              i32.and
              i32.or
              get_local $6
              i32.gt_u
              if $if_12
                block $block_13
                  i32.const 2
                  set_local $0
                  br $label$break$L4
                end ;; $block_13
              end ;; $if_12
              get_local $2
              get_local $8
              i32.store
              get_local $5
              get_local $5
              i32.load
              tee_local $8
              i32.const 1
              i32.add
              i32.store
              get_local $8
              get_local $9
              i32.const 6
              i32.shr_u
              i32.const 1
              i32.add
              tee_local $8
              i32.const 2
              i32.shr_u
              i32.const 240
              i32.or
              i32.store8
              get_local $5
              get_local $5
              i32.load
              tee_local $9
              i32.const 1
              i32.add
              i32.store
              get_local $9
              get_local $7
              i32.const 2
              i32.shr_u
              i32.const 15
              i32.and
              get_local $8
              i32.const 4
              i32.shl
              i32.const 48
              i32.and
              i32.or
              i32.const 128
              i32.or
              i32.store8
              get_local $5
              get_local $5
              i32.load
              tee_local $8
              i32.const 1
              i32.add
              i32.store
              get_local $8
              get_local $7
              i32.const 4
              i32.shl
              i32.const 48
              i32.and
              get_local $0
              i32.const 6
              i32.shr_u
              i32.const 15
              i32.and
              i32.or
              i32.const 128
              i32.or
              i32.store8
              get_local $5
              get_local $5
              i32.load
              tee_local $7
              i32.const 1
              i32.add
              i32.store
              get_local $7
              get_local $0
              i32.const 63
              i32.and
              i32.const 128
              i32.or
              i32.store8
            end ;; $block_2
          end ;; $if
        end ;; $do-once
        get_local $2
        get_local $2
        i32.load
        i32.const 2
        i32.add
        tee_local $0
        i32.store
        br $while-in
      end ;; $while-in
    end ;; $label$break$L4
    get_local $0
    )
  
  (func $__ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    get_local $2
    get_local $0
    i32.store
    get_local $5
    get_local $3
    i32.store
    get_local $7
    i32.const 4
    i32.and
    if $_1
      get_local $1
      tee_local $0
      get_local $2
      i32.load
      tee_local $3
      i32.sub
      i32.const 2
      i32.gt_s
      if $_2
        get_local $3
        i32.load8_s
        i32.const -17
        i32.eq
        if $_3
          get_local $3
          i32.load8_s offset=1
          i32.const -69
          i32.eq
          if $_4
            get_local $3
            i32.load8_s offset=2
            i32.const -65
            i32.eq
            if $_5
              get_local $2
              get_local $3
              i32.const 3
              i32.add
              i32.store
            end ;; $_5
          end ;; $_4
        end ;; $_3
      end ;; $_2
    else
      get_local $1
      set_local $0
    end ;; $_1
    block $__rjto$0
      block $__rjti$0
        loop $label$continue$L9
          block $label$break$L9
            get_local $2
            i32.load
            tee_local $7
            get_local $1
            i32.lt_u
            tee_local $3
            i32.eqz
            br_if $__rjti$0
            get_local $5
            i32.load
            tee_local $10
            get_local $4
            i32.ge_u
            br_if $__rjti$0
            get_local $7
            i32.load8_s
            tee_local $8
            i32.const 255
            i32.and
            set_local $3
            block $do-once
              get_local $8
              i32.const -1
              i32.gt_s
              if $_6
                block $_7
                  get_local $3
                  get_local $6
                  i32.gt_u
                  if $_8
                    block $_9
                      i32.const 2
                      set_local $0
                      br $label$break$L9
                    end ;; $_9
                  end ;; $_8
                  get_local $10
                  get_local $3
                  i32.store
                  get_local $2
                  get_local $7
                  i32.const 1
                  i32.add
                  i32.store
                end ;; $_7
              else
                block $_10
                  get_local $8
                  i32.const 255
                  i32.and
                  i32.const 194
                  i32.lt_s
                  if $_11
                    block $_12
                      i32.const 2
                      set_local $0
                      br $label$break$L9
                    end ;; $_12
                  end ;; $_11
                  get_local $8
                  i32.const 255
                  i32.and
                  i32.const 224
                  i32.lt_s
                  if $_13
                    block $_14
                      get_local $0
                      get_local $7
                      i32.sub
                      i32.const 2
                      i32.lt_s
                      if $_15
                        block $_16
                          i32.const 1
                          set_local $0
                          br $label$break$L9
                        end ;; $_16
                      end ;; $_15
                      get_local $7
                      i32.load8_u offset=1
                      tee_local $8
                      i32.const 192
                      i32.and
                      i32.const 128
                      i32.ne
                      if $_17
                        block $_18
                          i32.const 2
                          set_local $0
                          br $label$break$L9
                        end ;; $_18
                      end ;; $_17
                      get_local $8
                      i32.const 63
                      i32.and
                      get_local $3
                      i32.const 6
                      i32.shl
                      i32.const 1984
                      i32.and
                      i32.or
                      tee_local $3
                      get_local $6
                      i32.gt_u
                      if $_19
                        block $_20
                          i32.const 2
                          set_local $0
                          br $label$break$L9
                        end ;; $_20
                      end ;; $_19
                      get_local $10
                      get_local $3
                      i32.store
                      get_local $2
                      get_local $7
                      i32.const 2
                      i32.add
                      i32.store
                      br $do-once
                    end ;; $_14
                  end ;; $_13
                  get_local $8
                  i32.const 255
                  i32.and
                  i32.const 240
                  i32.lt_s
                  if $_21
                    block $_22
                      get_local $0
                      get_local $7
                      i32.sub
                      i32.const 3
                      i32.lt_s
                      if $_23
                        block $_24
                          i32.const 1
                          set_local $0
                          br $label$break$L9
                        end ;; $_24
                      end ;; $_23
                      get_local $7
                      i32.load8_s offset=1
                      set_local $8
                      get_local $7
                      i32.load8_u offset=2
                      set_local $9
                      block $switch
                        block $switch-default
                          block $switch-case0
                            block $switch-case
                              get_local $3
                              i32.const 224
                              i32.sub
                              br_table
                                $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0
                                $switch-default ;; default
                            end ;; $switch-case
                            get_local $8
                            i32.const 224
                            i32.and
                            i32.const 160
                            i32.ne
                            if $_25
                              block $_26
                                i32.const 2
                                set_local $0
                                br $label$break$L9
                              end ;; $_26
                            end ;; $_25
                            br $switch
                          end ;; $switch-case0
                          get_local $8
                          i32.const 224
                          i32.and
                          i32.const 128
                          i32.ne
                          if $_27
                            block $_28
                              i32.const 2
                              set_local $0
                              br $label$break$L9
                            end ;; $_28
                          end ;; $_27
                          br $switch
                        end ;; $switch-default
                        get_local $8
                        i32.const 192
                        i32.and
                        i32.const 128
                        i32.ne
                        if $_29
                          block $_30
                            i32.const 2
                            set_local $0
                            br $label$break$L9
                          end ;; $_30
                        end ;; $_29
                      end ;; $switch
                      get_local $9
                      tee_local $9
                      i32.const 192
                      i32.and
                      i32.const 128
                      i32.ne
                      if $_31
                        block $_32
                          i32.const 2
                          set_local $0
                          br $label$break$L9
                        end ;; $_32
                      end ;; $_31
                      get_local $8
                      i32.const 255
                      i32.and
                      i32.const 6
                      i32.shl
                      i32.const 4032
                      i32.and
                      get_local $3
                      i32.const 12
                      i32.shl
                      i32.const 61440
                      i32.and
                      i32.or
                      get_local $9
                      i32.const 63
                      i32.and
                      i32.or
                      tee_local $3
                      get_local $6
                      i32.gt_u
                      if $_33
                        block $_34
                          i32.const 2
                          set_local $0
                          br $label$break$L9
                        end ;; $_34
                      end ;; $_33
                      get_local $10
                      get_local $3
                      i32.store
                      get_local $2
                      get_local $7
                      i32.const 3
                      i32.add
                      i32.store
                      br $do-once
                    end ;; $_22
                  end ;; $_21
                  get_local $8
                  i32.const 255
                  i32.and
                  i32.const 245
                  i32.ge_s
                  if $_35
                    block $_36
                      i32.const 2
                      set_local $0
                      br $label$break$L9
                    end ;; $_36
                  end ;; $_35
                  get_local $0
                  get_local $7
                  i32.sub
                  i32.const 4
                  i32.lt_s
                  if $_37
                    block $_38
                      i32.const 1
                      set_local $0
                      br $label$break$L9
                    end ;; $_38
                  end ;; $_37
                  get_local $7
                  i32.load8_s offset=1
                  set_local $8
                  get_local $7
                  i32.load8_u offset=2
                  set_local $9
                  get_local $7
                  i32.load8_u offset=3
                  set_local $11
                  block $switch1
                    block $switch-default4
                      block $switch-case3
                        block $switch-case2
                          get_local $3
                          i32.const 240
                          i32.sub
                          br_table
                            $switch-case2 $switch-default4 $switch-default4 $switch-default4 $switch-case3
                            $switch-default4 ;; default
                        end ;; $switch-case2
                        get_local $8
                        i32.const 112
                        i32.add
                        i32.const 255
                        i32.and
                        i32.const 48
                        i32.ge_s
                        if $if
                          block $block
                            i32.const 2
                            set_local $0
                            br $label$break$L9
                          end ;; $block
                        end ;; $if
                        br $switch1
                      end ;; $switch-case3
                      get_local $8
                      i32.const 240
                      i32.and
                      i32.const 128
                      i32.ne
                      if $if_1
                        block $block_1
                          i32.const 2
                          set_local $0
                          br $label$break$L9
                        end ;; $block_1
                      end ;; $if_1
                      br $switch1
                    end ;; $switch-default4
                    get_local $8
                    i32.const 192
                    i32.and
                    i32.const 128
                    i32.ne
                    if $if_2
                      block $block_2
                        i32.const 2
                        set_local $0
                        br $label$break$L9
                      end ;; $block_2
                    end ;; $if_2
                  end ;; $switch1
                  get_local $9
                  tee_local $9
                  i32.const 192
                  i32.and
                  i32.const 128
                  i32.ne
                  if $if_3
                    block $block_3
                      i32.const 2
                      set_local $0
                      br $label$break$L9
                    end ;; $block_3
                  end ;; $if_3
                  get_local $11
                  tee_local $11
                  i32.const 192
                  i32.and
                  i32.const 128
                  i32.ne
                  if $if_4
                    block $block_4
                      i32.const 2
                      set_local $0
                      br $label$break$L9
                    end ;; $block_4
                  end ;; $if_4
                  get_local $8
                  i32.const 255
                  i32.and
                  i32.const 12
                  i32.shl
                  i32.const 258048
                  i32.and
                  get_local $3
                  i32.const 18
                  i32.shl
                  i32.const 1835008
                  i32.and
                  i32.or
                  get_local $9
                  i32.const 6
                  i32.shl
                  i32.const 4032
                  i32.and
                  i32.or
                  get_local $11
                  i32.const 63
                  i32.and
                  i32.or
                  tee_local $3
                  get_local $6
                  i32.gt_u
                  if $if_5
                    block $block_5
                      i32.const 2
                      set_local $0
                      br $label$break$L9
                    end ;; $block_5
                  end ;; $if_5
                  get_local $10
                  get_local $3
                  i32.store
                  get_local $2
                  get_local $7
                  i32.const 4
                  i32.add
                  i32.store
                end ;; $_10
              end ;; $_6
            end ;; $do-once
            get_local $5
            get_local $5
            i32.load
            i32.const 4
            i32.add
            i32.store
            br $label$continue$L9
          end ;; $label$break$L9
        end ;; $label$continue$L9
        br $__rjto$0
      end ;; $__rjti$0
      get_local $3
      i32.const 1
      i32.and
      set_local $0
    end ;; $__rjto$0
    get_local $0
    )
  
  (func $__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE (type $FUNCSIG$iiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (result i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 432
    i32.add
    set_global $STACKTOP
    get_local $7
    i32.const 16
    i32.add
    tee_local $9
    get_local $7
    i32.const 24
    i32.add
    tee_local $13
    i32.store
    get_local $9
    i32.const 4
    i32.add
    tee_local $14
    i32.const 107
    i32.store
    get_local $7
    i32.const 4
    i32.add
    tee_local $11
    get_local $4
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $15
    i32.store
    get_local $11
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $8
    get_local $7
    i32.const 428
    i32.add
    tee_local $12
    i32.const 0
    i32.store8
    get_local $7
    tee_local $0
    get_local $2
    i32.load
    tee_local $10
    i32.store
    get_local $4
    i32.load offset=4
    set_local $4
    get_local $7
    i32.const 424
    i32.add
    tee_local $16
    get_local $0
    i32.load
    i32.store
    get_local $1
    get_local $16
    get_local $3
    get_local $11
    get_local $4
    get_local $5
    get_local $12
    get_local $8
    get_local $9
    get_local $7
    i32.const 8
    i32.add
    tee_local $0
    get_local $13
    i32.const 400
    i32.add
    call $__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_
    if $_1
      block $_2
        get_local $6
        i32.const 11
        i32.add
        tee_local $3
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_3
          block $_4
            get_local $6
            i32.load
            i32.const 0
            i32.store
            get_local $6
            i32.const 0
            i32.store offset=4
          end ;; $_4
        else
          block $_5
            get_local $6
            i32.const 0
            i32.store
            get_local $3
            i32.const 0
            i32.store8
          end ;; $_5
        end ;; $_3
        get_local $12
        i32.load8_s
        if $_6
          get_local $6
          get_local $8
          i32.const 45
          get_local $8
          i32.load
          i32.load offset=44
          i32.const 15
          i32.and
          i32.const 413
          i32.add
          call_indirect (type $FUNCSIG$iii)
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw
        end ;; $_6
        get_local $8
        i32.const 48
        get_local $8
        i32.load
        i32.load offset=44
        i32.const 15
        i32.and
        i32.const 413
        i32.add
        call_indirect (type $FUNCSIG$iii)
        set_local $3
        get_local $0
        i32.load
        tee_local $4
        i32.const -4
        i32.add
        set_local $8
        get_local $9
        i32.load
        set_local $0
        loop $while-in
          get_local $0
          get_local $8
          i32.lt_u
          if $_7
            get_local $0
            i32.load
            get_local $3
            i32.eq
            if $_8
              block $_9
                get_local $0
                i32.const 4
                i32.add
                set_local $0
                br $while-in
              end ;; $_9
            end ;; $_8
          end ;; $_7
        end ;; $while-in
        get_local $6
        get_local $0
        get_local $4
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorIS9_EE5valueERS5_E4typeES9_S9_
        drop
      end ;; $_2
    end ;; $_1
    get_local $10
    set_local $0
    get_local $1
    i32.load
    tee_local $3
    if $_10 (result i32)
      get_local $3
      i32.load offset=12
      tee_local $4
      get_local $3
      i32.load offset=16
      i32.eq
      if $_11 (result i32)
        get_local $3
        get_local $3
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $4
        i32.load
      end ;; $_11
      tee_local $3
      i32.const -1
      i32.eq
      if $_12 (result i32)
        block $_13 (result i32)
          get_local $1
          i32.const 0
          i32.store
          i32.const 1
        end ;; $_13
      else
        get_local $1
        i32.load
        i32.eqz
      end ;; $_12
    else
      i32.const 1
    end ;; $_10
    set_local $3
    block $__rjto$1
      block $__rjti$1
        block $__rjti$0
          get_local $10
          i32.eqz
          br_if $__rjti$0
          get_local $0
          i32.load offset=12
          tee_local $4
          get_local $0
          i32.load offset=16
          i32.eq
          if $if (result i32)
            get_local $0
            get_local $10
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $4
            i32.load
          end ;; $if
          tee_local $0
          i32.const -1
          i32.eq
          if $if_1
            block $block
              get_local $2
              i32.const 0
              i32.store
              br $__rjti$0
            end ;; $block
          else
            get_local $3
            i32.eqz
            br_if $__rjti$1
          end ;; $if_1
          br $__rjto$1
        end ;; $__rjti$0
        get_local $3
        br_if $__rjti$1
        br $__rjto$1
      end ;; $__rjti$1
      get_local $5
      get_local $5
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$1
    get_local $1
    i32.load
    set_local $1
    get_local $15
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $9
    i32.load
    set_local $0
    get_local $9
    i32.const 0
    i32.store
    get_local $0
    if $if_2
      get_local $0
      get_local $14
      i32.load
      i32.const 127
      i32.and
      i32.const 48
      i32.add
      call_indirect (type $FUNCSIG$vi)
    end ;; $if_2
    get_local $7
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_ (type $_7)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (param $8 i32)
    (param $9 i32)
    (param $10 i32)
    (param $11 i32)
    (result i32)
    block $label$break$L1 (result i32)
      get_local $0
      i32.const 255
      i32.and
      get_local $5
      i32.const 255
      i32.and
      i32.eq
      if $_1 (result i32)
        get_local $1
        i32.load8_s
        if $_2 (result i32)
          block $_3 (result i32)
            get_local $1
            i32.const 0
            i32.store8
            get_local $4
            get_local $4
            i32.load
            tee_local $0
            i32.const 1
            i32.add
            i32.store
            get_local $0
            i32.const 46
            i32.store8
            get_local $7
            i32.load8_s offset=11
            tee_local $0
            i32.const 0
            i32.lt_s
            if $_4 (result i32)
              get_local $7
              i32.load offset=4
            else
              get_local $0
              i32.const 255
              i32.and
            end ;; $_4
            if $_5 (result i32)
              get_local $9
              i32.load
              tee_local $0
              get_local $8
              i32.sub
              i32.const 160
              i32.lt_s
              if $_6 (result i32)
                block $_7 (result i32)
                  get_local $10
                  i32.load
                  set_local $1
                  get_local $9
                  get_local $0
                  i32.const 4
                  i32.add
                  i32.store
                  get_local $0
                  get_local $1
                  i32.store
                  i32.const 0
                end ;; $_7
              else
                i32.const 0
              end ;; $_6
            else
              i32.const 0
            end ;; $_5
          end ;; $_3
        else
          i32.const -1
        end ;; $_2
      else
        block $_8 (result i32)
          get_local $0
          i32.const 255
          i32.and
          get_local $6
          i32.const 255
          i32.and
          i32.eq
          if $_9
            get_local $7
            i32.load8_s offset=11
            tee_local $5
            i32.const 0
            i32.lt_s
            if $_10 (result i32)
              get_local $7
              i32.load offset=4
            else
              get_local $5
              i32.const 255
              i32.and
            end ;; $_10
            if $_11
              block $_12
                i32.const -1
                get_local $1
                i32.load8_s
                i32.eqz
                br_if $label$break$L1
                drop
                i32.const 0
                get_local $9
                i32.load
                tee_local $0
                get_local $8
                i32.sub
                i32.const 160
                i32.ge_s
                br_if $label$break$L1
                drop
                get_local $10
                i32.load
                set_local $1
                get_local $9
                get_local $0
                i32.const 4
                i32.add
                i32.store
                get_local $0
                get_local $1
                i32.store
                get_local $10
                i32.const 0
                i32.store
                i32.const 0
                br $label$break$L1
              end ;; $_12
            end ;; $_11
          end ;; $_9
          get_local $11
          i32.const 32
          i32.add
          set_local $6
          get_local $11
          set_local $5
          loop $while-in
            block $while-out
              get_local $5
              get_local $6
              i32.eq
              if $_13
                block $_14
                  get_local $6
                  set_local $5
                  br $while-out
                end ;; $_14
              end ;; $_13
              get_local $5
              i32.load8_u
              get_local $0
              i32.const 255
              i32.and
              i32.ne
              if $_15
                block $_16
                  get_local $5
                  i32.const 1
                  i32.add
                  set_local $5
                  br $while-in
                end ;; $_16
              end ;; $_15
            end ;; $while-out
          end ;; $while-in
          get_local $5
          get_local $11
          i32.sub
          tee_local $5
          i32.const 31
          i32.gt_s
          if $_17 (result i32)
            i32.const -1
          else
            block $_18 (result i32)
              get_local $5
              i32.const 13937
              i32.add
              i32.load8_s
              set_local $0
              block $switch-default
                block $switch-case1
                  block $switch-case
                    get_local $5
                    i32.const 22
                    i32.sub
                    br_table
                      $switch-case1 $switch-case1 $switch-case $switch-case
                      $switch-default ;; default
                  end ;; $switch-case
                  get_local $4
                  i32.load
                  tee_local $1
                  get_local $3
                  i32.ne
                  if $if
                    i32.const -1
                    get_local $1
                    i32.const -1
                    i32.add
                    i32.load8_u
                    i32.const 95
                    i32.and
                    get_local $2
                    i32.load8_u
                    i32.const 127
                    i32.and
                    i32.ne
                    br_if $label$break$L1
                    drop
                  end ;; $if
                  get_local $4
                  get_local $1
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $1
                  get_local $0
                  i32.store8
                  i32.const 0
                  br $label$break$L1
                end ;; $switch-case1
                get_local $2
                i32.const 80
                i32.store8
                get_local $4
                get_local $4
                i32.load
                tee_local $1
                i32.const 1
                i32.add
                i32.store
                get_local $1
                get_local $0
                i32.store8
                i32.const 0
                br $label$break$L1
              end ;; $switch-default
              get_local $0
              i32.const 95
              i32.and
              tee_local $3
              get_local $2
              i32.load8_s
              i32.eq
              if $if_1
                block $block
                  get_local $2
                  get_local $3
                  i32.const 128
                  i32.or
                  i32.store8
                  get_local $1
                  i32.load8_s
                  if $if_2
                    block $block_1
                      get_local $1
                      i32.const 0
                      i32.store8
                      get_local $7
                      i32.load8_s offset=11
                      tee_local $1
                      i32.const 0
                      i32.lt_s
                      if $if_3 (result i32)
                        get_local $7
                        i32.load offset=4
                      else
                        get_local $1
                        i32.const 255
                        i32.and
                      end ;; $if_3
                      if $if_4
                        get_local $9
                        i32.load
                        tee_local $1
                        get_local $8
                        i32.sub
                        i32.const 160
                        i32.lt_s
                        if $if_5
                          block $block_2
                            get_local $10
                            i32.load
                            set_local $2
                            get_local $9
                            get_local $1
                            i32.const 4
                            i32.add
                            i32.store
                            get_local $1
                            get_local $2
                            i32.store
                          end ;; $block_2
                        end ;; $if_5
                      end ;; $if_4
                    end ;; $block_1
                  end ;; $if_2
                end ;; $block
              end ;; $if_1
              get_local $4
              get_local $4
              i32.load
              tee_local $1
              i32.const 1
              i32.add
              i32.store
              get_local $1
              get_local $0
              i32.store8
              i32.const 0
              get_local $5
              i32.const 21
              i32.gt_s
              br_if $label$break$L1
              drop
              get_local $10
              get_local $10
              i32.load
              i32.const 1
              i32.add
              i32.store
              i32.const 0
            end ;; $_18
          end ;; $_17
        end ;; $_8
      end ;; $_1
    end ;; $label$break$L1
    tee_local $0
    )
  
  (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe (type $FUNCSIG$iiiiid)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 f64)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 352
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 24
    i32.add
    set_local $9
    get_local $6
    i32.const 8
    i32.add
    set_local $5
    get_local $6
    tee_local $0
    tee_local $8
    i32.const 37
    i32.store
    get_local $8
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 1
    i32.add
    i32.const 14191
    get_local $2
    i32.load offset=4
    call $__ZNSt3__214__num_put_base14__format_floatEPcPKcj
    set_local $11
    get_local $6
    i32.const 300
    i32.add
    tee_local $10
    get_local $6
    i32.const 308
    i32.add
    tee_local $8
    i32.store
    call $__ZNSt3__26__clocEv
    set_local $7
    get_local $11
    if $if (result i32)
      block $block (result i32)
        get_local $5
        get_local $2
        i32.load offset=8
        i32.store
        get_local $5
        get_local $4
        f64.store offset=8
        get_local $8
        i32.const 30
        get_local $7
        get_local $0
        get_local $5
        call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
      end ;; $block
    else
      block $block_1 (result i32)
        get_local $9
        get_local $4
        f64.store
        get_local $8
        i32.const 30
        get_local $7
        get_local $0
        get_local $9
        call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
      end ;; $block_1
    end ;; $if
    set_local $7
    get_local $6
    i32.const 48
    i32.add
    set_local $9
    get_local $6
    i32.const 32
    i32.add
    set_local $5
    get_local $7
    i32.const 29
    i32.gt_s
    if $if_1 (result i32)
      block $block_2 (result i32)
        call $__ZNSt3__26__clocEv
        set_local $7
        get_local $11
        if $if_2 (result i32)
          block $block_3 (result i32)
            get_local $5
            get_local $2
            i32.load offset=8
            i32.store
            get_local $5
            get_local $4
            f64.store offset=8
            get_local $10
            get_local $7
            get_local $0
            get_local $5
            call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
          end ;; $block_3
        else
          block $block_4 (result i32)
            get_local $9
            get_local $4
            f64.store
            get_local $10
            get_local $7
            get_local $0
            get_local $9
            call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
          end ;; $block_4
        end ;; $if_2
        set_local $0
        get_local $10
        i32.load
        tee_local $9
        if $if_3 (result i32)
          get_local $9
        else
          get_local $10
          i32.load
          tee_local $9
        end ;; $if_3
      end ;; $block_2
    else
      block $block_5 (result i32)
        i32.const 0
        set_local $9
        get_local $7
        set_local $0
        get_local $10
        i32.load
      end ;; $block_5
    end ;; $if_1
    set_local $5
    get_local $6
    i32.const 72
    i32.add
    set_local $7
    get_local $5
    get_local $5
    get_local $0
    i32.add
    tee_local $11
    get_local $2
    call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    set_local $12
    get_local $5
    get_local $8
    i32.eq
    if $if_4 (result i32)
      block $block_6 (result i32)
        i32.const 0
        set_local $0
        get_local $7
      end ;; $block_6
    else
      get_local $0
      i32.const 3
      i32.shl
      call $_malloc
      tee_local $0
      if $if_5 (result i32)
        block $block_7 (result i32)
          get_local $5
          set_local $8
          get_local $0
        end ;; $block_7
      else
        block $block_8 (result i32)
          get_local $10
          i32.load
          set_local $8
          get_local $0
        end ;; $block_8
      end ;; $if_5
    end ;; $if_4
    set_local $5
    get_local $6
    i32.const 60
    i32.add
    tee_local $7
    get_local $2
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $10
    i32.store
    get_local $8
    get_local $12
    get_local $11
    get_local $5
    get_local $6
    i32.const 68
    i32.add
    tee_local $8
    get_local $6
    i32.const 64
    i32.add
    tee_local $11
    get_local $7
    call $__ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE
    get_local $10
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $6
    i32.const 56
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $8
    i32.load
    set_local $8
    get_local $11
    i32.load
    set_local $10
    get_local $6
    i32.const 304
    i32.add
    tee_local $11
    get_local $7
    i32.load
    i32.store
    get_local $1
    get_local $11
    get_local $5
    get_local $8
    get_local $10
    get_local $2
    get_local $3
    call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    tee_local $1
    i32.store
    get_local $0
    if $if_6
      get_local $0
      call $_free
    end ;; $if_6
    get_local $9
    call $_free
    get_local $6
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd (type $FUNCSIG$iiiiid)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 f64)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 352
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 24
    i32.add
    set_local $9
    get_local $6
    i32.const 8
    i32.add
    set_local $5
    get_local $6
    tee_local $0
    tee_local $8
    i32.const 37
    i32.store
    get_local $8
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 1
    i32.add
    i32.const 23209
    get_local $2
    i32.load offset=4
    call $__ZNSt3__214__num_put_base14__format_floatEPcPKcj
    set_local $11
    get_local $6
    i32.const 300
    i32.add
    tee_local $10
    get_local $6
    i32.const 308
    i32.add
    tee_local $8
    i32.store
    call $__ZNSt3__26__clocEv
    set_local $7
    get_local $11
    if $if (result i32)
      block $block (result i32)
        get_local $5
        get_local $2
        i32.load offset=8
        i32.store
        get_local $5
        get_local $4
        f64.store offset=8
        get_local $8
        i32.const 30
        get_local $7
        get_local $0
        get_local $5
        call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
      end ;; $block
    else
      block $block_1 (result i32)
        get_local $9
        get_local $4
        f64.store
        get_local $8
        i32.const 30
        get_local $7
        get_local $0
        get_local $9
        call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
      end ;; $block_1
    end ;; $if
    set_local $7
    get_local $6
    i32.const 48
    i32.add
    set_local $9
    get_local $6
    i32.const 32
    i32.add
    set_local $5
    get_local $7
    i32.const 29
    i32.gt_s
    if $if_1 (result i32)
      block $block_2 (result i32)
        call $__ZNSt3__26__clocEv
        set_local $7
        get_local $11
        if $if_2 (result i32)
          block $block_3 (result i32)
            get_local $5
            get_local $2
            i32.load offset=8
            i32.store
            get_local $5
            get_local $4
            f64.store offset=8
            get_local $10
            get_local $7
            get_local $0
            get_local $5
            call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
          end ;; $block_3
        else
          block $block_4 (result i32)
            get_local $9
            get_local $4
            f64.store
            get_local $10
            get_local $7
            get_local $0
            get_local $9
            call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
          end ;; $block_4
        end ;; $if_2
        set_local $0
        get_local $10
        i32.load
        tee_local $9
        if $if_3 (result i32)
          get_local $9
        else
          get_local $10
          i32.load
          tee_local $9
        end ;; $if_3
      end ;; $block_2
    else
      block $block_5 (result i32)
        i32.const 0
        set_local $9
        get_local $7
        set_local $0
        get_local $10
        i32.load
      end ;; $block_5
    end ;; $if_1
    set_local $5
    get_local $6
    i32.const 72
    i32.add
    set_local $7
    get_local $5
    get_local $5
    get_local $0
    i32.add
    tee_local $11
    get_local $2
    call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    set_local $12
    get_local $5
    get_local $8
    i32.eq
    if $if_4 (result i32)
      block $block_6 (result i32)
        i32.const 0
        set_local $0
        get_local $7
      end ;; $block_6
    else
      get_local $0
      i32.const 3
      i32.shl
      call $_malloc
      tee_local $0
      if $if_5 (result i32)
        block $block_7 (result i32)
          get_local $5
          set_local $8
          get_local $0
        end ;; $block_7
      else
        block $block_8 (result i32)
          get_local $10
          i32.load
          set_local $8
          get_local $0
        end ;; $block_8
      end ;; $if_5
    end ;; $if_4
    set_local $5
    get_local $6
    i32.const 60
    i32.add
    tee_local $7
    get_local $2
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $10
    i32.store
    get_local $8
    get_local $12
    get_local $11
    get_local $5
    get_local $6
    i32.const 68
    i32.add
    tee_local $8
    get_local $6
    i32.const 64
    i32.add
    tee_local $11
    get_local $7
    call $__ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE
    get_local $10
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $6
    i32.const 56
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $8
    i32.load
    set_local $8
    get_local $11
    i32.load
    set_local $10
    get_local $6
    i32.const 304
    i32.add
    tee_local $11
    get_local $7
    i32.load
    i32.store
    get_local $1
    get_local $11
    get_local $5
    get_local $8
    get_local $10
    get_local $2
    get_local $3
    call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    tee_local $1
    i32.store
    get_local $0
    if $if_6
      get_local $0
      call $_free
    end ;; $if_6
    get_local $9
    call $_free
    get_local $6
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce (type $FUNCSIG$iiiiid)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 f64)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 176
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 24
    i32.add
    set_local $9
    get_local $6
    i32.const 8
    i32.add
    set_local $5
    get_local $6
    tee_local $0
    tee_local $8
    i32.const 37
    i32.store
    get_local $8
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 1
    i32.add
    i32.const 14191
    get_local $2
    i32.load offset=4
    call $__ZNSt3__214__num_put_base14__format_floatEPcPKcj
    set_local $11
    get_local $6
    i32.const 72
    i32.add
    tee_local $10
    get_local $6
    i32.const 138
    i32.add
    tee_local $8
    i32.store
    call $__ZNSt3__26__clocEv
    set_local $7
    get_local $11
    if $if (result i32)
      block $block (result i32)
        get_local $5
        get_local $2
        i32.load offset=8
        i32.store
        get_local $5
        get_local $4
        f64.store offset=8
        get_local $8
        i32.const 30
        get_local $7
        get_local $0
        get_local $5
        call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
      end ;; $block
    else
      block $block_1 (result i32)
        get_local $9
        get_local $4
        f64.store
        get_local $8
        i32.const 30
        get_local $7
        get_local $0
        get_local $9
        call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
      end ;; $block_1
    end ;; $if
    set_local $7
    get_local $6
    i32.const 48
    i32.add
    set_local $9
    get_local $6
    i32.const 32
    i32.add
    set_local $5
    get_local $7
    i32.const 29
    i32.gt_s
    if $if_1 (result i32)
      block $block_2 (result i32)
        call $__ZNSt3__26__clocEv
        set_local $7
        get_local $11
        if $if_2 (result i32)
          block $block_3 (result i32)
            get_local $5
            get_local $2
            i32.load offset=8
            i32.store
            get_local $5
            get_local $4
            f64.store offset=8
            get_local $10
            get_local $7
            get_local $0
            get_local $5
            call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
          end ;; $block_3
        else
          block $block_4 (result i32)
            get_local $9
            get_local $4
            f64.store
            get_local $10
            get_local $7
            get_local $0
            get_local $9
            call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
          end ;; $block_4
        end ;; $if_2
        set_local $0
        get_local $10
        i32.load
        tee_local $9
        if $if_3 (result i32)
          get_local $9
        else
          get_local $10
          i32.load
          tee_local $9
        end ;; $if_3
      end ;; $block_2
    else
      block $block_5 (result i32)
        i32.const 0
        set_local $9
        get_local $7
        set_local $0
        get_local $10
        i32.load
      end ;; $block_5
    end ;; $if_1
    set_local $5
    get_local $6
    i32.const 80
    i32.add
    set_local $7
    get_local $5
    get_local $5
    get_local $0
    i32.add
    tee_local $11
    get_local $2
    call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    set_local $12
    get_local $5
    get_local $8
    i32.eq
    if $if_4 (result i32)
      block $block_6 (result i32)
        get_local $8
        set_local $5
        i32.const 0
        set_local $8
        get_local $7
      end ;; $block_6
    else
      get_local $0
      i32.const 1
      i32.shl
      call $_malloc
      tee_local $8
      if $if_5 (result i32)
        get_local $8
      else
        block $block_7 (result i32)
          get_local $10
          i32.load
          set_local $5
          i32.const 0
          set_local $8
          i32.const 0
        end ;; $block_7
      end ;; $if_5
    end ;; $if_4
    set_local $0
    get_local $6
    i32.const 60
    i32.add
    tee_local $7
    get_local $2
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $10
    i32.store
    get_local $5
    get_local $12
    get_local $11
    get_local $0
    get_local $6
    i32.const 68
    i32.add
    tee_local $5
    get_local $6
    i32.const 64
    i32.add
    tee_local $11
    get_local $7
    call $__ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE
    get_local $10
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $6
    i32.const 56
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $5
    i32.load
    set_local $1
    get_local $11
    i32.load
    set_local $5
    get_local $6
    i32.const 76
    i32.add
    tee_local $10
    get_local $7
    i32.load
    i32.store
    get_local $10
    get_local $0
    get_local $1
    get_local $5
    get_local $2
    get_local $3
    call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $0
    get_local $8
    call $_free
    get_local $9
    call $_free
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd (type $FUNCSIG$iiiiid)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 f64)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 176
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 24
    i32.add
    set_local $9
    get_local $6
    i32.const 8
    i32.add
    set_local $5
    get_local $6
    tee_local $0
    tee_local $8
    i32.const 37
    i32.store
    get_local $8
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 1
    i32.add
    i32.const 23209
    get_local $2
    i32.load offset=4
    call $__ZNSt3__214__num_put_base14__format_floatEPcPKcj
    set_local $11
    get_local $6
    i32.const 72
    i32.add
    tee_local $10
    get_local $6
    i32.const 138
    i32.add
    tee_local $8
    i32.store
    call $__ZNSt3__26__clocEv
    set_local $7
    get_local $11
    if $if (result i32)
      block $block (result i32)
        get_local $5
        get_local $2
        i32.load offset=8
        i32.store
        get_local $5
        get_local $4
        f64.store offset=8
        get_local $8
        i32.const 30
        get_local $7
        get_local $0
        get_local $5
        call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
      end ;; $block
    else
      block $block_1 (result i32)
        get_local $9
        get_local $4
        f64.store
        get_local $8
        i32.const 30
        get_local $7
        get_local $0
        get_local $9
        call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
      end ;; $block_1
    end ;; $if
    set_local $7
    get_local $6
    i32.const 48
    i32.add
    set_local $9
    get_local $6
    i32.const 32
    i32.add
    set_local $5
    get_local $7
    i32.const 29
    i32.gt_s
    if $if_1 (result i32)
      block $block_2 (result i32)
        call $__ZNSt3__26__clocEv
        set_local $7
        get_local $11
        if $if_2 (result i32)
          block $block_3 (result i32)
            get_local $5
            get_local $2
            i32.load offset=8
            i32.store
            get_local $5
            get_local $4
            f64.store offset=8
            get_local $10
            get_local $7
            get_local $0
            get_local $5
            call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
          end ;; $block_3
        else
          block $block_4 (result i32)
            get_local $9
            get_local $4
            f64.store
            get_local $10
            get_local $7
            get_local $0
            get_local $9
            call $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz
          end ;; $block_4
        end ;; $if_2
        set_local $0
        get_local $10
        i32.load
        tee_local $9
        if $if_3 (result i32)
          get_local $9
        else
          get_local $10
          i32.load
          tee_local $9
        end ;; $if_3
      end ;; $block_2
    else
      block $block_5 (result i32)
        i32.const 0
        set_local $9
        get_local $7
        set_local $0
        get_local $10
        i32.load
      end ;; $block_5
    end ;; $if_1
    set_local $5
    get_local $6
    i32.const 80
    i32.add
    set_local $7
    get_local $5
    get_local $5
    get_local $0
    i32.add
    tee_local $11
    get_local $2
    call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    set_local $12
    get_local $5
    get_local $8
    i32.eq
    if $if_4 (result i32)
      block $block_6 (result i32)
        get_local $8
        set_local $5
        i32.const 0
        set_local $8
        get_local $7
      end ;; $block_6
    else
      get_local $0
      i32.const 1
      i32.shl
      call $_malloc
      tee_local $8
      if $if_5 (result i32)
        get_local $8
      else
        block $block_7 (result i32)
          get_local $10
          i32.load
          set_local $5
          i32.const 0
          set_local $8
          i32.const 0
        end ;; $block_7
      end ;; $if_5
    end ;; $if_4
    set_local $0
    get_local $6
    i32.const 60
    i32.add
    tee_local $7
    get_local $2
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $10
    i32.store
    get_local $5
    get_local $12
    get_local $11
    get_local $0
    get_local $6
    i32.const 68
    i32.add
    tee_local $5
    get_local $6
    i32.const 64
    i32.add
    tee_local $11
    get_local $7
    call $__ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE
    get_local $10
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $6
    i32.const 56
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $5
    i32.load
    set_local $1
    get_local $11
    i32.load
    set_local $5
    get_local $6
    i32.const 76
    i32.add
    tee_local $10
    get_local $7
    i32.load
    i32.store
    get_local $10
    get_local $0
    get_local $1
    get_local $5
    get_local $2
    get_local $3
    call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $0
    get_local $8
    call $_free
    get_local $9
    call $_free
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw (type $_7)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (param $8 i32)
    (param $9 i32)
    (param $10 i32)
    (param $11 i32)
    (result i32)
    block $label$break$L1 (result i32)
      get_local $0
      get_local $5
      i32.eq
      if $_1 (result i32)
        get_local $1
        i32.load8_s
        if $_2 (result i32)
          block $_3 (result i32)
            get_local $1
            i32.const 0
            i32.store8
            get_local $4
            get_local $4
            i32.load
            tee_local $0
            i32.const 1
            i32.add
            i32.store
            get_local $0
            i32.const 46
            i32.store8
            get_local $7
            i32.load8_s offset=11
            tee_local $0
            i32.const 0
            i32.lt_s
            if $_4 (result i32)
              get_local $7
              i32.load offset=4
            else
              get_local $0
              i32.const 255
              i32.and
            end ;; $_4
            if $_5 (result i32)
              get_local $9
              i32.load
              tee_local $0
              get_local $8
              i32.sub
              i32.const 160
              i32.lt_s
              if $_6 (result i32)
                block $_7 (result i32)
                  get_local $10
                  i32.load
                  set_local $1
                  get_local $9
                  get_local $0
                  i32.const 4
                  i32.add
                  i32.store
                  get_local $0
                  get_local $1
                  i32.store
                  i32.const 0
                end ;; $_7
              else
                i32.const 0
              end ;; $_6
            else
              i32.const 0
            end ;; $_5
          end ;; $_3
        else
          i32.const -1
        end ;; $_2
      else
        block $_8 (result i32)
          get_local $0
          get_local $6
          i32.eq
          if $_9
            get_local $7
            i32.load8_s offset=11
            tee_local $5
            i32.const 0
            i32.lt_s
            if $_10 (result i32)
              get_local $7
              i32.load offset=4
            else
              get_local $5
              i32.const 255
              i32.and
            end ;; $_10
            if $_11
              block $_12
                i32.const -1
                get_local $1
                i32.load8_s
                i32.eqz
                br_if $label$break$L1
                drop
                i32.const 0
                get_local $9
                i32.load
                tee_local $0
                get_local $8
                i32.sub
                i32.const 160
                i32.ge_s
                br_if $label$break$L1
                drop
                get_local $10
                i32.load
                set_local $1
                get_local $9
                get_local $0
                i32.const 4
                i32.add
                i32.store
                get_local $0
                get_local $1
                i32.store
                get_local $10
                i32.const 0
                i32.store
                i32.const 0
                br $label$break$L1
              end ;; $_12
            end ;; $_11
          end ;; $_9
          get_local $11
          i32.const 128
          i32.add
          set_local $6
          get_local $11
          set_local $5
          loop $while-in
            block $while-out
              get_local $5
              get_local $6
              i32.eq
              if $_13
                block $_14
                  get_local $6
                  set_local $5
                  br $while-out
                end ;; $_14
              end ;; $_13
              get_local $5
              i32.load
              get_local $0
              i32.ne
              if $_15
                block $_16
                  get_local $5
                  i32.const 4
                  i32.add
                  set_local $5
                  br $while-in
                end ;; $_16
              end ;; $_15
            end ;; $while-out
          end ;; $while-in
          get_local $5
          get_local $11
          i32.sub
          tee_local $5
          i32.const 2
          i32.shr_s
          set_local $6
          get_local $5
          i32.const 124
          i32.gt_s
          if $_17 (result i32)
            i32.const -1
          else
            block $_18 (result i32)
              get_local $6
              i32.const 13937
              i32.add
              i32.load8_s
              set_local $0
              block $switch
                block $switch-default
                  block $switch-case1
                    block $switch-case
                      get_local $6
                      i32.const 22
                      i32.sub
                      br_table
                        $switch-case1 $switch-case1 $switch-case $switch-case
                        $switch-default ;; default
                    end ;; $switch-case
                    get_local $4
                    i32.load
                    tee_local $1
                    get_local $3
                    i32.ne
                    if $if
                      i32.const -1
                      get_local $1
                      i32.const -1
                      i32.add
                      i32.load8_u
                      i32.const 95
                      i32.and
                      get_local $2
                      i32.load8_u
                      i32.const 127
                      i32.and
                      i32.ne
                      br_if $label$break$L1
                      drop
                    end ;; $if
                    get_local $4
                    get_local $1
                    i32.const 1
                    i32.add
                    i32.store
                    get_local $1
                    get_local $0
                    i32.store8
                    i32.const 0
                    br $label$break$L1
                  end ;; $switch-case1
                  get_local $2
                  i32.const 80
                  i32.store8
                  br $switch
                end ;; $switch-default
                get_local $0
                i32.const 95
                i32.and
                tee_local $3
                get_local $2
                i32.load8_s
                i32.eq
                if $if_1
                  block $block
                    get_local $2
                    get_local $3
                    i32.const 128
                    i32.or
                    i32.store8
                    get_local $1
                    i32.load8_s
                    if $if_2
                      block $block_1
                        get_local $1
                        i32.const 0
                        i32.store8
                        get_local $7
                        i32.load8_s offset=11
                        tee_local $1
                        i32.const 0
                        i32.lt_s
                        if $if_3 (result i32)
                          get_local $7
                          i32.load offset=4
                        else
                          get_local $1
                          i32.const 255
                          i32.and
                        end ;; $if_3
                        if $if_4
                          get_local $9
                          i32.load
                          tee_local $1
                          get_local $8
                          i32.sub
                          i32.const 160
                          i32.lt_s
                          if $if_5
                            block $block_2
                              get_local $10
                              i32.load
                              set_local $2
                              get_local $9
                              get_local $1
                              i32.const 4
                              i32.add
                              i32.store
                              get_local $1
                              get_local $2
                              i32.store
                            end ;; $block_2
                          end ;; $if_5
                        end ;; $if_4
                      end ;; $block_1
                    end ;; $if_2
                  end ;; $block
                end ;; $if_1
              end ;; $switch
              get_local $4
              get_local $4
              i32.load
              tee_local $1
              i32.const 1
              i32.add
              i32.store
              get_local $1
              get_local $0
              i32.store8
              get_local $5
              i32.const 84
              i32.gt_s
              if $if_6 (result i32)
                i32.const 0
              else
                block $block_3 (result i32)
                  get_local $10
                  get_local $10
                  i32.load
                  i32.const 1
                  i32.add
                  i32.store
                  i32.const 0
                end ;; $block_3
              end ;; $if_6
            end ;; $_18
          end ;; $_17
        end ;; $_8
      end ;; $_1
    end ;; $label$break$L1
    tee_local $0
    )
  
  (func $__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE (type $FUNCSIG$iiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (result i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    (local $16 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 144
    i32.add
    set_global $STACKTOP
    get_local $7
    i32.const 16
    i32.add
    tee_local $9
    get_local $7
    i32.const 32
    i32.add
    tee_local $13
    i32.store
    get_local $9
    i32.const 4
    i32.add
    tee_local $14
    i32.const 107
    i32.store
    get_local $7
    i32.const 4
    i32.add
    tee_local $11
    get_local $4
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $15
    i32.store
    get_local $11
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $8
    get_local $7
    i32.const 28
    i32.add
    tee_local $12
    i32.const 0
    i32.store8
    get_local $7
    tee_local $0
    get_local $2
    i32.load
    tee_local $10
    i32.store
    get_local $4
    i32.load offset=4
    set_local $4
    get_local $7
    i32.const 24
    i32.add
    tee_local $16
    get_local $0
    i32.load
    i32.store
    get_local $1
    get_local $16
    get_local $3
    get_local $11
    get_local $4
    get_local $5
    get_local $12
    get_local $8
    get_local $9
    get_local $7
    i32.const 8
    i32.add
    tee_local $0
    get_local $13
    i32.const 100
    i32.add
    call $__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_
    if $_1
      block $_2
        get_local $6
        i32.const 11
        i32.add
        tee_local $3
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $_3
          block $_4
            get_local $6
            i32.load
            i32.const 0
            i32.store8
            get_local $6
            i32.const 0
            i32.store offset=4
          end ;; $_4
        else
          block $_5
            get_local $6
            i32.const 0
            i32.store8
            get_local $3
            i32.const 0
            i32.store8
          end ;; $_5
        end ;; $_3
        get_local $12
        i32.load8_s
        if $_6
          get_local $6
          get_local $8
          i32.const 45
          get_local $8
          i32.load
          i32.load offset=28
          i32.const 15
          i32.and
          i32.const 413
          i32.add
          call_indirect (type $FUNCSIG$iii)
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
        end ;; $_6
        get_local $8
        i32.const 48
        get_local $8
        i32.load
        i32.load offset=28
        i32.const 15
        i32.and
        i32.const 413
        i32.add
        call_indirect (type $FUNCSIG$iii)
        set_local $3
        get_local $0
        i32.load
        tee_local $4
        i32.const -1
        i32.add
        set_local $8
        get_local $9
        i32.load
        set_local $0
        loop $while-in
          get_local $0
          get_local $8
          i32.lt_u
          if $_7
            get_local $0
            i32.load8_u
            get_local $3
            i32.const 255
            i32.and
            i32.eq
            if $_8
              block $_9
                get_local $0
                i32.const 1
                i32.add
                set_local $0
                br $while-in
              end ;; $_9
            end ;; $_8
          end ;; $_7
        end ;; $while-in
        get_local $6
        get_local $0
        get_local $4
        call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorIS9_EE5valueERS5_E4typeES9_S9_
        drop
      end ;; $_2
    end ;; $_1
    get_local $10
    set_local $3
    get_local $1
    i32.load
    tee_local $0
    if $_10
      get_local $0
      i32.load offset=12
      get_local $0
      i32.load offset=16
      i32.eq
      if $_11
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_12 (result i32)
          block $_13 (result i32)
            get_local $1
            i32.const 0
            i32.store
            i32.const 0
          end ;; $_13
        else
          get_local $1
          i32.load
        end ;; $_12
        set_local $0
      end ;; $_11
    else
      i32.const 0
      set_local $0
    end ;; $_10
    get_local $0
    i32.eqz
    set_local $0
    block $__rjto$1
      block $__rjti$1
        block $__rjti$0
          get_local $10
          i32.eqz
          br_if $__rjti$0
          get_local $3
          i32.load offset=12
          get_local $3
          i32.load offset=16
          i32.eq
          if $if
            get_local $3
            get_local $10
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $if_1
              block $block
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $block
            end ;; $if_1
          end ;; $if
          get_local $0
          i32.eqz
          br_if $__rjti$1
          br $__rjto$1
        end ;; $__rjti$0
        get_local $0
        br_if $__rjti$1
        br $__rjto$1
      end ;; $__rjti$1
      get_local $5
      get_local $5
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$1
    get_local $1
    i32.load
    set_local $1
    get_local $15
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $9
    i32.load
    set_local $0
    get_local $9
    i32.const 0
    i32.store
    get_local $0
    if $if_2
      get_local $0
      get_local $14
      i32.load
      i32.const 127
      i32.and
      i32.const 48
      i32.add
      call_indirect (type $FUNCSIG$vi)
    end ;; $if_2
    get_local $7
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_local $1
    i32.load
    tee_local $0
    if $_1 (result i32)
      get_local $0
      i32.load offset=12
      tee_local $5
      get_local $0
      i32.load offset=16
      i32.eq
      if $_2 (result i32)
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $5
        i32.load
      end ;; $_2
      tee_local $0
      i32.const -1
      i32.eq
      if $_3 (result i32)
        block $_4 (result i32)
          get_local $1
          i32.const 0
          i32.store
          i32.const 1
        end ;; $_4
      else
        get_local $1
        i32.load
        i32.eqz
      end ;; $_3
    else
      i32.const 1
    end ;; $_1
    set_local $0
    block $label$break$L22
      block $__rjti$4
        block $__rjti$3
          get_local $2
          i32.load
          tee_local $5
          if $_5
            get_local $5
            i32.load offset=12
            tee_local $6
            get_local $5
            i32.load offset=16
            i32.eq
            if $_6 (result i32)
              get_local $5
              get_local $5
              i32.load
              i32.load offset=36
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
            else
              get_local $6
              i32.load
            end ;; $_6
            tee_local $6
            i32.const -1
            i32.eq
            if $_7
              get_local $2
              i32.const 0
              i32.store
            else
              get_local $0
              if $_8
                br $__rjti$4
              else
                br $__rjti$3
              end ;; $_8
            end ;; $_7
          end ;; $_5
          get_local $0
          i32.eqz
          if $_9
            block $_10
              i32.const 0
              set_local $5
              br $__rjti$4
            end ;; $_10
          end ;; $_9
        end ;; $__rjti$3
        get_local $3
        get_local $3
        i32.load
        i32.const 6
        i32.or
        i32.store
        br $label$break$L22
      end ;; $__rjti$4
      get_local $4
      get_local $1
      i32.load
      tee_local $0
      i32.load offset=12
      tee_local $6
      get_local $0
      i32.load offset=16
      i32.eq
      if $_11 (result i32)
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $6
        i32.load
      end ;; $_11
      tee_local $0
      i32.const 0
      get_local $4
      i32.load
      i32.load offset=52
      i32.const 31
      i32.and
      i32.const 8
      i32.add
      call_indirect (type $FUNCSIG$iiii)
      i32.const 255
      i32.and
      i32.const 37
      i32.ne
      if $_12
        block $_13
          get_local $3
          get_local $3
          i32.load
          i32.const 4
          i32.or
          i32.store
          br $label$break$L22
        end ;; $_13
      end ;; $_12
      block $do-once3
        block $__rjti$0
          get_local $1
          i32.load
          tee_local $0
          i32.const 12
          i32.add
          tee_local $4
          i32.load
          tee_local $6
          get_local $0
          i32.load offset=16
          i32.eq
          if $_14
            block $_15
              get_local $0
              get_local $0
              i32.load
              i32.load offset=40
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
              drop
              get_local $1
              i32.load
              tee_local $0
              br_if $__rjti$0
              i32.const 1
              set_local $0
            end ;; $_15
          else
            block $_16
              get_local $4
              get_local $6
              i32.const 4
              i32.add
              i32.store
              br $__rjti$0
            end ;; $_16
          end ;; $_14
          br $do-once3
        end ;; $__rjti$0
        get_local $0
        i32.load offset=12
        tee_local $4
        get_local $0
        i32.load offset=16
        i32.eq
        if $_17 (result i32)
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $4
          i32.load
        end ;; $_17
        tee_local $0
        i32.const -1
        i32.eq
        if $_18 (result i32)
          block $_19 (result i32)
            get_local $1
            i32.const 0
            i32.store
            i32.const 1
          end ;; $_19
        else
          get_local $1
          i32.load
          i32.eqz
        end ;; $_18
        set_local $0
      end ;; $do-once3
      block $__rjto$1
        block $__rjti$1
          get_local $5
          i32.eqz
          br_if $__rjti$1
          get_local $5
          i32.load offset=12
          tee_local $1
          get_local $5
          i32.load offset=16
          i32.eq
          if $if (result i32)
            get_local $5
            get_local $5
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $1
            i32.load
          end ;; $if
          tee_local $1
          i32.const -1
          i32.eq
          if $if_1
            block $block
              get_local $2
              i32.const 0
              i32.store
              br $__rjti$1
            end ;; $block
          else
            get_local $0
            br_if $label$break$L22
          end ;; $if_1
          br $__rjto$1
        end ;; $__rjti$1
        get_local $0
        i32.eqz
        br_if $label$break$L22
      end ;; $__rjto$1
      get_local $3
      get_local $3
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $label$break$L22
    )
  
  (func $__ZNSt3__210__stdinbufIcE9__getcharEb (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 16
    i32.add
    set_local $4
    get_local $6
    i32.const 8
    i32.add
    set_local $5
    get_local $6
    i32.const 4
    i32.add
    set_local $13
    get_local $6
    set_local $8
    get_local $0
    i32.const 52
    i32.add
    tee_local $2
    i32.load8_s
    if $_1
      block $_2
        get_local $0
        i32.const 48
        i32.add
        tee_local $8
        i32.load
        set_local $0
        get_local $1
        if $_3
          block $_4
            get_local $8
            i32.const -1
            i32.store
            get_local $2
            i32.const 0
            i32.store8
          end ;; $_4
        end ;; $_3
      end ;; $_2
    else
      block $_5
        get_local $0
        i32.load offset=44
        tee_local $2
        i32.const 1
        i32.le_s
        if $_6
          i32.const 1
          set_local $2
        end ;; $_6
        get_local $0
        i32.const 32
        i32.add
        set_local $9
        i32.const 0
        set_local $3
        block $__rjto$3
          block $__rjti$3
            loop $while-in
              get_local $3
              get_local $2
              i32.ge_s
              br_if $__rjti$3
              get_local $9
              i32.load
              call $_getc
              tee_local $10
              i32.const -1
              i32.eq
              if $_7
                i32.const -1
                set_local $0
              else
                block $_8
                  get_local $4
                  get_local $3
                  i32.add
                  get_local $10
                  i32.store8
                  get_local $3
                  i32.const 1
                  i32.add
                  set_local $3
                  br $while-in
                end ;; $_8
              end ;; $_7
            end ;; $while-in
            br $__rjto$3
          end ;; $__rjti$3
          block $label$break$L21
            block $__rjti$2
              get_local $0
              i32.load8_s offset=53
              if $_9
                block $_10
                  get_local $5
                  get_local $4
                  i32.load8_s
                  i32.store8
                  br $__rjti$2
                end ;; $_10
              else
                block $_11
                  get_local $0
                  i32.const 40
                  i32.add
                  set_local $3
                  get_local $0
                  i32.const 36
                  i32.add
                  set_local $10
                  get_local $5
                  i32.const 1
                  i32.add
                  set_local $14
                  block $__rjto$1
                    block $__rjti$1
                      block $__rjti$0
                        loop $label$continue$L11
                          block $label$break$L11
                            get_local $3
                            i32.load
                            tee_local $11
                            tee_local $7
                            i32.load
                            set_local $15
                            get_local $7
                            i32.load offset=4
                            set_local $7
                            block $switch
                              block $switch-default
                                block $switch-case1
                                  block $switch-case0
                                    block $switch-case
                                      get_local $10
                                      i32.load
                                      tee_local $12
                                      get_local $11
                                      get_local $4
                                      get_local $4
                                      get_local $2
                                      i32.add
                                      tee_local $11
                                      get_local $13
                                      get_local $5
                                      get_local $14
                                      get_local $8
                                      get_local $12
                                      i32.load
                                      i32.load offset=16
                                      i32.const 15
                                      i32.and
                                      i32.const 381
                                      i32.add
                                      call_indirect (type $FUNCSIG$iiiiiiiii)
                                      i32.const 1
                                      i32.sub
                                      br_table
                                        $switch-case1 $switch-case0 $switch-case
                                        $switch-default ;; default
                                    end ;; $switch-case
                                    br $__rjti$0
                                  end ;; $switch-case0
                                  br $__rjti$1
                                end ;; $switch-case1
                                br $switch
                              end ;; $switch-default
                              br $label$break$L11
                            end ;; $switch
                            get_local $3
                            i32.load
                            tee_local $12
                            get_local $15
                            i32.store
                            get_local $12
                            get_local $7
                            i32.store offset=4
                            get_local $2
                            i32.const 8
                            i32.eq
                            br_if $__rjti$1
                            get_local $9
                            i32.load
                            call $_getc
                            tee_local $7
                            i32.const -1
                            i32.eq
                            br_if $__rjti$1
                            get_local $11
                            get_local $7
                            i32.store8
                            get_local $2
                            i32.const 1
                            i32.add
                            set_local $2
                            br $label$continue$L11
                          end ;; $label$break$L11
                        end ;; $label$continue$L11
                        br $__rjto$1
                      end ;; $__rjti$0
                      get_local $5
                      get_local $4
                      i32.load8_s
                      i32.store8
                      br $__rjto$1
                    end ;; $__rjti$1
                    i32.const -1
                    set_local $0
                    br $label$break$L21
                  end ;; $__rjto$1
                  br $__rjti$2
                end ;; $_11
              end ;; $_9
              br $label$break$L21
            end ;; $__rjti$2
            get_local $1
            if $_12
              get_local $0
              get_local $5
              i32.load8_s
              tee_local $0
              i32.const 255
              i32.and
              i32.store offset=48
            else
              block $_13
                loop $while-in4
                  get_local $2
                  i32.const 0
                  i32.gt_s
                  if $if
                    block $block
                      get_local $4
                      get_local $2
                      i32.const -1
                      i32.add
                      tee_local $2
                      i32.add
                      i32.load8_u
                      get_local $9
                      i32.load
                      call $_ungetc
                      i32.const -1
                      i32.ne
                      br_if $while-in4
                      i32.const -1
                      set_local $0
                      br $label$break$L21
                    end ;; $block
                  end ;; $if
                end ;; $while-in4
                get_local $5
                i32.load8_u
                set_local $0
              end ;; $_13
            end ;; $_12
            get_local $0
            i32.const 255
            i32.and
            set_local $0
          end ;; $label$break$L21
        end ;; $__rjto$3
      end ;; $_5
    end ;; $_1
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $_scanexp (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    block $switch (result i32)
      block $switch-default
        block $switch-case
          get_local $0
          i32.const 4
          i32.add
          tee_local $3
          i32.load
          tee_local $4
          get_local $0
          i32.const 100
          i32.add
          tee_local $6
          i32.load
          i32.lt_u
          if $_1 (result i32)
            block $_2 (result i32)
              get_local $3
              get_local $4
              i32.const 1
              i32.add
              i32.store
              get_local $4
              i32.load8_u
            end ;; $_2
          else
            get_local $0
            call $___shgetc
          end ;; $_1
          tee_local $2
          i32.const 43
          i32.sub
          br_table
            $switch-case $switch-default $switch-case
            $switch-default ;; default
        end ;; $switch-case
        get_local $2
        i32.const 45
        i32.eq
        set_local $2
        get_local $1
        i32.const 0
        i32.ne
        get_local $3
        i32.load
        tee_local $4
        get_local $6
        i32.load
        i32.lt_u
        if $_3 (result i32)
          block $_4 (result i32)
            get_local $3
            get_local $4
            i32.const 1
            i32.add
            i32.store
            get_local $4
            i32.load8_u
          end ;; $_4
        else
          get_local $0
          call $___shgetc
        end ;; $_3
        tee_local $4
        i32.const -48
        i32.add
        i32.const 9
        i32.gt_u
        i32.and
        if $_5 (result i32)
          get_local $6
          i32.load
          if $_6 (result i32)
            block $_7 (result i32)
              get_local $3
              get_local $3
              i32.load
              i32.const -1
              i32.add
              i32.store
              get_local $4
              set_local $1
              get_local $2
            end ;; $_7
          else
            block $_8 (result i32)
              get_local $4
              set_local $1
              get_local $2
            end ;; $_8
          end ;; $_6
        else
          block $_9 (result i32)
            get_local $4
            set_local $1
            get_local $2
          end ;; $_9
        end ;; $_5
        br $switch
      end ;; $switch-default
      get_local $2
      set_local $1
      i32.const 0
    end ;; $switch
    set_local $4
    get_local $1
    i32.const -48
    i32.add
    i32.const 9
    i32.gt_u
    if $_10
      get_local $6
      i32.load
      if $_11 (result i32)
        block $_12 (result i32)
          get_local $3
          get_local $3
          i32.load
          i32.const -1
          i32.add
          i32.store
          i32.const -2147483648
          set_local $1
          i32.const 0
        end ;; $_12
      else
        block $_13 (result i32)
          i32.const -2147483648
          set_local $1
          i32.const 0
        end ;; $_13
      end ;; $_11
      set_local $0
    else
      block $_14
        i32.const 0
        set_local $5
        loop $while-in
          get_local $3
          i32.load
          tee_local $2
          get_local $6
          i32.load
          i32.lt_u
          if $_15 (result i32)
            block $_16 (result i32)
              get_local $3
              get_local $2
              i32.const 1
              i32.add
              i32.store
              get_local $2
              i32.load8_u
            end ;; $_16
          else
            get_local $0
            call $___shgetc
          end ;; $_15
          tee_local $2
          i32.const -48
          i32.add
          i32.const 10
          i32.lt_u
          get_local $1
          i32.const -48
          i32.add
          get_local $5
          i32.const 10
          i32.mul
          i32.add
          tee_local $5
          i32.const 214748364
          i32.lt_s
          i32.and
          if $_17
            block $_18
              get_local $2
              set_local $1
              br $while-in
            end ;; $_18
          else
            get_local $5
            set_local $1
          end ;; $_17
        end ;; $while-in
        get_local $1
        i32.const 0
        i32.lt_s
        i32.const 31
        i32.shl
        i32.const 31
        i32.shr_s
        set_local $7
        get_local $2
        i32.const -48
        i32.add
        i32.const 10
        i32.lt_u
        if $_19
          block $_20
            get_local $1
            set_local $5
            get_local $7
            set_local $1
            loop $while-in2
              get_local $5
              get_local $1
              i32.const 10
              i32.const 0
              call $___muldi3
              set_local $1
              get_global $tempRet0
              set_local $5
              get_local $2
              get_local $2
              i32.const 0
              i32.lt_s
              i32.const 31
              i32.shl
              i32.const 31
              i32.shr_s
              i32.const -48
              i32.const -1
              call $_i64Add
              get_global $tempRet0
              get_local $1
              get_local $5
              call $_i64Add
              set_local $5
              get_global $tempRet0
              set_local $1
              get_local $3
              i32.load
              tee_local $2
              get_local $6
              i32.load
              i32.lt_u
              if $_21 (result i32)
                block $_22 (result i32)
                  get_local $3
                  get_local $2
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $2
                  i32.load8_u
                end ;; $_22
              else
                get_local $0
                call $___shgetc
              end ;; $_21
              tee_local $2
              i32.const -48
              i32.add
              i32.const 10
              i32.lt_u
              get_local $1
              i32.const 21474836
              i32.lt_s
              get_local $1
              i32.const 21474836
              i32.eq
              get_local $5
              i32.const 2061584302
              i32.lt_u
              i32.and
              i32.or
              i32.and
              br_if $while-in2
            end ;; $while-in2
          end ;; $_20
        else
          block $_23
            get_local $1
            set_local $5
            get_local $7
            set_local $1
          end ;; $_23
        end ;; $_19
        get_local $2
        i32.const -48
        i32.add
        i32.const 10
        i32.lt_u
        if $_24
          loop $do-in
            get_local $3
            i32.load
            tee_local $2
            get_local $6
            i32.load
            i32.lt_u
            if $if (result i32)
              block $block (result i32)
                get_local $3
                get_local $2
                i32.const 1
                i32.add
                i32.store
                get_local $2
                i32.load8_u
              end ;; $block
            else
              get_local $0
              call $___shgetc
            end ;; $if
            tee_local $2
            i32.const -48
            i32.add
            i32.const 10
            i32.lt_u
            br_if $do-in
          end ;; $do-in
        end ;; $_24
        get_local $6
        i32.load
        if $if_1
          get_local $3
          get_local $3
          i32.load
          i32.const -1
          i32.add
          i32.store
        end ;; $if_1
        i32.const 0
        i32.const 0
        get_local $5
        get_local $1
        call $_i64Subtract
        set_local $0
        get_local $4
        i32.const 0
        i32.ne
        tee_local $4
        if $if_2
          get_global $tempRet0
          set_local $1
        end ;; $if_2
        get_local $4
        i32.eqz
        if $if_3
          get_local $5
          set_local $0
        end ;; $if_3
      end ;; $_14
    end ;; $_10
    get_local $1
    set_global $tempRet0
    get_local $0
    )
  
  (func $__ZNSt3__210__stdinbufIwE9__getcharEb (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 16
    i32.add
    set_local $4
    get_local $6
    i32.const 8
    i32.add
    set_local $5
    get_local $6
    i32.const 4
    i32.add
    set_local $13
    get_local $6
    set_local $8
    get_local $0
    i32.const 52
    i32.add
    tee_local $2
    i32.load8_s
    if $_1
      block $_2
        get_local $0
        i32.const 48
        i32.add
        tee_local $8
        i32.load
        set_local $0
        get_local $1
        if $_3
          block $_4
            get_local $8
            i32.const -1
            i32.store
            get_local $2
            i32.const 0
            i32.store8
          end ;; $_4
        end ;; $_3
      end ;; $_2
    else
      block $_5
        get_local $0
        i32.load offset=44
        tee_local $2
        i32.const 1
        i32.le_s
        if $_6
          i32.const 1
          set_local $2
        end ;; $_6
        get_local $0
        i32.const 32
        i32.add
        set_local $9
        i32.const 0
        set_local $3
        block $__rjto$3
          block $__rjti$3
            loop $while-in
              get_local $3
              get_local $2
              i32.ge_s
              br_if $__rjti$3
              get_local $9
              i32.load
              call $_getc
              tee_local $10
              i32.const -1
              i32.eq
              if $_7
                i32.const -1
                set_local $0
              else
                block $_8
                  get_local $4
                  get_local $3
                  i32.add
                  get_local $10
                  i32.store8
                  get_local $3
                  i32.const 1
                  i32.add
                  set_local $3
                  br $while-in
                end ;; $_8
              end ;; $_7
            end ;; $while-in
            br $__rjto$3
          end ;; $__rjti$3
          block $label$break$L21
            block $__rjti$2
              get_local $0
              i32.load8_s offset=53
              if $_9
                block $_10
                  get_local $5
                  get_local $4
                  i32.load8_s
                  i32.store
                  br $__rjti$2
                end ;; $_10
              else
                block $_11
                  get_local $0
                  i32.const 40
                  i32.add
                  set_local $3
                  get_local $0
                  i32.const 36
                  i32.add
                  set_local $10
                  get_local $5
                  i32.const 4
                  i32.add
                  set_local $14
                  block $__rjto$1
                    block $__rjti$1
                      block $__rjti$0
                        loop $label$continue$L11
                          block $label$break$L11
                            get_local $3
                            i32.load
                            tee_local $11
                            tee_local $7
                            i32.load
                            set_local $15
                            get_local $7
                            i32.load offset=4
                            set_local $7
                            block $switch
                              block $switch-default
                                block $switch-case1
                                  block $switch-case0
                                    block $switch-case
                                      get_local $10
                                      i32.load
                                      tee_local $12
                                      get_local $11
                                      get_local $4
                                      get_local $4
                                      get_local $2
                                      i32.add
                                      tee_local $11
                                      get_local $13
                                      get_local $5
                                      get_local $14
                                      get_local $8
                                      get_local $12
                                      i32.load
                                      i32.load offset=16
                                      i32.const 15
                                      i32.and
                                      i32.const 381
                                      i32.add
                                      call_indirect (type $FUNCSIG$iiiiiiiii)
                                      i32.const 1
                                      i32.sub
                                      br_table
                                        $switch-case1 $switch-case0 $switch-case
                                        $switch-default ;; default
                                    end ;; $switch-case
                                    br $__rjti$0
                                  end ;; $switch-case0
                                  br $__rjti$1
                                end ;; $switch-case1
                                br $switch
                              end ;; $switch-default
                              br $label$break$L11
                            end ;; $switch
                            get_local $3
                            i32.load
                            tee_local $12
                            get_local $15
                            i32.store
                            get_local $12
                            get_local $7
                            i32.store offset=4
                            get_local $2
                            i32.const 8
                            i32.eq
                            br_if $__rjti$1
                            get_local $9
                            i32.load
                            call $_getc
                            tee_local $7
                            i32.const -1
                            i32.eq
                            br_if $__rjti$1
                            get_local $11
                            get_local $7
                            i32.store8
                            get_local $2
                            i32.const 1
                            i32.add
                            set_local $2
                            br $label$continue$L11
                          end ;; $label$break$L11
                        end ;; $label$continue$L11
                        br $__rjto$1
                      end ;; $__rjti$0
                      get_local $5
                      get_local $4
                      i32.load8_s
                      i32.store
                      br $__rjto$1
                    end ;; $__rjti$1
                    i32.const -1
                    set_local $0
                    br $label$break$L21
                  end ;; $__rjto$1
                  br $__rjti$2
                end ;; $_11
              end ;; $_9
              br $label$break$L21
            end ;; $__rjti$2
            get_local $1
            if $_12
              block $_13
                get_local $0
                get_local $5
                i32.load
                tee_local $0
                i32.store offset=48
                br $label$break$L21
              end ;; $_13
            end ;; $_12
            loop $while-in4
              get_local $2
              i32.const 0
              i32.gt_s
              if $if
                block $block
                  get_local $4
                  get_local $2
                  i32.const -1
                  i32.add
                  tee_local $2
                  i32.add
                  i32.load8_s
                  get_local $9
                  i32.load
                  call $_ungetc
                  i32.const -1
                  i32.ne
                  br_if $while-in4
                  i32.const -1
                  set_local $0
                  br $label$break$L21
                end ;; $block
              end ;; $if
            end ;; $while-in4
            get_local $5
            i32.load
            set_local $0
          end ;; $label$break$L21
        end ;; $__rjto$3
      end ;; $_5
    end ;; $_1
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (local $5 i32)
    (local $6 i32)
    loop $label$continue$L1
      block $label$break$L1
        get_local $1
        i32.load
        tee_local $0
        if $_1 (result i32)
          get_local $0
          i32.load offset=12
          tee_local $5
          get_local $0
          i32.load offset=16
          i32.eq
          if $_2 (result i32)
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $5
            i32.load
          end ;; $_2
          tee_local $0
          i32.const -1
          i32.eq
          if $_3 (result i32)
            block $_4 (result i32)
              get_local $1
              i32.const 0
              i32.store
              i32.const 1
            end ;; $_4
          else
            get_local $1
            i32.load
            i32.eqz
          end ;; $_3
        else
          i32.const 1
        end ;; $_1
        set_local $5
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $0
            i32.eqz
            br_if $__rjti$0
            get_local $0
            i32.load offset=12
            tee_local $6
            get_local $0
            i32.load offset=16
            i32.eq
            if $_5 (result i32)
              get_local $0
              get_local $0
              i32.load
              i32.load offset=36
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
            else
              get_local $6
              i32.load
            end ;; $_5
            tee_local $6
            i32.const -1
            i32.eq
            if $_6
              block $_7
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_7
            else
              get_local $5
              i32.eqz
              br_if $label$break$L1
            end ;; $_6
            br $__rjto$0
          end ;; $__rjti$0
          get_local $5
          if $_8
            block $_9
              i32.const 0
              set_local $0
              br $label$break$L1
            end ;; $_9
          else
            i32.const 0
            set_local $0
          end ;; $_8
        end ;; $__rjto$0
        get_local $4
        i32.const 8192
        get_local $1
        i32.load
        tee_local $5
        i32.load offset=12
        tee_local $6
        get_local $5
        i32.load offset=16
        i32.eq
        if $_10 (result i32)
          get_local $5
          get_local $5
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $6
          i32.load
        end ;; $_10
        tee_local $5
        get_local $4
        i32.load
        i32.load offset=12
        i32.const 31
        i32.and
        i32.const 8
        i32.add
        call_indirect (type $FUNCSIG$iiii)
        i32.eqz
        br_if $label$break$L1
        get_local $1
        i32.load
        tee_local $0
        i32.const 12
        i32.add
        tee_local $5
        i32.load
        tee_local $6
        get_local $0
        i32.load offset=16
        i32.eq
        if $_11
          block $_12
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L1
          end ;; $_12
        else
          block $_13
            get_local $5
            get_local $6
            i32.const 4
            i32.add
            i32.store
            br $label$continue$L1
          end ;; $_13
        end ;; $_11
      end ;; $label$break$L1
    end ;; $label$continue$L1
    get_local $1
    i32.load
    tee_local $4
    if $_14 (result i32)
      get_local $4
      i32.load offset=12
      tee_local $5
      get_local $4
      i32.load offset=16
      i32.eq
      if $_15 (result i32)
        get_local $4
        get_local $4
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $5
        i32.load
      end ;; $_15
      tee_local $4
      i32.const -1
      i32.eq
      if $_16 (result i32)
        block $_17 (result i32)
          get_local $1
          i32.const 0
          i32.store
          i32.const 1
        end ;; $_17
      else
        get_local $1
        i32.load
        i32.eqz
      end ;; $_16
    else
      i32.const 1
    end ;; $_14
    set_local $1
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $0
          i32.eqz
          br_if $__rjti$1
          get_local $0
          i32.load offset=12
          tee_local $4
          get_local $0
          i32.load offset=16
          i32.eq
          if $if (result i32)
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
          else
            get_local $4
            i32.load
          end ;; $if
          tee_local $0
          i32.const -1
          i32.eq
          if $if_1
            block $block
              get_local $2
              i32.const 0
              i32.store
              br $__rjti$1
            end ;; $block
          else
            get_local $1
            i32.eqz
            br_if $__rjti$2
          end ;; $if_1
          br $__rjto$2
        end ;; $__rjti$1
        get_local $1
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $3
      get_local $3
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    )
  
  (func $_wcsrtombs (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    set_local $7
    block $label$break$L1
      get_local $0
      if $_1
        block $_2
          block $label$break$L9
            get_local $2
            i32.const 3
            i32.gt_u
            if $_3
              block $_4
                get_local $2
                set_local $3
                get_local $1
                i32.load
                set_local $5
                loop $while-in2
                  block $while-out1
                    get_local $5
                    i32.load
                    tee_local $4
                    i32.const -1
                    i32.add
                    i32.const 126
                    i32.gt_u
                    if $_5 (result i32)
                      block $_6 (result i32)
                        get_local $4
                        i32.eqz
                        br_if $while-out1
                        get_local $0
                        get_local $4
                        i32.const 0
                        call $_wcrtomb
                        tee_local $4
                        i32.const -1
                        i32.eq
                        if $_7
                          block $_8
                            i32.const -1
                            set_local $2
                            br $label$break$L1
                          end ;; $_8
                        end ;; $_7
                        get_local $0
                        get_local $4
                        i32.add
                        set_local $0
                        get_local $3
                        get_local $4
                        i32.sub
                      end ;; $_6
                    else
                      block $_9 (result i32)
                        get_local $0
                        get_local $4
                        i32.store8
                        get_local $0
                        i32.const 1
                        i32.add
                        set_local $0
                        get_local $1
                        i32.load
                        set_local $5
                        get_local $3
                        i32.const -1
                        i32.add
                      end ;; $_9
                    end ;; $_5
                    set_local $4
                    get_local $1
                    get_local $5
                    i32.const 4
                    i32.add
                    tee_local $5
                    i32.store
                    get_local $4
                    i32.const 3
                    i32.le_u
                    if $_10
                      block $_11
                        get_local $0
                        set_local $3
                        get_local $4
                        set_local $0
                        br $label$break$L9
                      end ;; $_11
                    else
                      block $_12
                        get_local $4
                        set_local $3
                        br $while-in2
                      end ;; $_12
                    end ;; $_10
                  end ;; $while-out1
                end ;; $while-in2
                get_local $0
                i32.const 0
                i32.store8
                get_local $1
                i32.const 0
                i32.store
                get_local $2
                get_local $3
                i32.sub
                set_local $2
                br $label$break$L1
              end ;; $_4
            else
              block $_13
                get_local $0
                set_local $3
                get_local $2
                set_local $0
              end ;; $_13
            end ;; $_3
          end ;; $label$break$L9
          get_local $0
          if $_14
            block $_15
              get_local $1
              i32.load
              set_local $4
              block $__rjti$1
                block $__rjti$0
                  loop $while-in4
                    get_local $4
                    i32.load
                    tee_local $5
                    i32.const -1
                    i32.add
                    i32.const 126
                    i32.gt_u
                    if $_16 (result i32)
                      block $_17 (result i32)
                        get_local $5
                        i32.eqz
                        br_if $__rjti$0
                        get_local $7
                        get_local $5
                        i32.const 0
                        call $_wcrtomb
                        tee_local $5
                        i32.const -1
                        i32.eq
                        if $_18
                          block $_19
                            i32.const -1
                            set_local $2
                            br $label$break$L1
                          end ;; $_19
                        end ;; $_18
                        get_local $0
                        get_local $5
                        i32.lt_u
                        br_if $__rjti$1
                        get_local $3
                        get_local $4
                        i32.load
                        i32.const 0
                        call $_wcrtomb
                        drop
                        get_local $3
                        get_local $5
                        i32.add
                        set_local $3
                        get_local $0
                        get_local $5
                        i32.sub
                      end ;; $_17
                    else
                      block $_20 (result i32)
                        get_local $3
                        get_local $5
                        i32.store8
                        get_local $3
                        i32.const 1
                        i32.add
                        set_local $3
                        get_local $1
                        i32.load
                        set_local $4
                        get_local $0
                        i32.const -1
                        i32.add
                      end ;; $_20
                    end ;; $_16
                    set_local $0
                    get_local $1
                    get_local $4
                    i32.const 4
                    i32.add
                    tee_local $4
                    i32.store
                    get_local $0
                    br_if $while-in4
                    br $label$break$L1
                  end ;; $while-in4
                end ;; $__rjti$0
                get_local $3
                i32.const 0
                i32.store8
                get_local $1
                i32.const 0
                i32.store
                get_local $2
                get_local $0
                i32.sub
                set_local $2
                br $label$break$L1
              end ;; $__rjti$1
              get_local $2
              get_local $0
              i32.sub
              set_local $2
            end ;; $_15
          end ;; $_14
        end ;; $_2
      else
        get_local $1
        i32.load
        tee_local $1
        i32.load
        tee_local $0
        if $_21
          block $_22
            i32.const 0
            set_local $2
            loop $while-in
              get_local $0
              i32.const 127
              i32.gt_u
              if $if
                get_local $7
                get_local $0
                i32.const 0
                call $_wcrtomb
                tee_local $0
                i32.const -1
                i32.eq
                if $if_1
                  block $block
                    i32.const -1
                    set_local $2
                    br $label$break$L1
                  end ;; $block
                end ;; $if_1
              else
                i32.const 1
                set_local $0
              end ;; $if
              get_local $0
              get_local $2
              i32.add
              set_local $2
              get_local $1
              i32.const 4
              i32.add
              tee_local $1
              i32.load
              tee_local $0
              br_if $while-in
            end ;; $while-in
          end ;; $_22
        else
          i32.const 0
          set_local $2
        end ;; $_21
      end ;; $_1
    end ;; $label$break$L1
    get_local $6
    set_global $STACKTOP
    get_local $2
    )
  
  (func $__ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    (local $15 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 176
    i32.add
    set_global $STACKTOP
    get_local $7
    i32.const 168
    i32.add
    set_local $15
    get_local $7
    i32.const 40
    i32.add
    set_local $1
    get_local $7
    i32.const 36
    i32.add
    set_local $10
    get_local $7
    i32.const 32
    i32.add
    set_local $9
    get_local $7
    i32.const 24
    i32.add
    set_local $11
    get_local $7
    i32.const 16
    i32.add
    set_local $12
    get_local $7
    tee_local $8
    i32.const 0
    i32.store
    get_local $8
    i32.const 0
    i32.store offset=4
    get_local $8
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $6
    loop $while-in
      get_local $6
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $8
          get_local $6
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $6
          i32.const 1
          i32.add
          set_local $6
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $11
    i32.const 0
    i32.store offset=4
    get_local $11
    i32.const 9040
    i32.store
    get_local $5
    i32.load8_s offset=11
    tee_local $13
    i32.const 0
    i32.lt_s
    tee_local $14
    if $_3 (result i32)
      get_local $5
      i32.load
    else
      get_local $5
    end ;; $_3
    tee_local $6
    get_local $14
    if $_4 (result i32)
      get_local $5
      i32.load offset=4
    else
      get_local $13
      i32.const 255
      i32.and
    end ;; $_4
    i32.const 2
    i32.shl
    i32.add
    set_local $13
    get_local $1
    i32.const 32
    i32.add
    set_local $14
    i32.const 0
    set_local $5
    loop $while-in1
      get_local $5
      i32.const 2
      i32.ne
      get_local $6
      get_local $13
      i32.lt_u
      i32.and
      if $_5
        block $_6
          get_local $9
          get_local $6
          i32.store
          get_local $11
          get_local $15
          get_local $6
          get_local $13
          get_local $9
          get_local $1
          get_local $14
          get_local $10
          get_local $11
          i32.load
          i32.load offset=12
          i32.const 15
          i32.and
          i32.const 381
          i32.add
          call_indirect (type $FUNCSIG$iiiiiiiii)
          set_local $5
          get_local $1
          set_local $6
          loop $while-in3
            get_local $6
            get_local $10
            i32.load
            i32.lt_u
            if $_7
              block $_8
                get_local $8
                get_local $6
                i32.load8_s
                call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
                get_local $6
                i32.const 1
                i32.add
                set_local $6
                br $while-in3
              end ;; $_8
            end ;; $_7
          end ;; $while-in3
          get_local $9
          i32.load
          set_local $6
          br $while-in1
        end ;; $_6
      end ;; $_5
    end ;; $while-in1
    get_local $2
    i32.const -1
    i32.eq
    if $_9 (result i32)
      i32.const -1
    else
      get_local $2
      i32.const 1
      i32.shl
    end ;; $_9
    get_local $3
    get_local $4
    get_local $8
    i32.load8_s offset=11
    i32.const 0
    i32.lt_s
    if $_10 (result i32)
      get_local $8
      i32.load
    else
      get_local $8
    end ;; $_10
    call $_catgets
    set_local $3
    get_local $0
    i32.const 0
    i32.store
    get_local $0
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $2
    loop $while-in5
      get_local $2
      i32.const 3
      i32.ne
      if $_11
        block $_12
          get_local $0
          get_local $2
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $2
          i32.const 1
          i32.add
          set_local $2
          br $while-in5
        end ;; $_12
      end ;; $_11
    end ;; $while-in5
    get_local $12
    i32.const 0
    i32.store offset=4
    get_local $12
    i32.const 9088
    i32.store
    get_local $3
    get_local $3
    call $_strlen
    i32.add
    tee_local $4
    set_local $5
    get_local $1
    i32.const 128
    i32.add
    set_local $6
    i32.const 0
    set_local $2
    loop $while-in7
      get_local $2
      i32.const 2
      i32.ne
      get_local $3
      get_local $4
      i32.lt_u
      i32.and
      if $_13
        block $_14
          get_local $9
          get_local $3
          i32.store
          get_local $12
          get_local $15
          get_local $3
          get_local $5
          get_local $3
          i32.sub
          i32.const 32
          i32.gt_s
          if $_15 (result i32)
            get_local $3
            i32.const 32
            i32.add
          else
            get_local $4
          end ;; $_15
          get_local $9
          get_local $1
          get_local $6
          get_local $10
          get_local $12
          i32.load
          i32.load offset=16
          i32.const 15
          i32.and
          i32.const 381
          i32.add
          call_indirect (type $FUNCSIG$iiiiiiiii)
          set_local $2
          get_local $1
          set_local $3
          loop $while-in9
            get_local $3
            get_local $10
            i32.load
            i32.lt_u
            if $if
              block $block
                get_local $0
                get_local $3
                i32.load
                call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw
                get_local $3
                i32.const 4
                i32.add
                set_local $3
                br $while-in9
              end ;; $block
            end ;; $if
          end ;; $while-in9
          get_local $9
          i32.load
          set_local $3
          br $while-in7
        end ;; $_14
      end ;; $_13
    end ;; $while-in7
    get_local $8
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $7
    set_global $STACKTOP
    )
  
  (func $_mbsnrtowcs (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    get_global $STACKTOP
    set_local $9
    get_global $STACKTOP
    i32.const 1040
    i32.add
    set_global $STACKTOP
    get_local $9
    i32.const 8
    i32.add
    set_local $11
    get_local $9
    tee_local $8
    get_local $1
    i32.load
    tee_local $6
    i32.store
    get_local $0
    i32.const 0
    i32.ne
    tee_local $12
    if $_1 (result i32)
      get_local $3
    else
      i32.const 256
    end ;; $_1
    set_local $5
    get_local $12
    i32.eqz
    if $_2
      get_local $11
      set_local $0
    end ;; $_2
    get_local $6
    set_local $7
    block $label$break$L1 (result i32)
      get_local $5
      i32.const 0
      i32.ne
      get_local $6
      i32.const 0
      i32.ne
      i32.and
      if $_3 (result i32)
        block $_4 (result i32)
          get_local $2
          set_local $3
          get_local $5
          set_local $2
          i32.const 0
          set_local $6
          loop $while-in
            block $while-out
              get_local $3
              i32.const 131
              i32.gt_u
              get_local $3
              i32.const 2
              i32.shr_u
              tee_local $5
              get_local $2
              i32.ge_u
              tee_local $10
              i32.or
              i32.eqz
              if $_5
                block $_6
                  get_local $2
                  set_local $5
                  get_local $6
                  br $label$break$L1
                end ;; $_6
              end ;; $_5
              get_local $3
              get_local $10
              if $_7 (result i32)
                get_local $2
                tee_local $5
              else
                get_local $5
              end ;; $_7
              i32.sub
              set_local $3
              get_local $0
              get_local $8
              get_local $5
              get_local $4
              call $_mbsrtowcs
              tee_local $7
              i32.const -1
              i32.eq
              br_if $while-out
              get_local $2
              get_local $0
              get_local $11
              i32.eq
              tee_local $13
              if $_8 (result i32)
                i32.const 0
              else
                get_local $7
              end ;; $_8
              tee_local $10
              i32.sub
              set_local $5
              get_local $13
              i32.eqz
              if $_9
                get_local $0
                get_local $7
                i32.const 2
                i32.shl
                i32.add
                set_local $0
              end ;; $_9
              get_local $7
              get_local $6
              i32.add
              set_local $6
              get_local $6
              get_local $2
              get_local $10
              i32.ne
              get_local $8
              i32.load
              tee_local $7
              i32.const 0
              i32.ne
              i32.and
              i32.eqz
              br_if $label$break$L1
              drop
              get_local $5
              set_local $2
              br $while-in
            end ;; $while-out
          end ;; $while-in
          i32.const 0
          set_local $5
          get_local $8
          i32.load
          set_local $7
          i32.const -1
        end ;; $_4
      else
        block $_10 (result i32)
          get_local $2
          set_local $3
          i32.const 0
        end ;; $_10
      end ;; $_3
    end ;; $label$break$L1
    set_local $2
    block $label$break$L8
      get_local $7
      if $_11
        get_local $5
        i32.const 0
        i32.ne
        get_local $3
        i32.const 0
        i32.ne
        i32.and
        if $_12
          block $_13
            get_local $5
            set_local $6
            get_local $0
            set_local $5
            loop $while-in2
              get_local $5
              get_local $7
              get_local $3
              get_local $4
              call $_mbrtowc
              tee_local $0
              i32.const 2
              i32.add
              i32.const 3
              i32.ge_u
              if $_14
                block $_15
                  get_local $8
                  get_local $8
                  i32.load
                  get_local $0
                  i32.add
                  tee_local $7
                  i32.store
                  get_local $2
                  i32.const 1
                  i32.add
                  set_local $2
                  get_local $6
                  i32.const -1
                  i32.add
                  tee_local $6
                  i32.const 0
                  i32.ne
                  get_local $3
                  get_local $0
                  i32.ne
                  i32.and
                  i32.eqz
                  br_if $label$break$L8
                  get_local $3
                  get_local $0
                  i32.sub
                  set_local $3
                  get_local $5
                  i32.const 4
                  i32.add
                  set_local $5
                  br $while-in2
                end ;; $_15
              end ;; $_14
            end ;; $while-in2
            block $switch-default
              block $switch-case3
                block $switch-case
                  get_local $0
                  i32.const -1
                  i32.sub
                  br_table
                    $switch-case $switch-case3
                    $switch-default ;; default
                end ;; $switch-case
                i32.const -1
                set_local $2
                br $label$break$L8
              end ;; $switch-case3
              get_local $8
              i32.const 0
              i32.store
              br $label$break$L8
            end ;; $switch-default
            get_local $4
            i32.const 0
            i32.store
          end ;; $_13
        end ;; $_12
      end ;; $_11
    end ;; $label$break$L8
    get_local $12
    if $if
      get_local $1
      get_local $8
      i32.load
      i32.store
    end ;; $if
    get_local $9
    set_global $STACKTOP
    get_local $2
    )
  
  (func $_main (type $FUNCSIG$i)
    (result i32)
    (local $0 i32)
    (local $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 f64)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 f64)
    (local $10 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $7
    i32.const 16
    i32.add
    tee_local $3
    i32.const 0
    i32.store
    get_local $3
    i32.const 4
    i32.add
    tee_local $5
    i32.const 0
    i32.store
    get_local $3
    i32.const 0
    i32.store offset=8
    get_local $3
    i32.const 1600000000
    call $__Znwj
    tee_local $0
    tee_local $1
    i32.store
    get_local $5
    get_local $1
    i32.store
    get_local $3
    i32.const 8
    i32.add
    tee_local $8
    get_local $0
    i32.const 1600000000
    i32.add
    i32.store
    get_local $7
    tee_local $1
    i32.const 8
    i32.add
    set_local $10
    i32.const 0
    set_local $2
    loop $do-in
      get_local $2
      f64.convert_s/i32
      f64.const 0x1.0000000000000p+1
      f64.mul
      f64.const 0x1.3878000000000p+13
      f64.div
      f64.const -0x1.0000000000000p+0
      f64.add
      set_local $4
      i32.const 0
      set_local $6
      loop $do-in1
        get_local $1
        get_local $4
        f64.store
        get_local $10
        get_local $6
        f64.convert_s/i32
        f64.const 0x1.0000000000000p+1
        f64.mul
        f64.const 0x1.3878000000000p+13
        f64.div
        f64.const -0x1.0000000000000p+0
        f64.add
        f64.store
        get_local $5
        i32.load
        tee_local $0
        get_local $8
        i32.load
        i32.eq
        if $_1
          get_local $3
          get_local $1
          call $__ZNSt3__26vectorI5pointNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_
        else
          block $_2
            get_local $0
            get_local $1
            i32.load
            i32.store
            get_local $0
            get_local $1
            i32.load offset=4
            i32.store offset=4
            get_local $0
            get_local $1
            i32.load offset=8
            i32.store offset=8
            get_local $0
            get_local $1
            i32.load offset=12
            i32.store offset=12
            get_local $5
            get_local $0
            i32.const 16
            i32.add
            i32.store
          end ;; $_2
        end ;; $_1
        get_local $6
        i32.const 1
        i32.add
        tee_local $6
        i32.const 10000
        i32.lt_s
        br_if $do-in1
      end ;; $do-in1
      get_local $2
      i32.const 1
      i32.add
      tee_local $2
      i32.const 10000
      i32.lt_s
      br_if $do-in
    end ;; $do-in
    get_local $3
    i32.load
    tee_local $2
    get_local $5
    i32.load
    tee_local $6
    i32.eq
    if $_3 (result f64)
      block $_4 (result f64)
        f64.const 0x0.0000000000000p+0
        set_local $9
        f64.const 0x0.0000000000000p+0
      end ;; $_4
    else
      block $_5 (result f64)
        get_local $6
        i32.const -16
        i32.add
        get_local $2
        i32.sub
        i32.const 4
        i32.shr_u
        set_local $8
        i32.const 0
        set_local $0
        loop $while-in
          get_local $2
          f64.load
          tee_local $4
          get_local $4
          f64.mul
          get_local $2
          f64.load offset=8
          tee_local $4
          get_local $4
          f64.mul
          f64.add
          f64.const 0x1.0000000000000p+0
          f64.lt
          get_local $0
          i32.add
          set_local $0
          get_local $2
          i32.const 16
          i32.add
          tee_local $2
          get_local $6
          i32.ne
          br_if $while-in
        end ;; $while-in
        get_local $0
        f64.convert_s/i32
        f64.const 0x1.0000000000000p+2
        f64.mul
        set_local $9
        get_local $8
        i32.const 1
        i32.add
        f64.convert_s/i32
      end ;; $_5
    end ;; $_3
    set_local $4
    get_local $1
    i32.const 18336
    i32.const 10520
    i32.const 8
    call $__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j
    get_local $9
    get_local $4
    f64.div
    call $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd
    tee_local $0
    get_local $0
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.add
    call $__ZNKSt3__28ios_base6getlocEv
    i32.store
    get_local $1
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $2
    i32.const 10
    get_local $2
    i32.load
    i32.load offset=28
    i32.const 15
    i32.and
    i32.const 413
    i32.add
    call_indirect (type $FUNCSIG$iii)
    set_local $2
    get_local $1
    call $__ZNSt3__26localeD2Ev
    get_local $0
    get_local $2
    call $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc
    drop
    get_local $0
    call $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv
    drop
    get_local $3
    i32.load
    tee_local $0
    i32.eqz
    if $if
      block $block
        get_local $7
        set_global $STACKTOP
        i32.const 0
        return
      end ;; $block
    end ;; $if
    get_local $5
    i32.load
    tee_local $1
    get_local $0
    i32.ne
    if $if_1
      get_local $5
      get_local $1
      get_local $1
      i32.const -16
      i32.add
      get_local $0
      i32.sub
      i32.const 4
      i32.shr_u
      i32.const -1
      i32.xor
      i32.const 4
      i32.shl
      i32.add
      i32.store
    end ;; $if_1
    get_local $0
    call $__ZdlPv
    get_local $7
    set_global $STACKTOP
    i32.const 0
    )
  
  (func $__ZNKSt3__220__time_get_c_storageIcE8__monthsEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    i32.const 16968
    i32.load8_s
    i32.eqz
    if $_1
      i32.const 16968
      call $___cxa_guard_acquire
      if $_2
        block $_3
          i32.const 16976
          i32.load8_s
          i32.eqz
          if $_4
            i32.const 16976
            call $___cxa_guard_acquire
            if $_5
              block $_6
                i32.const 19452
                set_local $0
                loop $do-in
                  get_local $0
                  i32.const 0
                  i32.store
                  get_local $0
                  i32.const 0
                  i32.store offset=4
                  get_local $0
                  i32.const 0
                  i32.store offset=8
                  i32.const 0
                  set_local $1
                  loop $while-in
                    get_local $1
                    i32.const 3
                    i32.ne
                    if $if
                      block $block
                        get_local $0
                        get_local $1
                        i32.const 2
                        i32.shl
                        i32.add
                        i32.const 0
                        i32.store
                        get_local $1
                        i32.const 1
                        i32.add
                        set_local $1
                        br $while-in
                      end ;; $block
                    end ;; $if
                  end ;; $while-in
                  get_local $0
                  i32.const 12
                  i32.add
                  tee_local $0
                  i32.const 19740
                  i32.ne
                  br_if $do-in
                end ;; $do-in
                i32.const 100
                i32.const 0
                get_global $___dso_handle
                call $___cxa_atexit
                drop
              end ;; $_6
            end ;; $_5
          end ;; $_4
          i32.const 19452
          i32.const 14544
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19464
          i32.const 14552
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19476
          i32.const 14561
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19488
          i32.const 14567
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19500
          i32.const 14573
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19512
          i32.const 14577
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19524
          i32.const 14582
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19536
          i32.const 14587
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19548
          i32.const 14594
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19560
          i32.const 14604
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19572
          i32.const 14612
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19584
          i32.const 14621
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19596
          i32.const 14630
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19608
          i32.const 14634
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19620
          i32.const 14638
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19632
          i32.const 14642
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19644
          i32.const 14573
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19656
          i32.const 14646
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19668
          i32.const 14650
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19680
          i32.const 14654
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19692
          i32.const 14658
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19704
          i32.const 14662
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19716
          i32.const 14666
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19728
          i32.const 14670
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19740
          i32.const 19452
          i32.store
        end ;; $_3
      end ;; $_2
    end ;; $_1
    i32.const 19740
    i32.load
    )
  
  (func $__ZNKSt3__220__time_get_c_storageIwE8__monthsEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    i32.const 17048
    i32.load8_s
    i32.eqz
    if $_1
      i32.const 17048
      call $___cxa_guard_acquire
      if $_2
        block $_3
          i32.const 17056
          i32.load8_s
          i32.eqz
          if $_4
            i32.const 17056
            call $___cxa_guard_acquire
            if $_5
              block $_6
                i32.const 20264
                set_local $0
                loop $do-in
                  get_local $0
                  i32.const 0
                  i32.store
                  get_local $0
                  i32.const 0
                  i32.store offset=4
                  get_local $0
                  i32.const 0
                  i32.store offset=8
                  i32.const 0
                  set_local $1
                  loop $while-in
                    get_local $1
                    i32.const 3
                    i32.ne
                    if $if
                      block $block
                        get_local $0
                        get_local $1
                        i32.const 2
                        i32.shl
                        i32.add
                        i32.const 0
                        i32.store
                        get_local $1
                        i32.const 1
                        i32.add
                        set_local $1
                        br $while-in
                      end ;; $block
                    end ;; $if
                  end ;; $while-in
                  get_local $0
                  i32.const 12
                  i32.add
                  tee_local $0
                  i32.const 20552
                  i32.ne
                  br_if $do-in
                end ;; $do-in
                i32.const 104
                i32.const 0
                get_global $___dso_handle
                call $___cxa_atexit
                drop
              end ;; $_6
            end ;; $_5
          end ;; $_4
          i32.const 20264
          i32.const 7836
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20276
          i32.const 7868
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20288
          i32.const 7904
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20300
          i32.const 7928
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20312
          i32.const 7952
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20324
          i32.const 7968
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20336
          i32.const 7988
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20348
          i32.const 8008
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20360
          i32.const 8036
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20372
          i32.const 8076
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20384
          i32.const 8108
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20396
          i32.const 8144
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20408
          i32.const 8180
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20420
          i32.const 8196
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20432
          i32.const 8212
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20444
          i32.const 8228
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20456
          i32.const 7952
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20468
          i32.const 8244
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20480
          i32.const 8260
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20492
          i32.const 8276
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20504
          i32.const 8292
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20516
          i32.const 8308
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20528
          i32.const 8324
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20540
          i32.const 8340
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20552
          i32.const 20264
          i32.store
        end ;; $_3
      end ;; $_2
    end ;; $_1
    i32.const 20552
    i32.load
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_local $4
    i32.const 8
    i32.add
    set_local $6
    loop $label$continue$L1
      block $label$break$L1
        get_local $1
        i32.load
        tee_local $0
        if $_1
          get_local $0
          i32.load offset=12
          get_local $0
          i32.load offset=16
          i32.eq
          if $_2
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_3 (result i32)
              block $_4 (result i32)
                get_local $1
                i32.const 0
                i32.store
                i32.const 0
              end ;; $_4
            else
              get_local $1
              i32.load
            end ;; $_3
            set_local $0
          end ;; $_2
        else
          i32.const 0
          set_local $0
        end ;; $_1
        get_local $0
        i32.eqz
        set_local $4
        block $__rjto$0
          block $__rjti$0
            get_local $2
            i32.load
            tee_local $0
            i32.eqz
            br_if $__rjti$0
            get_local $0
            i32.load offset=12
            get_local $0
            i32.load offset=16
            i32.ne
            if $_5
              get_local $4
              if $_6
                br $__rjto$0
              else
                br $label$break$L1
              end ;; $_6
            end ;; $_5
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $_7
              block $_8
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$0
              end ;; $_8
            else
              get_local $4
              i32.eqz
              br_if $label$break$L1
            end ;; $_7
            br $__rjto$0
          end ;; $__rjti$0
          get_local $4
          if $_9
            block $_10
              i32.const 0
              set_local $0
              br $label$break$L1
            end ;; $_10
          else
            i32.const 0
            set_local $0
          end ;; $_9
        end ;; $__rjto$0
        get_local $1
        i32.load
        tee_local $4
        i32.load offset=12
        tee_local $5
        get_local $4
        i32.load offset=16
        i32.eq
        if $_11 (result i32)
          get_local $4
          get_local $4
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
        else
          get_local $5
          i32.load8_s
        end ;; $_11
        tee_local $4
        i32.const 255
        i32.and
        i32.const 24
        i32.shl
        i32.const 24
        i32.shr_s
        i32.const -1
        i32.le_s
        br_if $label$break$L1
        get_local $6
        i32.load
        get_local $4
        i32.const 24
        i32.shl
        i32.const 24
        i32.shr_s
        i32.const 1
        i32.shl
        i32.add
        i32.load16_s
        i32.const 8192
        i32.and
        i32.eqz
        br_if $label$break$L1
        get_local $1
        i32.load
        tee_local $0
        i32.const 12
        i32.add
        tee_local $4
        i32.load
        tee_local $5
        get_local $0
        i32.load offset=16
        i32.eq
        if $_12
          block $_13
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            drop
            br $label$continue$L1
          end ;; $_13
        else
          block $_14
            get_local $4
            get_local $5
            i32.const 1
            i32.add
            i32.store
            br $label$continue$L1
          end ;; $_14
        end ;; $_12
      end ;; $label$break$L1
    end ;; $label$continue$L1
    get_local $1
    i32.load
    tee_local $4
    if $_15
      get_local $4
      i32.load offset=12
      get_local $4
      i32.load offset=16
      i32.eq
      if $_16
        get_local $4
        get_local $4
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_17 (result i32)
          block $_18 (result i32)
            get_local $1
            i32.const 0
            i32.store
            i32.const 0
          end ;; $_18
        else
          get_local $1
          i32.load
        end ;; $_17
        set_local $4
      end ;; $_16
    else
      i32.const 0
      set_local $4
    end ;; $_15
    get_local $4
    i32.eqz
    set_local $1
    block $__rjto$2
      block $__rjti$2
        block $__rjti$1
          get_local $0
          i32.eqz
          br_if $__rjti$1
          get_local $0
          i32.load offset=12
          get_local $0
          i32.load offset=16
          i32.eq
          if $if
            get_local $0
            get_local $0
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $if_1
              block $block
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$1
              end ;; $block
            end ;; $if_1
          end ;; $if
          get_local $1
          i32.eqz
          br_if $__rjti$2
          br $__rjto$2
        end ;; $__rjti$1
        get_local $1
        br_if $__rjti$2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $3
      get_local $3
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $__rjto$2
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_local $1
    i32.load
    tee_local $0
    if $_1
      get_local $0
      i32.load offset=12
      get_local $0
      i32.load offset=16
      i32.eq
      if $_2
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
        i32.const -1
        i32.eq
        if $_3 (result i32)
          block $_4 (result i32)
            get_local $1
            i32.const 0
            i32.store
            i32.const 0
          end ;; $_4
        else
          get_local $1
          i32.load
        end ;; $_3
        set_local $0
      end ;; $_2
    else
      i32.const 0
      set_local $0
    end ;; $_1
    get_local $0
    i32.eqz
    set_local $0
    block $label$break$L16
      block $__rjti$4
        block $__rjti$3
          block $__rjti$2
            get_local $2
            i32.load
            tee_local $5
            if $_5
              block $_6
                get_local $5
                i32.load offset=12
                get_local $5
                i32.load offset=16
                i32.eq
                if $_7
                  get_local $5
                  get_local $5
                  i32.load
                  i32.load offset=36
                  i32.const 63
                  i32.and
                  i32.const 312
                  i32.add
                  call_indirect (type $FUNCSIG$ii)
                  i32.const -1
                  i32.eq
                  if $_8
                    block $_9
                      get_local $2
                      i32.const 0
                      i32.store
                      br $__rjti$2
                    end ;; $_9
                  end ;; $_8
                end ;; $_7
                get_local $0
                i32.eqz
                br_if $__rjti$3
                br $__rjti$4
              end ;; $_6
            end ;; $_5
          end ;; $__rjti$2
          get_local $0
          i32.eqz
          if $_10
            block $_11
              i32.const 0
              set_local $5
              br $__rjti$4
            end ;; $_11
          end ;; $_10
        end ;; $__rjti$3
        get_local $3
        get_local $3
        i32.load
        i32.const 6
        i32.or
        i32.store
        br $label$break$L16
      end ;; $__rjti$4
      get_local $4
      get_local $1
      i32.load
      tee_local $0
      i32.load offset=12
      tee_local $6
      get_local $0
      i32.load offset=16
      i32.eq
      if $_12 (result i32)
        get_local $0
        get_local $0
        i32.load
        i32.load offset=36
        i32.const 63
        i32.and
        i32.const 312
        i32.add
        call_indirect (type $FUNCSIG$ii)
      else
        get_local $6
        i32.load8_u
      end ;; $_12
      tee_local $0
      i32.const 255
      i32.and
      i32.const 0
      get_local $4
      i32.load
      i32.load offset=36
      i32.const 31
      i32.and
      i32.const 8
      i32.add
      call_indirect (type $FUNCSIG$iiii)
      i32.const 255
      i32.and
      i32.const 37
      i32.ne
      if $_13
        block $_14
          get_local $3
          get_local $3
          i32.load
          i32.const 4
          i32.or
          i32.store
          br $label$break$L16
        end ;; $_14
      end ;; $_13
      block $do-once3
        block $__rjti$0
          get_local $1
          i32.load
          tee_local $0
          i32.const 12
          i32.add
          tee_local $4
          i32.load
          tee_local $6
          get_local $0
          i32.load offset=16
          i32.eq
          if $_15
            block $_16
              get_local $0
              get_local $0
              i32.load
              i32.load offset=40
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
              drop
              get_local $1
              i32.load
              tee_local $0
              br_if $__rjti$0
              i32.const 0
              set_local $0
            end ;; $_16
          else
            block $_17
              get_local $4
              get_local $6
              i32.const 1
              i32.add
              i32.store
              br $__rjti$0
            end ;; $_17
          end ;; $_15
          br $do-once3
        end ;; $__rjti$0
        get_local $0
        i32.load offset=12
        get_local $0
        i32.load offset=16
        i32.eq
        if $_18
          get_local $0
          get_local $0
          i32.load
          i32.load offset=36
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
          i32.const -1
          i32.eq
          if $_19 (result i32)
            block $_20 (result i32)
              get_local $1
              i32.const 0
              i32.store
              i32.const 0
            end ;; $_20
          else
            get_local $1
            i32.load
          end ;; $_19
          set_local $0
        end ;; $_18
      end ;; $do-once3
      get_local $0
      i32.eqz
      set_local $0
      block $__rjto$1
        block $__rjti$1
          get_local $5
          i32.eqz
          br_if $__rjti$1
          get_local $5
          i32.load offset=12
          get_local $5
          i32.load offset=16
          i32.eq
          if $if
            get_local $5
            get_local $5
            i32.load
            i32.load offset=36
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $if_1
              block $block
                get_local $2
                i32.const 0
                i32.store
                br $__rjti$1
              end ;; $block
            end ;; $if_1
          end ;; $if
          get_local $0
          br_if $label$break$L16
          br $__rjto$1
        end ;; $__rjti$1
        get_local $0
        i32.eqz
        br_if $label$break$L16
      end ;; $__rjto$1
      get_local $3
      get_local $3
      i32.load
      i32.const 2
      i32.or
      i32.store
    end ;; $label$break$L16
    )
  
  (func $__ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    get_local $2
    get_local $0
    i32.store
    get_local $5
    get_local $3
    i32.store
    block $label$break$L4
      block $__rjti$0
        get_local $7
        i32.const 2
        i32.and
        i32.eqz
        br_if $__rjti$0
        get_local $4
        get_local $3
        i32.sub
        i32.const 3
        i32.lt_s
        if $_1
          i32.const 1
          set_local $0
        else
          block $_2
            get_local $5
            get_local $3
            i32.const 1
            i32.add
            i32.store
            get_local $3
            i32.const -17
            i32.store8
            get_local $5
            get_local $5
            i32.load
            tee_local $0
            i32.const 1
            i32.add
            i32.store
            get_local $0
            i32.const -69
            i32.store8
            get_local $5
            get_local $5
            i32.load
            tee_local $0
            i32.const 1
            i32.add
            i32.store
            get_local $0
            i32.const -65
            i32.store8
            br $__rjti$0
          end ;; $_2
        end ;; $_1
        br $label$break$L4
      end ;; $__rjti$0
      get_local $2
      i32.load
      set_local $0
      loop $while-in
        get_local $0
        get_local $1
        i32.ge_u
        if $_3
          block $_4
            i32.const 0
            set_local $0
            br $label$break$L4
          end ;; $_4
        end ;; $_3
        get_local $0
        i32.load
        tee_local $0
        get_local $6
        i32.gt_u
        get_local $0
        i32.const -2048
        i32.and
        i32.const 55296
        i32.eq
        i32.or
        if $_5
          block $_6
            i32.const 2
            set_local $0
            br $label$break$L4
          end ;; $_6
        end ;; $_5
        block $do-once
          get_local $0
          i32.const 128
          i32.lt_u
          if $if
            block $block
              get_local $4
              get_local $5
              i32.load
              tee_local $3
              i32.sub
              i32.const 1
              i32.lt_s
              if $if_1
                block $block_1
                  i32.const 1
                  set_local $0
                  br $label$break$L4
                end ;; $block_1
              end ;; $if_1
              get_local $5
              get_local $3
              i32.const 1
              i32.add
              i32.store
              get_local $3
              get_local $0
              i32.store8
            end ;; $block
          else
            block $block_2
              get_local $0
              i32.const 2048
              i32.lt_u
              if $if_2
                block $block_3
                  get_local $4
                  get_local $5
                  i32.load
                  tee_local $3
                  i32.sub
                  i32.const 2
                  i32.lt_s
                  if $if_3
                    block $block_4
                      i32.const 1
                      set_local $0
                      br $label$break$L4
                    end ;; $block_4
                  end ;; $if_3
                  get_local $5
                  get_local $3
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $3
                  get_local $0
                  i32.const 6
                  i32.shr_u
                  i32.const 192
                  i32.or
                  i32.store8
                  get_local $5
                  get_local $5
                  i32.load
                  tee_local $3
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $3
                  get_local $0
                  i32.const 63
                  i32.and
                  i32.const 128
                  i32.or
                  i32.store8
                  br $do-once
                end ;; $block_3
              end ;; $if_2
              get_local $4
              get_local $5
              i32.load
              tee_local $3
              i32.sub
              set_local $7
              get_local $0
              i32.const 65536
              i32.lt_u
              if $if_4
                block $block_5
                  get_local $7
                  i32.const 3
                  i32.lt_s
                  if $if_5
                    block $block_6
                      i32.const 1
                      set_local $0
                      br $label$break$L4
                    end ;; $block_6
                  end ;; $if_5
                  get_local $5
                  get_local $3
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $3
                  get_local $0
                  i32.const 12
                  i32.shr_u
                  i32.const 224
                  i32.or
                  i32.store8
                  get_local $5
                  get_local $5
                  i32.load
                  tee_local $3
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $3
                  get_local $0
                  i32.const 6
                  i32.shr_u
                  i32.const 63
                  i32.and
                  i32.const 128
                  i32.or
                  i32.store8
                  get_local $5
                  get_local $5
                  i32.load
                  tee_local $3
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $3
                  get_local $0
                  i32.const 63
                  i32.and
                  i32.const 128
                  i32.or
                  i32.store8
                end ;; $block_5
              else
                block $block_7
                  get_local $7
                  i32.const 4
                  i32.lt_s
                  if $if_6
                    block $block_8
                      i32.const 1
                      set_local $0
                      br $label$break$L4
                    end ;; $block_8
                  end ;; $if_6
                  get_local $5
                  get_local $3
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $3
                  get_local $0
                  i32.const 18
                  i32.shr_u
                  i32.const 240
                  i32.or
                  i32.store8
                  get_local $5
                  get_local $5
                  i32.load
                  tee_local $3
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $3
                  get_local $0
                  i32.const 12
                  i32.shr_u
                  i32.const 63
                  i32.and
                  i32.const 128
                  i32.or
                  i32.store8
                  get_local $5
                  get_local $5
                  i32.load
                  tee_local $3
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $3
                  get_local $0
                  i32.const 6
                  i32.shr_u
                  i32.const 63
                  i32.and
                  i32.const 128
                  i32.or
                  i32.store8
                  get_local $5
                  get_local $5
                  i32.load
                  tee_local $3
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $3
                  get_local $0
                  i32.const 63
                  i32.and
                  i32.const 128
                  i32.or
                  i32.store8
                end ;; $block_7
              end ;; $if_4
            end ;; $block_2
          end ;; $if
        end ;; $do-once
        get_local $2
        get_local $2
        i32.load
        i32.const 4
        i32.add
        tee_local $0
        i32.store
        br $while-in
      end ;; $while-in
    end ;; $label$break$L4
    get_local $0
    )
  
  (func $_pop_arg (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    (local $4 f64)
    (local $5 i32)
    block $label$break$L1
      get_local $1
      i32.const 20
      i32.le_u
      if $_1
        block $switch-default
          block $switch-case9
            block $switch-case8
              block $switch-case7
                block $switch-case6
                  block $switch-case5
                    block $switch-case4
                      block $switch-case3
                        block $switch-case2
                          block $switch-case1
                            block $switch-case
                              get_local $1
                              i32.const 9
                              i32.sub
                              br_table
                                $switch-case $switch-case1 $switch-case2 $switch-case3 $switch-case4 $switch-case5 $switch-case6 $switch-case7 $switch-case8 $switch-case9
                                $switch-default ;; default
                            end ;; $switch-case
                            get_local $2
                            i32.load
                            i32.const 3
                            i32.add
                            i32.const -4
                            i32.and
                            tee_local $1
                            i32.load
                            set_local $3
                            get_local $2
                            get_local $1
                            i32.const 4
                            i32.add
                            i32.store
                            get_local $0
                            get_local $3
                            i32.store
                            br $label$break$L1
                          end ;; $switch-case1
                          get_local $2
                          i32.load
                          i32.const 3
                          i32.add
                          i32.const -4
                          i32.and
                          tee_local $3
                          i32.load
                          set_local $1
                          get_local $2
                          get_local $3
                          i32.const 4
                          i32.add
                          i32.store
                          get_local $0
                          get_local $1
                          i32.store
                          get_local $0
                          get_local $1
                          i32.const 0
                          i32.lt_s
                          i32.const 31
                          i32.shl
                          i32.const 31
                          i32.shr_s
                          i32.store offset=4
                          br $label$break$L1
                        end ;; $switch-case2
                        get_local $2
                        i32.load
                        i32.const 3
                        i32.add
                        i32.const -4
                        i32.and
                        tee_local $1
                        i32.load
                        set_local $3
                        get_local $2
                        get_local $1
                        i32.const 4
                        i32.add
                        i32.store
                        get_local $0
                        get_local $3
                        i32.store
                        get_local $0
                        i32.const 0
                        i32.store offset=4
                        br $label$break$L1
                      end ;; $switch-case3
                      get_local $2
                      i32.load
                      i32.const 7
                      i32.add
                      i32.const -8
                      i32.and
                      tee_local $1
                      tee_local $3
                      i32.load
                      set_local $5
                      get_local $3
                      i32.load offset=4
                      set_local $3
                      get_local $2
                      get_local $1
                      i32.const 8
                      i32.add
                      i32.store
                      get_local $0
                      get_local $5
                      i32.store
                      get_local $0
                      get_local $3
                      i32.store offset=4
                      br $label$break$L1
                    end ;; $switch-case4
                    get_local $2
                    i32.load
                    i32.const 3
                    i32.add
                    i32.const -4
                    i32.and
                    tee_local $1
                    i32.load
                    set_local $3
                    get_local $2
                    get_local $1
                    i32.const 4
                    i32.add
                    i32.store
                    get_local $0
                    get_local $3
                    i32.const 65535
                    i32.and
                    i32.const 16
                    i32.shl
                    i32.const 16
                    i32.shr_s
                    tee_local $1
                    i32.store
                    get_local $0
                    get_local $1
                    i32.const 0
                    i32.lt_s
                    i32.const 31
                    i32.shl
                    i32.const 31
                    i32.shr_s
                    i32.store offset=4
                    br $label$break$L1
                  end ;; $switch-case5
                  get_local $2
                  i32.load
                  i32.const 3
                  i32.add
                  i32.const -4
                  i32.and
                  tee_local $1
                  i32.load
                  set_local $3
                  get_local $2
                  get_local $1
                  i32.const 4
                  i32.add
                  i32.store
                  get_local $0
                  get_local $3
                  i32.const 65535
                  i32.and
                  i32.store
                  get_local $0
                  i32.const 0
                  i32.store offset=4
                  br $label$break$L1
                end ;; $switch-case6
                get_local $2
                i32.load
                i32.const 3
                i32.add
                i32.const -4
                i32.and
                tee_local $1
                i32.load
                set_local $3
                get_local $2
                get_local $1
                i32.const 4
                i32.add
                i32.store
                get_local $0
                get_local $3
                i32.const 255
                i32.and
                i32.const 24
                i32.shl
                i32.const 24
                i32.shr_s
                tee_local $1
                i32.store
                get_local $0
                get_local $1
                i32.const 0
                i32.lt_s
                i32.const 31
                i32.shl
                i32.const 31
                i32.shr_s
                i32.store offset=4
                br $label$break$L1
              end ;; $switch-case7
              get_local $2
              i32.load
              i32.const 3
              i32.add
              i32.const -4
              i32.and
              tee_local $1
              i32.load
              set_local $3
              get_local $2
              get_local $1
              i32.const 4
              i32.add
              i32.store
              get_local $0
              get_local $3
              i32.const 255
              i32.and
              i32.store
              get_local $0
              i32.const 0
              i32.store offset=4
              br $label$break$L1
            end ;; $switch-case8
            get_local $2
            i32.load
            i32.const 7
            i32.add
            i32.const -8
            i32.and
            tee_local $1
            f64.load
            set_local $4
            get_local $2
            get_local $1
            i32.const 8
            i32.add
            i32.store
            get_local $0
            get_local $4
            f64.store
            br $label$break$L1
          end ;; $switch-case9
          get_local $2
          i32.load
          i32.const 7
          i32.add
          i32.const -8
          i32.and
          tee_local $1
          f64.load
          set_local $4
          get_local $2
          get_local $1
          i32.const 8
          i32.add
          i32.store
          get_local $0
          get_local $4
          f64.store
        end ;; $switch-default
      end ;; $_1
    end ;; $label$break$L1
    )
  
  (func $___stdio_write (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    get_global $STACKTOP
    set_local $8
    get_global $STACKTOP
    i32.const 48
    i32.add
    set_global $STACKTOP
    get_local $8
    i32.const 16
    i32.add
    set_local $9
    get_local $8
    set_local $10
    get_local $8
    i32.const 32
    i32.add
    tee_local $4
    get_local $0
    i32.const 28
    i32.add
    tee_local $6
    i32.load
    tee_local $3
    i32.store
    get_local $4
    get_local $0
    i32.const 20
    i32.add
    tee_local $11
    i32.load
    get_local $3
    i32.sub
    tee_local $3
    i32.store offset=4
    get_local $4
    get_local $1
    i32.store offset=8
    get_local $4
    get_local $2
    i32.store offset=12
    get_local $0
    i32.const 60
    i32.add
    set_local $13
    get_local $0
    i32.const 44
    i32.add
    set_local $14
    get_local $4
    set_local $1
    i32.const 2
    set_local $4
    get_local $3
    get_local $2
    i32.add
    set_local $12
    block $__rjto$1
      block $__rjti$1
        block $__rjti$0
          loop $while-in
            i32.const 17600
            i32.load
            if $if
              block $block
                i32.const 94
                get_local $0
                call $_pthread_cleanup_push
                get_local $10
                get_local $13
                i32.load
                i32.store
                get_local $10
                get_local $1
                i32.store offset=4
                get_local $10
                get_local $4
                i32.store offset=8
                i32.const 146
                get_local $10
                call $___syscall146
                call $___syscall_ret
                set_local $3
                i32.const 0
                call $_pthread_cleanup_pop
              end ;; $block
            else
              block $block_1
                get_local $9
                get_local $13
                i32.load
                i32.store
                get_local $9
                get_local $1
                i32.store offset=4
                get_local $9
                get_local $4
                i32.store offset=8
                i32.const 146
                get_local $9
                call $___syscall146
                call $___syscall_ret
                set_local $3
              end ;; $block_1
            end ;; $if
            get_local $12
            get_local $3
            i32.eq
            br_if $__rjti$0
            get_local $3
            i32.const 0
            i32.lt_s
            br_if $__rjti$1
            get_local $3
            get_local $1
            i32.load offset=4
            tee_local $5
            i32.gt_u
            if $if_1 (result i32)
              block $block_2 (result i32)
                get_local $6
                get_local $14
                i32.load
                tee_local $7
                i32.store
                get_local $11
                get_local $7
                i32.store
                get_local $1
                i32.load offset=12
                set_local $7
                get_local $1
                i32.const 8
                i32.add
                set_local $1
                get_local $4
                i32.const -1
                i32.add
                set_local $4
                get_local $3
                get_local $5
                i32.sub
              end ;; $block_2
            else
              get_local $4
              i32.const 2
              i32.eq
              if $if_2 (result i32)
                block $block_3 (result i32)
                  get_local $6
                  get_local $6
                  i32.load
                  get_local $3
                  i32.add
                  i32.store
                  get_local $5
                  set_local $7
                  i32.const 2
                  set_local $4
                  get_local $3
                end ;; $block_3
              else
                block $block_4 (result i32)
                  get_local $5
                  set_local $7
                  get_local $3
                end ;; $block_4
              end ;; $if_2
            end ;; $if_1
            set_local $5
            get_local $1
            get_local $1
            i32.load
            get_local $5
            i32.add
            i32.store
            get_local $1
            get_local $7
            get_local $5
            i32.sub
            i32.store offset=4
            get_local $12
            get_local $3
            i32.sub
            set_local $12
            br $while-in
          end ;; $while-in
        end ;; $__rjti$0
        get_local $0
        get_local $14
        i32.load
        tee_local $1
        get_local $0
        i32.load offset=48
        i32.add
        i32.store offset=16
        get_local $6
        get_local $1
        i32.store
        get_local $11
        get_local $1
        i32.store
        br $__rjto$1
      end ;; $__rjti$1
      get_local $0
      i32.const 0
      i32.store offset=16
      get_local $6
      i32.const 0
      i32.store
      get_local $11
      i32.const 0
      i32.store
      get_local $0
      get_local $0
      i32.load
      i32.const 32
      i32.or
      i32.store
      get_local $4
      i32.const 2
      i32.eq
      if $if_3 (result i32)
        i32.const 0
      else
        get_local $2
        get_local $1
        i32.load offset=4
        i32.sub
      end ;; $if_3
      set_local $2
    end ;; $__rjto$1
    get_local $8
    set_global $STACKTOP
    get_local $2
    )
  
  (func $_wcsnrtombs (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    get_global $STACKTOP
    set_local $8
    get_global $STACKTOP
    i32.const 272
    i32.add
    set_global $STACKTOP
    get_local $8
    i32.const 8
    i32.add
    set_local $10
    get_local $8
    tee_local $7
    get_local $1
    i32.load
    tee_local $5
    i32.store
    get_local $0
    i32.const 0
    i32.ne
    tee_local $11
    i32.eqz
    if $_1
      i32.const 256
      set_local $3
    end ;; $_1
    get_local $11
    i32.eqz
    if $_2
      get_local $10
      set_local $0
    end ;; $_2
    get_local $5
    set_local $4
    block $label$break$L1 (result i32)
      get_local $3
      i32.const 0
      i32.ne
      get_local $5
      i32.const 0
      i32.ne
      i32.and
      if $_3 (result i32)
        block $_4 (result i32)
          i32.const 0
          set_local $6
          loop $while-in
            block $while-out
              get_local $2
              get_local $3
              i32.ge_u
              tee_local $5
              get_local $2
              i32.const 32
              i32.gt_u
              i32.or
              i32.eqz
              if $_5
                block $_6
                  get_local $3
                  set_local $5
                  get_local $6
                  br $label$break$L1
                end ;; $_6
              end ;; $_5
              get_local $2
              get_local $5
              if $_7 (result i32)
                get_local $3
              else
                get_local $2
              end ;; $_7
              tee_local $4
              i32.sub
              set_local $2
              get_local $0
              get_local $7
              get_local $4
              i32.const 0
              call $_wcsrtombs
              tee_local $9
              i32.const -1
              i32.eq
              br_if $while-out
              get_local $3
              get_local $0
              get_local $10
              i32.eq
              tee_local $12
              if $_8 (result i32)
                i32.const 0
              else
                get_local $9
              end ;; $_8
              tee_local $4
              i32.sub
              set_local $5
              get_local $12
              i32.eqz
              if $_9
                get_local $0
                get_local $9
                i32.add
                set_local $0
              end ;; $_9
              get_local $9
              get_local $6
              i32.add
              set_local $6
              get_local $6
              get_local $3
              get_local $4
              i32.ne
              get_local $7
              i32.load
              tee_local $4
              i32.const 0
              i32.ne
              i32.and
              i32.eqz
              br_if $label$break$L1
              drop
              get_local $5
              set_local $3
              br $while-in
            end ;; $while-out
          end ;; $while-in
          i32.const 0
          set_local $5
          get_local $7
          i32.load
          set_local $4
          i32.const -1
        end ;; $_4
      else
        block $_10 (result i32)
          get_local $3
          set_local $5
          i32.const 0
        end ;; $_10
      end ;; $_3
    end ;; $label$break$L1
    set_local $3
    block $label$break$L8
      get_local $4
      if $_11
        get_local $5
        i32.const 0
        i32.ne
        get_local $2
        i32.const 0
        i32.ne
        i32.and
        if $_12
          block $_13
            loop $while-in2
              block $while-out1
                get_local $0
                get_local $4
                i32.load
                i32.const 0
                call $_wcrtomb
                tee_local $6
                i32.const 1
                i32.add
                i32.const 2
                i32.lt_u
                if $if
                  block $block
                    get_local $6
                    set_local $0
                    br $while-out1
                  end ;; $block
                end ;; $if
                get_local $7
                get_local $7
                i32.load
                i32.const 4
                i32.add
                tee_local $4
                i32.store
                get_local $3
                i32.const 1
                i32.add
                set_local $3
                get_local $5
                get_local $6
                i32.ne
                get_local $2
                i32.const -1
                i32.add
                tee_local $2
                i32.const 0
                i32.ne
                i32.and
                i32.eqz
                br_if $label$break$L8
                get_local $5
                get_local $6
                i32.sub
                set_local $5
                get_local $0
                get_local $6
                i32.add
                set_local $0
                br $while-in2
              end ;; $while-out1
            end ;; $while-in2
            get_local $0
            if $if_1
              i32.const -1
              set_local $3
            else
              get_local $7
              i32.const 0
              i32.store
            end ;; $if_1
          end ;; $_13
        end ;; $_12
      end ;; $_11
    end ;; $label$break$L8
    get_local $11
    if $if_2
      get_local $1
      get_local $7
      i32.load
      i32.store
    end ;; $if_2
    get_local $8
    set_global $STACKTOP
    get_local $3
    )
  
  (func $__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw (type $_8)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (param $8 i32)
    (param $9 i32)
    (result i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    block $label$break$L6 (result i32)
      block $__rjti$0
        get_local $3
        i32.load
        tee_local $10
        get_local $2
        i32.eq
        tee_local $12
        i32.eqz
        br_if $__rjti$0
        get_local $9
        i32.load offset=96
        get_local $0
        i32.eq
        tee_local $11
        i32.eqz
        if $_1
          get_local $9
          i32.load offset=100
          get_local $0
          i32.ne
          br_if $__rjti$0
        end ;; $_1
        get_local $3
        get_local $2
        i32.const 1
        i32.add
        i32.store
        get_local $2
        get_local $11
        if $_2 (result i32)
          i32.const 43
        else
          i32.const 45
        end ;; $_2
        i32.store8
        get_local $4
        i32.const 0
        i32.store
        i32.const 0
        br $label$break$L6
      end ;; $__rjti$0
      get_local $6
      i32.load8_s offset=11
      set_local $11
      get_local $0
      get_local $5
      i32.eq
      if $_3 (result i32)
        get_local $11
        i32.const 0
        i32.lt_s
        if $_4 (result i32)
          get_local $6
          i32.load offset=4
        else
          get_local $11
          i32.const 255
          i32.and
        end ;; $_4
      else
        i32.const 0
      end ;; $_3
      if $_5
        block $_6
          i32.const 0
          get_local $8
          i32.load
          tee_local $0
          get_local $7
          i32.sub
          i32.const 160
          i32.ge_s
          br_if $label$break$L6
          drop
          get_local $4
          i32.load
          set_local $1
          get_local $8
          get_local $0
          i32.const 4
          i32.add
          i32.store
          get_local $0
          get_local $1
          i32.store
          get_local $4
          i32.const 0
          i32.store
          i32.const 0
          br $label$break$L6
        end ;; $_6
      end ;; $_5
      get_local $9
      i32.const 104
      i32.add
      set_local $6
      get_local $9
      set_local $5
      loop $while-in
        block $while-out
          get_local $5
          get_local $6
          i32.eq
          if $_7
            block $_8
              get_local $6
              set_local $5
              br $while-out
            end ;; $_8
          end ;; $_7
          get_local $5
          i32.load
          get_local $0
          i32.ne
          if $_9
            block $_10
              get_local $5
              i32.const 4
              i32.add
              set_local $5
              br $while-in
            end ;; $_10
          end ;; $_9
        end ;; $while-out
      end ;; $while-in
      get_local $5
      get_local $9
      i32.sub
      tee_local $5
      i32.const 2
      i32.shr_s
      set_local $0
      get_local $5
      i32.const 92
      i32.gt_s
      if $_11 (result i32)
        i32.const -1
      else
        block $_12 (result i32)
          block $switch-default
            block $switch-case2
              block $switch-case
                get_local $1
                i32.const 8
                i32.sub
                br_table
                  $switch-case $switch-default $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case2
                  $switch-default ;; default
              end ;; $switch-case
              i32.const -1
              get_local $0
              get_local $1
              i32.ge_s
              br_if $label$break$L6
              drop
              br $switch-default
            end ;; $switch-case2
            get_local $5
            i32.const 88
            i32.ge_s
            if $if
              block $block
                i32.const -1
                get_local $12
                br_if $label$break$L6
                drop
                i32.const -1
                get_local $10
                get_local $2
                i32.sub
                i32.const 3
                i32.ge_s
                br_if $label$break$L6
                drop
                i32.const -1
                get_local $10
                i32.const -1
                i32.add
                i32.load8_s
                i32.const 48
                i32.ne
                br_if $label$break$L6
                drop
                get_local $4
                i32.const 0
                i32.store
                get_local $0
                i32.const 13937
                i32.add
                i32.load8_s
                set_local $0
                get_local $3
                get_local $10
                i32.const 1
                i32.add
                i32.store
                get_local $10
                get_local $0
                i32.store8
                i32.const 0
                br $label$break$L6
              end ;; $block
            end ;; $if
          end ;; $switch-default
          get_local $0
          i32.const 13937
          i32.add
          i32.load8_s
          set_local $0
          get_local $3
          get_local $10
          i32.const 1
          i32.add
          i32.store
          get_local $10
          get_local $0
          i32.store8
          get_local $4
          get_local $4
          i32.load
          i32.const 1
          i32.add
          i32.store
          i32.const 0
        end ;; $_12
      end ;; $_11
    end ;; $label$break$L6
    tee_local $0
    )
  
  (func $__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_ (type $_8)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (param $8 i32)
    (param $9 i32)
    (result i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    block $label$break$L6 (result i32)
      block $__rjti$0
        get_local $3
        i32.load
        tee_local $10
        get_local $2
        i32.eq
        tee_local $12
        i32.eqz
        br_if $__rjti$0
        get_local $9
        i32.load8_u offset=24
        get_local $0
        i32.const 255
        i32.and
        i32.eq
        tee_local $11
        i32.eqz
        if $_1
          get_local $9
          i32.load8_u offset=25
          get_local $0
          i32.const 255
          i32.and
          i32.ne
          br_if $__rjti$0
        end ;; $_1
        get_local $3
        get_local $2
        i32.const 1
        i32.add
        i32.store
        get_local $2
        get_local $11
        if $_2 (result i32)
          i32.const 43
        else
          i32.const 45
        end ;; $_2
        i32.store8
        get_local $4
        i32.const 0
        i32.store
        i32.const 0
        br $label$break$L6
      end ;; $__rjti$0
      get_local $6
      i32.load8_s offset=11
      set_local $11
      get_local $0
      i32.const 255
      i32.and
      get_local $5
      i32.const 255
      i32.and
      i32.eq
      if $_3 (result i32)
        get_local $11
        i32.const 0
        i32.lt_s
        if $_4 (result i32)
          get_local $6
          i32.load offset=4
        else
          get_local $11
          i32.const 255
          i32.and
        end ;; $_4
      else
        i32.const 0
      end ;; $_3
      if $_5
        block $_6
          i32.const 0
          get_local $8
          i32.load
          tee_local $0
          get_local $7
          i32.sub
          i32.const 160
          i32.ge_s
          br_if $label$break$L6
          drop
          get_local $4
          i32.load
          set_local $1
          get_local $8
          get_local $0
          i32.const 4
          i32.add
          i32.store
          get_local $0
          get_local $1
          i32.store
          get_local $4
          i32.const 0
          i32.store
          i32.const 0
          br $label$break$L6
        end ;; $_6
      end ;; $_5
      get_local $9
      i32.const 26
      i32.add
      set_local $6
      get_local $9
      set_local $5
      loop $while-in
        block $while-out
          get_local $5
          get_local $6
          i32.eq
          if $_7
            block $_8
              get_local $6
              set_local $5
              br $while-out
            end ;; $_8
          end ;; $_7
          get_local $5
          i32.load8_u
          get_local $0
          i32.const 255
          i32.and
          i32.ne
          if $_9
            block $_10
              get_local $5
              i32.const 1
              i32.add
              set_local $5
              br $while-in
            end ;; $_10
          end ;; $_9
        end ;; $while-out
      end ;; $while-in
      get_local $5
      get_local $9
      i32.sub
      tee_local $0
      i32.const 23
      i32.gt_s
      if $_11 (result i32)
        i32.const -1
      else
        block $_12 (result i32)
          block $switch-default
            block $switch-case2
              block $switch-case
                get_local $1
                i32.const 8
                i32.sub
                br_table
                  $switch-case $switch-default $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case2
                  $switch-default ;; default
              end ;; $switch-case
              i32.const -1
              get_local $0
              get_local $1
              i32.ge_s
              br_if $label$break$L6
              drop
              br $switch-default
            end ;; $switch-case2
            get_local $0
            i32.const 22
            i32.ge_s
            if $if
              block $block
                i32.const -1
                get_local $12
                br_if $label$break$L6
                drop
                i32.const -1
                get_local $10
                get_local $2
                i32.sub
                i32.const 3
                i32.ge_s
                br_if $label$break$L6
                drop
                i32.const -1
                get_local $10
                i32.const -1
                i32.add
                i32.load8_s
                i32.const 48
                i32.ne
                br_if $label$break$L6
                drop
                get_local $4
                i32.const 0
                i32.store
                get_local $0
                i32.const 13937
                i32.add
                i32.load8_s
                set_local $0
                get_local $3
                get_local $10
                i32.const 1
                i32.add
                i32.store
                get_local $10
                get_local $0
                i32.store8
                i32.const 0
                br $label$break$L6
              end ;; $block
            end ;; $if
          end ;; $switch-default
          get_local $0
          i32.const 13937
          i32.add
          i32.load8_s
          set_local $0
          get_local $3
          get_local $10
          i32.const 1
          i32.add
          i32.store
          get_local $10
          get_local $0
          i32.store8
          get_local $4
          get_local $4
          i32.load
          i32.const 1
          i32.add
          i32.store
          i32.const 0
        end ;; $_12
      end ;; $_11
    end ;; $label$break$L6
    tee_local $0
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 64
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 48
    i32.add
    set_local $8
    get_local $6
    i32.const 24
    i32.add
    set_local $7
    get_local $6
    i32.const 20
    i32.add
    set_local $11
    get_local $6
    i32.const 16
    i32.add
    set_local $12
    get_local $6
    i32.const 12
    i32.add
    set_local $13
    get_local $6
    i32.const 8
    i32.add
    set_local $9
    get_local $6
    i32.const 4
    i32.add
    set_local $14
    get_local $6
    set_local $10
    get_local $3
    i32.load offset=4
    i32.const 1
    i32.and
    if $_1
      block $_2
        get_local $9
        get_local $3
        call $__ZNKSt3__28ios_base6getlocEv
        tee_local $0
        i32.store
        get_local $9
        i32.const 19240
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        set_local $9
        get_local $0
        call $__ZNSt3__214__shared_count16__release_sharedEv
        drop
        get_local $14
        get_local $3
        call $__ZNKSt3__28ios_base6getlocEv
        tee_local $0
        i32.store
        get_local $14
        i32.const 19248
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        set_local $3
        get_local $0
        call $__ZNSt3__214__shared_count16__release_sharedEv
        drop
        get_local $7
        get_local $3
        get_local $3
        i32.load
        i32.load offset=24
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $7
        i32.const 12
        i32.add
        get_local $3
        get_local $3
        i32.load
        i32.load offset=28
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $10
        get_local $2
        i32.load
        i32.store
        get_local $8
        get_local $10
        i32.load
        i32.store
        get_local $5
        get_local $1
        get_local $8
        get_local $7
        get_local $7
        i32.const 24
        i32.add
        get_local $9
        get_local $4
        i32.const 1
        call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb
        get_local $7
        i32.eq
        i32.store8
        get_local $1
        i32.load
        set_local $0
        get_local $7
        i32.const 12
        i32.add
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $7
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
      end ;; $_2
    else
      block $_3
        get_local $11
        i32.const -1
        i32.store
        get_local $0
        i32.load
        i32.load offset=16
        set_local $10
        get_local $12
        get_local $1
        i32.load
        i32.store
        get_local $13
        get_local $2
        i32.load
        i32.store
        get_local $7
        get_local $12
        i32.load
        i32.store
        get_local $8
        get_local $13
        i32.load
        i32.store
        get_local $1
        get_local $0
        get_local $7
        get_local $8
        get_local $3
        get_local $4
        get_local $11
        get_local $10
        i32.const 63
        i32.and
        i32.const 240
        i32.add
        call_indirect (type $FUNCSIG$iiiiiii)
        tee_local $0
        i32.store
        block $switch
          block $switch-default
            block $switch-case0
              block $switch-case
                get_local $11
                i32.load
                br_table
                  $switch-case $switch-case0
                  $switch-default ;; default
              end ;; $switch-case
              get_local $5
              i32.const 0
              i32.store8
              br $switch
            end ;; $switch-case0
            get_local $5
            i32.const 1
            i32.store8
            br $switch
          end ;; $switch-default
          get_local $5
          i32.const 1
          i32.store8
          get_local $4
          i32.const 4
          i32.store
        end ;; $switch
      end ;; $_3
    end ;; $_1
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 64
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 48
    i32.add
    set_local $8
    get_local $6
    i32.const 24
    i32.add
    set_local $7
    get_local $6
    i32.const 20
    i32.add
    set_local $11
    get_local $6
    i32.const 16
    i32.add
    set_local $12
    get_local $6
    i32.const 12
    i32.add
    set_local $13
    get_local $6
    i32.const 8
    i32.add
    set_local $9
    get_local $6
    i32.const 4
    i32.add
    set_local $14
    get_local $6
    set_local $10
    get_local $3
    i32.load offset=4
    i32.const 1
    i32.and
    if $_1
      block $_2
        get_local $9
        get_local $3
        call $__ZNKSt3__28ios_base6getlocEv
        tee_local $0
        i32.store
        get_local $9
        i32.const 19208
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        set_local $9
        get_local $0
        call $__ZNSt3__214__shared_count16__release_sharedEv
        drop
        get_local $14
        get_local $3
        call $__ZNKSt3__28ios_base6getlocEv
        tee_local $0
        i32.store
        get_local $14
        i32.const 19220
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        set_local $3
        get_local $0
        call $__ZNSt3__214__shared_count16__release_sharedEv
        drop
        get_local $7
        get_local $3
        get_local $3
        i32.load
        i32.load offset=24
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $7
        i32.const 12
        i32.add
        get_local $3
        get_local $3
        i32.load
        i32.load offset=28
        i32.const 63
        i32.and
        i32.const 176
        i32.add
        call_indirect (type $FUNCSIG$vii)
        get_local $10
        get_local $2
        i32.load
        i32.store
        get_local $8
        get_local $10
        i32.load
        i32.store
        get_local $5
        get_local $1
        get_local $8
        get_local $7
        get_local $7
        i32.const 24
        i32.add
        get_local $9
        get_local $4
        i32.const 1
        call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb
        get_local $7
        i32.eq
        i32.store8
        get_local $1
        i32.load
        set_local $0
        get_local $7
        i32.const 12
        i32.add
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
        get_local $7
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
      end ;; $_2
    else
      block $_3
        get_local $11
        i32.const -1
        i32.store
        get_local $0
        i32.load
        i32.load offset=16
        set_local $10
        get_local $12
        get_local $1
        i32.load
        i32.store
        get_local $13
        get_local $2
        i32.load
        i32.store
        get_local $7
        get_local $12
        i32.load
        i32.store
        get_local $8
        get_local $13
        i32.load
        i32.store
        get_local $1
        get_local $0
        get_local $7
        get_local $8
        get_local $3
        get_local $4
        get_local $11
        get_local $10
        i32.const 63
        i32.and
        i32.const 240
        i32.add
        call_indirect (type $FUNCSIG$iiiiiii)
        tee_local $0
        i32.store
        block $switch
          block $switch-default
            block $switch-case0
              block $switch-case
                get_local $11
                i32.load
                br_table
                  $switch-case $switch-case0
                  $switch-default ;; default
              end ;; $switch-case
              get_local $5
              i32.const 0
              i32.store8
              br $switch
            end ;; $switch-case0
            get_local $5
            i32.const 1
            i32.store8
            br $switch
          end ;; $switch-default
          get_local $5
          i32.const 1
          i32.store8
          get_local $4
          i32.const 4
          i32.store
        end ;; $switch
      end ;; $_3
    end ;; $_1
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $_memchr (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    get_local $1
    i32.const 255
    i32.and
    set_local $5
    block $label$break$L8
      block $__rjti$2
        block $__rjti$1
          get_local $2
          i32.const 0
          i32.ne
          tee_local $3
          get_local $0
          i32.const 3
          i32.and
          i32.const 0
          i32.ne
          i32.and
          if $_1
            block $_2
              get_local $1
              i32.const 255
              i32.and
              set_local $4
              loop $while-in
                get_local $0
                i32.load8_u
                get_local $4
                i32.eq
                br_if $__rjti$2
                get_local $2
                i32.const -1
                i32.add
                tee_local $2
                i32.const 0
                i32.ne
                tee_local $3
                get_local $0
                i32.const 1
                i32.add
                tee_local $0
                i32.const 3
                i32.and
                i32.const 0
                i32.ne
                i32.and
                br_if $while-in
                br $__rjti$1
              end ;; $while-in
            end ;; $_2
          end ;; $_1
        end ;; $__rjti$1
        get_local $3
        br_if $__rjti$2
        i32.const 0
        set_local $2
        br $label$break$L8
      end ;; $__rjti$2
      get_local $0
      i32.load8_u
      get_local $1
      i32.const 255
      i32.and
      tee_local $4
      i32.ne
      if $_3
        block $_4
          get_local $5
          i32.const 16843009
          i32.mul
          set_local $3
          block $__rjto$0
            block $__rjti$0
              get_local $2
              i32.const 3
              i32.le_u
              br_if $__rjti$0
              loop $while-in3
                get_local $0
                i32.load
                get_local $3
                i32.xor
                tee_local $1
                i32.const -2139062144
                i32.and
                i32.const -2139062144
                i32.xor
                get_local $1
                i32.const -16843009
                i32.add
                i32.and
                i32.eqz
                if $_5
                  block $_6
                    get_local $0
                    i32.const 4
                    i32.add
                    set_local $0
                    get_local $2
                    i32.const -4
                    i32.add
                    tee_local $2
                    i32.const 3
                    i32.gt_u
                    br_if $while-in3
                    br $__rjti$0
                  end ;; $_6
                end ;; $_5
              end ;; $while-in3
              br $__rjto$0
            end ;; $__rjti$0
            get_local $2
            i32.eqz
            if $_7
              block $_8
                i32.const 0
                set_local $2
                br $label$break$L8
              end ;; $_8
            end ;; $_7
          end ;; $__rjto$0
          loop $while-in5
            get_local $0
            i32.load8_u
            get_local $4
            i32.eq
            br_if $label$break$L8
            get_local $0
            i32.const 1
            i32.add
            set_local $0
            get_local $2
            i32.const -1
            i32.add
            tee_local $2
            br_if $while-in5
            i32.const 0
            set_local $2
          end ;; $while-in5
        end ;; $_4
      end ;; $_3
    end ;; $label$break$L8
    get_local $2
    if $if (result i32)
      get_local $0
    else
      i32.const 0
    end ;; $if
    )
  
  (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    get_local $1
    i32.const -17
    i32.gt_u
    if $_1
      get_local $0
      call $__ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv
    end ;; $_1
    get_local $0
    i32.const 11
    i32.add
    tee_local $8
    i32.load8_s
    tee_local $4
    i32.const 0
    i32.lt_s
    tee_local $2
    if $_2 (result i32)
      block $_3 (result i32)
        get_local $0
        i32.load offset=4
        set_local $5
        get_local $0
        i32.load offset=8
        i32.const 2147483647
        i32.and
        i32.const -1
        i32.add
      end ;; $_3
    else
      block $_4 (result i32)
        get_local $4
        i32.const 255
        i32.and
        set_local $5
        i32.const 10
      end ;; $_4
    end ;; $_2
    set_local $3
    get_local $5
    get_local $1
    i32.gt_u
    if $_5 (result i32)
      get_local $5
      tee_local $1
    else
      get_local $1
    end ;; $_5
    i32.const 11
    i32.lt_u
    if $_6 (result i32)
      i32.const 10
    else
      get_local $1
      i32.const 16
      i32.add
      i32.const -16
      i32.and
      i32.const -1
      i32.add
    end ;; $_6
    tee_local $6
    get_local $3
    i32.ne
    if $_7
      block $_8
        block $_9 (result i32)
          block $__rjto$1
            get_local $6
            i32.const 10
            i32.eq
            if $__rjti$1
              block $block
                get_local $0
                i32.load
                set_local $3
                get_local $2
                if $if
                  block $block_1
                    get_local $0
                    set_local $1
                    i32.const 0
                    set_local $2
                  end ;; $block_1
                else
                  block $block_2
                    get_local $0
                    set_local $1
                    i32.const 0
                    set_local $2
                    i32.const 1
                    set_local $7
                    br $__rjto$1
                  end ;; $block_2
                end ;; $if
              end ;; $block
            else
              block $block_3
                get_local $6
                i32.const 1
                i32.add
                call $__Znwj
                set_local $1
                get_local $2
                if $if_1
                  block $block_4
                    i32.const 1
                    set_local $2
                    get_local $0
                    i32.load
                    set_local $3
                  end ;; $block_4
                else
                  block $block_5
                    i32.const 1
                    set_local $2
                    get_local $0
                    set_local $3
                    i32.const 0
                    set_local $7
                    br $__rjto$1
                  end ;; $block_5
                end ;; $if_1
              end ;; $block_3
            end ;; $__rjti$1
            i32.const 1
            set_local $7
            get_local $0
            i32.load offset=4
            br $_9
          end ;; $__rjto$1
          get_local $4
          i32.const 255
          i32.and
        end ;; $_9
        tee_local $4
        i32.const 1
        i32.add
        tee_local $4
        if $if_2
          get_local $1
          get_local $3
          get_local $4
          call $_memcpy
          drop
        end ;; $if_2
        get_local $7
        if $if_3
          get_local $3
          call $__ZdlPv
        end ;; $if_3
        get_local $2
        if $if_4
          block $block_6
            get_local $0
            get_local $6
            i32.const 1
            i32.add
            i32.const -2147483648
            i32.or
            i32.store offset=8
            get_local $0
            get_local $5
            i32.store offset=4
            get_local $0
            get_local $1
            i32.store
          end ;; $block_6
        else
          get_local $8
          get_local $5
          i32.store8
        end ;; $if_4
      end ;; $_8
    end ;; $_7
    )
  
  (func $__ZNSt3__28ios_base4InitC2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    i32.const 18840
    i32.const 2816
    i32.load
    tee_local $0
    i32.const 18896
    call $__ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t
    i32.const 18160
    i32.const 6436
    i32.store
    i32.const 18168
    i32.const 6456
    i32.store
    i32.const 18164
    i32.const 0
    i32.store
    i32.const 18168
    i32.const 18840
    call $__ZNSt3__28ios_base4initEPv
    i32.const 18240
    i32.const 0
    i32.store
    i32.const 18244
    i32.const -1
    i32.store
    i32.const 18904
    get_local $0
    i32.const 18960
    call $__ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t
    i32.const 18248
    i32.const 6476
    i32.store
    i32.const 18256
    i32.const 6496
    i32.store
    i32.const 18252
    i32.const 0
    i32.store
    i32.const 18256
    i32.const 18904
    call $__ZNSt3__28ios_base4initEPv
    i32.const 18328
    i32.const 0
    i32.store
    i32.const 18332
    i32.const -1
    i32.store
    i32.const 18968
    i32.const 2932
    i32.load
    tee_local $0
    i32.const 19016
    call $__ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t
    i32.const 18336
    i32.const 6516
    i32.store
    i32.const 18340
    i32.const 6536
    i32.store
    i32.const 18340
    i32.const 18968
    call $__ZNSt3__28ios_base4initEPv
    i32.const 18412
    i32.const 0
    i32.store
    i32.const 18416
    i32.const -1
    i32.store
    i32.const 19024
    get_local $0
    i32.const 19072
    call $__ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t
    i32.const 18420
    i32.const 6556
    i32.store
    i32.const 18424
    i32.const 6576
    i32.store
    i32.const 18424
    i32.const 19024
    call $__ZNSt3__28ios_base4initEPv
    i32.const 18496
    i32.const 0
    i32.store
    i32.const 18500
    i32.const -1
    i32.store
    i32.const 19080
    i32.const 2700
    i32.load
    tee_local $0
    i32.const 19128
    call $__ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t
    i32.const 18504
    i32.const 6516
    i32.store
    i32.const 18508
    i32.const 6536
    i32.store
    i32.const 18508
    i32.const 19080
    call $__ZNSt3__28ios_base4initEPv
    i32.const 18580
    i32.const 0
    i32.store
    i32.const 18584
    i32.const -1
    i32.store
    i32.const 18504
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.const 18528
    i32.add
    i32.load
    set_local $1
    i32.const 18672
    i32.const 6516
    i32.store
    i32.const 18676
    i32.const 6536
    i32.store
    i32.const 18676
    get_local $1
    call $__ZNSt3__28ios_base4initEPv
    i32.const 18748
    i32.const 0
    i32.store
    i32.const 18752
    i32.const -1
    i32.store
    i32.const 19136
    get_local $0
    i32.const 19184
    call $__ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t
    i32.const 18588
    i32.const 6556
    i32.store
    i32.const 18592
    i32.const 6576
    i32.store
    i32.const 18592
    i32.const 19136
    call $__ZNSt3__28ios_base4initEPv
    i32.const 18664
    i32.const 0
    i32.store
    i32.const 18668
    i32.const -1
    i32.store
    i32.const 18588
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.const 18612
    i32.add
    i32.load
    set_local $0
    i32.const 18756
    i32.const 6556
    i32.store
    i32.const 18760
    i32.const 6576
    i32.store
    i32.const 18760
    get_local $0
    call $__ZNSt3__28ios_base4initEPv
    i32.const 18832
    i32.const 0
    i32.store
    i32.const 18836
    i32.const -1
    i32.store
    i32.const 18160
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.const 18232
    i32.add
    i32.const 18336
    i32.store
    i32.const 18248
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.const 18320
    i32.add
    i32.const 18420
    i32.store
    i32.const 18504
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.const 18508
    i32.add
    tee_local $0
    get_local $0
    i32.load
    i32.const 8192
    i32.or
    i32.store
    i32.const 18588
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.const 18592
    i32.add
    tee_local $0
    get_local $0
    i32.load
    i32.const 8192
    i32.or
    i32.store
    i32.const 18504
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.const 18576
    i32.add
    i32.const 18336
    i32.store
    i32.const 18588
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.const 18660
    i32.add
    i32.const 18420
    i32.store
    )
  
  (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $7
    i32.const 8
    i32.add
    set_local $5
    get_local $7
    i32.const 4
    i32.add
    set_local $8
    get_local $7
    set_local $6
    get_local $2
    i32.load offset=4
    i32.const 1
    i32.and
    if $_1
      block $_2
        get_local $6
        get_local $2
        call $__ZNKSt3__28ios_base6getlocEv
        tee_local $2
        i32.store
        get_local $6
        i32.const 19248
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        set_local $0
        get_local $2
        call $__ZNSt3__214__shared_count16__release_sharedEv
        drop
        get_local $0
        i32.load
        set_local $2
        get_local $4
        if $_3
          get_local $5
          get_local $0
          get_local $2
          i32.load offset=24
          i32.const 63
          i32.and
          i32.const 176
          i32.add
          call_indirect (type $FUNCSIG$vii)
        else
          get_local $5
          get_local $0
          get_local $2
          i32.load offset=28
          i32.const 63
          i32.and
          i32.const 176
          i32.add
          call_indirect (type $FUNCSIG$vii)
        end ;; $_3
        get_local $5
        i32.const 4
        i32.add
        set_local $6
        get_local $5
        i32.const 11
        i32.add
        tee_local $8
        i32.load8_s
        tee_local $4
        set_local $2
        get_local $5
        i32.load
        tee_local $0
        set_local $3
        get_local $4
        i32.const 0
        i32.ge_s
        if $_4
          get_local $5
          set_local $0
        end ;; $_4
        loop $while-in
          get_local $0
          get_local $2
          i32.const 24
          i32.shl
          i32.const 24
          i32.shr_s
          i32.const 0
          i32.lt_s
          tee_local $4
          if $if (result i32)
            get_local $3
          else
            get_local $5
          end ;; $if
          get_local $4
          if $if_1 (result i32)
            get_local $6
            i32.load
          else
            get_local $2
            i32.const 255
            i32.and
          end ;; $if_1
          i32.const 2
          i32.shl
          i32.add
          i32.ne
          if $if_2
            block $block
              get_local $0
              i32.load
              set_local $2
              get_local $1
              i32.load
              tee_local $3
              if $if_3
                block $block_1
                  get_local $3
                  i32.const 24
                  i32.add
                  tee_local $9
                  i32.load
                  tee_local $4
                  get_local $3
                  i32.load offset=28
                  i32.eq
                  if $if_4
                    get_local $3
                    get_local $2
                    get_local $3
                    i32.load
                    i32.load offset=52
                    i32.const 15
                    i32.and
                    i32.const 413
                    i32.add
                    call_indirect (type $FUNCSIG$iii)
                    set_local $2
                  else
                    block $block_2
                      get_local $9
                      get_local $4
                      i32.const 4
                      i32.add
                      i32.store
                      get_local $4
                      get_local $2
                      i32.store
                    end ;; $block_2
                  end ;; $if_4
                  get_local $2
                  i32.const -1
                  i32.eq
                  if $if_5
                    get_local $1
                    i32.const 0
                    i32.store
                  end ;; $if_5
                end ;; $block_1
              end ;; $if_3
              get_local $8
              i32.load8_s
              set_local $2
              get_local $5
              i32.load
              set_local $3
              get_local $0
              i32.const 4
              i32.add
              set_local $0
              br $while-in
            end ;; $block
          end ;; $if_2
        end ;; $while-in
        get_local $1
        i32.load
        set_local $0
        get_local $5
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
      end ;; $_2
    else
      block $block_3
        get_local $0
        i32.load
        i32.load offset=24
        set_local $6
        get_local $8
        get_local $1
        i32.load
        i32.store
        get_local $5
        get_local $8
        i32.load
        i32.store
        get_local $0
        get_local $5
        get_local $2
        get_local $3
        get_local $4
        i32.const 1
        i32.and
        get_local $6
        i32.const 31
        i32.and
        i32.const 429
        i32.add
        call_indirect (type $FUNCSIG$iiiiii)
        set_local $0
      end ;; $block_3
    end ;; $_1
    get_local $7
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib (type $FUNCSIG$viiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    block $do-once
      get_local $0
      get_local $1
      i32.load offset=8
      i32.eq
      if $_1
        get_local $1
        i32.load offset=4
        get_local $2
        i32.eq
        if $_2
          get_local $1
          i32.const 28
          i32.add
          tee_local $0
          i32.load
          i32.const 1
          i32.ne
          if $_3
            get_local $0
            get_local $3
            i32.store
          end ;; $_3
        end ;; $_2
      else
        block $_4
          get_local $0
          get_local $1
          i32.load
          i32.ne
          if $_5
            block $_6
              get_local $0
              i32.load offset=8
              tee_local $0
              get_local $1
              get_local $2
              get_local $3
              get_local $4
              get_local $0
              i32.load
              i32.load offset=24
              i32.const 3
              i32.and
              i32.const 40
              i32.add
              call_indirect (type $FUNCSIG$viiiii)
              br $do-once
            end ;; $_6
          end ;; $_5
          get_local $1
          i32.load offset=16
          get_local $2
          i32.ne
          if $_7
            get_local $1
            i32.const 20
            i32.add
            tee_local $5
            i32.load
            get_local $2
            i32.ne
            if $_8
              block $_9
                get_local $1
                get_local $3
                i32.store offset=32
                get_local $1
                i32.const 44
                i32.add
                tee_local $3
                i32.load
                i32.const 4
                i32.eq
                br_if $do-once
                get_local $1
                i32.const 52
                i32.add
                tee_local $6
                i32.const 0
                i32.store8
                get_local $1
                i32.const 53
                i32.add
                tee_local $7
                i32.const 0
                i32.store8
                get_local $0
                i32.load offset=8
                tee_local $0
                get_local $1
                get_local $2
                get_local $2
                i32.const 1
                get_local $4
                get_local $0
                i32.load
                i32.load offset=20
                i32.const 7
                i32.and
                i32.const 405
                i32.add
                call_indirect (type $FUNCSIG$viiiiii)
                get_local $3
                block $__rjto$1 (result i32)
                  block $__rjti$1
                    get_local $7
                    i32.load8_s
                    if $if
                      get_local $6
                      i32.load8_s
                      if $if_1
                        br $__rjti$1
                      else
                        i32.const 1
                        set_local $0
                      end ;; $if_1
                    else
                      i32.const 0
                      set_local $0
                    end ;; $if
                    get_local $5
                    get_local $2
                    i32.store
                    get_local $1
                    i32.const 40
                    i32.add
                    tee_local $2
                    get_local $2
                    i32.load
                    i32.const 1
                    i32.add
                    i32.store
                    get_local $1
                    i32.load offset=36
                    i32.const 1
                    i32.eq
                    if $if_2
                      get_local $1
                      i32.load offset=24
                      i32.const 2
                      i32.eq
                      if $if_3
                        block $block
                          get_local $1
                          i32.const 1
                          i32.store8 offset=54
                          get_local $0
                          br_if $__rjti$1
                          i32.const 4
                          br $__rjto$1
                        end ;; $block
                      end ;; $if_3
                    end ;; $if_2
                    get_local $0
                    br_if $__rjti$1
                    i32.const 4
                    br $__rjto$1
                  end ;; $__rjti$1
                  i32.const 3
                end ;; $__rjto$1
                tee_local $0
                i32.store
                br $do-once
              end ;; $_9
            end ;; $_8
          end ;; $_7
          get_local $3
          i32.const 1
          i32.eq
          if $if_4
            get_local $1
            i32.const 1
            i32.store offset=32
          end ;; $if_4
        end ;; $_4
      end ;; $_1
    end ;; $do-once
    )
  
  (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $8
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $8
    i32.const 8
    i32.add
    set_local $5
    get_local $8
    i32.const 4
    i32.add
    set_local $7
    get_local $8
    set_local $6
    get_local $2
    i32.load offset=4
    i32.const 1
    i32.and
    if $_1
      block $_2
        get_local $6
        get_local $2
        call $__ZNKSt3__28ios_base6getlocEv
        tee_local $0
        i32.store
        get_local $6
        i32.const 19220
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        set_local $2
        get_local $0
        call $__ZNSt3__214__shared_count16__release_sharedEv
        drop
        get_local $2
        i32.load
        set_local $0
        get_local $4
        if $_3
          get_local $5
          get_local $2
          get_local $0
          i32.load offset=24
          i32.const 63
          i32.and
          i32.const 176
          i32.add
          call_indirect (type $FUNCSIG$vii)
        else
          get_local $5
          get_local $2
          get_local $0
          i32.load offset=28
          i32.const 63
          i32.and
          i32.const 176
          i32.add
          call_indirect (type $FUNCSIG$vii)
        end ;; $_3
        get_local $5
        i32.const 4
        i32.add
        set_local $4
        get_local $5
        i32.const 11
        i32.add
        tee_local $3
        i32.load8_s
        tee_local $0
        set_local $6
        get_local $0
        i32.const 0
        i32.lt_s
        if $_4 (result i32)
          get_local $5
          i32.load
        else
          get_local $5
        end ;; $_4
        set_local $0
        loop $while-in
          get_local $0
          get_local $6
          i32.const 24
          i32.shl
          i32.const 24
          i32.shr_s
          i32.const 0
          i32.lt_s
          tee_local $2
          if $_5 (result i32)
            get_local $5
            i32.load
          else
            get_local $5
          end ;; $_5
          get_local $2
          if $_6 (result i32)
            get_local $4
            i32.load
          else
            get_local $6
            i32.const 255
            i32.and
          end ;; $_6
          i32.add
          i32.ne
          if $_7
            block $_8
              get_local $0
              i32.load8_s
              set_local $7
              block $do-once
                get_local $1
                i32.load
                tee_local $9
                if $if
                  block $block
                    get_local $9
                    i32.const 24
                    i32.add
                    tee_local $2
                    i32.load
                    tee_local $6
                    get_local $9
                    i32.load offset=28
                    i32.ne
                    if $if_1
                      block $block_1
                        get_local $2
                        get_local $6
                        i32.const 1
                        i32.add
                        i32.store
                        get_local $6
                        get_local $7
                        i32.store8
                        br $do-once
                      end ;; $block_1
                    end ;; $if_1
                    get_local $9
                    get_local $7
                    i32.const 255
                    i32.and
                    get_local $9
                    i32.load
                    i32.load offset=52
                    i32.const 15
                    i32.and
                    i32.const 413
                    i32.add
                    call_indirect (type $FUNCSIG$iii)
                    i32.const -1
                    i32.eq
                    if $if_2
                      get_local $1
                      i32.const 0
                      i32.store
                    end ;; $if_2
                  end ;; $block
                end ;; $if
              end ;; $do-once
              get_local $3
              i32.load8_s
              set_local $6
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in
            end ;; $_8
          end ;; $_7
        end ;; $while-in
        get_local $1
        i32.load
        set_local $0
        get_local $5
        call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
      end ;; $_2
    else
      block $block_2
        get_local $0
        i32.load
        i32.load offset=24
        set_local $6
        get_local $7
        get_local $1
        i32.load
        i32.store
        get_local $5
        get_local $7
        i32.load
        i32.store
        get_local $0
        get_local $5
        get_local $2
        get_local $3
        get_local $4
        i32.const 1
        i32.and
        get_local $6
        i32.const 31
        i32.and
        i32.const 429
        i32.add
        call_indirect (type $FUNCSIG$iiiiii)
        set_local $0
      end ;; $block_2
    end ;; $_1
    get_local $8
    set_global $STACKTOP
    get_local $0
    )
  
  (func $_mbrtowc (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    set_local $4
    get_local $3
    if $_1 (result i32)
      get_local $3
    else
      i32.const 17648
    end ;; $_1
    tee_local $5
    i32.load
    set_local $3
    block $__rjto$1
      block $__rjti$1
        get_local $1
        if $_2
          block $_3
            get_local $0
            if $_4 (result i32)
              get_local $0
            else
              get_local $4
            end ;; $_4
            set_local $7
            get_local $2
            if $_5 (result i32)
              block $_6 (result i32)
                block $label$break$L11
                  block $__rjti$0
                    get_local $3
                    if $_7
                      block $_8
                        get_local $2
                        set_local $0
                        br $__rjti$0
                      end ;; $_8
                    else
                      block $_9
                        get_local $1
                        i32.load8_s
                        tee_local $3
                        i32.const 255
                        i32.and
                        set_local $0
                        get_local $3
                        i32.const -1
                        i32.gt_s
                        if $_10
                          block $_11
                            get_local $7
                            get_local $0
                            i32.store
                            get_local $3
                            i32.const 0
                            i32.ne
                            set_local $0
                            br $__rjto$1
                          end ;; $_11
                        end ;; $_10
                        get_local $0
                        i32.const -194
                        i32.add
                        tee_local $0
                        i32.const 50
                        i32.gt_u
                        br_if $__rjti$1
                        get_local $0
                        i32.const 2
                        i32.shl
                        i32.const 2496
                        i32.add
                        i32.load
                        set_local $3
                        get_local $2
                        i32.const -1
                        i32.add
                        tee_local $0
                        if $_12
                          block $_13
                            get_local $1
                            i32.const 1
                            i32.add
                            set_local $1
                            br $__rjti$0
                          end ;; $_13
                        end ;; $_12
                      end ;; $_9
                    end ;; $_7
                    br $label$break$L11
                  end ;; $__rjti$0
                  get_local $1
                  i32.load8_s
                  tee_local $4
                  i32.const 255
                  i32.and
                  i32.const 3
                  i32.shr_u
                  tee_local $8
                  i32.const -16
                  i32.add
                  get_local $8
                  get_local $3
                  i32.const 26
                  i32.shr_s
                  i32.add
                  i32.or
                  i32.const 7
                  i32.gt_u
                  br_if $__rjti$1
                  loop $while-in
                    block $while-out
                      get_local $1
                      i32.const 1
                      i32.add
                      set_local $1
                      get_local $0
                      i32.const -1
                      i32.add
                      set_local $0
                      get_local $4
                      i32.const 255
                      i32.and
                      i32.const -128
                      i32.add
                      get_local $3
                      i32.const 6
                      i32.shl
                      i32.or
                      tee_local $3
                      i32.const 0
                      i32.ge_s
                      br_if $while-out
                      get_local $0
                      i32.eqz
                      br_if $label$break$L11
                      get_local $1
                      i32.load8_s
                      tee_local $4
                      i32.const 192
                      i32.and
                      i32.const 128
                      i32.eq
                      br_if $while-in
                      br $__rjti$1
                    end ;; $while-out
                  end ;; $while-in
                  get_local $5
                  i32.const 0
                  i32.store
                  get_local $7
                  get_local $3
                  i32.store
                  get_local $2
                  get_local $0
                  i32.sub
                  set_local $0
                  br $__rjto$1
                end ;; $label$break$L11
                get_local $5
                get_local $3
                i32.store
                i32.const -2
              end ;; $_6
            else
              i32.const -2
            end ;; $_5
            set_local $0
          end ;; $_3
        else
          get_local $3
          if $if
            br $__rjti$1
          else
            i32.const 0
            set_local $0
          end ;; $if
        end ;; $_2
        br $__rjto$1
      end ;; $__rjti$1
      get_local $5
      i32.const 0
      i32.store
      call $___errno_location
      i32.const 84
      i32.store
      i32.const -1
      set_local $0
    end ;; $__rjto$1
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    get_local $1
    i32.const 1073741807
    i32.gt_u
    if $_1
      get_local $0
      call $__ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv
    end ;; $_1
    block $do-once
      get_local $0
      i32.const 8
      i32.add
      tee_local $6
      i32.const 3
      i32.add
      tee_local $8
      i32.load8_s
      tee_local $3
      i32.const 0
      i32.lt_s
      tee_local $7
      if $_2 (result i32)
        block $_3 (result i32)
          get_local $6
          i32.load
          i32.const 2147483647
          i32.and
          i32.const -1
          i32.add
          set_local $2
          get_local $0
          i32.load offset=4
        end ;; $_3
      else
        block $_4 (result i32)
          i32.const 1
          set_local $2
          get_local $3
          i32.const 255
          i32.and
        end ;; $_4
      end ;; $_2
      tee_local $4
      get_local $1
      i32.gt_u
      if $_5 (result i32)
        get_local $4
        tee_local $1
      else
        get_local $1
      end ;; $_5
      i32.const 2
      i32.lt_u
      if $_6 (result i32)
        i32.const 1
      else
        get_local $1
        i32.const 4
        i32.add
        i32.const -4
        i32.and
        i32.const -1
        i32.add
      end ;; $_6
      tee_local $5
      get_local $2
      i32.ne
      if $_7
        block $_8
          block $__rjti$2
            block $__rjti$1
              get_local $5
              i32.const 1
              i32.eq
              if $if
                block $block
                  get_local $0
                  i32.load
                  set_local $2
                  get_local $7
                  if $if_1
                    block $block_1
                      get_local $0
                      set_local $1
                      i32.const 0
                      set_local $3
                    end ;; $block_1
                  else
                    block $block_2
                      get_local $0
                      get_local $2
                      get_local $3
                      i32.const 255
                      i32.and
                      i32.const 1
                      i32.add
                      call $__ZNSt3__211char_traitsIwE4copyEPwPKwj
                      drop
                      get_local $2
                      call $__ZdlPv
                      br $__rjti$2
                    end ;; $block_2
                  end ;; $if_1
                end ;; $block
              else
                block $block_3
                  get_local $5
                  i32.const 1
                  i32.add
                  tee_local $1
                  i32.const 1073741823
                  i32.gt_u
                  if $if_2
                    i32.const 16218
                    i32.const 16255
                    i32.const 1734
                    i32.const 16332
                    call $___assert_fail
                  end ;; $if_2
                  get_local $1
                  i32.const 2
                  i32.shl
                  call $__Znwj
                  set_local $1
                  get_local $7
                  if $if_3
                    block $block_4
                      i32.const 1
                      set_local $3
                      get_local $0
                      i32.load
                      set_local $2
                    end ;; $block_4
                  else
                    block $block_5
                      get_local $1
                      get_local $0
                      get_local $3
                      i32.const 255
                      i32.and
                      i32.const 1
                      i32.add
                      call $__ZNSt3__211char_traitsIwE4copyEPwPKwj
                      drop
                      br $__rjti$1
                    end ;; $block_5
                  end ;; $if_3
                end ;; $block_3
              end ;; $if
              get_local $1
              get_local $2
              get_local $0
              i32.load offset=4
              i32.const 1
              i32.add
              call $__ZNSt3__211char_traitsIwE4copyEPwPKwj
              drop
              get_local $2
              call $__ZdlPv
              get_local $3
              i32.eqz
              br_if $__rjti$2
            end ;; $__rjti$1
            get_local $6
            get_local $5
            i32.const 1
            i32.add
            i32.const -2147483648
            i32.or
            i32.store
            get_local $0
            get_local $4
            i32.store offset=4
            get_local $0
            get_local $1
            i32.store
            br $do-once
          end ;; $__rjti$2
          get_local $8
          get_local $4
          i32.store8
        end ;; $_8
      end ;; $_7
    end ;; $do-once
    )
  
  (func $__ZNKSt3__220__time_get_c_storageIcE7__weeksEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    i32.const 16952
    i32.load8_s
    i32.eqz
    if $_1
      i32.const 16952
      call $___cxa_guard_acquire
      if $_2
        block $_3
          i32.const 16960
          i32.load8_s
          i32.eqz
          if $_4
            i32.const 16960
            call $___cxa_guard_acquire
            if $_5
              block $_6
                i32.const 19280
                set_local $0
                loop $do-in
                  get_local $0
                  i32.const 0
                  i32.store
                  get_local $0
                  i32.const 0
                  i32.store offset=4
                  get_local $0
                  i32.const 0
                  i32.store offset=8
                  i32.const 0
                  set_local $1
                  loop $while-in
                    get_local $1
                    i32.const 3
                    i32.ne
                    if $if
                      block $block
                        get_local $0
                        get_local $1
                        i32.const 2
                        i32.shl
                        i32.add
                        i32.const 0
                        i32.store
                        get_local $1
                        i32.const 1
                        i32.add
                        set_local $1
                        br $while-in
                      end ;; $block
                    end ;; $if
                  end ;; $while-in
                  get_local $0
                  i32.const 12
                  i32.add
                  tee_local $0
                  i32.const 19448
                  i32.ne
                  br_if $do-in
                end ;; $do-in
                i32.const 99
                i32.const 0
                get_global $___dso_handle
                call $___cxa_atexit
                drop
              end ;; $_6
            end ;; $_5
          end ;; $_4
          i32.const 19280
          i32.const 14459
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19292
          i32.const 14466
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19304
          i32.const 14473
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19316
          i32.const 14481
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19328
          i32.const 14491
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19340
          i32.const 14500
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19352
          i32.const 14507
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19364
          i32.const 14516
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19376
          i32.const 14520
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19388
          i32.const 14524
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19400
          i32.const 14528
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19412
          i32.const 14532
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19424
          i32.const 14536
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19436
          i32.const 14540
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19448
          i32.const 19280
          i32.store
        end ;; $_3
      end ;; $_2
    end ;; $_1
    i32.const 19448
    i32.load
    )
  
  (func $__ZNKSt3__220__time_get_c_storageIwE7__weeksEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    i32.const 17032
    i32.load8_s
    i32.eqz
    if $_1
      i32.const 17032
      call $___cxa_guard_acquire
      if $_2
        block $_3
          i32.const 17040
          i32.load8_s
          i32.eqz
          if $_4
            i32.const 17040
            call $___cxa_guard_acquire
            if $_5
              block $_6
                i32.const 20092
                set_local $0
                loop $do-in
                  get_local $0
                  i32.const 0
                  i32.store
                  get_local $0
                  i32.const 0
                  i32.store offset=4
                  get_local $0
                  i32.const 0
                  i32.store offset=8
                  i32.const 0
                  set_local $1
                  loop $while-in
                    get_local $1
                    i32.const 3
                    i32.ne
                    if $if
                      block $block
                        get_local $0
                        get_local $1
                        i32.const 2
                        i32.shl
                        i32.add
                        i32.const 0
                        i32.store
                        get_local $1
                        i32.const 1
                        i32.add
                        set_local $1
                        br $while-in
                      end ;; $block
                    end ;; $if
                  end ;; $while-in
                  get_local $0
                  i32.const 12
                  i32.add
                  tee_local $0
                  i32.const 20260
                  i32.ne
                  br_if $do-in
                end ;; $do-in
                i32.const 103
                i32.const 0
                get_global $___dso_handle
                call $___cxa_atexit
                drop
              end ;; $_6
            end ;; $_5
          end ;; $_4
          i32.const 20092
          i32.const 7496
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20104
          i32.const 7524
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20116
          i32.const 7552
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20128
          i32.const 7584
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20140
          i32.const 7624
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20152
          i32.const 7660
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20164
          i32.const 7688
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20176
          i32.const 7724
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20188
          i32.const 7740
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20200
          i32.const 7756
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20212
          i32.const 7772
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20224
          i32.const 7788
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20236
          i32.const 7804
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20248
          i32.const 7820
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20260
          i32.const 20092
          i32.store
        end ;; $_3
      end ;; $_2
    end ;; $_1
    i32.const 20260
    i32.load
    )
  
  (func $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    get_global $STACKTOP
    set_local $8
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.load
    tee_local $6
    i32.eqz
    if $_1
      block $_2
        get_local $8
        set_global $STACKTOP
        i32.const 0
        return
      end ;; $_2
    end ;; $_1
    get_local $4
    i32.const 12
    i32.add
    tee_local $11
    i32.load
    set_local $9
    get_local $2
    tee_local $4
    get_local $1
    tee_local $7
    i32.sub
    tee_local $10
    i32.const 0
    i32.gt_s
    if $_3
      get_local $6
      get_local $1
      get_local $10
      get_local $6
      i32.load
      i32.load offset=48
      i32.const 31
      i32.and
      i32.const 8
      i32.add
      call_indirect (type $FUNCSIG$iiii)
      get_local $10
      i32.ne
      if $_4
        block $_5
          get_local $0
          i32.const 0
          i32.store
          get_local $8
          set_global $STACKTOP
          i32.const 0
          return
        end ;; $_5
      end ;; $_4
    end ;; $_3
    get_local $8
    set_local $1
    block $do-once
      get_local $9
      get_local $3
      get_local $7
      i32.sub
      tee_local $7
      i32.gt_s
      if $if (result i32)
        get_local $9
        get_local $7
        i32.sub
      else
        i32.const 0
      end ;; $if
      tee_local $7
      i32.const 0
      i32.gt_s
      if $if_1
        block $block
          get_local $1
          i32.const 0
          i32.store
          get_local $1
          i32.const 0
          i32.store offset=4
          get_local $1
          i32.const 0
          i32.store offset=8
          get_local $1
          get_local $7
          get_local $5
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc
          get_local $6
          get_local $1
          i32.load8_s offset=11
          i32.const 0
          i32.lt_s
          if $if_2 (result i32)
            get_local $1
            i32.load
          else
            get_local $1
          end ;; $if_2
          get_local $7
          get_local $6
          i32.load
          i32.load offset=48
          i32.const 31
          i32.and
          i32.const 8
          i32.add
          call_indirect (type $FUNCSIG$iiii)
          get_local $7
          i32.eq
          if $if_3
            block $block_1
              get_local $1
              call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
              br $do-once
            end ;; $block_1
          end ;; $if_3
          get_local $0
          i32.const 0
          i32.store
          get_local $1
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
          get_local $8
          set_global $STACKTOP
          i32.const 0
          return
        end ;; $block
      end ;; $if_1
    end ;; $do-once
    get_local $3
    get_local $4
    i32.sub
    tee_local $1
    i32.const 0
    i32.gt_s
    if $if_4
      get_local $6
      get_local $2
      get_local $1
      get_local $6
      i32.load
      i32.load offset=48
      i32.const 31
      i32.and
      i32.const 8
      i32.add
      call_indirect (type $FUNCSIG$iiii)
      get_local $1
      i32.ne
      if $if_5
        block $block_2
          get_local $0
          i32.const 0
          i32.store
          get_local $8
          set_global $STACKTOP
          i32.const 0
          return
        end ;; $block_2
      end ;; $if_5
    end ;; $if_4
    get_local $11
    i32.const 0
    i32.store
    get_local $8
    set_global $STACKTOP
    get_local $6
    )
  
  (func $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    get_global $STACKTOP
    set_local $8
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $8
    set_local $7
    block $label$break$L1
      get_local $0
      i32.load
      tee_local $6
      if $if
        block $block
          get_local $4
          i32.const 12
          i32.add
          tee_local $11
          i32.load
          set_local $9
          get_local $2
          tee_local $4
          get_local $1
          tee_local $12
          i32.sub
          tee_local $13
          i32.const 2
          i32.shr_s
          set_local $10
          get_local $13
          i32.const 0
          i32.gt_s
          if $if_1
            get_local $6
            get_local $1
            get_local $10
            get_local $6
            i32.load
            i32.load offset=48
            i32.const 31
            i32.and
            i32.const 8
            i32.add
            call_indirect (type $FUNCSIG$iiii)
            get_local $10
            i32.ne
            if $if_2
              block $block_1
                get_local $0
                i32.const 0
                i32.store
                i32.const 0
                set_local $6
                br $label$break$L1
              end ;; $block_1
            end ;; $if_2
          end ;; $if_1
          get_local $9
          get_local $3
          get_local $12
          i32.sub
          i32.const 2
          i32.shr_s
          tee_local $1
          i32.gt_s
          if $if_3 (result i32)
            get_local $9
            get_local $1
            i32.sub
          else
            i32.const 0
          end ;; $if_3
          tee_local $1
          i32.const 0
          i32.gt_s
          if $if_4
            block $block_2
              get_local $7
              i32.const 0
              i32.store
              get_local $7
              i32.const 0
              i32.store offset=4
              get_local $7
              i32.const 0
              i32.store offset=8
              get_local $7
              get_local $1
              get_local $5
              call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw
              get_local $6
              get_local $7
              i32.load8_s offset=11
              i32.const 0
              i32.lt_s
              if $if_5 (result i32)
                get_local $7
                i32.load
              else
                get_local $7
              end ;; $if_5
              get_local $1
              get_local $6
              i32.load
              i32.load offset=48
              i32.const 31
              i32.and
              i32.const 8
              i32.add
              call_indirect (type $FUNCSIG$iiii)
              get_local $1
              i32.eq
              if $if_6
                get_local $7
                call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
              else
                block $block_3
                  get_local $0
                  i32.const 0
                  i32.store
                  get_local $7
                  call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
                  i32.const 0
                  set_local $6
                  br $label$break$L1
                end ;; $block_3
              end ;; $if_6
            end ;; $block_2
          end ;; $if_4
          get_local $3
          get_local $4
          i32.sub
          tee_local $3
          i32.const 2
          i32.shr_s
          set_local $1
          get_local $3
          i32.const 0
          i32.gt_s
          if $if_7
            get_local $6
            get_local $2
            get_local $1
            get_local $6
            i32.load
            i32.load offset=48
            i32.const 31
            i32.and
            i32.const 8
            i32.add
            call_indirect (type $FUNCSIG$iiii)
            get_local $1
            i32.ne
            if $if_8
              block $block_4
                get_local $0
                i32.const 0
                i32.store
                i32.const 0
                set_local $6
                br $label$break$L1
              end ;; $block_4
            end ;; $if_8
          end ;; $if_7
          get_local $11
          i32.const 0
          i32.store
        end ;; $block
      else
        i32.const 0
        set_local $6
      end ;; $if
    end ;; $label$break$L1
    get_local $8
    set_global $STACKTOP
    get_local $6
    )
  
  (func $___cxx_global_array_dtor_112 (type $FUNCSIG$vi)
    (param $0 i32)
    i32.const 20832
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20820
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20808
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20796
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20784
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20772
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20760
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20748
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20736
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20724
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20712
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20700
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20688
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20676
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20664
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20652
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20640
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20628
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20616
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20604
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20592
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20580
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20568
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20556
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    )
  
  (func $___cxx_global_array_dtor_109 (type $FUNCSIG$vi)
    (param $0 i32)
    i32.const 20020
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20008
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19996
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19984
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19972
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19960
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19948
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19936
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19924
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19912
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19900
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19888
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19876
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19864
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19852
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19840
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19828
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19816
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19804
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19792
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19780
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19768
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19756
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19744
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    )
  
  (func $___cxx_global_array_dtor_85 (type $FUNCSIG$vi)
    (param $0 i32)
    i32.const 20540
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20528
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20516
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20504
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20492
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20480
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20468
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20456
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20444
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20432
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20420
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20408
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20396
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20384
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20372
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20360
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20348
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20336
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20324
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20312
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20300
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20288
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20276
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20264
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    )
  
  (func $___cxx_global_array_dtor_61 (type $FUNCSIG$vi)
    (param $0 i32)
    i32.const 19728
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19716
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19704
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19692
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19680
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19668
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19656
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19644
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19632
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19620
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19608
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19596
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19584
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19572
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19560
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19548
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19536
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19524
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19512
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19500
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19488
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19476
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19464
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19452
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    )
  
  (func $___dynamic_cast (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    get_global $STACKTOP
    set_local $9
    get_global $STACKTOP
    i32.const 64
    i32.add
    set_global $STACKTOP
    get_local $0
    get_local $0
    i32.load
    tee_local $4
    i32.const -8
    i32.add
    i32.load
    i32.add
    set_local $5
    get_local $4
    i32.const -4
    i32.add
    i32.load
    set_local $6
    get_local $9
    tee_local $4
    get_local $2
    i32.store
    get_local $4
    get_local $0
    i32.store offset=4
    get_local $4
    get_local $1
    i32.store offset=8
    get_local $4
    get_local $3
    i32.store offset=12
    get_local $4
    i32.const 20
    i32.add
    set_local $3
    get_local $4
    i32.const 24
    i32.add
    set_local $10
    get_local $4
    i32.const 28
    i32.add
    set_local $11
    get_local $4
    i32.const 32
    i32.add
    set_local $12
    get_local $4
    i32.const 40
    i32.add
    set_local $13
    get_local $6
    get_local $2
    i32.eq
    set_local $1
    get_local $4
    i32.const 16
    i32.add
    tee_local $7
    tee_local $8
    i32.const 36
    i32.add
    set_local $0
    loop $do-in
      get_local $8
      i32.const 0
      i32.store
      get_local $8
      i32.const 4
      i32.add
      tee_local $8
      get_local $0
      i32.lt_s
      br_if $do-in
    end ;; $do-in
    get_local $7
    i32.const 0
    i32.store16 offset=36
    get_local $7
    i32.const 0
    i32.store8 offset=38
    block $label$break$L1
      get_local $1
      if $_1
        block $_2
          get_local $4
          i32.const 1
          i32.store offset=48
          get_local $2
          get_local $4
          get_local $5
          get_local $5
          i32.const 1
          i32.const 0
          get_local $2
          i32.load
          i32.load offset=20
          i32.const 7
          i32.and
          i32.const 405
          i32.add
          call_indirect (type $FUNCSIG$viiiiii)
          get_local $10
          i32.load
          i32.const 1
          i32.ne
          if $_3
            i32.const 0
            set_local $5
          end ;; $_3
        end ;; $_2
      else
        block $_4
          get_local $6
          get_local $4
          get_local $5
          i32.const 1
          i32.const 0
          get_local $6
          i32.load
          i32.load offset=24
          i32.const 3
          i32.and
          i32.const 40
          i32.add
          call_indirect (type $FUNCSIG$viiiii)
          block $switch
            block $switch-default
              block $switch-case0
                block $switch-case
                  get_local $4
                  i32.load offset=36
                  br_table
                    $switch-case $switch-case0
                    $switch-default ;; default
                end ;; $switch-case
                get_local $13
                i32.load
                i32.const 1
                i32.eq
                get_local $11
                i32.load
                i32.const 1
                i32.eq
                i32.and
                get_local $12
                i32.load
                i32.const 1
                i32.eq
                i32.and
                if $if (result i32)
                  get_local $3
                  i32.load
                else
                  i32.const 0
                end ;; $if
                set_local $5
                br $label$break$L1
              end ;; $switch-case0
              br $switch
            end ;; $switch-default
            i32.const 0
            set_local $5
            br $label$break$L1
          end ;; $switch
          get_local $10
          i32.load
          i32.const 1
          i32.ne
          if $if_1
            get_local $13
            i32.load
            i32.eqz
            get_local $11
            i32.load
            i32.const 1
            i32.eq
            i32.and
            get_local $12
            i32.load
            i32.const 1
            i32.eq
            i32.and
            i32.eqz
            if $if_2
              block $block
                i32.const 0
                set_local $5
                br $label$break$L1
              end ;; $block
            end ;; $if_2
          end ;; $if_1
          get_local $7
          i32.load
          set_local $5
        end ;; $_4
      end ;; $_1
    end ;; $label$break$L1
    get_local $9
    set_global $STACKTOP
    get_local $5
    )
  
  (func $__ZNSt3__211__stdoutbufIcE8overflowEi (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    get_global $STACKTOP
    set_local $3
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $3
    i32.const 16
    i32.add
    set_local $4
    get_local $3
    i32.const 8
    i32.add
    set_local $2
    get_local $3
    i32.const 4
    i32.add
    set_local $5
    get_local $3
    set_local $6
    block $__rjto$3
      block $__rjti$3
        get_local $1
        i32.const -1
        i32.eq
        tee_local $8
        br_if $__rjti$3
        get_local $2
        get_local $1
        i32.store8
        get_local $0
        i32.load8_s offset=44
        if $_1
          get_local $2
          i32.const 1
          i32.const 1
          get_local $0
          i32.load offset=32
          call $_fwrite
          i32.const 1
          i32.eq
          if $_2
            br $__rjti$3
          else
            block $_3
              i32.const -1
              set_local $1
              br $__rjto$3
            end ;; $_3
          end ;; $_2
        end ;; $_1
        get_local $5
        get_local $4
        i32.store
        get_local $2
        i32.const 1
        i32.add
        set_local $9
        get_local $0
        i32.const 36
        i32.add
        set_local $10
        get_local $0
        i32.const 40
        i32.add
        set_local $11
        get_local $4
        i32.const 8
        i32.add
        set_local $12
        get_local $4
        set_local $13
        get_local $0
        i32.const 32
        i32.add
        set_local $7
        get_local $2
        set_local $0
        block $__rjti$2
          block $__rjti$1
            block $__rjti$0
              loop $while-in
                get_local $10
                i32.load
                tee_local $2
                get_local $11
                i32.load
                get_local $0
                get_local $9
                get_local $6
                get_local $4
                get_local $12
                get_local $5
                get_local $2
                i32.load
                i32.load offset=12
                i32.const 15
                i32.and
                i32.const 381
                i32.add
                call_indirect (type $FUNCSIG$iiiiiiiii)
                set_local $2
                get_local $6
                i32.load
                get_local $0
                i32.eq
                br_if $__rjti$2
                get_local $2
                i32.const 3
                i32.eq
                br_if $__rjti$0
                get_local $2
                i32.const 1
                i32.or
                i32.const 1
                i32.ne
                br_if $__rjti$2
                get_local $4
                i32.const 1
                get_local $5
                i32.load
                get_local $13
                i32.sub
                tee_local $0
                get_local $7
                i32.load
                call $_fwrite
                get_local $0
                i32.ne
                br_if $__rjti$2
                get_local $2
                i32.const 1
                i32.ne
                br_if $__rjti$3
                get_local $6
                i32.load
                set_local $0
                br $while-in
              end ;; $while-in
            end ;; $__rjti$0
            get_local $0
            i32.const 1
            i32.const 1
            get_local $7
            i32.load
            call $_fwrite
            i32.const 1
            i32.ne
            br_if $__rjti$2
          end ;; $__rjti$1
          br $__rjti$3
        end ;; $__rjti$2
        i32.const -1
        set_local $1
        br $__rjto$3
      end ;; $__rjti$3
      get_local $8
      if $if
        i32.const 0
        set_local $1
      end ;; $if
    end ;; $__rjto$3
    get_local $3
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNSt3__211__stdoutbufIwE8overflowEj (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    get_global $STACKTOP
    set_local $3
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $3
    i32.const 16
    i32.add
    set_local $4
    get_local $3
    i32.const 8
    i32.add
    set_local $2
    get_local $3
    i32.const 4
    i32.add
    set_local $5
    get_local $3
    set_local $6
    block $__rjto$3
      block $__rjti$3
        get_local $1
        i32.const -1
        i32.eq
        tee_local $8
        br_if $__rjti$3
        get_local $2
        get_local $1
        i32.store
        get_local $0
        i32.load8_s offset=44
        if $_1
          get_local $2
          i32.const 4
          i32.const 1
          get_local $0
          i32.load offset=32
          call $_fwrite
          i32.const 1
          i32.eq
          if $_2
            br $__rjti$3
          else
            block $_3
              i32.const -1
              set_local $1
              br $__rjto$3
            end ;; $_3
          end ;; $_2
        end ;; $_1
        get_local $5
        get_local $4
        i32.store
        get_local $2
        i32.const 4
        i32.add
        set_local $9
        get_local $0
        i32.const 36
        i32.add
        set_local $10
        get_local $0
        i32.const 40
        i32.add
        set_local $11
        get_local $4
        i32.const 8
        i32.add
        set_local $12
        get_local $4
        set_local $13
        get_local $0
        i32.const 32
        i32.add
        set_local $7
        get_local $2
        set_local $0
        block $__rjti$2
          block $__rjti$1
            block $__rjti$0
              loop $while-in
                get_local $10
                i32.load
                tee_local $2
                get_local $11
                i32.load
                get_local $0
                get_local $9
                get_local $6
                get_local $4
                get_local $12
                get_local $5
                get_local $2
                i32.load
                i32.load offset=12
                i32.const 15
                i32.and
                i32.const 381
                i32.add
                call_indirect (type $FUNCSIG$iiiiiiiii)
                set_local $2
                get_local $6
                i32.load
                get_local $0
                i32.eq
                br_if $__rjti$2
                get_local $2
                i32.const 3
                i32.eq
                br_if $__rjti$0
                get_local $2
                i32.const 1
                i32.or
                i32.const 1
                i32.ne
                br_if $__rjti$2
                get_local $4
                i32.const 1
                get_local $5
                i32.load
                get_local $13
                i32.sub
                tee_local $0
                get_local $7
                i32.load
                call $_fwrite
                get_local $0
                i32.ne
                br_if $__rjti$2
                get_local $2
                i32.const 1
                i32.ne
                br_if $__rjti$3
                get_local $6
                i32.load
                set_local $0
                br $while-in
              end ;; $while-in
            end ;; $__rjti$0
            get_local $0
            i32.const 1
            i32.const 1
            get_local $7
            i32.load
            call $_fwrite
            i32.const 1
            i32.ne
            br_if $__rjti$2
          end ;; $__rjti$1
          br $__rjti$3
        end ;; $__rjti$2
        i32.const -1
        set_local $1
        br $__rjto$3
      end ;; $__rjti$3
      get_local $8
      if $if
        i32.const 0
        set_local $1
      end ;; $if
    end ;; $__rjto$3
    get_local $3
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $7
    tee_local $6
    i32.const 0
    i32.store
    get_local $6
    i32.const 0
    i32.store offset=4
    get_local $6
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $1
    loop $while-in
      get_local $1
      i32.const 3
      i32.ne
      if $_1
        block $_2
          get_local $6
          get_local $1
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $1
          i32.const 1
          i32.add
          set_local $1
          br $while-in
        end ;; $_2
      end ;; $_1
    end ;; $while-in
    get_local $5
    i32.load8_s offset=11
    tee_local $8
    i32.const 0
    i32.lt_s
    tee_local $9
    if $_3 (result i32)
      get_local $5
      i32.load
    else
      get_local $5
    end ;; $_3
    tee_local $1
    get_local $9
    if $_4 (result i32)
      get_local $5
      i32.load offset=4
    else
      get_local $8
      i32.const 255
      i32.and
    end ;; $_4
    i32.add
    set_local $5
    loop $while-in1
      get_local $1
      get_local $5
      i32.lt_u
      if $_5
        block $_6
          get_local $6
          get_local $1
          i32.load8_s
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
          get_local $1
          i32.const 1
          i32.add
          set_local $1
          br $while-in1
        end ;; $_6
      end ;; $_5
    end ;; $while-in1
    get_local $2
    i32.const -1
    i32.eq
    if $_7 (result i32)
      i32.const -1
    else
      get_local $2
      i32.const 1
      i32.shl
    end ;; $_7
    get_local $3
    get_local $4
    get_local $6
    i32.load8_s offset=11
    i32.const 0
    i32.lt_s
    if $_8 (result i32)
      get_local $6
      i32.load
    else
      get_local $6
    end ;; $_8
    call $_catgets
    set_local $1
    get_local $0
    i32.const 0
    i32.store
    get_local $0
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $2
    loop $while-in3
      get_local $2
      i32.const 3
      i32.ne
      if $_9
        block $_10
          get_local $0
          get_local $2
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $2
          i32.const 1
          i32.add
          set_local $2
          br $while-in3
        end ;; $_10
      end ;; $_9
    end ;; $while-in3
    get_local $1
    get_local $1
    call $_strlen
    i32.add
    set_local $2
    loop $while-in5
      get_local $1
      get_local $2
      i32.lt_u
      if $if
        block $block
          get_local $0
          get_local $1
          i32.load8_s
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
          get_local $1
          i32.const 1
          i32.add
          set_local $1
          br $while-in5
        end ;; $block
      end ;; $if
    end ;; $while-in5
    get_local $6
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $7
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 128
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 116
    i32.add
    tee_local $5
    i32.const 14180
    i32.load8_s
    i32.store8
    get_local $5
    i32.const 14181
    i32.load8_s
    i32.store8 offset=1
    get_local $5
    i32.const 14182
    i32.load8_s
    i32.store8 offset=2
    get_local $5
    i32.const 14183
    i32.load8_s
    i32.store8 offset=3
    get_local $5
    i32.const 14184
    i32.load8_s
    i32.store8 offset=4
    get_local $5
    i32.const 14185
    i32.load8_s
    i32.store8 offset=5
    get_local $5
    i32.const 1
    i32.add
    i32.const 14186
    i32.const 0
    get_local $2
    i32.load offset=4
    call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
    call $__ZNSt3__26__clocEv
    set_local $6
    get_local $0
    tee_local $7
    get_local $4
    i32.store
    get_local $0
    i32.const 104
    i32.add
    tee_local $4
    get_local $4
    i32.const 12
    get_local $6
    get_local $5
    get_local $7
    call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
    i32.add
    set_local $5
    get_local $4
    get_local $5
    get_local $2
    call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    set_local $6
    get_local $0
    i32.const 12
    i32.add
    tee_local $8
    get_local $2
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $9
    i32.store
    get_local $4
    get_local $6
    get_local $5
    get_local $0
    i32.const 20
    i32.add
    tee_local $4
    get_local $0
    i32.const 16
    i32.add
    tee_local $5
    get_local $0
    i32.const 8
    i32.add
    tee_local $6
    get_local $8
    call $__ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE
    get_local $9
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $0
    i32.const 4
    i32.add
    tee_local $8
    get_local $1
    i32.load
    i32.store
    get_local $5
    i32.load
    set_local $1
    get_local $6
    i32.load
    set_local $5
    get_local $7
    get_local $8
    i32.load
    i32.store
    get_local $7
    get_local $4
    get_local $1
    get_local $5
    get_local $2
    get_local $3
    call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $1
    get_local $0
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 144
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 126
    i32.add
    tee_local $5
    i32.const 14180
    i32.load8_s
    i32.store8
    get_local $5
    i32.const 14181
    i32.load8_s
    i32.store8 offset=1
    get_local $5
    i32.const 14182
    i32.load8_s
    i32.store8 offset=2
    get_local $5
    i32.const 14183
    i32.load8_s
    i32.store8 offset=3
    get_local $5
    i32.const 14184
    i32.load8_s
    i32.store8 offset=4
    get_local $5
    i32.const 14185
    i32.load8_s
    i32.store8 offset=5
    get_local $5
    i32.const 1
    i32.add
    i32.const 14186
    i32.const 1
    get_local $2
    i32.load offset=4
    call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
    call $__ZNSt3__26__clocEv
    set_local $6
    get_local $0
    tee_local $7
    get_local $4
    i32.store
    get_local $0
    i32.const 112
    i32.add
    tee_local $4
    get_local $4
    i32.const 13
    get_local $6
    get_local $5
    get_local $7
    call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
    i32.add
    set_local $5
    get_local $4
    get_local $5
    get_local $2
    call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    set_local $6
    get_local $0
    i32.const 12
    i32.add
    tee_local $8
    get_local $2
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $9
    i32.store
    get_local $4
    get_local $6
    get_local $5
    get_local $0
    i32.const 20
    i32.add
    tee_local $4
    get_local $0
    i32.const 16
    i32.add
    tee_local $5
    get_local $0
    i32.const 8
    i32.add
    tee_local $6
    get_local $8
    call $__ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE
    get_local $9
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $0
    i32.const 4
    i32.add
    tee_local $8
    get_local $1
    i32.load
    i32.store
    get_local $5
    i32.load
    set_local $1
    get_local $6
    i32.load
    set_local $5
    get_local $7
    get_local $8
    i32.load
    i32.store
    get_local $7
    get_local $4
    get_local $1
    get_local $5
    get_local $2
    get_local $3
    call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $1
    get_local $0
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 64
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 56
    i32.add
    tee_local $5
    i32.const 14180
    i32.load8_s
    i32.store8
    get_local $5
    i32.const 14181
    i32.load8_s
    i32.store8 offset=1
    get_local $5
    i32.const 14182
    i32.load8_s
    i32.store8 offset=2
    get_local $5
    i32.const 14183
    i32.load8_s
    i32.store8 offset=3
    get_local $5
    i32.const 14184
    i32.load8_s
    i32.store8 offset=4
    get_local $5
    i32.const 14185
    i32.load8_s
    i32.store8 offset=5
    get_local $5
    i32.const 1
    i32.add
    i32.const 14186
    i32.const 0
    get_local $2
    i32.load offset=4
    call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
    call $__ZNSt3__26__clocEv
    set_local $6
    get_local $0
    tee_local $7
    get_local $4
    i32.store
    get_local $0
    i32.const 44
    i32.add
    tee_local $4
    get_local $4
    i32.const 12
    get_local $6
    get_local $5
    get_local $7
    call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
    i32.add
    set_local $5
    get_local $4
    get_local $5
    get_local $2
    call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    set_local $6
    get_local $0
    i32.const 12
    i32.add
    tee_local $8
    get_local $2
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $9
    i32.store
    get_local $4
    get_local $6
    get_local $5
    get_local $0
    i32.const 20
    i32.add
    tee_local $4
    get_local $0
    i32.const 16
    i32.add
    tee_local $5
    get_local $0
    i32.const 8
    i32.add
    tee_local $6
    get_local $8
    call $__ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE
    get_local $9
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $0
    i32.const 4
    i32.add
    tee_local $8
    get_local $1
    i32.load
    i32.store
    get_local $5
    i32.load
    set_local $1
    get_local $6
    i32.load
    set_local $5
    get_local $7
    get_local $8
    i32.load
    i32.store
    get_local $7
    get_local $4
    get_local $1
    get_local $5
    get_local $2
    get_local $3
    call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $1
    get_local $0
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 64
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 56
    i32.add
    tee_local $5
    i32.const 14180
    i32.load8_s
    i32.store8
    get_local $5
    i32.const 14181
    i32.load8_s
    i32.store8 offset=1
    get_local $5
    i32.const 14182
    i32.load8_s
    i32.store8 offset=2
    get_local $5
    i32.const 14183
    i32.load8_s
    i32.store8 offset=3
    get_local $5
    i32.const 14184
    i32.load8_s
    i32.store8 offset=4
    get_local $5
    i32.const 14185
    i32.load8_s
    i32.store8 offset=5
    get_local $5
    i32.const 1
    i32.add
    i32.const 14186
    i32.const 1
    get_local $2
    i32.load offset=4
    call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
    call $__ZNSt3__26__clocEv
    set_local $6
    get_local $0
    tee_local $7
    get_local $4
    i32.store
    get_local $0
    i32.const 43
    i32.add
    tee_local $4
    get_local $4
    i32.const 13
    get_local $6
    get_local $5
    get_local $7
    call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
    i32.add
    set_local $5
    get_local $4
    get_local $5
    get_local $2
    call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    set_local $6
    get_local $0
    i32.const 12
    i32.add
    tee_local $8
    get_local $2
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $9
    i32.store
    get_local $4
    get_local $6
    get_local $5
    get_local $0
    i32.const 20
    i32.add
    tee_local $4
    get_local $0
    i32.const 16
    i32.add
    tee_local $5
    get_local $0
    i32.const 8
    i32.add
    tee_local $6
    get_local $8
    call $__ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE
    get_local $9
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $0
    i32.const 4
    i32.add
    tee_local $8
    get_local $1
    i32.load
    i32.store
    get_local $5
    i32.load
    set_local $1
    get_local $6
    i32.load
    set_local $5
    get_local $7
    get_local $8
    i32.load
    i32.store
    get_local $7
    get_local $4
    get_local $1
    get_local $5
    get_local $2
    get_local $3
    call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $1
    get_local $0
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    get_global $STACKTOP
    set_local $3
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $3
    tee_local $6
    get_local $0
    call $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_
    get_local $6
    i32.load8_s
    i32.eqz
    if $if
      block $block
        get_local $6
        call $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev
        get_local $3
        set_global $STACKTOP
        get_local $0
        return
      end ;; $block
    end ;; $if
    get_local $3
    i32.const 12
    i32.add
    set_local $5
    get_local $3
    i32.const 8
    i32.add
    tee_local $8
    get_local $0
    get_local $0
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.add
    tee_local $7
    i32.load offset=24
    i32.store
    get_local $7
    i32.load offset=4
    set_local $9
    get_local $7
    i32.const 76
    i32.add
    tee_local $10
    i32.load
    tee_local $4
    i32.const -1
    i32.eq
    if $if_1
      block $block_1
        get_local $5
        get_local $7
        call $__ZNKSt3__28ios_base6getlocEv
        i32.store
        get_local $5
        i32.const 19208
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        tee_local $4
        i32.const 32
        get_local $4
        i32.load
        i32.load offset=28
        i32.const 15
        i32.and
        i32.const 413
        i32.add
        call_indirect (type $FUNCSIG$iii)
        set_local $4
        get_local $5
        call $__ZNSt3__26localeD2Ev
        get_local $10
        get_local $4
        i32.const 24
        i32.shl
        i32.const 24
        i32.shr_s
        tee_local $4
        i32.store
      end ;; $block_1
    end ;; $if_1
    get_local $1
    get_local $2
    i32.add
    set_local $2
    get_local $5
    get_local $8
    i32.load
    i32.store
    get_local $5
    get_local $1
    get_local $9
    i32.const 176
    i32.and
    i32.const 32
    i32.eq
    if $if_2 (result i32)
      get_local $2
    else
      get_local $1
    end ;; $if_2
    get_local $2
    get_local $7
    get_local $4
    i32.const 255
    i32.and
    call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    if $if_3
      block $block_2
        get_local $6
        call $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev
        get_local $3
        set_global $STACKTOP
        get_local $0
        return
      end ;; $block_2
    end ;; $if_3
    get_local $0
    get_local $0
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.add
    tee_local $1
    get_local $1
    i32.load offset=16
    i32.const 5
    i32.or
    call $__ZNSt3__28ios_base5clearEj
    get_local $6
    call $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev
    get_local $3
    set_global $STACKTOP
    get_local $0
    )
  
  (func $_vfprintf (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    get_global $STACKTOP
    set_local $4
    get_global $STACKTOP
    i32.const 224
    i32.add
    set_global $STACKTOP
    get_local $4
    i32.const 120
    i32.add
    set_local $5
    get_local $4
    set_local $7
    get_local $4
    i32.const 136
    i32.add
    set_local $6
    get_local $4
    i32.const 80
    i32.add
    tee_local $8
    tee_local $3
    i32.const 40
    i32.add
    set_local $9
    loop $do-in
      get_local $3
      i32.const 0
      i32.store
      get_local $3
      i32.const 4
      i32.add
      tee_local $3
      get_local $9
      i32.lt_s
      br_if $do-in
    end ;; $do-in
    get_local $5
    get_local $2
    i32.load
    i32.store
    i32.const 0
    get_local $1
    get_local $5
    get_local $7
    get_local $8
    call $_printf_core
    i32.const 0
    i32.lt_s
    if $if
      i32.const -1
      set_local $1
    else
      block $block
        get_local $0
        i32.load offset=76
        i32.const -1
        i32.gt_s
        if $if_1 (result i32)
          get_local $0
          call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
        else
          i32.const 0
        end ;; $if_1
        set_local $14
        get_local $0
        i32.load
        set_local $10
        get_local $0
        i32.load8_s offset=74
        i32.const 1
        i32.lt_s
        if $if_2
          get_local $0
          get_local $10
          i32.const -33
          i32.and
          i32.store
        end ;; $if_2
        get_local $0
        i32.const 48
        i32.add
        tee_local $11
        i32.load
        if $if_3
          get_local $0
          get_local $1
          get_local $5
          get_local $7
          get_local $8
          call $_printf_core
          set_local $1
        else
          block $block_1
            get_local $0
            i32.const 44
            i32.add
            tee_local $12
            i32.load
            set_local $13
            get_local $12
            get_local $6
            i32.store
            get_local $0
            i32.const 28
            i32.add
            tee_local $9
            get_local $6
            i32.store
            get_local $0
            i32.const 20
            i32.add
            tee_local $3
            get_local $6
            i32.store
            get_local $11
            i32.const 80
            i32.store
            get_local $0
            i32.const 16
            i32.add
            tee_local $2
            get_local $6
            i32.const 80
            i32.add
            i32.store
            get_local $0
            get_local $1
            get_local $5
            get_local $7
            get_local $8
            call $_printf_core
            set_local $1
            get_local $13
            if $if_4
              block $block_2
                get_local $0
                i32.const 0
                i32.const 0
                get_local $0
                i32.load offset=36
                i32.const 31
                i32.and
                i32.const 8
                i32.add
                call_indirect (type $FUNCSIG$iiii)
                drop
                get_local $3
                i32.load
                i32.eqz
                if $if_5
                  i32.const -1
                  set_local $1
                end ;; $if_5
                get_local $12
                get_local $13
                i32.store
                get_local $11
                i32.const 0
                i32.store
                get_local $2
                i32.const 0
                i32.store
                get_local $9
                i32.const 0
                i32.store
                get_local $3
                i32.const 0
                i32.store
              end ;; $block_2
            end ;; $if_4
          end ;; $block_1
        end ;; $if_3
        get_local $0
        get_local $0
        i32.load
        tee_local $2
        get_local $10
        i32.const 32
        i32.and
        i32.or
        i32.store
        get_local $14
        if $if_6
          get_local $0
          call $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
        end ;; $if_6
        get_local $2
        i32.const 32
        i32.and
        if $if_7
          i32.const -1
          set_local $1
        end ;; $if_7
      end ;; $block
    end ;; $if
    get_local $4
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    (local $13 i32)
    (local $14 i32)
    get_local $0
    get_local $1
    i32.load offset=8
    i32.eq
    if $_1
      i32.const 0
      get_local $1
      get_local $2
      get_local $3
      get_local $4
      call $__ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i
    else
      block $_2
        get_local $1
        i32.const 52
        i32.add
        tee_local $6
        i32.load16_s
        tee_local $7
        i32.const 255
        i32.and
        set_local $9
        get_local $7
        i32.const 65535
        i32.and
        i32.const 8
        i32.shr_u
        set_local $10
        get_local $0
        i32.const 16
        i32.add
        get_local $0
        i32.load offset=12
        tee_local $8
        i32.const 3
        i32.shl
        i32.add
        set_local $11
        get_local $6
        i32.const 0
        i32.store8
        get_local $1
        i32.const 53
        i32.add
        tee_local $7
        i32.const 0
        i32.store8
        get_local $0
        i32.const 16
        i32.add
        get_local $1
        get_local $2
        get_local $3
        get_local $4
        get_local $5
        call $__ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib
        block $label$break$L4
          get_local $8
          i32.const 1
          i32.gt_s
          if $_3
            block $_4
              get_local $1
              i32.const 24
              i32.add
              set_local $12
              get_local $0
              i32.const 8
              i32.add
              set_local $8
              get_local $1
              i32.const 54
              i32.add
              set_local $13
              get_local $0
              i32.const 24
              i32.add
              set_local $0
              loop $do-in
                get_local $13
                i32.load8_s
                br_if $label$break$L4
                get_local $6
                i32.load16_s
                tee_local $14
                i32.const 255
                i32.and
                if $if
                  block $block
                    get_local $12
                    i32.load
                    i32.const 1
                    i32.eq
                    br_if $label$break$L4
                    get_local $8
                    i32.load
                    i32.const 2
                    i32.and
                    i32.eqz
                    br_if $label$break$L4
                  end ;; $block
                else
                  get_local $14
                  i32.const 65535
                  i32.and
                  i32.const 256
                  i32.ge_s
                  if $if_1
                    get_local $8
                    i32.load
                    i32.const 1
                    i32.and
                    i32.eqz
                    br_if $label$break$L4
                  end ;; $if_1
                end ;; $if
                get_local $6
                i32.const 0
                i32.store8
                get_local $7
                i32.const 0
                i32.store8
                get_local $0
                get_local $1
                get_local $2
                get_local $3
                get_local $4
                get_local $5
                call $__ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib
                get_local $0
                i32.const 8
                i32.add
                tee_local $0
                get_local $11
                i32.lt_u
                br_if $do-in
              end ;; $do-in
            end ;; $_4
          end ;; $_3
        end ;; $label$break$L4
        get_local $6
        get_local $9
        i32.store8
        get_local $7
        get_local $10
        i32.store8
      end ;; $_2
    end ;; $_1
    )
  
  (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 192
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 180
    i32.add
    tee_local $5
    i32.const 14193
    i32.load8_s
    i32.store8
    get_local $5
    i32.const 14194
    i32.load8_s
    i32.store8 offset=1
    get_local $5
    i32.const 14195
    i32.load8_s
    i32.store8 offset=2
    get_local $5
    i32.const 14196
    i32.load8_s
    i32.store8 offset=3
    get_local $5
    i32.const 14197
    i32.load8_s
    i32.store8 offset=4
    get_local $5
    i32.const 14198
    i32.load8_s
    i32.store8 offset=5
    call $__ZNSt3__26__clocEv
    set_local $6
    get_local $0
    tee_local $8
    get_local $4
    i32.store
    get_local $0
    i32.const 160
    i32.add
    tee_local $4
    i32.const 20
    get_local $6
    get_local $5
    get_local $8
    call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
    set_local $6
    get_local $4
    get_local $4
    get_local $6
    i32.add
    tee_local $9
    get_local $2
    call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    set_local $10
    get_local $0
    i32.const 156
    i32.add
    tee_local $5
    get_local $2
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $11
    i32.store
    get_local $5
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $7
    get_local $11
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $7
    get_local $4
    get_local $9
    get_local $0
    i32.const 8
    i32.add
    tee_local $5
    get_local $7
    i32.load
    i32.load offset=48
    i32.const 7
    i32.and
    i32.const 397
    i32.add
    call_indirect (type $FUNCSIG$iiiii)
    drop
    get_local $5
    get_local $6
    i32.const 2
    i32.shl
    i32.add
    set_local $6
    get_local $0
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $8
    get_local $7
    i32.load
    i32.store
    get_local $8
    get_local $5
    get_local $10
    get_local $9
    i32.eq
    if $if (result i32)
      get_local $6
    else
      get_local $5
      get_local $10
      get_local $4
      i32.sub
      i32.const 2
      i32.shl
      i32.add
    end ;; $if
    get_local $6
    get_local $2
    get_local $3
    call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $1
    get_local $0
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNSt3__210__stdinbufIwE9pbackfailEj (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $3
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $3
    i32.const 16
    i32.add
    set_local $4
    get_local $3
    i32.const 8
    i32.add
    set_local $6
    get_local $3
    i32.const 4
    i32.add
    set_local $7
    get_local $3
    set_local $5
    get_local $0
    i32.const 52
    i32.add
    tee_local $8
    i32.load8_s
    i32.const 0
    i32.ne
    set_local $2
    block $label$break$L1
      get_local $1
      i32.const -1
      i32.eq
      if $_1
        get_local $2
        if $_2
          i32.const -1
          set_local $1
        else
          get_local $8
          get_local $0
          i32.load offset=48
          tee_local $1
          i32.const -1
          i32.ne
          i32.store8
        end ;; $_2
      else
        block $_3
          get_local $2
          if $_4
            block $_5
              get_local $7
              get_local $0
              i32.const 48
              i32.add
              tee_local $2
              i32.load
              i32.store
              block $switch-default
                block $switch-case2
                  block $switch-case
                    get_local $0
                    i32.load offset=36
                    tee_local $9
                    get_local $0
                    i32.load offset=40
                    get_local $7
                    get_local $7
                    i32.const 4
                    i32.add
                    get_local $5
                    get_local $4
                    get_local $4
                    i32.const 8
                    i32.add
                    get_local $6
                    get_local $9
                    i32.load
                    i32.load offset=12
                    i32.const 15
                    i32.and
                    i32.const 381
                    i32.add
                    call_indirect (type $FUNCSIG$iiiiiiiii)
                    i32.const 1
                    i32.sub
                    br_table
                      $switch-case $switch-case $switch-case2
                      $switch-default ;; default
                  end ;; $switch-case
                  i32.const -1
                  set_local $1
                  br $label$break$L1
                end ;; $switch-case2
                get_local $4
                get_local $2
                i32.load
                i32.store8
                get_local $6
                get_local $4
                i32.const 1
                i32.add
                i32.store
              end ;; $switch-default
              get_local $0
              i32.const 32
              i32.add
              set_local $0
              block $__rjti$1
                block $__rjti$0
                  loop $while-in
                    get_local $6
                    i32.load
                    tee_local $5
                    get_local $4
                    i32.le_u
                    br_if $__rjti$1
                    get_local $6
                    get_local $5
                    i32.const -1
                    i32.add
                    tee_local $5
                    i32.store
                    get_local $5
                    i32.load8_s
                    get_local $0
                    i32.load
                    call $_ungetc
                    i32.const -1
                    i32.ne
                    br_if $while-in
                    br $__rjti$0
                  end ;; $while-in
                end ;; $__rjti$0
                i32.const -1
                set_local $1
                br $label$break$L1
              end ;; $__rjti$1
            end ;; $_5
          else
            get_local $0
            i32.const 48
            i32.add
            set_local $2
          end ;; $_4
          get_local $2
          get_local $1
          i32.store
          get_local $8
          i32.const 1
          i32.store8
        end ;; $_3
      end ;; $_1
    end ;; $label$break$L1
    get_local $3
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNSt3__210__stdinbufIcE9pbackfailEi (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $3
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $3
    i32.const 16
    i32.add
    set_local $4
    get_local $3
    i32.const 4
    i32.add
    set_local $6
    get_local $3
    i32.const 8
    i32.add
    set_local $7
    get_local $3
    set_local $5
    get_local $0
    i32.const 52
    i32.add
    tee_local $8
    i32.load8_s
    i32.const 0
    i32.ne
    set_local $2
    block $label$break$L1
      get_local $1
      i32.const -1
      i32.eq
      if $_1
        get_local $2
        if $_2
          i32.const -1
          set_local $1
        else
          get_local $8
          get_local $0
          i32.load offset=48
          tee_local $1
          i32.const -1
          i32.ne
          i32.store8
        end ;; $_2
      else
        block $_3
          get_local $2
          if $_4
            block $_5
              get_local $7
              get_local $0
              i32.const 48
              i32.add
              tee_local $2
              i32.load
              i32.store8
              block $switch-default
                block $switch-case2
                  block $switch-case
                    get_local $0
                    i32.load offset=36
                    tee_local $9
                    get_local $0
                    i32.load offset=40
                    get_local $7
                    get_local $7
                    i32.const 1
                    i32.add
                    get_local $5
                    get_local $4
                    get_local $4
                    i32.const 8
                    i32.add
                    get_local $6
                    get_local $9
                    i32.load
                    i32.load offset=12
                    i32.const 15
                    i32.and
                    i32.const 381
                    i32.add
                    call_indirect (type $FUNCSIG$iiiiiiiii)
                    i32.const 1
                    i32.sub
                    br_table
                      $switch-case $switch-case $switch-case2
                      $switch-default ;; default
                  end ;; $switch-case
                  i32.const -1
                  set_local $1
                  br $label$break$L1
                end ;; $switch-case2
                get_local $4
                get_local $2
                i32.load
                i32.store8
                get_local $6
                get_local $4
                i32.const 1
                i32.add
                i32.store
              end ;; $switch-default
              get_local $0
              i32.const 32
              i32.add
              set_local $0
              block $__rjti$1
                block $__rjti$0
                  loop $while-in
                    get_local $6
                    i32.load
                    tee_local $5
                    get_local $4
                    i32.le_u
                    br_if $__rjti$1
                    get_local $6
                    get_local $5
                    i32.const -1
                    i32.add
                    tee_local $5
                    i32.store
                    get_local $5
                    i32.load8_s
                    get_local $0
                    i32.load
                    call $_ungetc
                    i32.const -1
                    i32.ne
                    br_if $while-in
                    br $__rjti$0
                  end ;; $while-in
                end ;; $__rjti$0
                i32.const -1
                set_local $1
                br $label$break$L1
              end ;; $__rjti$1
            end ;; $_5
          else
            get_local $0
            i32.const 48
            i32.add
            set_local $2
          end ;; $_4
          get_local $2
          get_local $1
          i32.store
          get_local $8
          i32.const 1
          i32.store8
        end ;; $_3
      end ;; $_1
    end ;; $label$break$L1
    get_local $3
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 80
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 72
    i32.add
    tee_local $5
    i32.const 14193
    i32.load8_s
    i32.store8
    get_local $5
    i32.const 14194
    i32.load8_s
    i32.store8 offset=1
    get_local $5
    i32.const 14195
    i32.load8_s
    i32.store8 offset=2
    get_local $5
    i32.const 14196
    i32.load8_s
    i32.store8 offset=3
    get_local $5
    i32.const 14197
    i32.load8_s
    i32.store8 offset=4
    get_local $5
    i32.const 14198
    i32.load8_s
    i32.store8 offset=5
    call $__ZNSt3__26__clocEv
    set_local $6
    get_local $0
    tee_local $8
    get_local $4
    i32.store
    get_local $0
    i32.const 52
    i32.add
    tee_local $4
    i32.const 20
    get_local $6
    get_local $5
    get_local $8
    call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
    set_local $6
    get_local $4
    get_local $4
    get_local $6
    i32.add
    tee_local $9
    get_local $2
    call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    set_local $10
    get_local $0
    i32.const 8
    i32.add
    tee_local $5
    get_local $2
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $11
    i32.store
    get_local $5
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $7
    get_local $11
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $7
    get_local $4
    get_local $9
    get_local $0
    i32.const 12
    i32.add
    tee_local $5
    get_local $7
    i32.load
    i32.load offset=32
    i32.const 7
    i32.and
    i32.const 397
    i32.add
    call_indirect (type $FUNCSIG$iiiii)
    drop
    get_local $5
    get_local $6
    i32.add
    set_local $6
    get_local $0
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $8
    get_local $7
    i32.load
    i32.store
    get_local $8
    get_local $5
    get_local $10
    get_local $9
    i32.eq
    if $if (result i32)
      get_local $6
    else
      get_local $5
      get_local $10
      get_local $4
      i32.sub
      i32.add
    end ;; $if
    get_local $6
    get_local $2
    get_local $3
    call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $1
    get_local $0
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 240
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    tee_local $7
    i32.const 37
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $6
    i32.const 1
    i32.add
    i32.const 14188
    i32.const 0
    get_local $2
    i32.load offset=4
    call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
    call $__ZNSt3__26__clocEv
    set_local $8
    get_local $0
    i32.const 8
    i32.add
    tee_local $7
    tee_local $9
    get_local $4
    i32.store
    get_local $9
    get_local $5
    i32.store offset=4
    get_local $0
    i32.const 204
    i32.add
    tee_local $4
    get_local $4
    i32.const 23
    get_local $8
    get_local $6
    get_local $7
    call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
    i32.add
    set_local $5
    get_local $4
    get_local $5
    get_local $2
    call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    set_local $6
    get_local $0
    i32.const 24
    i32.add
    tee_local $8
    get_local $2
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $9
    i32.store
    get_local $4
    get_local $6
    get_local $5
    get_local $0
    i32.const 32
    i32.add
    tee_local $4
    get_local $0
    i32.const 28
    i32.add
    tee_local $5
    get_local $0
    i32.const 20
    i32.add
    tee_local $6
    get_local $8
    call $__ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE
    get_local $9
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $0
    i32.const 16
    i32.add
    tee_local $8
    get_local $1
    i32.load
    i32.store
    get_local $5
    i32.load
    set_local $1
    get_local $6
    i32.load
    set_local $5
    get_local $7
    get_local $8
    i32.load
    i32.store
    get_local $7
    get_local $4
    get_local $1
    get_local $5
    get_local $2
    get_local $3
    call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $1
    get_local $0
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 240
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    tee_local $7
    i32.const 37
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $6
    i32.const 1
    i32.add
    i32.const 14188
    i32.const 1
    get_local $2
    i32.load offset=4
    call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
    call $__ZNSt3__26__clocEv
    set_local $8
    get_local $0
    i32.const 8
    i32.add
    tee_local $7
    tee_local $9
    get_local $4
    i32.store
    get_local $9
    get_local $5
    i32.store offset=4
    get_local $0
    i32.const 204
    i32.add
    tee_local $4
    get_local $4
    i32.const 23
    get_local $8
    get_local $6
    get_local $7
    call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
    i32.add
    set_local $5
    get_local $4
    get_local $5
    get_local $2
    call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    set_local $6
    get_local $0
    i32.const 24
    i32.add
    tee_local $8
    get_local $2
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $9
    i32.store
    get_local $4
    get_local $6
    get_local $5
    get_local $0
    i32.const 32
    i32.add
    tee_local $4
    get_local $0
    i32.const 28
    i32.add
    tee_local $5
    get_local $0
    i32.const 20
    i32.add
    tee_local $6
    get_local $8
    call $__ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE
    get_local $9
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $0
    i32.const 16
    i32.add
    tee_local $8
    get_local $1
    i32.load
    i32.store
    get_local $5
    i32.load
    set_local $1
    get_local $6
    i32.load
    set_local $5
    get_local $7
    get_local $8
    i32.load
    i32.store
    get_local $7
    get_local $4
    get_local $1
    get_local $5
    get_local $2
    get_local $3
    call $__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $1
    get_local $0
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 112
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    tee_local $7
    i32.const 37
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $6
    i32.const 1
    i32.add
    i32.const 14188
    i32.const 0
    get_local $2
    i32.load offset=4
    call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
    call $__ZNSt3__26__clocEv
    set_local $8
    get_local $0
    i32.const 8
    i32.add
    tee_local $7
    tee_local $9
    get_local $4
    i32.store
    get_local $9
    get_local $5
    i32.store offset=4
    get_local $0
    i32.const 75
    i32.add
    tee_local $4
    get_local $4
    i32.const 23
    get_local $8
    get_local $6
    get_local $7
    call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
    i32.add
    set_local $5
    get_local $4
    get_local $5
    get_local $2
    call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    set_local $6
    get_local $0
    i32.const 24
    i32.add
    tee_local $8
    get_local $2
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $9
    i32.store
    get_local $4
    get_local $6
    get_local $5
    get_local $0
    i32.const 32
    i32.add
    tee_local $4
    get_local $0
    i32.const 28
    i32.add
    tee_local $5
    get_local $0
    i32.const 20
    i32.add
    tee_local $6
    get_local $8
    call $__ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE
    get_local $9
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $0
    i32.const 16
    i32.add
    tee_local $8
    get_local $1
    i32.load
    i32.store
    get_local $5
    i32.load
    set_local $1
    get_local $6
    i32.load
    set_local $5
    get_local $7
    get_local $8
    i32.load
    i32.store
    get_local $7
    get_local $4
    get_local $1
    get_local $5
    get_local $2
    get_local $3
    call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $1
    get_local $0
    set_global $STACKTOP
    get_local $1
    )
  
  (func $__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 112
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    tee_local $7
    i32.const 37
    i32.store
    get_local $7
    i32.const 0
    i32.store offset=4
    get_local $6
    i32.const 1
    i32.add
    i32.const 14188
    i32.const 1
    get_local $2
    i32.load offset=4
    call $__ZNSt3__214__num_put_base12__format_intEPcPKcbj
    call $__ZNSt3__26__clocEv
    set_local $8
    get_local $0
    i32.const 8
    i32.add
    tee_local $7
    tee_local $9
    get_local $4
    i32.store
    get_local $9
    get_local $5
    i32.store offset=4
    get_local $0
    i32.const 75
    i32.add
    tee_local $4
    get_local $4
    i32.const 23
    get_local $8
    get_local $6
    get_local $7
    call $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz
    i32.add
    set_local $5
    get_local $4
    get_local $5
    get_local $2
    call $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE
    set_local $6
    get_local $0
    i32.const 24
    i32.add
    tee_local $8
    get_local $2
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $9
    i32.store
    get_local $4
    get_local $6
    get_local $5
    get_local $0
    i32.const 32
    i32.add
    tee_local $4
    get_local $0
    i32.const 28
    i32.add
    tee_local $5
    get_local $0
    i32.const 20
    i32.add
    tee_local $6
    get_local $8
    call $__ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE
    get_local $9
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $0
    i32.const 16
    i32.add
    tee_local $8
    get_local $1
    i32.load
    i32.store
    get_local $5
    i32.load
    set_local $1
    get_local $6
    i32.load
    set_local $5
    get_local $7
    get_local $8
    i32.load
    i32.store
    get_local $7
    get_local $4
    get_local $1
    get_local $5
    get_local $2
    get_local $3
    call $__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_
    set_local $1
    get_local $0
    set_global $STACKTOP
    get_local $1
    )
  
  (func $___stdio_read (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 48
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 16
    i32.add
    set_local $7
    get_local $6
    set_local $3
    get_local $6
    i32.const 32
    i32.add
    tee_local $4
    get_local $1
    i32.store
    get_local $4
    i32.const 4
    i32.add
    tee_local $8
    get_local $2
    get_local $0
    i32.const 48
    i32.add
    tee_local $10
    i32.load
    tee_local $9
    i32.const 0
    i32.ne
    i32.sub
    i32.store
    get_local $4
    get_local $0
    i32.const 44
    i32.add
    tee_local $5
    i32.load
    i32.store offset=8
    get_local $4
    get_local $9
    i32.store offset=12
    i32.const 17600
    i32.load
    if $if
      block $block
        i32.const 95
        get_local $0
        call $_pthread_cleanup_push
        get_local $3
        get_local $0
        i32.load offset=60
        i32.store
        get_local $3
        get_local $4
        i32.store offset=4
        get_local $3
        i32.const 2
        i32.store offset=8
        i32.const 145
        get_local $3
        call $___syscall145
        call $___syscall_ret
        set_local $3
        i32.const 0
        call $_pthread_cleanup_pop
      end ;; $block
    else
      block $block_1
        get_local $7
        get_local $0
        i32.load offset=60
        i32.store
        get_local $7
        get_local $4
        i32.store offset=4
        get_local $7
        i32.const 2
        i32.store offset=8
        i32.const 145
        get_local $7
        call $___syscall145
        call $___syscall_ret
        set_local $3
      end ;; $block_1
    end ;; $if
    get_local $3
    i32.const 1
    i32.lt_s
    if $if_1
      block $block_2
        get_local $0
        get_local $0
        i32.load
        get_local $3
        i32.const 48
        i32.and
        i32.const 16
        i32.xor
        i32.or
        i32.store
        get_local $0
        i32.const 0
        i32.store offset=8
        get_local $0
        i32.const 0
        i32.store offset=4
        get_local $3
        set_local $2
      end ;; $block_2
    else
      get_local $3
      get_local $8
      i32.load
      tee_local $8
      i32.gt_u
      if $if_2
        block $block_3
          get_local $0
          i32.const 4
          i32.add
          tee_local $9
          get_local $5
          i32.load
          tee_local $5
          i32.store
          get_local $0
          get_local $5
          get_local $3
          get_local $8
          i32.sub
          i32.add
          i32.store offset=8
          get_local $10
          i32.load
          if $if_3
            block $block_4
              get_local $9
              get_local $5
              i32.const 1
              i32.add
              i32.store
              get_local $1
              get_local $2
              i32.const -1
              i32.add
              i32.add
              get_local $5
              i32.load8_s
              i32.store8
            end ;; $block_4
          end ;; $if_3
        end ;; $block_3
      else
        get_local $3
        set_local $2
      end ;; $if_2
    end ;; $if_1
    get_local $6
    set_global $STACKTOP
    get_local $2
    )
  
  (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw (type $_9)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    i32.const 1073741806
    get_local $1
    i32.sub
    get_local $2
    i32.lt_u
    if $if
      get_local $0
      call $__ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv
    end ;; $if
    get_local $0
    i32.const 8
    i32.add
    tee_local $10
    i32.load8_s offset=3
    i32.const 0
    i32.lt_s
    if $if_1 (result i32)
      get_local $0
      i32.load
    else
      get_local $0
    end ;; $if_1
    set_local $9
    get_local $1
    i32.const 536870887
    i32.lt_u
    if $if_2
      get_local $2
      get_local $1
      i32.add
      tee_local $11
      get_local $1
      i32.const 1
      i32.shl
      tee_local $2
      i32.lt_u
      if $if_3 (result i32)
        get_local $2
      else
        get_local $11
        tee_local $2
      end ;; $if_3
      i32.const 2
      i32.lt_u
      if $if_4
        i32.const 2
        set_local $8
      else
        get_local $2
        i32.const 4
        i32.add
        i32.const -4
        i32.and
        tee_local $2
        i32.const 1073741823
        i32.gt_u
        if $if_5
          i32.const 16218
          i32.const 16255
          i32.const 1734
          i32.const 16332
          call $___assert_fail
        else
          get_local $2
          set_local $8
        end ;; $if_5
      end ;; $if_4
    else
      i32.const 1073741807
      set_local $8
    end ;; $if_2
    get_local $8
    i32.const 2
    i32.shl
    call $__Znwj
    set_local $2
    get_local $4
    if $if_6
      get_local $2
      get_local $9
      get_local $4
      call $__ZNSt3__211char_traitsIwE4copyEPwPKwj
      drop
    end ;; $if_6
    get_local $6
    if $if_7
      get_local $2
      get_local $4
      i32.const 2
      i32.shl
      i32.add
      get_local $7
      get_local $6
      call $__ZNSt3__211char_traitsIwE4copyEPwPKwj
      drop
    end ;; $if_7
    get_local $3
    get_local $5
    i32.sub
    tee_local $3
    get_local $4
    i32.ne
    if $if_8
      get_local $2
      get_local $4
      i32.const 2
      i32.shl
      i32.add
      get_local $6
      i32.const 2
      i32.shl
      i32.add
      get_local $9
      get_local $4
      i32.const 2
      i32.shl
      i32.add
      get_local $5
      i32.const 2
      i32.shl
      i32.add
      get_local $3
      get_local $4
      i32.sub
      call $__ZNSt3__211char_traitsIwE4copyEPwPKwj
      drop
    end ;; $if_8
    get_local $1
    i32.const 1
    i32.ne
    if $if_9
      get_local $9
      call $__ZdlPv
    end ;; $if_9
    get_local $0
    get_local $2
    i32.store
    get_local $10
    get_local $8
    i32.const -2147483648
    i32.or
    i32.store
    get_local $0
    get_local $3
    get_local $6
    i32.add
    tee_local $0
    i32.store offset=4
    get_local $2
    get_local $0
    i32.const 2
    i32.shl
    i32.add
    i32.const 0
    i32.store
    )
  
  (func $__ZNSt3__26vectorI5pointNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    get_local $0
    i32.const 4
    i32.add
    tee_local $6
    i32.load
    get_local $0
    i32.load
    tee_local $3
    i32.sub
    i32.const 4
    i32.shr_s
    i32.const 1
    i32.add
    tee_local $2
    i32.const 268435455
    i32.gt_u
    if $_1
      get_local $0
      call $__ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv
    end ;; $_1
    block $__rjto$0
      block $__rjti$0
        get_local $0
        i32.const 8
        i32.add
        tee_local $12
        i32.load
        get_local $3
        i32.sub
        tee_local $7
        i32.const 4
        i32.shr_s
        i32.const 134217727
        i32.lt_u
        if $if
          block $block
            get_local $6
            i32.load
            tee_local $4
            get_local $3
            i32.sub
            i32.const 4
            i32.shr_s
            set_local $5
            get_local $7
            i32.const 3
            i32.shr_s
            tee_local $7
            get_local $2
            i32.lt_u
            if $if_1 (result i32)
              get_local $2
            else
              get_local $7
              tee_local $2
            end ;; $if_1
            if $if_2
              get_local $2
              i32.const 268435455
              i32.gt_u
              if $if_3
                block $block_1
                  i32.const 4
                  call $___cxa_allocate_exception
                  tee_local $2
                  call $__ZNSt9bad_allocC2Ev
                  get_local $2
                  i32.const 2432
                  i32.const 91
                  call $___cxa_throw
                end ;; $block_1
              else
                br $__rjti$0
              end ;; $if_3
            else
              block $block_2
                i32.const 0
                set_local $9
                i32.const 0
                set_local $8
                get_local $5
                set_local $10
                get_local $4
                set_local $11
              end ;; $block_2
            end ;; $if_2
          end ;; $block
        else
          block $block_3
            i32.const 268435455
            set_local $2
            get_local $6
            i32.load
            tee_local $5
            set_local $4
            get_local $5
            get_local $3
            i32.sub
            i32.const 4
            i32.shr_s
            set_local $5
            br $__rjti$0
          end ;; $block_3
        end ;; $if
        br $__rjto$0
      end ;; $__rjti$0
      get_local $2
      set_local $9
      get_local $2
      i32.const 4
      i32.shl
      call $__Znwj
      set_local $8
      get_local $5
      set_local $10
      get_local $4
      set_local $11
    end ;; $__rjto$0
    get_local $8
    get_local $10
    i32.const 4
    i32.shl
    i32.add
    tee_local $2
    get_local $1
    i32.load
    i32.store
    get_local $2
    get_local $1
    i32.load offset=4
    i32.store offset=4
    get_local $2
    get_local $1
    i32.load offset=8
    i32.store offset=8
    get_local $2
    get_local $1
    i32.load offset=12
    i32.store offset=12
    get_local $2
    i32.const 0
    get_local $11
    get_local $3
    i32.sub
    tee_local $1
    i32.const 4
    i32.shr_s
    i32.sub
    i32.const 4
    i32.shl
    i32.add
    set_local $4
    get_local $1
    i32.const 0
    i32.gt_s
    if $if_4
      get_local $4
      get_local $3
      get_local $1
      call $_memcpy
      drop
    end ;; $if_4
    get_local $0
    get_local $4
    i32.store
    get_local $6
    get_local $2
    i32.const 16
    i32.add
    i32.store
    get_local $12
    get_local $8
    get_local $9
    i32.const 4
    i32.shl
    i32.add
    i32.store
    get_local $3
    i32.eqz
    if $if_5
      return
    end ;; $if_5
    get_local $3
    call $__ZdlPv
    )
  
  (func $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd (type $_10)
    (param $0 i32)
    (param $1 f64)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    get_global $STACKTOP
    set_local $3
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $3
    i32.const 16
    i32.add
    set_local $4
    get_local $3
    i32.const 12
    i32.add
    set_local $7
    get_local $3
    i32.const 8
    i32.add
    set_local $2
    get_local $3
    tee_local $8
    get_local $0
    call $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_
    get_local $8
    i32.load8_s
    if $if
      block $block
        get_local $2
        get_local $0
        get_local $0
        i32.load
        i32.const -12
        i32.add
        i32.load
        i32.add
        call $__ZNKSt3__28ios_base6getlocEv
        i32.store
        get_local $2
        i32.const 19264
        call $__ZNKSt3__26locale9use_facetERNS0_2idE
        set_local $9
        get_local $2
        call $__ZNSt3__26localeD2Ev
        get_local $0
        get_local $0
        i32.load
        i32.const -12
        i32.add
        i32.load
        i32.add
        tee_local $5
        i32.load offset=24
        set_local $10
        get_local $5
        i32.const 76
        i32.add
        tee_local $6
        i32.load
        tee_local $2
        i32.const -1
        i32.eq
        if $if_1
          block $block_1
            get_local $4
            get_local $5
            call $__ZNKSt3__28ios_base6getlocEv
            i32.store
            get_local $4
            i32.const 19208
            call $__ZNKSt3__26locale9use_facetERNS0_2idE
            tee_local $2
            i32.const 32
            get_local $2
            i32.load
            i32.load offset=28
            i32.const 15
            i32.and
            i32.const 413
            i32.add
            call_indirect (type $FUNCSIG$iii)
            set_local $2
            get_local $4
            call $__ZNSt3__26localeD2Ev
            get_local $6
            get_local $2
            i32.const 24
            i32.shl
            i32.const 24
            i32.shr_s
            tee_local $2
            i32.store
          end ;; $block_1
        end ;; $if_1
        get_local $9
        i32.load
        i32.load offset=32
        set_local $6
        get_local $7
        get_local $10
        i32.store
        get_local $4
        get_local $7
        i32.load
        i32.store
        get_local $9
        get_local $4
        get_local $5
        get_local $2
        i32.const 255
        i32.and
        get_local $1
        get_local $6
        i32.const 7
        i32.and
        i32.const 304
        i32.add
        call_indirect (type $FUNCSIG$iiiiid)
        i32.eqz
        if $if_2
          get_local $0
          get_local $0
          i32.load
          i32.const -12
          i32.add
          i32.load
          i32.add
          i32.const 16
          i32.add
          tee_local $2
          get_local $2
          i32.load
          i32.const 5
          i32.or
          i32.store
        end ;; $if_2
      end ;; $block
    end ;; $if
    get_local $8
    call $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev
    get_local $3
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_local $0
    i32.load8_s offset=11
    tee_local $5
    i32.const 0
    i32.lt_s
    set_local $6
    get_local $0
    i32.const 4
    i32.add
    tee_local $8
    i32.load
    set_local $4
    get_local $5
    i32.const 255
    i32.and
    set_local $7
    block $do-once
      get_local $6
      if $_1 (result i32)
        get_local $4
      else
        get_local $7
      end ;; $_1
      if $_2
        block $_3
          get_local $1
          get_local $2
          i32.ne
          if $_4
            block $_5
              get_local $2
              set_local $4
              get_local $1
              set_local $5
              loop $while-in
                get_local $5
                get_local $4
                i32.const -4
                i32.add
                tee_local $4
                i32.lt_u
                if $_6
                  block $_7
                    get_local $5
                    i32.load
                    set_local $9
                    get_local $5
                    get_local $4
                    i32.load
                    i32.store
                    get_local $4
                    get_local $9
                    i32.store
                    get_local $5
                    i32.const 4
                    i32.add
                    set_local $5
                    br $while-in
                  end ;; $_7
                end ;; $_6
              end ;; $while-in
              get_local $8
              i32.load
              set_local $4
            end ;; $_5
          end ;; $_4
          get_local $2
          i32.const -4
          i32.add
          set_local $5
          get_local $6
          if $_8 (result i32)
            get_local $0
            i32.load
            tee_local $0
          else
            get_local $0
          end ;; $_8
          get_local $6
          if $_9 (result i32)
            get_local $4
          else
            get_local $7
          end ;; $_9
          i32.add
          set_local $6
          block $__rjto$0
            block $__rjti$0
              loop $while-in1
                block $while-out0
                  get_local $0
                  i32.load8_s
                  tee_local $2
                  i32.const 1
                  i32.lt_s
                  get_local $2
                  i32.const 127
                  i32.eq
                  i32.or
                  set_local $4
                  get_local $1
                  get_local $5
                  i32.ge_u
                  br_if $while-out0
                  get_local $4
                  i32.eqz
                  if $if
                    get_local $2
                    get_local $1
                    i32.load
                    i32.ne
                    br_if $__rjti$0
                  end ;; $if
                  get_local $6
                  get_local $0
                  i32.sub
                  i32.const 1
                  i32.gt_s
                  if $if_1
                    get_local $0
                    i32.const 1
                    i32.add
                    set_local $0
                  end ;; $if_1
                  get_local $1
                  i32.const 4
                  i32.add
                  set_local $1
                  br $while-in1
                end ;; $while-out0
              end ;; $while-in1
              br $__rjto$0
            end ;; $__rjti$0
            get_local $3
            i32.const 4
            i32.store
            br $do-once
          end ;; $__rjto$0
          get_local $4
          i32.eqz
          if $if_2
            get_local $5
            i32.load
            i32.const -1
            i32.add
            get_local $2
            i32.ge_u
            if $if_3
              get_local $3
              i32.const 4
              i32.store
            end ;; $if_3
          end ;; $if_2
        end ;; $_3
      end ;; $_2
    end ;; $do-once
    )
  
  (func $__ZNSt3__214__num_put_base14__format_floatEPcPKcj (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_local $2
    i32.const 2048
    i32.and
    if $_1
      block $_2
        get_local $0
        i32.const 43
        i32.store8
        get_local $0
        i32.const 1
        i32.add
        set_local $0
      end ;; $_2
    end ;; $_1
    get_local $2
    i32.const 1024
    i32.and
    if $_3
      block $_4
        get_local $0
        i32.const 35
        i32.store8
        get_local $0
        i32.const 1
        i32.add
        set_local $0
      end ;; $_4
    end ;; $_3
    get_local $2
    i32.const 260
    i32.and
    tee_local $3
    i32.const 260
    i32.eq
    tee_local $4
    if $_5 (result i32)
      i32.const 0
    else
      block $_6 (result i32)
        get_local $0
        i32.const 46
        i32.store8
        get_local $0
        i32.const 42
        i32.store8 offset=1
        get_local $0
        i32.const 2
        i32.add
        set_local $0
        i32.const 1
      end ;; $_6
    end ;; $_5
    set_local $5
    get_local $2
    i32.const 14
    i32.shr_u
    set_local $2
    loop $while-in
      get_local $1
      i32.load8_s
      tee_local $6
      if $_7
        block $_8
          get_local $0
          get_local $6
          i32.store8
          get_local $1
          i32.const 1
          i32.add
          set_local $1
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_8
      end ;; $_7
    end ;; $while-in
    block $label$break$L14
      block $switch-default
        block $switch-case0
          block $switch-case
            get_local $3
            i32.const 4
            i32.sub
            br_table
              $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0
              $switch-default ;; default
          end ;; $switch-case
          get_local $2
          i32.const 1
          i32.and
          if $if
            block $block
              get_local $0
              i32.const 70
              i32.store8
              br $label$break$L14
            end ;; $block
          else
            block $block_1
              get_local $0
              i32.const 102
              i32.store8
              br $label$break$L14
            end ;; $block_1
          end ;; $if
        end ;; $switch-case0
        get_local $2
        i32.const 1
        i32.and
        if $if_1
          block $block_2
            get_local $0
            i32.const 69
            i32.store8
            br $label$break$L14
          end ;; $block_2
        else
          block $block_3
            get_local $0
            i32.const 101
            i32.store8
            br $label$break$L14
          end ;; $block_3
        end ;; $if_1
      end ;; $switch-default
      get_local $2
      i32.const 1
      i32.and
      i32.const 0
      i32.ne
      set_local $1
      get_local $4
      if $if_2
        get_local $1
        if $if_3
          get_local $0
          i32.const 65
          i32.store8
        else
          get_local $0
          i32.const 97
          i32.store8
        end ;; $if_3
      else
        get_local $1
        if $if_4
          get_local $0
          i32.const 71
          i32.store8
        else
          get_local $0
          i32.const 103
          i32.store8
        end ;; $if_4
      end ;; $if_2
    end ;; $label$break$L14
    get_local $5
    )
  
  (func $__ZL25default_terminate_handlerv (type $FUNCSIG$v)
    (local $0 i32)
    (local $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $1
    get_global $STACKTOP
    i32.const 48
    i32.add
    set_global $STACKTOP
    get_local $1
    i32.const 24
    i32.add
    set_local $2
    get_local $1
    i32.const 16
    i32.add
    set_local $5
    get_local $1
    set_local $3
    get_local $1
    i32.const 36
    i32.add
    set_local $6
    call $___cxa_get_globals_fast
    tee_local $0
    if $if
      get_local $0
      i32.load
      tee_local $4
      if $if_1
        block $block
          get_local $4
          i32.const 48
          i32.add
          tee_local $0
          i32.load
          tee_local $7
          i32.const -256
          i32.and
          i32.const 1126902528
          i32.eq
          get_local $0
          i32.load offset=4
          tee_local $0
          i32.const 1129074247
          i32.eq
          i32.and
          i32.eqz
          if $if_2
            block $block_1
              get_local $2
              i32.const 9688
              i32.load
              i32.store
              i32.const 16718
              get_local $2
              call $_abort_message
            end ;; $block_1
          end ;; $if_2
          get_local $6
          get_local $7
          i32.const 1126902529
          i32.eq
          get_local $0
          i32.const 1129074247
          i32.eq
          i32.and
          if $if_3 (result i32)
            get_local $4
            i32.load offset=44
          else
            get_local $4
            i32.const 80
            i32.add
          end ;; $if_3
          tee_local $0
          i32.store
          get_local $4
          i32.load
          tee_local $0
          i32.load offset=4
          set_local $2
          i32.const 2368
          get_local $0
          get_local $6
          i32.const 2368
          i32.load
          i32.load offset=16
          i32.const 31
          i32.and
          i32.const 8
          i32.add
          call_indirect (type $FUNCSIG$iiii)
          if $if_4
            block $block_2
              i32.const 9688
              i32.load
              set_local $7
              get_local $6
              i32.load
              tee_local $0
              get_local $0
              i32.load
              i32.load offset=8
              i32.const 63
              i32.and
              i32.const 312
              i32.add
              call_indirect (type $FUNCSIG$ii)
              set_local $0
              get_local $3
              get_local $7
              i32.store
              get_local $3
              get_local $2
              i32.store offset=4
              get_local $3
              get_local $0
              i32.store offset=8
              i32.const 16632
              get_local $3
              call $_abort_message
            end ;; $block_2
          else
            block $block_3
              get_local $5
              i32.const 9688
              i32.load
              i32.store
              get_local $5
              get_local $2
              i32.store offset=4
              i32.const 16677
              get_local $5
              call $_abort_message
            end ;; $block_3
          end ;; $if_4
        end ;; $block
      end ;; $if_1
    end ;; $if
    i32.const 16756
    get_local $1
    i32.const 32
    i32.add
    call $_abort_message
    )
  
  (func $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $5
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $5
    set_local $4
    get_local $0
    i32.load offset=8
    tee_local $6
    get_local $0
    i32.const 4
    i32.add
    tee_local $2
    i32.load
    tee_local $3
    i32.sub
    i32.const 2
    i32.shr_s
    get_local $1
    i32.lt_u
    if $_1
      block $_2
        get_local $3
        get_local $0
        i32.load
        tee_local $2
        i32.sub
        i32.const 2
        i32.shr_s
        tee_local $7
        get_local $1
        i32.add
        tee_local $3
        i32.const 1073741823
        i32.gt_u
        if $_3
          get_local $0
          call $__ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv
        end ;; $_3
        get_local $6
        get_local $2
        i32.sub
        tee_local $2
        i32.const 2
        i32.shr_s
        i32.const 536870911
        i32.lt_u
        if $_4
          get_local $2
          i32.const 1
          i32.shr_s
          tee_local $2
          get_local $3
          i32.ge_u
          if $_5
            get_local $2
            set_local $3
          end ;; $_5
        else
          i32.const 1073741823
          set_local $3
        end ;; $_4
        get_local $4
        get_local $3
        get_local $7
        get_local $0
        i32.const 16
        i32.add
        call $__ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_
        get_local $4
        i32.const 8
        i32.add
        tee_local $3
        i32.load
        tee_local $2
        i32.const 0
        get_local $1
        i32.const 2
        i32.shl
        call $_memset
        drop
        get_local $3
        get_local $2
        get_local $1
        i32.const 2
        i32.shl
        i32.add
        i32.store
        get_local $0
        get_local $4
        call $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE
        get_local $4
        call $__ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev
      end ;; $_2
    else
      loop $do-in
        get_local $3
        i32.const 0
        i32.store
        get_local $2
        get_local $2
        i32.load
        i32.const 4
        i32.add
        tee_local $3
        i32.store
        get_local $1
        i32.const -1
        i32.add
        tee_local $1
        br_if $do-in
      end ;; $do-in
    end ;; $_1
    get_local $5
    set_global $STACKTOP
    )
  
  (func $_mbtowc (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    get_global $STACKTOP
    set_local $5
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $5
    set_local $3
    block $label$break$L1 (result i32)
      get_local $1
      if $_1 (result i32)
        block $_2 (result i32)
          block $do-once
            get_local $2
            if $if
              block $block
                get_local $0
                i32.eqz
                if $if_1
                  get_local $3
                  set_local $0
                end ;; $if_1
                get_local $1
                i32.load8_s
                tee_local $3
                i32.const 255
                i32.and
                set_local $4
                get_local $3
                i32.const -1
                i32.gt_s
                if $if_2
                  block $block_1
                    get_local $0
                    get_local $4
                    i32.store
                    get_local $3
                    i32.const 0
                    i32.ne
                    br $label$break$L1
                  end ;; $block_1
                end ;; $if_2
                get_local $4
                i32.const -194
                i32.add
                tee_local $3
                i32.const 50
                i32.le_u
                if $if_3
                  block $block_2
                    get_local $3
                    i32.const 2
                    i32.shl
                    i32.const 2496
                    i32.add
                    i32.load
                    set_local $3
                    get_local $2
                    i32.const 4
                    i32.lt_u
                    if $if_4
                      get_local $3
                      i32.const -2147483648
                      get_local $2
                      i32.const 6
                      i32.mul
                      i32.const -6
                      i32.add
                      i32.shr_u
                      i32.and
                      br_if $do-once
                    end ;; $if_4
                    get_local $1
                    i32.load8_u offset=1
                    tee_local $2
                    i32.const 3
                    i32.shr_u
                    tee_local $4
                    i32.const -16
                    i32.add
                    get_local $4
                    get_local $3
                    i32.const 26
                    i32.shr_s
                    i32.add
                    i32.or
                    i32.const 7
                    i32.le_u
                    if $if_5
                      block $block_3
                        get_local $2
                        i32.const -128
                        i32.add
                        get_local $3
                        i32.const 6
                        i32.shl
                        i32.or
                        tee_local $2
                        i32.const 0
                        i32.ge_s
                        if $if_6
                          block $block_4
                            get_local $0
                            get_local $2
                            i32.store
                            i32.const 2
                            br $label$break$L1
                          end ;; $block_4
                        end ;; $if_6
                        get_local $1
                        i32.load8_u offset=2
                        tee_local $3
                        i32.const 192
                        i32.and
                        i32.const 128
                        i32.eq
                        if $if_7
                          block $block_5
                            get_local $3
                            i32.const -128
                            i32.add
                            get_local $2
                            i32.const 6
                            i32.shl
                            i32.or
                            tee_local $2
                            i32.const 0
                            i32.ge_s
                            if $if_8
                              block $block_6
                                get_local $0
                                get_local $2
                                i32.store
                                i32.const 3
                                br $label$break$L1
                              end ;; $block_6
                            end ;; $if_8
                            get_local $1
                            i32.load8_u offset=3
                            tee_local $1
                            i32.const 192
                            i32.and
                            i32.const 128
                            i32.eq
                            if $if_9
                              block $block_7
                                get_local $0
                                get_local $1
                                i32.const -128
                                i32.add
                                get_local $2
                                i32.const 6
                                i32.shl
                                i32.or
                                i32.store
                                i32.const 4
                                br $label$break$L1
                              end ;; $block_7
                            end ;; $if_9
                          end ;; $block_5
                        end ;; $if_7
                      end ;; $block_3
                    end ;; $if_5
                  end ;; $block_2
                end ;; $if_3
              end ;; $block
            end ;; $if
          end ;; $do-once
          call $___errno_location
          i32.const 84
          i32.store
          i32.const -1
        end ;; $_2
      else
        i32.const 0
      end ;; $_1
    end ;; $label$break$L1
    set_local $0
    get_local $5
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc (type $FUNCSIG$iiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (result i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 112
    i32.add
    set_global $STACKTOP
    get_local $7
    tee_local $3
    get_local $7
    i32.const 4
    i32.add
    tee_local $2
    i32.const 100
    i32.add
    i32.store
    get_local $0
    i32.const 8
    i32.add
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    get_local $6
    call $__ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc
    get_local $3
    i32.load
    set_local $3
    get_local $1
    i32.load
    set_local $0
    loop $while-in
      get_local $2
      get_local $3
      i32.ne
      if $if
        block $block
          get_local $2
          i32.load8_s
          set_local $5
          get_local $0
          if $if_1
            get_local $0
            i32.const 24
            i32.add
            tee_local $1
            i32.load
            tee_local $4
            get_local $0
            i32.load offset=28
            i32.eq
            if $if_2
              get_local $0
              get_local $5
              i32.const 255
              i32.and
              get_local $0
              i32.load
              i32.load offset=52
              i32.const 15
              i32.and
              i32.const 413
              i32.add
              call_indirect (type $FUNCSIG$iii)
              i32.const -1
              i32.eq
              if $if_3
                i32.const 0
                set_local $0
              end ;; $if_3
            else
              block $block_1
                get_local $1
                get_local $4
                i32.const 1
                i32.add
                i32.store
                get_local $4
                get_local $5
                i32.store8
              end ;; $block_1
            end ;; $if_2
          else
            i32.const 0
            set_local $0
          end ;; $if_1
          get_local $2
          i32.const 1
          i32.add
          set_local $2
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $7
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorIS9_EE5valueERS5_E4typeES9_S9_ (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_local $0
    i32.const 8
    i32.add
    tee_local $3
    i32.const 3
    i32.add
    tee_local $8
    i32.load8_s
    tee_local $6
    i32.const 0
    i32.lt_s
    if $_1 (result i32)
      block $_2 (result i32)
        get_local $3
        i32.load
        i32.const 2147483647
        i32.and
        i32.const -1
        i32.add
        set_local $5
        get_local $0
        i32.load offset=4
      end ;; $_2
    else
      block $_3 (result i32)
        i32.const 1
        set_local $5
        get_local $6
        i32.const 255
        i32.and
      end ;; $_3
    end ;; $_1
    set_local $4
    get_local $2
    get_local $1
    tee_local $3
    i32.sub
    i32.const 2
    i32.shr_s
    tee_local $7
    if $_4
      block $_5
        get_local $5
        get_local $4
        i32.sub
        get_local $7
        i32.lt_u
        if $_6
          block $_7
            get_local $0
            get_local $5
            get_local $4
            get_local $7
            i32.add
            get_local $5
            i32.sub
            get_local $4
            get_local $4
            i32.const 0
            i32.const 0
            call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj
            get_local $8
            i32.load8_s
            set_local $6
          end ;; $_7
        end ;; $_6
        get_local $4
        get_local $2
        get_local $3
        i32.sub
        i32.const 2
        i32.shr_u
        i32.add
        set_local $9
        get_local $6
        i32.const 24
        i32.shl
        i32.const 24
        i32.shr_s
        i32.const 0
        i32.lt_s
        tee_local $5
        if $_8 (result i32)
          get_local $0
          i32.load
        else
          get_local $0
        end ;; $_8
        tee_local $6
        get_local $4
        i32.const 2
        i32.shl
        i32.add
        set_local $3
        loop $while-in
          get_local $1
          get_local $2
          i32.ne
          if $if
            block $block
              get_local $3
              get_local $1
              i32.load
              i32.store
              get_local $1
              i32.const 4
              i32.add
              set_local $1
              get_local $3
              i32.const 4
              i32.add
              set_local $3
              br $while-in
            end ;; $block
          end ;; $if
        end ;; $while-in
        get_local $6
        get_local $9
        i32.const 2
        i32.shl
        i32.add
        i32.const 0
        i32.store
        get_local $4
        get_local $7
        i32.add
        set_local $1
        get_local $5
        if $if_1
          get_local $0
          get_local $1
          i32.store offset=4
        else
          get_local $8
          get_local $1
          i32.store8
        end ;; $if_1
      end ;; $_5
    end ;; $_4
    get_local $0
    )
  
  (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorIS9_EE5valueERS5_E4typeES9_S9_ (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    get_local $0
    i32.const 11
    i32.add
    tee_local $7
    i32.load8_s
    tee_local $5
    i32.const 0
    i32.lt_s
    if $_1 (result i32)
      block $_2 (result i32)
        get_local $0
        i32.load offset=8
        i32.const 2147483647
        i32.and
        i32.const -1
        i32.add
        set_local $4
        get_local $0
        i32.load offset=4
      end ;; $_2
    else
      block $_3 (result i32)
        i32.const 10
        set_local $4
        get_local $5
        i32.const 255
        i32.and
      end ;; $_3
    end ;; $_1
    set_local $3
    get_local $2
    get_local $1
    tee_local $6
    i32.sub
    set_local $8
    get_local $2
    get_local $1
    i32.ne
    if $_4
      block $_5
        get_local $4
        get_local $3
        i32.sub
        get_local $8
        i32.lt_u
        if $_6
          block $_7
            get_local $0
            get_local $4
            get_local $3
            get_local $8
            i32.add
            get_local $4
            i32.sub
            get_local $3
            get_local $3
            i32.const 0
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj
            get_local $7
            i32.load8_s
            set_local $5
          end ;; $_7
        end ;; $_6
        get_local $2
        get_local $3
        get_local $6
        i32.sub
        i32.add
        set_local $4
        get_local $5
        i32.const 24
        i32.shl
        i32.const 24
        i32.shr_s
        i32.const 0
        i32.lt_s
        if $_8 (result i32)
          get_local $0
          i32.load
        else
          get_local $0
        end ;; $_8
        tee_local $5
        get_local $3
        i32.add
        set_local $6
        loop $while-in
          get_local $1
          get_local $2
          i32.ne
          if $if
            block $block
              get_local $6
              get_local $1
              i32.load8_s
              i32.store8
              get_local $1
              i32.const 1
              i32.add
              set_local $1
              get_local $6
              i32.const 1
              i32.add
              set_local $6
              br $while-in
            end ;; $block
          end ;; $if
        end ;; $while-in
        get_local $5
        get_local $4
        i32.add
        i32.const 0
        i32.store8
        get_local $3
        get_local $8
        i32.add
        set_local $1
        get_local $7
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $if_1
          get_local $0
          get_local $1
          i32.store offset=4
        else
          get_local $7
          get_local $1
          i32.store8
        end ;; $if_1
      end ;; $_5
    end ;; $_4
    get_local $0
    )
  
  (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc (type $_9)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (local $8 i32)
    (local $9 i32)
    i32.const -18
    get_local $1
    i32.sub
    get_local $2
    i32.lt_u
    if $if
      get_local $0
      call $__ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv
    end ;; $if
    get_local $0
    i32.load8_s offset=11
    i32.const 0
    i32.lt_s
    if $if_1 (result i32)
      get_local $0
      i32.load
    else
      get_local $0
    end ;; $if_1
    set_local $8
    get_local $1
    i32.const 2147483623
    i32.lt_u
    if $if_2 (result i32)
      get_local $2
      get_local $1
      i32.add
      tee_local $9
      get_local $1
      i32.const 1
      i32.shl
      tee_local $2
      i32.lt_u
      if $if_3 (result i32)
        get_local $2
      else
        get_local $9
        tee_local $2
      end ;; $if_3
      i32.const 11
      i32.lt_u
      if $if_4 (result i32)
        i32.const 11
      else
        get_local $2
        i32.const 16
        i32.add
        i32.const -16
        i32.and
      end ;; $if_4
    else
      i32.const -17
    end ;; $if_2
    tee_local $9
    call $__Znwj
    set_local $2
    get_local $4
    if $if_5
      get_local $2
      get_local $8
      get_local $4
      call $_memcpy
      drop
    end ;; $if_5
    get_local $6
    if $if_6
      get_local $2
      get_local $4
      i32.add
      get_local $7
      get_local $6
      call $_memcpy
      drop
    end ;; $if_6
    get_local $3
    get_local $5
    i32.sub
    tee_local $3
    get_local $4
    i32.ne
    if $if_7
      get_local $2
      get_local $4
      i32.add
      get_local $6
      i32.add
      get_local $8
      get_local $4
      i32.add
      get_local $5
      i32.add
      get_local $3
      get_local $4
      i32.sub
      call $_memcpy
      drop
    end ;; $if_7
    get_local $1
    i32.const 10
    i32.ne
    if $if_8
      get_local $8
      call $__ZdlPv
    end ;; $if_8
    get_local $0
    get_local $2
    i32.store
    get_local $0
    get_local $9
    i32.const -2147483648
    i32.or
    i32.store offset=8
    get_local $0
    get_local $3
    get_local $6
    i32.add
    tee_local $0
    i32.store offset=4
    get_local $2
    get_local $0
    i32.add
    i32.const 0
    i32.store8
    )
  
  (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj (type $_5)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    i32.const 1073741807
    get_local $1
    i32.sub
    get_local $2
    i32.lt_u
    if $if
      get_local $0
      call $__ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv
    end ;; $if
    get_local $0
    i32.const 8
    i32.add
    tee_local $9
    i32.load8_s offset=3
    i32.const 0
    i32.lt_s
    if $if_1 (result i32)
      get_local $0
      i32.load
    else
      get_local $0
    end ;; $if_1
    set_local $8
    get_local $1
    i32.const 536870887
    i32.lt_u
    if $if_2
      get_local $2
      get_local $1
      i32.add
      tee_local $10
      get_local $1
      i32.const 1
      i32.shl
      tee_local $2
      i32.lt_u
      if $if_3 (result i32)
        get_local $2
      else
        get_local $10
        tee_local $2
      end ;; $if_3
      i32.const 2
      i32.lt_u
      if $if_4
        i32.const 2
        set_local $7
      else
        get_local $2
        i32.const 4
        i32.add
        i32.const -4
        i32.and
        tee_local $2
        i32.const 1073741823
        i32.gt_u
        if $if_5
          i32.const 16218
          i32.const 16255
          i32.const 1734
          i32.const 16332
          call $___assert_fail
        else
          get_local $2
          set_local $7
        end ;; $if_5
      end ;; $if_4
    else
      i32.const 1073741807
      set_local $7
    end ;; $if_2
    get_local $7
    i32.const 2
    i32.shl
    call $__Znwj
    set_local $2
    get_local $4
    if $if_6
      get_local $2
      get_local $8
      get_local $4
      call $__ZNSt3__211char_traitsIwE4copyEPwPKwj
      drop
    end ;; $if_6
    get_local $3
    get_local $5
    i32.sub
    tee_local $3
    get_local $4
    i32.ne
    if $if_7
      get_local $2
      get_local $4
      i32.const 2
      i32.shl
      i32.add
      get_local $6
      i32.const 2
      i32.shl
      i32.add
      get_local $8
      get_local $4
      i32.const 2
      i32.shl
      i32.add
      get_local $5
      i32.const 2
      i32.shl
      i32.add
      get_local $3
      get_local $4
      i32.sub
      call $__ZNSt3__211char_traitsIwE4copyEPwPKwj
      drop
    end ;; $if_7
    get_local $1
    i32.const 1
    i32.ne
    if $if_8
      get_local $8
      call $__ZdlPv
    end ;; $if_8
    get_local $0
    get_local $2
    i32.store
    get_local $9
    get_local $7
    i32.const -2147483648
    i32.or
    i32.store
    )
  
  (func $__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc (type $FUNCSIG$iiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (result i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 416
    i32.add
    set_global $STACKTOP
    get_local $7
    tee_local $3
    get_local $7
    i32.const 8
    i32.add
    tee_local $2
    i32.const 400
    i32.add
    i32.store
    get_local $0
    i32.const 8
    i32.add
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    get_local $6
    call $__ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc
    get_local $3
    i32.load
    set_local $4
    get_local $1
    i32.load
    set_local $0
    loop $while-in
      get_local $2
      get_local $4
      i32.ne
      if $if
        block $block
          get_local $2
          i32.load
          set_local $1
          get_local $0
          if $if_1
            block $block_1
              get_local $0
              i32.const 24
              i32.add
              tee_local $3
              i32.load
              tee_local $5
              get_local $0
              i32.load offset=28
              i32.eq
              if $if_2
                get_local $0
                get_local $1
                get_local $0
                i32.load
                i32.load offset=52
                i32.const 15
                i32.and
                i32.const 413
                i32.add
                call_indirect (type $FUNCSIG$iii)
                set_local $1
              else
                block $block_2
                  get_local $3
                  get_local $5
                  i32.const 4
                  i32.add
                  i32.store
                  get_local $5
                  get_local $1
                  i32.store
                end ;; $block_2
              end ;; $if_2
              get_local $1
              i32.const -1
              i32.eq
              if $if_3
                i32.const 0
                set_local $0
              end ;; $if_3
            end ;; $block_1
          else
            i32.const 0
            set_local $0
          end ;; $if_1
          get_local $2
          i32.const 4
          i32.add
          set_local $2
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $7
    set_global $STACKTOP
    get_local $0
    )
  
  (func $___fwritex (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    block $label$break$L5
      block $__rjti$0
        get_local $2
        i32.const 16
        i32.add
        tee_local $4
        i32.load
        tee_local $3
        br_if $__rjti$0
        get_local $2
        call $___towrite
        if $_1
          i32.const 0
          set_local $3
        else
          block $_2
            get_local $4
            i32.load
            set_local $3
            br $__rjti$0
          end ;; $_2
        end ;; $_1
        br $label$break$L5
      end ;; $__rjti$0
      get_local $3
      get_local $2
      i32.const 20
      i32.add
      tee_local $5
      i32.load
      tee_local $4
      i32.sub
      get_local $1
      i32.lt_u
      if $_3
        block $_4
          get_local $2
          get_local $0
          get_local $1
          get_local $2
          i32.load offset=36
          i32.const 31
          i32.and
          i32.const 8
          i32.add
          call_indirect (type $FUNCSIG$iiii)
          set_local $3
          br $label$break$L5
        end ;; $_4
      end ;; $_3
      block $label$break$L10
        get_local $2
        i32.load8_s offset=75
        i32.const -1
        i32.gt_s
        if $_5
          block $_6
            get_local $1
            set_local $3
            loop $while-in
              get_local $3
              i32.eqz
              if $if
                block $block
                  i32.const 0
                  set_local $3
                  br $label$break$L10
                end ;; $block
              end ;; $if
              get_local $0
              get_local $3
              i32.const -1
              i32.add
              tee_local $6
              i32.add
              i32.load8_s
              i32.const 10
              i32.ne
              if $if_1
                block $block_1
                  get_local $6
                  set_local $3
                  br $while-in
                end ;; $block_1
              end ;; $if_1
            end ;; $while-in
            get_local $2
            get_local $0
            get_local $3
            get_local $2
            i32.load offset=36
            i32.const 31
            i32.and
            i32.const 8
            i32.add
            call_indirect (type $FUNCSIG$iiii)
            get_local $3
            i32.lt_u
            br_if $label$break$L5
            get_local $1
            get_local $3
            i32.sub
            set_local $1
            get_local $0
            get_local $3
            i32.add
            set_local $0
            get_local $5
            i32.load
            set_local $4
          end ;; $_6
        else
          i32.const 0
          set_local $3
        end ;; $_5
      end ;; $label$break$L10
      get_local $4
      get_local $0
      get_local $1
      call $_memcpy
      drop
      get_local $5
      get_local $5
      i32.load
      get_local $1
      i32.add
      i32.store
      get_local $3
      get_local $1
      i32.add
      set_local $3
    end ;; $label$break$L5
    get_local $3
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 8
    i32.add
    tee_local $0
    get_local $0
    i32.load
    i32.load offset=8
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    tee_local $6
    i32.load8_s offset=11
    tee_local $0
    i32.const 0
    i32.lt_s
    if $_1 (result i32)
      get_local $6
      i32.load offset=4
    else
      get_local $0
      i32.const 255
      i32.and
    end ;; $_1
    set_local $9
    get_local $6
    i32.load8_s offset=23
    tee_local $0
    i32.const 0
    i32.lt_s
    if $_2 (result i32)
      get_local $6
      i32.load offset=16
    else
      get_local $0
      i32.const 255
      i32.and
    end ;; $_2
    set_local $10
    get_local $7
    i32.const 4
    i32.add
    set_local $8
    get_local $7
    set_local $0
    block $do-once
      get_local $9
      i32.const 0
      get_local $10
      i32.sub
      i32.eq
      if $if
        get_local $4
        get_local $4
        i32.load
        i32.const 4
        i32.or
        i32.store
      else
        block $block
          get_local $0
          get_local $3
          i32.load
          i32.store
          get_local $8
          get_local $0
          i32.load
          i32.store
          get_local $2
          get_local $8
          get_local $6
          get_local $6
          i32.const 24
          i32.add
          get_local $5
          get_local $4
          i32.const 0
          call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb
          tee_local $2
          get_local $6
          i32.eq
          get_local $1
          i32.load
          tee_local $0
          i32.const 12
          i32.eq
          i32.and
          if $if_1
            block $block_1
              get_local $1
              i32.const 0
              i32.store
              br $do-once
            end ;; $block_1
          end ;; $if_1
          get_local $0
          i32.const 12
          i32.lt_s
          get_local $2
          get_local $6
          i32.sub
          i32.const 12
          i32.eq
          i32.and
          if $if_2
            get_local $1
            get_local $0
            i32.const 12
            i32.add
            i32.store
          end ;; $if_2
        end ;; $block
      end ;; $if
    end ;; $do-once
    get_local $7
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 8
    i32.add
    tee_local $0
    get_local $0
    i32.load
    i32.load offset=8
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    tee_local $6
    i32.load8_s offset=11
    tee_local $0
    i32.const 0
    i32.lt_s
    if $_1 (result i32)
      get_local $6
      i32.load offset=4
    else
      get_local $0
      i32.const 255
      i32.and
    end ;; $_1
    set_local $9
    get_local $6
    i32.load8_s offset=23
    tee_local $0
    i32.const 0
    i32.lt_s
    if $_2 (result i32)
      get_local $6
      i32.load offset=16
    else
      get_local $0
      i32.const 255
      i32.and
    end ;; $_2
    set_local $10
    get_local $7
    i32.const 4
    i32.add
    set_local $8
    get_local $7
    set_local $0
    block $do-once
      get_local $9
      i32.const 0
      get_local $10
      i32.sub
      i32.eq
      if $if
        get_local $4
        get_local $4
        i32.load
        i32.const 4
        i32.or
        i32.store
      else
        block $block
          get_local $0
          get_local $3
          i32.load
          i32.store
          get_local $8
          get_local $0
          i32.load
          i32.store
          get_local $2
          get_local $8
          get_local $6
          get_local $6
          i32.const 24
          i32.add
          get_local $5
          get_local $4
          i32.const 0
          call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb
          tee_local $2
          get_local $6
          i32.eq
          get_local $1
          i32.load
          tee_local $0
          i32.const 12
          i32.eq
          i32.and
          if $if_1
            block $block_1
              get_local $1
              i32.const 0
              i32.store
              br $do-once
            end ;; $block_1
          end ;; $if_1
          get_local $0
          i32.const 12
          i32.lt_s
          get_local $2
          get_local $6
          i32.sub
          i32.const 12
          i32.eq
          i32.and
          if $if_2
            get_local $1
            get_local $0
            i32.const 12
            i32.add
            i32.store
          end ;; $if_2
        end ;; $block
      end ;; $if
    end ;; $do-once
    get_local $7
    set_global $STACKTOP
    )
  
  (func $___shgetc (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    block $__rjto$2
      block $__rjti$2
        get_local $0
        i32.const 104
        i32.add
        tee_local $3
        i32.load
        tee_local $2
        if $_1
          get_local $0
          i32.load offset=108
          get_local $2
          i32.ge_s
          br_if $__rjti$2
        end ;; $_1
        get_local $0
        call $___uflow
        tee_local $2
        i32.const 0
        i32.lt_s
        br_if $__rjti$2
        get_local $0
        i32.load offset=8
        set_local $1
        block $__rjto$0
          block $__rjti$0
            get_local $3
            i32.load
            tee_local $4
            if $if
              block $block
                get_local $1
                set_local $3
                get_local $1
                get_local $0
                i32.load offset=4
                tee_local $5
                i32.sub
                get_local $4
                get_local $0
                i32.load offset=108
                i32.sub
                tee_local $4
                i32.lt_s
                br_if $__rjti$0
                get_local $0
                get_local $5
                get_local $4
                i32.const -1
                i32.add
                i32.add
                i32.store offset=100
              end ;; $block
            else
              block $block_1
                get_local $1
                set_local $3
                br $__rjti$0
              end ;; $block_1
            end ;; $if
            br $__rjto$0
          end ;; $__rjti$0
          get_local $0
          get_local $1
          i32.store offset=100
        end ;; $__rjto$0
        get_local $0
        i32.const 4
        i32.add
        set_local $1
        get_local $3
        if $if_1
          get_local $0
          i32.const 108
          i32.add
          tee_local $4
          get_local $3
          i32.const 1
          i32.add
          get_local $1
          i32.load
          tee_local $0
          i32.sub
          get_local $4
          i32.load
          i32.add
          i32.store
        else
          get_local $1
          i32.load
          set_local $0
        end ;; $if_1
        get_local $0
        i32.const -1
        i32.add
        tee_local $0
        i32.load8_u
        get_local $2
        i32.ne
        if $if_2
          get_local $0
          get_local $2
          i32.store8
        end ;; $if_2
        br $__rjto$2
      end ;; $__rjti$2
      get_local $0
      i32.const 0
      i32.store offset=100
      i32.const -1
      set_local $2
    end ;; $__rjto$2
    get_local $2
    )
  
  (func $__ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    set_local $7
    get_local $0
    get_local $1
    i32.eq
    if $_1
      block $_2
        get_local $2
        i32.const 4
        i32.store
        i32.const 0
        set_local $0
      end ;; $_2
    else
      block $_3
        call $___errno_location
        tee_local $5
        i32.load
        set_local $4
        get_local $5
        i32.const 0
        i32.store
        get_local $0
        get_local $7
        get_local $3
        call $__ZNSt3__26__clocEv
        call $_strtoll_l
        set_local $0
        get_local $5
        i32.load
        tee_local $3
        i32.eqz
        if $_4
          get_local $5
          get_local $4
          i32.store
        end ;; $_4
        get_global $tempRet0
        set_local $4
        block $label$break$L7
          get_local $7
          i32.load
          get_local $1
          i32.eq
          if $_5 (result i32)
            block $_6 (result i32)
              block $do-once
                get_local $3
                i32.const 34
                i32.eq
                if $if
                  block $block
                    get_local $2
                    i32.const 4
                    i32.store
                    get_local $4
                    i32.const 0
                    i32.gt_s
                    get_local $4
                    i32.eqz
                    get_local $0
                    i32.const 0
                    i32.gt_u
                    i32.and
                    i32.or
                    if $if_1
                      block $block_1
                        i32.const 2147483647
                        set_local $0
                        br $label$break$L7
                      end ;; $block_1
                    end ;; $if_1
                  end ;; $block
                else
                  block $block_2
                    get_local $4
                    i32.const -1
                    i32.lt_s
                    get_local $4
                    i32.const -1
                    i32.eq
                    get_local $0
                    i32.const -2147483648
                    i32.lt_u
                    i32.and
                    i32.or
                    if $if_2
                      block $block_3
                        get_local $2
                        i32.const 4
                        i32.store
                        br $do-once
                      end ;; $block_3
                    end ;; $if_2
                    get_local $4
                    i32.const 0
                    i32.gt_s
                    get_local $4
                    i32.eqz
                    get_local $0
                    i32.const 2147483647
                    i32.gt_u
                    i32.and
                    i32.or
                    i32.eqz
                    br_if $label$break$L7
                    get_local $2
                    i32.const 4
                    i32.store
                    i32.const 2147483647
                    set_local $0
                    br $label$break$L7
                  end ;; $block_2
                end ;; $if
              end ;; $do-once
              i32.const -2147483648
            end ;; $_6
          else
            block $block_4 (result i32)
              get_local $2
              i32.const 4
              i32.store
              i32.const 0
            end ;; $block_4
          end ;; $_5
          set_local $0
        end ;; $label$break$L7
      end ;; $_3
    end ;; $_1
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $_vsnprintf (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 128
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 112
    i32.add
    set_local $4
    i32.const 3052
    set_local $7
    get_local $6
    tee_local $5
    tee_local $8
    i32.const 112
    i32.add
    set_local $9
    loop $do-in
      get_local $8
      get_local $7
      i32.load
      i32.store
      get_local $7
      i32.const 4
      i32.add
      set_local $7
      get_local $8
      i32.const 4
      i32.add
      tee_local $8
      get_local $9
      i32.lt_s
      br_if $do-in
    end ;; $do-in
    block $__rjto$0
      block $__rjti$0
        get_local $1
        i32.const -1
        i32.add
        i32.const 2147483646
        i32.gt_u
        if $if
          get_local $1
          if $if_1
            block $block
              call $___errno_location
              i32.const 75
              i32.store
              i32.const -1
              set_local $0
            end ;; $block
          else
            block $block_1
              get_local $4
              set_local $0
              i32.const 1
              set_local $4
              br $__rjti$0
            end ;; $block_1
          end ;; $if_1
        else
          block $block_2
            get_local $1
            set_local $4
            br $__rjti$0
          end ;; $block_2
        end ;; $if
        br $__rjto$0
      end ;; $__rjti$0
      get_local $5
      get_local $4
      i32.const -2
      get_local $0
      i32.sub
      tee_local $1
      i32.gt_u
      if $if_2 (result i32)
        get_local $1
      else
        get_local $4
        tee_local $1
      end ;; $if_2
      i32.store offset=48
      get_local $5
      i32.const 20
      i32.add
      tee_local $9
      get_local $0
      i32.store
      get_local $5
      get_local $0
      i32.store offset=44
      get_local $5
      i32.const 16
      i32.add
      tee_local $4
      get_local $0
      get_local $1
      i32.add
      tee_local $0
      i32.store
      get_local $5
      get_local $0
      i32.store offset=28
      get_local $5
      get_local $2
      get_local $3
      call $_vfprintf
      set_local $0
      get_local $1
      if $if_3
        get_local $9
        i32.load
        tee_local $1
        get_local $1
        get_local $4
        i32.load
        i32.eq
        i32.const 31
        i32.shl
        i32.const 31
        i32.shr_s
        i32.add
        i32.const 0
        i32.store8
      end ;; $if_3
    end ;; $__rjto$0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj (type $_5)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (local $7 i32)
    (local $8 i32)
    i32.const -17
    get_local $1
    i32.sub
    get_local $2
    i32.lt_u
    if $if
      get_local $0
      call $__ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv
    end ;; $if
    get_local $0
    i32.load8_s offset=11
    i32.const 0
    i32.lt_s
    if $if_1 (result i32)
      get_local $0
      i32.load
    else
      get_local $0
    end ;; $if_1
    set_local $8
    get_local $1
    i32.const 2147483623
    i32.lt_u
    if $if_2 (result i32)
      get_local $2
      get_local $1
      i32.add
      tee_local $7
      get_local $1
      i32.const 1
      i32.shl
      tee_local $2
      i32.lt_u
      if $if_3 (result i32)
        get_local $2
      else
        get_local $7
        tee_local $2
      end ;; $if_3
      i32.const 11
      i32.lt_u
      if $if_4 (result i32)
        i32.const 11
      else
        get_local $2
        i32.const 16
        i32.add
        i32.const -16
        i32.and
      end ;; $if_4
    else
      i32.const -17
    end ;; $if_2
    tee_local $2
    call $__Znwj
    set_local $7
    get_local $4
    if $if_5
      get_local $7
      get_local $8
      get_local $4
      call $_memcpy
      drop
    end ;; $if_5
    get_local $3
    get_local $5
    i32.sub
    tee_local $3
    get_local $4
    i32.ne
    if $if_6
      get_local $7
      get_local $4
      i32.add
      get_local $6
      i32.add
      get_local $8
      get_local $4
      i32.add
      get_local $5
      i32.add
      get_local $3
      get_local $4
      i32.sub
      call $_memcpy
      drop
    end ;; $if_6
    get_local $1
    i32.const 10
    i32.ne
    if $if_7
      get_local $8
      call $__ZdlPv
    end ;; $if_7
    get_local $0
    get_local $7
    i32.store
    get_local $0
    get_local $2
    i32.const -2147483648
    i32.or
    i32.store offset=8
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 12
    i32.add
    set_local $9
    get_local $6
    i32.const 8
    i32.add
    set_local $10
    get_local $0
    i32.const 8
    i32.add
    tee_local $8
    get_local $8
    i32.load
    i32.load offset=20
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    set_local $7
    get_local $6
    i32.const 4
    i32.add
    tee_local $11
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $8
    get_local $2
    i32.load
    i32.store
    get_local $7
    i32.load8_s offset=11
    tee_local $12
    i32.const 0
    i32.lt_s
    tee_local $2
    if $if (result i32)
      get_local $7
      i32.load
    else
      get_local $7
    end ;; $if
    tee_local $1
    get_local $2
    if $if_1 (result i32)
      get_local $7
      i32.load offset=4
    else
      get_local $12
      i32.const 255
      i32.and
    end ;; $if_1
    i32.const 2
    i32.shl
    i32.add
    set_local $2
    get_local $10
    get_local $11
    i32.load
    i32.store
    get_local $9
    get_local $8
    i32.load
    i32.store
    get_local $0
    get_local $10
    get_local $9
    get_local $3
    get_local $4
    get_local $5
    get_local $1
    get_local $2
    call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    (local $10 i32)
    (local $11 i32)
    (local $12 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 12
    i32.add
    set_local $9
    get_local $6
    i32.const 8
    i32.add
    set_local $10
    get_local $0
    i32.const 8
    i32.add
    tee_local $8
    get_local $8
    i32.load
    i32.load offset=20
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    set_local $7
    get_local $6
    i32.const 4
    i32.add
    tee_local $11
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $8
    get_local $2
    i32.load
    i32.store
    get_local $7
    i32.load8_s offset=11
    tee_local $12
    i32.const 0
    i32.lt_s
    tee_local $2
    if $if (result i32)
      get_local $7
      i32.load
    else
      get_local $7
    end ;; $if
    tee_local $1
    get_local $2
    if $if_1 (result i32)
      get_local $7
      i32.load offset=4
    else
      get_local $12
      i32.const 255
      i32.and
    end ;; $if_1
    i32.add
    set_local $2
    get_local $10
    get_local $11
    i32.load
    i32.store
    get_local $9
    get_local $8
    i32.load
    i32.store
    get_local $0
    get_local $10
    get_local $9
    get_local $3
    get_local $4
    get_local $5
    get_local $1
    get_local $2
    call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i (type $FUNCSIG$viiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    get_local $1
    i32.const 1
    i32.store8 offset=53
    block $do-once
      get_local $1
      i32.load offset=4
      get_local $3
      i32.eq
      if $if
        block $block
          get_local $1
          i32.const 1
          i32.store8 offset=52
          get_local $1
          i32.const 16
          i32.add
          tee_local $0
          i32.load
          tee_local $3
          i32.eqz
          if $if_1
            block $block_1
              get_local $0
              get_local $2
              i32.store
              get_local $1
              get_local $4
              i32.store offset=24
              get_local $1
              i32.const 1
              i32.store offset=36
              get_local $4
              i32.const 1
              i32.eq
              if $if_2 (result i32)
                get_local $1
                i32.load offset=48
                i32.const 1
                i32.eq
              else
                i32.const 0
              end ;; $if_2
              i32.eqz
              br_if $do-once
              get_local $1
              i32.const 1
              i32.store8 offset=54
              br $do-once
            end ;; $block_1
          end ;; $if_1
          get_local $3
          get_local $2
          i32.ne
          if $if_3
            block $block_2
              get_local $1
              i32.const 36
              i32.add
              tee_local $0
              get_local $0
              i32.load
              i32.const 1
              i32.add
              i32.store
              get_local $1
              i32.const 1
              i32.store8 offset=54
              br $do-once
            end ;; $block_2
          end ;; $if_3
          get_local $1
          i32.const 24
          i32.add
          tee_local $2
          i32.load
          tee_local $0
          i32.const 2
          i32.eq
          if $if_4
            get_local $2
            get_local $4
            i32.store
          else
            get_local $0
            set_local $4
          end ;; $if_4
          get_local $4
          i32.const 1
          i32.eq
          if $if_5 (result i32)
            get_local $1
            i32.load offset=48
            i32.const 1
            i32.eq
          else
            i32.const 0
          end ;; $if_5
          if $if_6
            get_local $1
            i32.const 1
            i32.store8 offset=54
          end ;; $if_6
        end ;; $block
      end ;; $if
    end ;; $do-once
    )
  
  (func $___cxx_global_array_dtor_46 (type $FUNCSIG$vi)
    (param $0 i32)
    i32.const 20248
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20236
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20224
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20212
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20200
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20188
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20176
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20164
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20152
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20140
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20128
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20116
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20104
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 20092
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    )
  
  (func $___cxx_global_array_dtor (type $FUNCSIG$vi)
    (param $0 i32)
    i32.const 19436
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19424
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19412
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19400
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19388
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19376
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19364
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19352
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19340
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19328
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19316
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19304
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19292
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    i32.const 19280
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    )
  
  (func $__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib (type $FUNCSIG$viiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    block $do-once
      get_local $0
      get_local $1
      i32.load offset=8
      i32.eq
      if $if
        get_local $1
        i32.load offset=4
        get_local $2
        i32.eq
        if $if_1
          get_local $1
          i32.const 28
          i32.add
          tee_local $0
          i32.load
          i32.const 1
          i32.ne
          if $if_2
            get_local $0
            get_local $3
            i32.store
          end ;; $if_2
        end ;; $if_1
      else
        get_local $0
        get_local $1
        i32.load
        i32.eq
        if $if_3
          block $block
            get_local $1
            i32.load offset=16
            get_local $2
            i32.ne
            if $if_4
              get_local $1
              i32.const 20
              i32.add
              tee_local $0
              i32.load
              get_local $2
              i32.ne
              if $if_5
                block $block_1
                  get_local $1
                  get_local $3
                  i32.store offset=32
                  get_local $0
                  get_local $2
                  i32.store
                  get_local $1
                  i32.const 40
                  i32.add
                  tee_local $0
                  get_local $0
                  i32.load
                  i32.const 1
                  i32.add
                  i32.store
                  get_local $1
                  i32.load offset=36
                  i32.const 1
                  i32.eq
                  if $if_6
                    get_local $1
                    i32.load offset=24
                    i32.const 2
                    i32.eq
                    if $if_7
                      get_local $1
                      i32.const 1
                      i32.store8 offset=54
                    end ;; $if_7
                  end ;; $if_6
                  get_local $1
                  i32.const 4
                  i32.store offset=44
                  br $do-once
                end ;; $block_1
              end ;; $if_5
            end ;; $if_4
            get_local $3
            i32.const 1
            i32.eq
            if $if_8
              get_local $1
              i32.const 1
              i32.store offset=32
            end ;; $if_8
          end ;; $block
        end ;; $if_3
      end ;; $if
    end ;; $do-once
    )
  
  (func $_fmt_u (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    get_local $1
    i32.const 0
    i32.gt_u
    get_local $1
    i32.eqz
    get_local $0
    i32.const -1
    i32.gt_u
    i32.and
    i32.or
    if $_1
      block $_2
        get_local $1
        set_local $3
        loop $while-in
          get_local $2
          i32.const -1
          i32.add
          tee_local $2
          get_local $0
          get_local $3
          i32.const 10
          i32.const 0
          call $___uremdi3
          i32.const 48
          i32.or
          i32.store8
          get_local $0
          get_local $3
          i32.const 10
          i32.const 0
          call $___udivdi3
          set_local $1
          get_local $3
          i32.const 9
          i32.gt_u
          get_local $3
          i32.const 9
          i32.eq
          get_local $0
          i32.const -1
          i32.gt_u
          i32.and
          i32.or
          if $_3
            block $_4
              get_local $1
              set_local $0
              get_global $tempRet0
              set_local $3
              br $while-in
            end ;; $_4
          else
            get_local $1
            set_local $0
          end ;; $_3
        end ;; $while-in
      end ;; $_2
    end ;; $_1
    get_local $0
    if $_5
      loop $while-in1
        get_local $2
        i32.const -1
        i32.add
        tee_local $2
        get_local $0
        i32.const 10
        i32.rem_u
        i32.const 48
        i32.or
        i32.store8
        get_local $0
        i32.const 10
        i32.ge_u
        if $if
          block $block
            get_local $0
            i32.const 10
            i32.div_u
            set_local $0
            br $while-in1
          end ;; $block
        end ;; $if
      end ;; $while-in1
    end ;; $_5
    get_local $2
    )
  
  (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_ (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_local $2
    get_local $1
    tee_local $4
    i32.sub
    i32.const 2
    i32.shr_s
    tee_local $3
    i32.const 1073741807
    i32.gt_u
    if $_1
      get_local $0
      call $__ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv
    end ;; $_1
    get_local $3
    i32.const 2
    i32.lt_u
    if $_2
      block $_3
        get_local $0
        get_local $3
        i32.store8 offset=11
        get_local $0
        set_local $5
      end ;; $_3
    else
      get_local $3
      i32.const 4
      i32.add
      i32.const -4
      i32.and
      tee_local $6
      i32.const 1073741823
      i32.gt_u
      if $_4
        i32.const 16218
        i32.const 16255
        i32.const 1734
        i32.const 16332
        call $___assert_fail
      else
        block $_5
          get_local $0
          get_local $6
          i32.const 2
          i32.shl
          call $__Znwj
          tee_local $5
          i32.store
          get_local $0
          get_local $6
          i32.const -2147483648
          i32.or
          i32.store offset=8
          get_local $0
          get_local $3
          i32.store offset=4
        end ;; $_5
      end ;; $_4
    end ;; $_2
    get_local $2
    get_local $4
    i32.sub
    i32.const 2
    i32.shr_u
    set_local $4
    get_local $5
    set_local $0
    loop $while-in
      get_local $1
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $0
          get_local $1
          i32.load
          i32.store
          get_local $1
          i32.const 4
          i32.add
          set_local $1
          get_local $0
          i32.const 4
          i32.add
          set_local $0
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $5
    get_local $4
    i32.const 2
    i32.shl
    i32.add
    i32.const 0
    i32.store
    )
  
  (func $__ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    get_global $STACKTOP
    set_local $5
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $5
    set_local $6
    block $do-once (result i32)
      get_local $0
      get_local $1
      i32.eq
      if $if (result i32)
        block $block (result i32)
          get_local $2
          i32.const 4
          i32.store
          i32.const 0
          set_local $0
          i32.const 0
        end ;; $block
      else
        block $block_1 (result i32)
          get_local $0
          i32.load8_s
          i32.const 45
          i32.eq
          if $if_1
            block $block_2
              get_local $2
              i32.const 4
              i32.store
              i32.const 0
              set_local $0
              i32.const 0
              br $do-once
            end ;; $block_2
          end ;; $if_1
          call $___errno_location
          tee_local $4
          i32.load
          set_local $7
          get_local $4
          i32.const 0
          i32.store
          get_local $0
          get_local $6
          get_local $3
          call $__ZNSt3__26__clocEv
          call $_strtoull_l
          set_local $0
          get_local $4
          i32.load
          tee_local $8
          i32.eqz
          if $if_2
            get_local $4
            get_local $7
            i32.store
          end ;; $if_2
          get_global $tempRet0
          set_local $3
          get_local $6
          i32.load
          get_local $1
          i32.eq
          if $if_3 (result i32)
            get_local $8
            i32.const 34
            i32.eq
            if $if_4 (result i32)
              block $block_3 (result i32)
                get_local $2
                i32.const 4
                i32.store
                i32.const -1
                set_local $0
                i32.const -1
              end ;; $block_3
            else
              get_local $3
            end ;; $if_4
          else
            block $block_4 (result i32)
              get_local $2
              i32.const 4
              i32.store
              i32.const 0
              set_local $0
              i32.const 0
            end ;; $block_4
          end ;; $if_3
        end ;; $block_1
      end ;; $if
    end ;; $do-once
    tee_local $1
    set_global $tempRet0
    get_local $5
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_ (type $FUNCSIG$viiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $5
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $5
    tee_local $6
    get_local $1
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $7
    i32.store
    get_local $6
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $1
    i32.const 13937
    i32.const 13969
    get_local $2
    get_local $1
    i32.load
    i32.load offset=48
    i32.const 7
    i32.and
    i32.const 397
    i32.add
    call_indirect (type $FUNCSIG$iiiii)
    drop
    get_local $3
    get_local $6
    i32.const 19248
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $1
    get_local $1
    i32.load
    i32.load offset=12
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.store
    get_local $4
    get_local $1
    get_local $1
    i32.load
    i32.load offset=16
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.store
    get_local $0
    get_local $1
    get_local $1
    i32.load
    i32.load offset=20
    i32.const 63
    i32.and
    i32.const 176
    i32.add
    call_indirect (type $FUNCSIG$vii)
    get_local $7
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $5
    set_global $STACKTOP
    )
  
  (func $__ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_ (type $FUNCSIG$viiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $5
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $5
    tee_local $6
    get_local $1
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $7
    i32.store
    get_local $6
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $1
    i32.const 13937
    i32.const 13969
    get_local $2
    get_local $1
    i32.load
    i32.load offset=32
    i32.const 7
    i32.and
    i32.const 397
    i32.add
    call_indirect (type $FUNCSIG$iiiii)
    drop
    get_local $3
    get_local $6
    i32.const 19220
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $1
    get_local $1
    i32.load
    i32.load offset=12
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.store8
    get_local $4
    get_local $1
    get_local $1
    i32.load
    i32.load offset=16
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.store8
    get_local $0
    get_local $1
    get_local $1
    i32.load
    i32.load offset=20
    i32.const 63
    i32.and
    i32.const 176
    i32.add
    call_indirect (type $FUNCSIG$vii)
    get_local $7
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $5
    set_global $STACKTOP
    )
  
  (func $_fflush (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    block $do-once
      get_local $0
      if $_1
        block $_2
          get_local $0
          i32.load offset=76
          i32.const -1
          i32.le_s
          if $_3
            block $_4
              get_local $0
              call $___fflush_unlocked
              set_local $0
              br $do-once
            end ;; $_4
          end ;; $_3
          get_local $0
          call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
          i32.eqz
          set_local $2
          get_local $0
          call $___fflush_unlocked
          set_local $1
          get_local $2
          if $_5 (result i32)
            get_local $1
          else
            block $_6 (result i32)
              get_local $0
              call $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
              get_local $1
            end ;; $_6
          end ;; $_5
          set_local $0
        end ;; $_2
      else
        block $_7
          i32.const 3048
          i32.load
          if $_8 (result i32)
            i32.const 3048
            i32.load
            call $_fflush
          else
            i32.const 0
          end ;; $_8
          set_local $0
          i32.const 17628
          call $___lock
          i32.const 17624
          i32.load
          tee_local $1
          if $_9
            loop $while-in
              get_local $1
              i32.load offset=76
              i32.const -1
              i32.gt_s
              if $if (result i32)
                get_local $1
                call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
              else
                i32.const 0
              end ;; $if
              set_local $2
              get_local $1
              i32.load offset=20
              get_local $1
              i32.load offset=28
              i32.gt_u
              if $if_1
                get_local $1
                call $___fflush_unlocked
                get_local $0
                i32.or
                set_local $0
              end ;; $if_1
              get_local $2
              if $if_2
                get_local $1
                call $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
              end ;; $if_2
              get_local $1
              i32.load offset=56
              tee_local $1
              br_if $while-in
            end ;; $while-in
          end ;; $_9
          i32.const 17628
          call $___unlock
        end ;; $_7
      end ;; $_1
    end ;; $do-once
    get_local $0
    )
  
  (func $__ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    get_global $STACKTOP
    set_local $5
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $5
    set_local $6
    block $do-once (result i32)
      get_local $0
      get_local $1
      i32.eq
      if $if (result i32)
        block $block (result i32)
          get_local $2
          i32.const 4
          i32.store
          i32.const 0
        end ;; $block
      else
        block $block_1 (result i32)
          get_local $0
          i32.load8_s
          i32.const 45
          i32.eq
          if $if_1
            block $block_2
              get_local $2
              i32.const 4
              i32.store
              i32.const 0
              br $do-once
            end ;; $block_2
          end ;; $if_1
          call $___errno_location
          tee_local $4
          i32.load
          set_local $7
          get_local $4
          i32.const 0
          i32.store
          get_local $0
          get_local $6
          get_local $3
          call $__ZNSt3__26__clocEv
          call $_strtoull_l
          set_local $0
          get_local $4
          i32.load
          tee_local $8
          i32.eqz
          if $if_2
            get_local $4
            get_local $7
            i32.store
          end ;; $if_2
          get_global $tempRet0
          set_local $3
          get_local $6
          i32.load
          get_local $1
          i32.eq
          if $if_3 (result i32)
            get_local $3
            i32.const 0
            i32.gt_u
            get_local $3
            i32.eqz
            get_local $0
            i32.const 65535
            i32.gt_u
            i32.and
            i32.or
            get_local $8
            i32.const 34
            i32.eq
            i32.or
            if $if_4 (result i32)
              block $block_3 (result i32)
                get_local $2
                i32.const 4
                i32.store
                i32.const -1
              end ;; $block_3
            else
              get_local $0
              i32.const 65535
              i32.and
            end ;; $if_4
          else
            block $block_4 (result i32)
              get_local $2
              i32.const 4
              i32.store
              i32.const 0
            end ;; $block_4
          end ;; $if_3
        end ;; $block_1
      end ;; $if
    end ;; $do-once
    set_local $0
    get_local $5
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    set_local $7
    block $do-once
      get_local $0
      get_local $1
      i32.eq
      if $if
        block $block
          get_local $2
          i32.const 4
          i32.store
          i32.const 0
          set_local $0
        end ;; $block
      else
        block $block_1
          get_local $0
          i32.load8_s
          i32.const 45
          i32.eq
          if $if_1
            block $block_2
              get_local $2
              i32.const 4
              i32.store
              i32.const 0
              set_local $0
              br $do-once
            end ;; $block_2
          end ;; $if_1
          call $___errno_location
          tee_local $5
          i32.load
          set_local $4
          get_local $5
          i32.const 0
          i32.store
          get_local $0
          get_local $7
          get_local $3
          call $__ZNSt3__26__clocEv
          call $_strtoull_l
          set_local $0
          get_local $5
          i32.load
          tee_local $3
          i32.eqz
          if $if_2
            get_local $5
            get_local $4
            i32.store
          end ;; $if_2
          get_global $tempRet0
          set_local $4
          get_local $7
          i32.load
          get_local $1
          i32.eq
          if $if_3
            get_local $4
            i32.const 0
            i32.gt_u
            get_local $4
            i32.eqz
            get_local $0
            i32.const -1
            i32.gt_u
            i32.and
            i32.or
            get_local $3
            i32.const 34
            i32.eq
            i32.or
            if $if_4
              block $block_3
                get_local $2
                i32.const 4
                i32.store
                i32.const -1
                set_local $0
              end ;; $block_3
            end ;; $if_4
          else
            block $block_4
              get_local $2
              i32.const 4
              i32.store
              i32.const 0
              set_local $0
            end ;; $block_4
          end ;; $if_3
        end ;; $block_1
      end ;; $if
    end ;; $do-once
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    get_global $STACKTOP
    set_local $5
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $5
    set_local $6
    get_local $0
    get_local $1
    i32.eq
    if $if (result i32)
      block $block (result i32)
        get_local $2
        i32.const 4
        i32.store
        i32.const 0
        set_local $0
        i32.const 0
      end ;; $block
    else
      block $block_1 (result i32)
        call $___errno_location
        tee_local $4
        i32.load
        set_local $7
        get_local $4
        i32.const 0
        i32.store
        get_local $0
        get_local $6
        get_local $3
        call $__ZNSt3__26__clocEv
        call $_strtoll_l
        set_local $0
        get_local $4
        i32.load
        tee_local $8
        i32.eqz
        if $if_1
          get_local $4
          get_local $7
          i32.store
        end ;; $if_1
        get_global $tempRet0
        set_local $3
        get_local $6
        i32.load
        get_local $1
        i32.eq
        if $if_2 (result i32)
          get_local $8
          i32.const 34
          i32.eq
          if $if_3 (result i32)
            block $block_2 (result i32)
              get_local $2
              i32.const 4
              i32.store
              get_local $3
              i32.const 0
              i32.gt_s
              get_local $3
              i32.eqz
              get_local $0
              i32.const 0
              i32.gt_u
              i32.and
              i32.or
              tee_local $1
              if $if_4 (result i32)
                i32.const -1
              else
                i32.const 0
              end ;; $if_4
              set_local $0
              get_local $1
              if $if_5 (result i32)
                i32.const 2147483647
              else
                i32.const -2147483648
              end ;; $if_5
            end ;; $block_2
          else
            get_local $3
          end ;; $if_3
        else
          block $block_3 (result i32)
            get_local $2
            i32.const 4
            i32.store
            i32.const 0
            set_local $0
            i32.const 0
          end ;; $block_3
        end ;; $if_2
      end ;; $block_1
    end ;; $if
    tee_local $1
    set_global $tempRet0
    get_local $5
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__214__num_put_base12__format_intEPcPKcbj (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (local $4 i32)
    get_local $3
    i32.const 2048
    i32.and
    if $_1
      block $_2
        get_local $0
        i32.const 43
        i32.store8
        get_local $0
        i32.const 1
        i32.add
        set_local $0
      end ;; $_2
    end ;; $_1
    get_local $3
    i32.const 512
    i32.and
    if $_3
      block $_4
        get_local $0
        i32.const 35
        i32.store8
        get_local $0
        i32.const 1
        i32.add
        set_local $0
      end ;; $_4
    end ;; $_3
    loop $while-in
      get_local $1
      i32.load8_s
      tee_local $4
      if $_5
        block $_6
          get_local $0
          get_local $4
          i32.store8
          get_local $1
          i32.const 1
          i32.add
          set_local $1
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $_6
      end ;; $_5
    end ;; $while-in
    block $label$break$L10
      block $switch-default
        block $switch-case0
          block $switch-case
            get_local $3
            i32.const 74
            i32.and
            i32.const 8
            i32.sub
            br_table
              $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case
              $switch-default ;; default
          end ;; $switch-case
          get_local $0
          i32.const 111
          i32.store8
          br $label$break$L10
        end ;; $switch-case0
        get_local $3
        i32.const 16384
        i32.and
        if $if
          block $block
            get_local $0
            i32.const 88
            i32.store8
            br $label$break$L10
          end ;; $block
        else
          block $block_1
            get_local $0
            i32.const 120
            i32.store8
            br $label$break$L10
          end ;; $block_1
        end ;; $if
      end ;; $switch-default
      get_local $2
      if $if_1
        get_local $0
        i32.const 100
        i32.store8
      else
        get_local $0
        i32.const 117
        i32.store8
      end ;; $if_1
    end ;; $label$break$L10
    )
  
  (func $__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $5
    get_global $STACKTOP
    i32.const 64
    i32.add
    set_global $STACKTOP
    get_local $5
    set_local $3
    get_local $0
    get_local $1
    i32.eq
    if $_1 (result i32)
      i32.const 1
    else
      get_local $1
      if $_2 (result i32)
        get_local $1
        i32.const 2408
        i32.const 2376
        i32.const 0
        call $___dynamic_cast
        tee_local $4
        if $_3 (result i32)
          block $_4 (result i32)
            get_local $3
            tee_local $1
            i32.const 56
            i32.add
            set_local $6
            loop $do-in
              get_local $1
              i32.const 0
              i32.store
              get_local $1
              i32.const 4
              i32.add
              tee_local $1
              get_local $6
              i32.lt_s
              br_if $do-in
            end ;; $do-in
            get_local $3
            get_local $4
            i32.store
            get_local $3
            get_local $0
            i32.store offset=8
            get_local $3
            i32.const -1
            i32.store offset=12
            get_local $3
            i32.const 1
            i32.store offset=48
            get_local $4
            get_local $3
            get_local $2
            i32.load
            i32.const 1
            get_local $4
            i32.load
            i32.load offset=28
            i32.const 7
            i32.and
            i32.const 461
            i32.add
            call_indirect (type $FUNCSIG$viiii)
            get_local $3
            i32.load offset=24
            i32.const 1
            i32.eq
            if $if (result i32)
              block $block (result i32)
                get_local $2
                get_local $3
                i32.load offset=16
                i32.store
                i32.const 1
              end ;; $block
            else
              i32.const 0
            end ;; $if
          end ;; $_4
        else
          i32.const 0
        end ;; $_3
      else
        i32.const 0
      end ;; $_2
    end ;; $_1
    set_local $0
    get_local $5
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (local $4 i32)
    (local $5 i32)
    block $label$break$L1
      get_local $0
      get_local $1
      i32.load offset=8
      i32.eq
      if $_1
        i32.const 0
        get_local $1
        get_local $2
        get_local $3
        call $__ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi
      else
        block $_2
          get_local $0
          i32.const 16
          i32.add
          get_local $0
          i32.load offset=12
          tee_local $4
          i32.const 3
          i32.shl
          i32.add
          set_local $5
          get_local $0
          i32.const 16
          i32.add
          get_local $1
          get_local $2
          get_local $3
          call $__ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi
          get_local $4
          i32.const 1
          i32.gt_s
          if $_3
            block $_4
              get_local $1
              i32.const 54
              i32.add
              set_local $4
              get_local $0
              i32.const 24
              i32.add
              set_local $0
              loop $do-in
                get_local $0
                get_local $1
                get_local $2
                get_local $3
                call $__ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi
                get_local $4
                i32.load8_s
                br_if $label$break$L1
                get_local $0
                i32.const 8
                i32.add
                tee_local $0
                get_local $5
                i32.lt_u
                br_if $do-in
              end ;; $do-in
            end ;; $_4
          end ;; $_3
        end ;; $_2
      end ;; $_1
    end ;; $label$break$L1
    )
  
  (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    get_local $0
    i32.const 8
    i32.add
    tee_local $2
    i32.const 3
    i32.add
    tee_local $4
    i32.load8_s
    tee_local $3
    i32.const 0
    i32.lt_s
    tee_local $5
    if $_1 (result i32)
      block $_2 (result i32)
        get_local $0
        i32.load offset=4
        set_local $3
        get_local $2
        i32.load
        i32.const 2147483647
        i32.and
        i32.const -1
        i32.add
      end ;; $_2
    else
      block $_3 (result i32)
        get_local $3
        i32.const 255
        i32.and
        set_local $3
        i32.const 1
      end ;; $_3
    end ;; $_1
    set_local $2
    block $__rjto$1
      block $__rjti$1
        get_local $3
        get_local $2
        i32.eq
        if $if
          block $block
            get_local $0
            get_local $2
            i32.const 1
            get_local $2
            get_local $2
            i32.const 0
            i32.const 0
            call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj
            get_local $4
            i32.load8_s
            i32.const 0
            i32.lt_s
            br_if $__rjti$1
          end ;; $block
        else
          get_local $5
          br_if $__rjti$1
        end ;; $if
        get_local $4
        get_local $3
        i32.const 1
        i32.add
        i32.store8
        br $__rjto$1
      end ;; $__rjti$1
      get_local $0
      i32.load
      set_local $2
      get_local $0
      get_local $3
      i32.const 1
      i32.add
      i32.store offset=4
      get_local $2
      set_local $0
    end ;; $__rjto$1
    get_local $0
    get_local $3
    i32.const 2
    i32.shl
    i32.add
    tee_local $0
    get_local $1
    i32.store
    get_local $0
    i32.const 0
    i32.store offset=4
    )
  
  (func $_strlen (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    block $__rjto$0
      block $__rjti$0
        get_local $0
        tee_local $2
        i32.const 3
        i32.and
        i32.eqz
        br_if $__rjti$0
        get_local $2
        set_local $1
        loop $while-in
          get_local $0
          i32.load8_s
          i32.eqz
          if $_1
            block $_2
              get_local $1
              set_local $0
              br $__rjto$0
            end ;; $_2
          end ;; $_1
          get_local $0
          i32.const 1
          i32.add
          tee_local $0
          tee_local $1
          i32.const 3
          i32.and
          br_if $while-in
          br $__rjti$0
        end ;; $while-in
        br $__rjto$0
      end ;; $__rjti$0
      loop $while-in1
        get_local $0
        i32.load
        tee_local $1
        i32.const -2139062144
        i32.and
        i32.const -2139062144
        i32.xor
        get_local $1
        i32.const -16843009
        i32.add
        i32.and
        i32.eqz
        if $_3
          block $_4
            get_local $0
            i32.const 4
            i32.add
            set_local $0
            br $while-in1
          end ;; $_4
        end ;; $_3
      end ;; $while-in1
      get_local $1
      i32.const 255
      i32.and
      if $_5
        loop $while-in3
          get_local $0
          i32.const 1
          i32.add
          tee_local $0
          i32.load8_s
          br_if $while-in3
        end ;; $while-in3
      end ;; $_5
    end ;; $__rjto$0
    get_local $0
    get_local $2
    i32.sub
    )
  
  (func $__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    get_global $STACKTOP
    set_local $5
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $4
    get_local $2
    i32.store
    get_local $0
    i32.load offset=8
    call $_uselocale
    set_local $2
    get_local $5
    tee_local $0
    i32.const 0
    get_local $1
    call $_wcrtomb
    set_local $1
    get_local $2
    if $_1
      get_local $2
      call $_uselocale
      drop
    end ;; $_1
    block $label$break$L4
      block $switch-default
        block $switch-case
          get_local $1
          i32.const -1
          i32.sub
          br_table
            $switch-case $switch-case
            $switch-default ;; default
        end ;; $switch-case
        i32.const 2
        set_local $0
        br $label$break$L4
      end ;; $switch-default
      get_local $1
      i32.const -1
      i32.add
      tee_local $1
      get_local $3
      get_local $4
      i32.load
      i32.sub
      i32.gt_u
      if $_2
        i32.const 1
        set_local $0
      else
        loop $while-in
          get_local $1
          if $if
            block $block
              get_local $0
              i32.load8_s
              set_local $2
              get_local $4
              get_local $4
              i32.load
              tee_local $3
              i32.const 1
              i32.add
              i32.store
              get_local $3
              get_local $2
              i32.store8
              get_local $1
              i32.const -1
              i32.add
              set_local $1
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $while-in
            end ;; $block
          else
            block $block_1
              i32.const 0
              set_local $0
              br $label$break$L4
            end ;; $block_1
          end ;; $if
        end ;; $while-in
      end ;; $_2
    end ;; $label$break$L4
    get_local $5
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_local $1
    i32.const 4
    i32.add
    tee_local $2
    i32.load
    i32.const 0
    get_local $0
    i32.const 4
    i32.add
    tee_local $5
    i32.load
    get_local $0
    i32.load
    tee_local $4
    i32.sub
    tee_local $6
    i32.const 2
    i32.shr_s
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    set_local $3
    get_local $2
    get_local $3
    i32.store
    get_local $6
    i32.const 0
    i32.gt_s
    if $if (result i32)
      block $block (result i32)
        get_local $3
        get_local $4
        get_local $6
        call $_memcpy
        drop
        get_local $2
        set_local $4
        get_local $2
        i32.load
      end ;; $block
    else
      block $block_1 (result i32)
        get_local $2
        set_local $4
        get_local $3
      end ;; $block_1
    end ;; $if
    set_local $2
    get_local $0
    i32.load
    set_local $3
    get_local $0
    get_local $2
    i32.store
    get_local $4
    get_local $3
    i32.store
    get_local $5
    i32.load
    set_local $3
    get_local $5
    get_local $1
    i32.const 8
    i32.add
    tee_local $2
    i32.load
    i32.store
    get_local $2
    get_local $3
    i32.store
    get_local $0
    i32.const 8
    i32.add
    tee_local $0
    i32.load
    set_local $2
    get_local $0
    get_local $1
    i32.const 12
    i32.add
    tee_local $0
    i32.load
    i32.store
    get_local $0
    get_local $2
    i32.store
    get_local $1
    get_local $4
    i32.load
    i32.store
    )
  
  (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    get_local $0
    i32.const 24
    i32.add
    set_local $6
    get_local $0
    i32.const 28
    i32.add
    set_local $8
    get_local $1
    set_local $3
    i32.const 0
    set_local $1
    loop $while-in
      block $while-out
        get_local $1
        get_local $2
        i32.ge_s
        br_if $while-out
        get_local $6
        i32.load
        tee_local $5
        get_local $8
        i32.load
        tee_local $7
        i32.ge_u
        if $if
          block $block
            get_local $0
            get_local $3
            i32.load8_u
            get_local $0
            i32.load
            i32.load offset=52
            i32.const 15
            i32.and
            i32.const 413
            i32.add
            call_indirect (type $FUNCSIG$iii)
            i32.const -1
            i32.eq
            br_if $while-out
            get_local $3
            i32.const 1
            i32.add
            set_local $3
            get_local $1
            i32.const 1
            i32.add
            set_local $1
            br $while-in
          end ;; $block
        end ;; $if
        get_local $2
        get_local $1
        i32.sub
        tee_local $4
        get_local $7
        get_local $5
        i32.sub
        tee_local $7
        i32.lt_s
        if $if_1 (result i32)
          get_local $4
        else
          get_local $7
          tee_local $4
        end ;; $if_1
        if $if_2
          block $block_1
            get_local $5
            get_local $3
            get_local $4
            call $_memcpy
            drop
            get_local $6
            i32.load
            set_local $5
          end ;; $block_1
        end ;; $if_2
        get_local $6
        get_local $5
        get_local $4
        i32.add
        i32.store
        get_local $3
        get_local $4
        i32.add
        set_local $3
        get_local $4
        get_local $1
        i32.add
        set_local $1
        br $while-in
      end ;; $while-out
    end ;; $while-in
    get_local $1
    )
  
  (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    get_local $0
    i32.const 11
    i32.add
    tee_local $4
    i32.load8_s
    tee_local $2
    i32.const 0
    i32.lt_s
    tee_local $5
    if $_1 (result i32)
      block $_2 (result i32)
        get_local $0
        i32.load offset=4
        set_local $2
        get_local $0
        i32.load offset=8
        i32.const 2147483647
        i32.and
        i32.const -1
        i32.add
      end ;; $_2
    else
      block $_3 (result i32)
        get_local $2
        i32.const 255
        i32.and
        set_local $2
        i32.const 10
      end ;; $_3
    end ;; $_1
    set_local $3
    block $__rjto$1
      block $__rjti$1
        get_local $2
        get_local $3
        i32.eq
        if $if
          block $block
            get_local $0
            get_local $3
            i32.const 1
            get_local $3
            get_local $3
            i32.const 0
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj
            get_local $4
            i32.load8_s
            i32.const 0
            i32.lt_s
            br_if $__rjti$1
          end ;; $block
        else
          get_local $5
          br_if $__rjti$1
        end ;; $if
        get_local $4
        get_local $2
        i32.const 1
        i32.add
        i32.store8
        br $__rjto$1
      end ;; $__rjti$1
      get_local $0
      i32.load
      set_local $3
      get_local $0
      get_local $2
      i32.const 1
      i32.add
      i32.store offset=4
      get_local $3
      set_local $0
    end ;; $__rjto$1
    get_local $0
    get_local $2
    i32.add
    tee_local $0
    get_local $1
    i32.store8
    get_local $0
    i32.const 0
    i32.store8 offset=1
    )
  
  (func $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $3
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $3
    tee_local $4
    get_local $0
    call $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_
    block $label$break$L1
      get_local $4
      i32.load8_s
      if $if
        block $block
          get_local $0
          get_local $0
          i32.load
          i32.const -12
          i32.add
          i32.load
          i32.add
          i32.load offset=24
          tee_local $5
          set_local $2
          get_local $5
          if $if_1
            get_local $2
            i32.const 24
            i32.add
            tee_local $7
            i32.load
            tee_local $6
            get_local $2
            i32.load offset=28
            i32.eq
            if $if_2
              get_local $2
              get_local $1
              i32.const 255
              i32.and
              get_local $5
              i32.load
              i32.load offset=52
              i32.const 15
              i32.and
              i32.const 413
              i32.add
              call_indirect (type $FUNCSIG$iii)
              i32.const -1
              i32.ne
              br_if $label$break$L1
            else
              block $block_1
                get_local $7
                get_local $6
                i32.const 1
                i32.add
                i32.store
                get_local $6
                get_local $1
                i32.store8
                br $label$break$L1
              end ;; $block_1
            end ;; $if_2
          end ;; $if_1
          get_local $0
          get_local $0
          i32.load
          i32.const -12
          i32.add
          i32.load
          i32.add
          i32.const 16
          i32.add
          tee_local $1
          get_local $1
          i32.load
          i32.const 1
          i32.or
          i32.store
        end ;; $block
      end ;; $if
    end ;; $label$break$L1
    get_local $4
    call $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev
    get_local $3
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_local $3
    set_local $8
    get_local $0
    i32.const 8
    i32.add
    set_local $9
    i32.const 0
    set_local $0
    i32.const 0
    set_local $6
    loop $label$continue$L1
      block $label$break$L1
        get_local $2
        get_local $3
        i32.eq
        get_local $6
        get_local $4
        i32.ge_u
        i32.or
        br_if $label$break$L1
        get_local $9
        i32.load
        call $_uselocale
        set_local $7
        get_local $2
        get_local $8
        get_local $2
        i32.sub
        get_local $1
        call $_mbrlen
        set_local $5
        get_local $7
        if $_1
          get_local $7
          call $_uselocale
          drop
        end ;; $_1
        block $switch (result i32)
          block $switch-default
            block $switch-case1
              block $switch-case
                get_local $5
                i32.const -2
                i32.sub
                br_table
                  $switch-case $switch-case $switch-case1
                  $switch-default ;; default
              end ;; $switch-case
              br $label$break$L1
            end ;; $switch-case1
            i32.const 1
            set_local $5
            get_local $2
            i32.const 1
            i32.add
            br $switch
          end ;; $switch-default
          get_local $2
          get_local $5
          i32.add
        end ;; $switch
        set_local $2
        get_local $5
        get_local $0
        i32.add
        set_local $0
        get_local $6
        i32.const 1
        i32.add
        set_local $6
        br $label$continue$L1
      end ;; $label$break$L1
    end ;; $label$continue$L1
    get_local $0
    )
  
  (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    get_local $0
    i32.const 24
    i32.add
    set_local $6
    get_local $0
    i32.const 28
    i32.add
    set_local $7
    get_local $1
    set_local $3
    i32.const 0
    set_local $1
    loop $while-in
      get_local $1
      get_local $2
      i32.lt_s
      if $if
        block $block
          get_local $6
          i32.load
          tee_local $5
          get_local $7
          i32.load
          tee_local $8
          i32.lt_u
          if $if_1
            block $block_1
              get_local $5
              get_local $3
              get_local $2
              get_local $1
              i32.sub
              tee_local $4
              get_local $8
              get_local $5
              i32.sub
              i32.const 2
              i32.shr_s
              tee_local $5
              i32.lt_s
              if $if_2 (result i32)
                get_local $4
              else
                get_local $5
                tee_local $4
              end ;; $if_2
              call $__ZNSt3__211char_traitsIwE4copyEPwPKwj
              drop
              get_local $6
              get_local $6
              i32.load
              get_local $4
              i32.const 2
              i32.shl
              i32.add
              i32.store
              get_local $3
              get_local $4
              i32.const 2
              i32.shl
              i32.add
              set_local $3
              get_local $4
              get_local $1
              i32.add
              set_local $1
              br $while-in
            end ;; $block_1
          end ;; $if_1
          get_local $0
          get_local $3
          i32.load
          get_local $0
          i32.load
          i32.load offset=52
          i32.const 15
          i32.and
          i32.const 413
          i32.add
          call_indirect (type $FUNCSIG$iii)
          i32.const -1
          i32.ne
          if $if_3
            block $block_2
              get_local $3
              i32.const 4
              i32.add
              set_local $3
              get_local $1
              i32.const 1
              i32.add
              set_local $1
              br $while-in
            end ;; $block_2
          end ;; $if_3
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $1
    )
  
  (func $__ZNSt3__211__stdoutbufIwE4syncEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $1
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $1
    set_local $3
    get_local $0
    i32.const 36
    i32.add
    set_local $5
    get_local $0
    i32.const 40
    i32.add
    set_local $6
    get_local $1
    i32.const 8
    i32.add
    tee_local $2
    i32.const 8
    i32.add
    set_local $7
    get_local $2
    set_local $8
    get_local $0
    i32.const 32
    i32.add
    set_local $4
    block $__rjto$0
      block $__rjti$0
        loop $label$continue$L1
          block $label$break$L1
            get_local $5
            i32.load
            tee_local $0
            get_local $6
            i32.load
            get_local $2
            get_local $7
            get_local $3
            get_local $0
            i32.load
            i32.load offset=20
            i32.const 31
            i32.and
            i32.const 429
            i32.add
            call_indirect (type $FUNCSIG$iiiiii)
            set_local $9
            get_local $2
            i32.const 1
            get_local $3
            i32.load
            get_local $8
            i32.sub
            tee_local $0
            get_local $4
            i32.load
            call $_fwrite
            get_local $0
            i32.ne
            if $_1
              block $_2
                i32.const -1
                set_local $0
                br $label$break$L1
              end ;; $_2
            end ;; $_1
            block $switch
              block $switch-default
                block $switch-case0
                  block $switch-case
                    get_local $9
                    i32.const 1
                    i32.sub
                    br_table
                      $switch-case $switch-case0
                      $switch-default ;; default
                  end ;; $switch-case
                  br $switch
                end ;; $switch-case0
                i32.const -1
                set_local $0
                br $label$break$L1
              end ;; $switch-default
              br $__rjti$0
            end ;; $switch
            br $label$continue$L1
          end ;; $label$break$L1
        end ;; $label$continue$L1
        br $__rjto$0
      end ;; $__rjti$0
      get_local $4
      i32.load
      call $_fflush
      i32.const 0
      i32.ne
      i32.const 31
      i32.shl
      i32.const 31
      i32.shr_s
      set_local $0
    end ;; $__rjto$0
    get_local $1
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_ (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_local $2
    get_local $1
    tee_local $3
    i32.sub
    tee_local $4
    i32.const -17
    i32.gt_u
    if $_1
      get_local $0
      call $__ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv
    end ;; $_1
    get_local $4
    i32.const 11
    i32.lt_u
    if $_2
      get_local $0
      get_local $4
      i32.store8 offset=11
    else
      block $_3
        get_local $0
        get_local $4
        i32.const 16
        i32.add
        i32.const -16
        i32.and
        tee_local $6
        call $__Znwj
        tee_local $5
        i32.store
        get_local $0
        get_local $6
        i32.const -2147483648
        i32.or
        i32.store offset=8
        get_local $0
        get_local $4
        i32.store offset=4
        get_local $5
        set_local $0
      end ;; $_3
    end ;; $_2
    get_local $2
    get_local $3
    i32.sub
    set_local $5
    get_local $0
    set_local $3
    loop $while-in
      get_local $1
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $3
          get_local $1
          i32.load8_s
          i32.store8
          get_local $1
          i32.const 1
          i32.add
          set_local $1
          get_local $3
          i32.const 1
          i32.add
          set_local $3
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $0
    get_local $5
    i32.add
    i32.const 0
    i32.store8
    )
  
  (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_local $1
    if $if
      block $block
        get_local $0
        i32.const 11
        i32.add
        tee_local $6
        i32.load8_s
        tee_local $4
        i32.const 0
        i32.lt_s
        if $if_1 (result i32)
          block $block_1 (result i32)
            get_local $0
            i32.load offset=8
            i32.const 2147483647
            i32.and
            i32.const -1
            i32.add
            set_local $5
            get_local $0
            i32.load offset=4
          end ;; $block_1
        else
          block $block_2 (result i32)
            i32.const 10
            set_local $5
            get_local $4
            i32.const 255
            i32.and
          end ;; $block_2
        end ;; $if_1
        set_local $3
        get_local $5
        get_local $3
        i32.sub
        get_local $1
        i32.lt_u
        if $if_2
          block $block_3
            get_local $0
            get_local $5
            get_local $1
            get_local $5
            i32.sub
            get_local $3
            i32.add
            get_local $3
            get_local $3
            i32.const 0
            i32.const 0
            call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj
            get_local $6
            i32.load8_s
            set_local $4
          end ;; $block_3
        end ;; $if_2
        get_local $4
        i32.const 24
        i32.shl
        i32.const 24
        i32.shr_s
        i32.const 0
        i32.lt_s
        if $if_3 (result i32)
          get_local $0
          i32.load
        else
          get_local $0
        end ;; $if_3
        tee_local $4
        get_local $3
        i32.add
        get_local $2
        get_local $1
        call $_memset
        drop
        get_local $3
        get_local $1
        i32.add
        set_local $1
        get_local $6
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $if_4
          get_local $0
          get_local $1
          i32.store offset=4
        else
          get_local $6
          get_local $1
          i32.store8
        end ;; $if_4
        get_local $4
        get_local $1
        i32.add
        i32.const 0
        i32.store8
      end ;; $block
    end ;; $if
    get_local $0
    )
  
  (func $_pad (type $FUNCSIG$viiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 256
    i32.add
    set_global $STACKTOP
    get_local $6
    set_local $5
    block $do-once
      get_local $2
      get_local $3
      i32.gt_s
      get_local $4
      i32.const 73728
      i32.and
      i32.eqz
      i32.and
      if $_1
        block $_2
          get_local $5
          get_local $1
          get_local $2
          get_local $3
          i32.sub
          tee_local $1
          i32.const 256
          i32.gt_u
          if $_3 (result i32)
            i32.const 256
          else
            get_local $1
          end ;; $_3
          call $_memset
          drop
          get_local $0
          i32.load
          tee_local $8
          i32.const 32
          i32.and
          i32.eqz
          set_local $4
          get_local $1
          i32.const 255
          i32.gt_u
          if $_4
            block $_5
              get_local $1
              set_local $7
              get_local $8
              set_local $1
              loop $while-in
                get_local $4
                if $if
                  block $block
                    get_local $5
                    i32.const 256
                    get_local $0
                    call $___fwritex
                    drop
                    get_local $0
                    i32.load
                    set_local $1
                  end ;; $block
                end ;; $if
                get_local $1
                i32.const 32
                i32.and
                i32.eqz
                set_local $4
                get_local $7
                i32.const -256
                i32.add
                tee_local $7
                i32.const 255
                i32.gt_u
                br_if $while-in
              end ;; $while-in
              get_local $4
              i32.eqz
              br_if $do-once
              get_local $2
              get_local $3
              i32.sub
              i32.const 255
              i32.and
              set_local $1
            end ;; $_5
          else
            get_local $4
            i32.eqz
            br_if $do-once
          end ;; $_4
          get_local $5
          get_local $1
          get_local $0
          call $___fwritex
          drop
        end ;; $_2
      end ;; $_1
    end ;; $do-once
    get_local $6
    set_global $STACKTOP
    )
  
  (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_local $0
    i32.const 8
    i32.add
    tee_local $3
    i32.const 3
    i32.add
    tee_local $4
    i32.load8_s
    tee_local $6
    i32.const 0
    i32.lt_s
    tee_local $5
    if $if (result i32)
      get_local $3
      i32.load
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 1
    end ;; $if
    tee_local $3
    get_local $2
    i32.lt_u
    if $if_1
      get_local $0
      get_local $3
      get_local $2
      get_local $3
      i32.sub
      get_local $5
      if $if_2 (result i32)
        get_local $0
        i32.load offset=4
      else
        get_local $6
        i32.const 255
        i32.and
      end ;; $if_2
      tee_local $4
      i32.const 0
      get_local $4
      get_local $2
      get_local $1
      call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw
    else
      block $block
        get_local $5
        if $if_3 (result i32)
          get_local $0
          i32.load
        else
          get_local $0
        end ;; $if_3
        tee_local $3
        get_local $1
        get_local $2
        call $__ZNSt3__211char_traitsIwE4moveEPwPKwj
        drop
        get_local $3
        get_local $2
        i32.const 2
        i32.shl
        i32.add
        i32.const 0
        i32.store
        get_local $4
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $if_4
          get_local $0
          get_local $2
          i32.store offset=4
        else
          get_local $4
          get_local $2
          i32.store8
        end ;; $if_4
      end ;; $block
    end ;; $if_1
    get_local $0
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 8
    i32.add
    tee_local $0
    get_local $0
    i32.load
    i32.load offset=4
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    set_local $7
    get_local $6
    tee_local $0
    get_local $3
    i32.load
    i32.store
    get_local $6
    i32.const 4
    i32.add
    tee_local $3
    get_local $0
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $7
    get_local $7
    i32.const 288
    i32.add
    get_local $5
    get_local $4
    i32.const 0
    call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb
    get_local $7
    i32.sub
    tee_local $0
    i32.const 288
    i32.lt_s
    if $if
      get_local $1
      get_local $0
      i32.const 12
      i32.div_s
      i32.const 12
      i32.rem_s
      i32.store
    end ;; $if
    get_local $6
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 8
    i32.add
    tee_local $0
    get_local $0
    i32.load
    i32.load offset=4
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    set_local $7
    get_local $6
    tee_local $0
    get_local $3
    i32.load
    i32.store
    get_local $6
    i32.const 4
    i32.add
    tee_local $3
    get_local $0
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $7
    get_local $7
    i32.const 288
    i32.add
    get_local $5
    get_local $4
    i32.const 0
    call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb
    get_local $7
    i32.sub
    tee_local $0
    i32.const 288
    i32.lt_s
    if $if
      get_local $1
      get_local $0
      i32.const 12
      i32.div_s
      i32.const 12
      i32.rem_s
      i32.store
    end ;; $if
    get_local $6
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $3
    i32.store
    get_local $7
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $7
    get_local $3
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $6
    tee_local $3
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $3
    i32.load
    i32.store
    get_local $0
    get_local $5
    i32.const 16
    i32.add
    get_local $1
    get_local $2
    get_local $4
    get_local $7
    call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE
    get_local $6
    set_global $STACKTOP
    get_local $1
    i32.load
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $3
    i32.store
    get_local $7
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $7
    get_local $3
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $6
    tee_local $3
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $3
    i32.load
    i32.store
    get_local $0
    get_local $5
    i32.const 24
    i32.add
    get_local $1
    get_local $2
    get_local $4
    get_local $7
    call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE
    get_local $6
    set_global $STACKTOP
    get_local $1
    i32.load
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $3
    i32.store
    get_local $7
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $7
    get_local $3
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $6
    tee_local $3
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $3
    i32.load
    i32.store
    get_local $0
    get_local $5
    i32.const 16
    i32.add
    get_local $1
    get_local $2
    get_local $4
    get_local $7
    call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE
    get_local $6
    set_global $STACKTOP
    get_local $1
    i32.load
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $3
    i32.store
    get_local $7
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $7
    get_local $3
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $6
    tee_local $3
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $3
    i32.load
    i32.store
    get_local $0
    get_local $5
    i32.const 24
    i32.add
    get_local $1
    get_local $2
    get_local $4
    get_local $7
    call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE
    get_local $6
    set_global $STACKTOP
    get_local $1
    i32.load
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 8
    i32.add
    tee_local $0
    get_local $0
    i32.load
    i32.load
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    set_local $7
    get_local $6
    tee_local $0
    get_local $3
    i32.load
    i32.store
    get_local $6
    i32.const 4
    i32.add
    tee_local $3
    get_local $0
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $7
    get_local $7
    i32.const 168
    i32.add
    get_local $5
    get_local $4
    i32.const 0
    call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb
    get_local $7
    i32.sub
    tee_local $0
    i32.const 168
    i32.lt_s
    if $if
      get_local $1
      get_local $0
      i32.const 12
      i32.div_s
      i32.const 7
      i32.rem_s
      i32.store
    end ;; $if
    get_local $6
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 8
    i32.add
    tee_local $0
    get_local $0
    i32.load
    i32.load
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    set_local $7
    get_local $6
    tee_local $0
    get_local $3
    i32.load
    i32.store
    get_local $6
    i32.const 4
    i32.add
    tee_local $3
    get_local $0
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $7
    get_local $7
    i32.const 168
    i32.add
    get_local $5
    get_local $4
    i32.const 0
    call $__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb
    get_local $7
    i32.sub
    tee_local $0
    i32.const 168
    i32.lt_s
    if $if
      get_local $1
      get_local $0
      i32.const 12
      i32.div_s
      i32.const 7
      i32.rem_s
      i32.store
    end ;; $if
    get_local $6
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $3
    i32.store
    get_local $7
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $7
    get_local $3
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $6
    tee_local $3
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $3
    i32.load
    i32.store
    get_local $0
    get_local $5
    i32.const 20
    i32.add
    get_local $1
    get_local $2
    get_local $4
    get_local $7
    call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE
    get_local $6
    set_global $STACKTOP
    get_local $1
    i32.load
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $3
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $3
    i32.store
    get_local $7
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $7
    get_local $3
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $6
    tee_local $3
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $3
    i32.load
    i32.store
    get_local $0
    get_local $5
    i32.const 20
    i32.add
    get_local $1
    get_local $2
    get_local $4
    get_local $7
    call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE
    get_local $6
    set_global $STACKTOP
    get_local $1
    i32.load
    )
  
  (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_local $0
    i32.const 11
    i32.add
    tee_local $4
    i32.load8_s
    tee_local $6
    i32.const 0
    i32.lt_s
    tee_local $5
    if $if (result i32)
      get_local $0
      i32.load offset=8
      i32.const 2147483647
      i32.and
      i32.const -1
      i32.add
    else
      i32.const 10
    end ;; $if
    tee_local $3
    get_local $2
    i32.lt_u
    if $if_1
      get_local $0
      get_local $3
      get_local $2
      get_local $3
      i32.sub
      get_local $5
      if $if_2 (result i32)
        get_local $0
        i32.load offset=4
      else
        get_local $6
        i32.const 255
        i32.and
      end ;; $if_2
      tee_local $4
      i32.const 0
      get_local $4
      get_local $2
      get_local $1
      call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc
    else
      block $block
        get_local $5
        if $if_3 (result i32)
          get_local $0
          i32.load
        else
          get_local $0
        end ;; $if_3
        set_local $3
        get_local $2
        if $if_4
          get_local $3
          get_local $1
          get_local $2
          call $_memmove
          drop
        end ;; $if_4
        get_local $3
        get_local $2
        i32.add
        i32.const 0
        i32.store8
        get_local $4
        i32.load8_s
        i32.const 0
        i32.lt_s
        if $if_5
          get_local $0
          get_local $2
          i32.store offset=4
        else
          get_local $4
          get_local $2
          i32.store8
        end ;; $if_5
      end ;; $block
    end ;; $if_1
    get_local $0
    )
  
  (func $_fputc (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    block $do-once
      block $__rjti$1
        get_local $1
        i32.load offset=76
        i32.const 0
        i32.lt_s
        br_if $__rjti$1
        get_local $1
        call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
        i32.eqz
        br_if $__rjti$1
        block $__rjto$0 (result i32)
          block $__rjti$0
            get_local $1
            i32.load8_s offset=75
            get_local $0
            i32.eq
            br_if $__rjti$0
            get_local $1
            i32.const 20
            i32.add
            tee_local $3
            i32.load
            tee_local $2
            get_local $1
            i32.load offset=16
            i32.ge_u
            br_if $__rjti$0
            get_local $3
            get_local $2
            i32.const 1
            i32.add
            i32.store
            get_local $2
            get_local $0
            i32.store8
            get_local $0
            i32.const 255
            i32.and
            br $__rjto$0
          end ;; $__rjti$0
          get_local $1
          get_local $0
          call $___overflow
        end ;; $__rjto$0
        set_local $0
        get_local $1
        call $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
        br $do-once
      end ;; $__rjti$1
      get_local $1
      i32.load8_s offset=75
      get_local $0
      i32.ne
      if $if
        get_local $1
        i32.const 20
        i32.add
        tee_local $3
        i32.load
        tee_local $2
        get_local $1
        i32.load offset=16
        i32.lt_u
        if $if_1
          block $block
            get_local $3
            get_local $2
            i32.const 1
            i32.add
            i32.store
            get_local $2
            get_local $0
            i32.store8
            get_local $0
            i32.const 255
            i32.and
            set_local $0
            br $do-once
          end ;; $block
        end ;; $if_1
      end ;; $if
      get_local $1
      get_local $0
      call $___overflow
      set_local $0
    end ;; $do-once
    get_local $0
    )
  
  (func $__ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $4
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $4
    tee_local $5
    get_local $1
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $6
    i32.store
    get_local $5
    i32.const 19240
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $1
    i32.const 13937
    i32.const 13963
    get_local $2
    get_local $1
    i32.load
    i32.load offset=48
    i32.const 7
    i32.and
    i32.const 397
    i32.add
    call_indirect (type $FUNCSIG$iiiii)
    drop
    get_local $3
    get_local $5
    i32.const 19248
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $1
    get_local $1
    i32.load
    i32.load offset=16
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.store
    get_local $0
    get_local $1
    get_local $1
    i32.load
    i32.load offset=20
    i32.const 63
    i32.and
    i32.const 176
    i32.add
    call_indirect (type $FUNCSIG$vii)
    get_local $6
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $4
    set_global $STACKTOP
    )
  
  (func $__ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $4
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $4
    tee_local $5
    get_local $1
    call $__ZNKSt3__28ios_base6getlocEv
    tee_local $6
    i32.store
    get_local $5
    i32.const 19208
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $1
    i32.const 13937
    i32.const 13963
    get_local $2
    get_local $1
    i32.load
    i32.load offset=32
    i32.const 7
    i32.and
    i32.const 397
    i32.add
    call_indirect (type $FUNCSIG$iiiii)
    drop
    get_local $3
    get_local $5
    i32.const 19220
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $1
    get_local $1
    i32.load
    i32.load offset=16
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.store8
    get_local $0
    get_local $1
    get_local $1
    i32.load
    i32.load offset=20
    i32.const 63
    i32.and
    i32.const 176
    i32.add
    call_indirect (type $FUNCSIG$vii)
    get_local $6
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    get_local $4
    set_global $STACKTOP
    )
  
  (func $__ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_ (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    get_local $0
    i32.const 4
    i32.add
    tee_local $5
    i32.load
    i32.const 107
    i32.ne
    set_local $6
    get_local $2
    i32.load
    get_local $0
    i32.load
    tee_local $4
    i32.sub
    tee_local $3
    i32.const 2147483647
    i32.lt_u
    if $if (result i32)
      get_local $3
      i32.const 1
      i32.shl
    else
      i32.const -1
    end ;; $if
    tee_local $3
    if $if_1 (result i32)
      get_local $3
    else
      i32.const 4
    end ;; $if_1
    set_local $7
    get_local $1
    i32.load
    get_local $4
    i32.sub
    i32.const 2
    i32.shr_s
    set_local $8
    get_local $6
    if $if_2 (result i32)
      get_local $4
    else
      i32.const 0
    end ;; $if_2
    get_local $7
    call $_realloc
    set_local $3
    get_local $6
    if $if_3
      get_local $0
      get_local $3
      i32.store
    else
      block $block
        get_local $0
        i32.load
        set_local $4
        get_local $0
        get_local $3
        i32.store
        get_local $4
        if $if_4
          block $block_1
            get_local $4
            get_local $5
            i32.load
            i32.const 127
            i32.and
            i32.const 48
            i32.add
            call_indirect (type $FUNCSIG$vi)
            get_local $0
            i32.load
            set_local $3
          end ;; $block_1
        end ;; $if_4
      end ;; $block
    end ;; $if_3
    get_local $5
    i32.const 108
    i32.store
    get_local $1
    get_local $3
    get_local $8
    i32.const 2
    i32.shl
    i32.add
    i32.store
    get_local $2
    get_local $0
    i32.load
    get_local $7
    i32.const 2
    i32.shr_u
    i32.const 2
    i32.shl
    i32.add
    i32.store
    )
  
  (func $__ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 128
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 12
    i32.add
    tee_local $8
    get_local $6
    i32.const 16
    i32.add
    tee_local $7
    i32.const 100
    i32.add
    i32.store
    get_local $0
    get_local $7
    get_local $8
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc
    get_local $6
    tee_local $3
    tee_local $4
    i32.const 0
    i32.store
    get_local $4
    i32.const 0
    i32.store offset=4
    get_local $6
    i32.const 8
    i32.add
    tee_local $4
    get_local $7
    i32.store
    get_local $2
    i32.load
    get_local $1
    i32.sub
    i32.const 2
    i32.shr_s
    set_local $5
    get_local $0
    i32.load
    call $_uselocale
    set_local $0
    get_local $1
    get_local $4
    get_local $5
    get_local $3
    call $_mbsrtowcs
    set_local $3
    get_local $0
    if $if
      get_local $0
      call $_uselocale
      drop
    end ;; $if
    get_local $2
    get_local $1
    get_local $3
    i32.const 2
    i32.shl
    i32.add
    i32.store
    get_local $6
    set_global $STACKTOP
    )
  
  (func $__ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_ (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    get_local $0
    i32.const 4
    i32.add
    tee_local $5
    i32.load
    i32.const 107
    i32.ne
    set_local $6
    get_local $2
    i32.load
    get_local $0
    i32.load
    tee_local $4
    i32.sub
    tee_local $3
    i32.const 2147483647
    i32.lt_u
    if $if (result i32)
      get_local $3
      i32.const 1
      i32.shl
    else
      i32.const -1
    end ;; $if
    tee_local $3
    if $if_1 (result i32)
      get_local $3
    else
      i32.const 1
    end ;; $if_1
    set_local $7
    get_local $1
    i32.load
    get_local $4
    i32.sub
    set_local $8
    get_local $6
    if $if_2 (result i32)
      get_local $4
    else
      i32.const 0
    end ;; $if_2
    get_local $7
    call $_realloc
    set_local $3
    get_local $6
    if $if_3
      get_local $0
      get_local $3
      i32.store
    else
      block $block
        get_local $0
        i32.load
        set_local $4
        get_local $0
        get_local $3
        i32.store
        get_local $4
        if $if_4
          block $block_1
            get_local $4
            get_local $5
            i32.load
            i32.const 127
            i32.and
            i32.const 48
            i32.add
            call_indirect (type $FUNCSIG$vi)
            get_local $0
            i32.load
            set_local $3
          end ;; $block_1
        end ;; $if_4
      end ;; $block
    end ;; $if_3
    get_local $5
    i32.const 108
    i32.store
    get_local $1
    get_local $3
    get_local $8
    i32.add
    i32.store
    get_local $2
    get_local $0
    i32.load
    get_local $7
    i32.add
    i32.store
    )
  
  (func $_scalbn (type $_11)
    (param $0 f64)
    (param $1 i32)
    (result f64)
    (local $2 i32)
    get_local $1
    i32.const 1023
    i32.gt_s
    if $if
      block $block
        get_local $0
        f64.const 0x1.0000000000000p+1023
        f64.mul
        set_local $0
        get_local $1
        i32.const -1023
        i32.add
        tee_local $2
        i32.const 1023
        i32.gt_s
        if $if_1
          block $block_1
            get_local $1
            i32.const -2046
            i32.add
            tee_local $1
            i32.const 1023
            i32.gt_s
            if $if_2
              i32.const 1023
              set_local $1
            end ;; $if_2
            get_local $0
            f64.const 0x1.0000000000000p+1023
            f64.mul
            set_local $0
          end ;; $block_1
        else
          get_local $2
          set_local $1
        end ;; $if_1
      end ;; $block
    else
      get_local $1
      i32.const -1022
      i32.lt_s
      if $if_3
        block $block_2
          get_local $0
          f64.const 0x1.0000000000000p-1022
          f64.mul
          set_local $0
          get_local $1
          i32.const 1022
          i32.add
          tee_local $2
          i32.const -1022
          i32.lt_s
          if $if_4
            block $block_3
              get_local $1
              i32.const 2044
              i32.add
              tee_local $1
              i32.const -1022
              i32.lt_s
              if $if_5
                i32.const -1022
                set_local $1
              end ;; $if_5
              get_local $0
              f64.const 0x1.0000000000000p-1022
              f64.mul
              set_local $0
            end ;; $block_3
          else
            get_local $2
            set_local $1
          end ;; $if_4
        end ;; $block_2
      end ;; $if_3
    end ;; $if
    get_local $1
    i32.const 1023
    i32.add
    i32.const 0
    i32.const 52
    call $_bitshift64Shl
    set_local $1
    get_global $tempDoublePtr
    get_local $1
    i32.store
    get_global $tempDoublePtr
    get_global $tempRet0
    i32.store offset=4
    get_local $0
    get_global $tempDoublePtr
    f64.load
    f64.mul
    )
  
  (func $_wcrtomb (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    block $do-once (result i32)
      get_local $0
      if $if (result i32)
        block $block (result i32)
          get_local $1
          i32.const 128
          i32.lt_u
          if $if_1
            block $block_1
              get_local $0
              get_local $1
              i32.store8
              i32.const 1
              br $do-once
            end ;; $block_1
          end ;; $if_1
          get_local $1
          i32.const 2048
          i32.lt_u
          if $if_2
            block $block_2
              get_local $0
              get_local $1
              i32.const 6
              i32.shr_u
              i32.const 192
              i32.or
              i32.store8
              get_local $0
              get_local $1
              i32.const 63
              i32.and
              i32.const 128
              i32.or
              i32.store8 offset=1
              i32.const 2
              br $do-once
            end ;; $block_2
          end ;; $if_2
          get_local $1
          i32.const 55296
          i32.lt_u
          get_local $1
          i32.const -8192
          i32.and
          i32.const 57344
          i32.eq
          i32.or
          if $if_3
            block $block_3
              get_local $0
              get_local $1
              i32.const 12
              i32.shr_u
              i32.const 224
              i32.or
              i32.store8
              get_local $0
              get_local $1
              i32.const 6
              i32.shr_u
              i32.const 63
              i32.and
              i32.const 128
              i32.or
              i32.store8 offset=1
              get_local $0
              get_local $1
              i32.const 63
              i32.and
              i32.const 128
              i32.or
              i32.store8 offset=2
              i32.const 3
              br $do-once
            end ;; $block_3
          end ;; $if_3
          get_local $1
          i32.const -65536
          i32.add
          i32.const 1048576
          i32.lt_u
          if $if_4 (result i32)
            block $block_4 (result i32)
              get_local $0
              get_local $1
              i32.const 18
              i32.shr_u
              i32.const 240
              i32.or
              i32.store8
              get_local $0
              get_local $1
              i32.const 12
              i32.shr_u
              i32.const 63
              i32.and
              i32.const 128
              i32.or
              i32.store8 offset=1
              get_local $0
              get_local $1
              i32.const 6
              i32.shr_u
              i32.const 63
              i32.and
              i32.const 128
              i32.or
              i32.store8 offset=2
              get_local $0
              get_local $1
              i32.const 63
              i32.and
              i32.const 128
              i32.or
              i32.store8 offset=3
              i32.const 4
            end ;; $block_4
          else
            block $block_5 (result i32)
              call $___errno_location
              i32.const 84
              i32.store
              i32.const -1
            end ;; $block_5
          end ;; $if_4
        end ;; $block
      else
        i32.const 1
      end ;; $if
    end ;; $do-once
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    i32.const 14411
    i32.const 14419
    call $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    i32.const 7304
    i32.const 7336
    call $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    i32.const 16984
    i32.load8_s
    i32.eqz
    if $_1
      i32.const 16984
      call $___cxa_guard_acquire
      if $_2
        block $_3
          i32.const 16992
          i32.load8_s
          i32.eqz
          if $_4
            i32.const 16992
            call $___cxa_guard_acquire
            if $_5
              block $_6
                i32.const 19744
                set_local $0
                loop $do-in
                  get_local $0
                  i32.const 0
                  i32.store
                  get_local $0
                  i32.const 0
                  i32.store offset=4
                  get_local $0
                  i32.const 0
                  i32.store offset=8
                  i32.const 0
                  set_local $1
                  loop $while-in
                    get_local $1
                    i32.const 3
                    i32.ne
                    if $if
                      block $block
                        get_local $0
                        get_local $1
                        i32.const 2
                        i32.shl
                        i32.add
                        i32.const 0
                        i32.store
                        get_local $1
                        i32.const 1
                        i32.add
                        set_local $1
                        br $while-in
                      end ;; $block
                    end ;; $if
                  end ;; $while-in
                  get_local $0
                  i32.const 12
                  i32.add
                  tee_local $0
                  i32.const 20032
                  i32.ne
                  br_if $do-in
                end ;; $do-in
                i32.const 101
                i32.const 0
                get_global $___dso_handle
                call $___cxa_atexit
                drop
              end ;; $_6
            end ;; $_5
          end ;; $_4
          i32.const 19744
          i32.const 14674
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 19756
          i32.const 14677
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
          drop
          i32.const 20032
          i32.const 19744
          i32.store
        end ;; $_3
      end ;; $_2
    end ;; $_1
    i32.const 20032
    i32.load
    )
  
  (func $__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    i32.const 17064
    i32.load8_s
    i32.eqz
    if $_1
      i32.const 17064
      call $___cxa_guard_acquire
      if $_2
        block $_3
          i32.const 17072
          i32.load8_s
          i32.eqz
          if $_4
            i32.const 17072
            call $___cxa_guard_acquire
            if $_5
              block $_6
                i32.const 20556
                set_local $0
                loop $do-in
                  get_local $0
                  i32.const 0
                  i32.store
                  get_local $0
                  i32.const 0
                  i32.store offset=4
                  get_local $0
                  i32.const 0
                  i32.store offset=8
                  i32.const 0
                  set_local $1
                  loop $while-in
                    get_local $1
                    i32.const 3
                    i32.ne
                    if $if
                      block $block
                        get_local $0
                        get_local $1
                        i32.const 2
                        i32.shl
                        i32.add
                        i32.const 0
                        i32.store
                        get_local $1
                        i32.const 1
                        i32.add
                        set_local $1
                        br $while-in
                      end ;; $block
                    end ;; $if
                  end ;; $while-in
                  get_local $0
                  i32.const 12
                  i32.add
                  tee_local $0
                  i32.const 20844
                  i32.ne
                  br_if $do-in
                end ;; $do-in
                i32.const 105
                i32.const 0
                get_global $___dso_handle
                call $___cxa_atexit
                drop
              end ;; $_6
            end ;; $_5
          end ;; $_4
          i32.const 20556
          i32.const 8356
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20568
          i32.const 8368
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw
          drop
          i32.const 20844
          i32.const 20556
          i32.store
        end ;; $_3
      end ;; $_2
    end ;; $_1
    i32.const 20844
    i32.load
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    tee_local $0
    get_local $3
    i32.load
    i32.store
    get_local $6
    i32.const 4
    i32.add
    tee_local $3
    get_local $0
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 4
    call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    set_local $0
    get_local $4
    i32.load
    i32.const 4
    i32.and
    i32.eqz
    if $if
      block $block
        get_local $0
        i32.const 69
        i32.lt_s
        if $if_1
          get_local $0
          i32.const 2000
          i32.add
          set_local $0
        else
          get_local $0
          i32.const -69
          i32.add
          i32.const 31
          i32.lt_u
          if $if_2
            get_local $0
            i32.const 1900
            i32.add
            set_local $0
          end ;; $if_2
        end ;; $if_1
        get_local $1
        get_local $0
        i32.const -1900
        i32.add
        i32.store
      end ;; $block
    end ;; $if
    get_local $6
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    tee_local $0
    get_local $3
    i32.load
    i32.store
    get_local $6
    i32.const 4
    i32.add
    tee_local $3
    get_local $0
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 4
    call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    set_local $0
    get_local $4
    i32.load
    i32.const 4
    i32.and
    i32.eqz
    if $if
      block $block
        get_local $0
        i32.const 69
        i32.lt_s
        if $if_1
          get_local $0
          i32.const 2000
          i32.add
          set_local $0
        else
          get_local $0
          i32.const -69
          i32.add
          i32.const 31
          i32.lt_u
          if $if_2
            get_local $0
            i32.const 1900
            i32.add
            set_local $0
          end ;; $if_2
        end ;; $if_1
        get_local $1
        get_local $0
        i32.const -1900
        i32.add
        i32.store
      end ;; $block
    end ;; $if
    get_local $6
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $6
    i32.const 4
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $6
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $6
    i32.const 8
    i32.add
    tee_local $2
    get_local $7
    i32.load
    i32.store
    get_local $6
    i32.const 12
    i32.add
    tee_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    get_local $2
    get_local $7
    get_local $3
    get_local $4
    get_local $5
    call $__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_
    set_local $0
    get_local $6
    set_global $STACKTOP
    get_local $0
    )
  
  (func $_strerror (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    i32.const 0
    set_local $1
    block $__rjto$1
      block $__rjti$1
        block $__rjti$0
          loop $while-in
            get_local $1
            i32.const 11285
            i32.add
            i32.load8_u
            get_local $0
            i32.eq
            if $_1
              block $_2
                get_local $1
                set_local $0
                br $__rjti$0
              end ;; $_2
            end ;; $_1
            get_local $1
            i32.const 1
            i32.add
            tee_local $1
            i32.const 87
            i32.ne
            br_if $while-in
            i32.const 87
            set_local $2
            i32.const 11373
            set_local $0
            br $__rjti$1
          end ;; $while-in
        end ;; $__rjti$0
        get_local $0
        if $_3
          block $_4
            get_local $0
            set_local $2
            i32.const 11373
            set_local $0
            br $__rjti$1
          end ;; $_4
        else
          i32.const 11373
          set_local $0
        end ;; $_3
        br $__rjto$1
      end ;; $__rjti$1
      loop $while-in1
        loop $while-in3
          get_local $0
          i32.const 1
          i32.add
          set_local $1
          get_local $0
          i32.load8_s
          if $if
            block $block
              get_local $1
              set_local $0
              br $while-in3
            end ;; $block
          else
            get_local $1
            set_local $0
          end ;; $if
        end ;; $while-in3
        get_local $2
        i32.const -1
        i32.add
        tee_local $2
        br_if $while-in1
      end ;; $while-in1
    end ;; $__rjto$1
    get_local $0
    )
  
  (func $___overflow (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $3
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $3
    tee_local $4
    get_local $1
    i32.const 255
    i32.and
    tee_local $7
    i32.store8
    block $do-once
      block $__rjti$0
        get_local $0
        i32.const 16
        i32.add
        tee_local $2
        i32.load
        tee_local $5
        br_if $__rjti$0
        get_local $0
        call $___towrite
        if $if
          i32.const -1
          set_local $1
        else
          block $block
            get_local $2
            i32.load
            set_local $5
            br $__rjti$0
          end ;; $block
        end ;; $if
        br $do-once
      end ;; $__rjti$0
      get_local $0
      i32.const 20
      i32.add
      tee_local $2
      i32.load
      tee_local $6
      get_local $5
      i32.lt_u
      if $if_1
        get_local $1
        i32.const 255
        i32.and
        tee_local $1
        get_local $0
        i32.load8_s offset=75
        i32.ne
        if $if_2
          block $block_1
            get_local $2
            get_local $6
            i32.const 1
            i32.add
            i32.store
            get_local $6
            get_local $7
            i32.store8
            br $do-once
          end ;; $block_1
        end ;; $if_2
      end ;; $if_1
      get_local $0
      get_local $4
      i32.const 1
      get_local $0
      i32.load offset=36
      i32.const 31
      i32.and
      i32.const 8
      i32.add
      call_indirect (type $FUNCSIG$iiii)
      i32.const 1
      i32.eq
      if $if_3 (result i32)
        get_local $4
        i32.load8_u
      else
        i32.const -1
      end ;; $if_3
      set_local $1
    end ;; $do-once
    get_local $3
    set_global $STACKTOP
    get_local $1
    )
  
  (func $_frexp (type $_11)
    (param $0 f64)
    (param $1 i32)
    (result f64)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    get_global $tempDoublePtr
    get_local $0
    f64.store
    block $switch
      block $switch-default
        block $switch-case0
          block $switch-case
            get_global $tempDoublePtr
            i32.load
            tee_local $2
            get_global $tempDoublePtr
            i32.load offset=4
            tee_local $3
            i32.const 52
            call $_bitshift64Lshr
            i32.const 2047
            i32.and
            tee_local $4
            br_table
              $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default
              $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0
              $switch-default ;; default
          end ;; $switch-case
          get_local $1
          get_local $0
          f64.const 0x0.0000000000000p+0
          f64.ne
          if $if (result i32)
            block $block (result i32)
              get_local $0
              f64.const 0x1.0000000000000p+64
              f64.mul
              get_local $1
              call $_frexp
              set_local $0
              get_local $1
              i32.load
              i32.const -64
              i32.add
            end ;; $block
          else
            i32.const 0
          end ;; $if
          tee_local $2
          i32.store
          br $switch
        end ;; $switch-case0
        br $switch
      end ;; $switch-default
      get_local $1
      get_local $4
      i32.const -1022
      i32.add
      i32.store
      get_global $tempDoublePtr
      get_local $2
      i32.store
      get_global $tempDoublePtr
      get_local $3
      i32.const -2146435073
      i32.and
      i32.const 1071644672
      i32.or
      i32.store offset=4
      get_global $tempDoublePtr
      f64.load
      set_local $0
    end ;; $switch
    get_local $0
    )
  
  (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_local $0
    i32.const 12
    i32.add
    set_local $5
    get_local $0
    i32.const 16
    i32.add
    set_local $6
    get_local $1
    set_local $4
    i32.const 0
    set_local $1
    loop $while-in
      block $while-out
        get_local $1
        get_local $2
        i32.ge_s
        br_if $while-out
        get_local $5
        i32.load
        tee_local $3
        get_local $6
        i32.load
        i32.lt_u
        if $if (result i32)
          block $block (result i32)
            get_local $5
            get_local $3
            i32.const 1
            i32.add
            i32.store
            get_local $3
            i32.load8_s
          end ;; $block
        else
          block $block_1 (result i32)
            get_local $0
            get_local $0
            i32.load
            i32.load offset=40
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            tee_local $3
            i32.const -1
            i32.eq
            br_if $while-out
            get_local $3
            i32.const 255
            i32.and
          end ;; $block_1
        end ;; $if
        set_local $3
        get_local $4
        get_local $3
        i32.store8
        get_local $4
        i32.const 1
        i32.add
        set_local $4
        get_local $1
        i32.const 1
        i32.add
        set_local $1
        br $while-in
      end ;; $while-out
    end ;; $while-in
    get_local $1
    )
  
  (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_local $0
    i32.const 12
    i32.add
    set_local $5
    get_local $0
    i32.const 16
    i32.add
    set_local $6
    get_local $1
    set_local $4
    i32.const 0
    set_local $1
    loop $while-in
      block $while-out
        get_local $1
        get_local $2
        i32.ge_s
        br_if $while-out
        get_local $5
        i32.load
        tee_local $3
        get_local $6
        i32.load
        i32.lt_u
        if $if
          block $block
            get_local $5
            get_local $3
            i32.const 4
            i32.add
            i32.store
            get_local $3
            i32.load
            set_local $3
          end ;; $block
        else
          get_local $0
          get_local $0
          i32.load
          i32.load offset=40
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
          tee_local $3
          i32.const -1
          i32.eq
          br_if $while-out
        end ;; $if
        get_local $4
        get_local $3
        i32.store
        get_local $4
        i32.const 4
        i32.add
        set_local $4
        get_local $1
        i32.const 1
        i32.add
        set_local $1
        br $while-in
      end ;; $while-out
    end ;; $while-in
    get_local $1
    )
  
  (func $__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    block $__rjto$0
      block $__rjti$0
        block $switch-default8
          block $switch-case7
            block $switch-case6
              get_local $2
              i32.load offset=4
              i32.const 176
              i32.and
              i32.const 16
              i32.sub
              br_table
                $switch-case6 $switch-default8 $switch-default8 $switch-default8 $switch-default8 $switch-default8 $switch-default8 $switch-default8 $switch-default8 $switch-default8 $switch-default8 $switch-default8 $switch-default8 $switch-default8 $switch-default8 $switch-default8
                $switch-case7
                $switch-default8 ;; default
            end ;; $switch-case6
            block $switch-default
              block $switch-case
                get_local $0
                i32.load8_s
                tee_local $2
                i32.const 43
                i32.sub
                br_table
                  $switch-case $switch-default $switch-case
                  $switch-default ;; default
              end ;; $switch-case
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              br $__rjto$0
            end ;; $switch-default
            get_local $1
            get_local $0
            i32.sub
            i32.const 1
            i32.gt_s
            get_local $2
            i32.const 48
            i32.eq
            i32.and
            i32.eqz
            br_if $__rjto$0
            block $switch2
              block $switch-default5
                block $switch-case3
                  get_local $0
                  i32.load8_s offset=1
                  i32.const 88
                  i32.sub
                  br_table
                    $switch-case3 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5
                    $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5 $switch-default5
                    $switch-case3
                    $switch-default5 ;; default
                end ;; $switch-case3
                br $switch2
              end ;; $switch-default5
              br $__rjto$0
            end ;; $switch2
            get_local $0
            i32.const 2
            i32.add
            set_local $0
            br $__rjto$0
          end ;; $switch-case7
          get_local $1
          set_local $0
        end ;; $switch-default8
      end ;; $__rjti$0
    end ;; $__rjto$0
    get_local $0
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 2
    call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const -1
    i32.add
    i32.const 12
    i32.lt_u
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 2
    call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const -1
    i32.add
    i32.const 12
    i32.lt_u
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 2
    call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const -1
    i32.add
    i32.const 31
    i32.lt_u
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 3
    call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const 366
    i32.lt_s
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 2
    call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const -1
    i32.add
    i32.const 31
    i32.lt_u
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 3
    call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const 366
    i32.lt_s
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 2
    call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const 13
    i32.lt_s
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.const -1
      i32.add
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 2
    call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const 13
    i32.lt_s
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.const -1
      i32.add
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 1
    call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const 7
    i32.lt_s
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 2
    call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const 61
    i32.lt_s
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 2
    call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const 60
    i32.lt_s
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 1
    call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const 7
    i32.lt_s
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 2
    call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const 61
    i32.lt_s
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 2
    call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const 60
    i32.lt_s
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 2
    call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const 24
    i32.lt_s
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 2
    call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    tee_local $2
    i32.const 24
    i32.lt_s
    get_local $4
    i32.load
    tee_local $3
    i32.const 4
    i32.and
    i32.eqz
    i32.and
    if $if
      get_local $1
      get_local $2
      i32.store
    else
      get_local $4
      get_local $3
      i32.const 4
      i32.or
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    (local $3 i32)
    get_global $STACKTOP
    set_local $3
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $3
    set_local $1
    get_local $0
    get_local $0
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.add
    i32.load offset=24
    if $if
      block $block
        get_local $1
        get_local $0
        call $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_
        get_local $1
        i32.load8_s
        if $if_1
          get_local $0
          get_local $0
          i32.load
          i32.const -12
          i32.add
          i32.load
          i32.add
          i32.load offset=24
          tee_local $2
          get_local $2
          i32.load
          i32.load offset=24
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
          i32.const -1
          i32.eq
          if $if_2
            get_local $0
            get_local $0
            i32.load
            i32.const -12
            i32.add
            i32.load
            i32.add
            i32.const 16
            i32.add
            tee_local $2
            get_local $2
            i32.load
            i32.const 1
            i32.or
            i32.store
          end ;; $if_2
        end ;; $if_1
        get_local $1
        call $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev
      end ;; $block
    end ;; $if
    get_local $3
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    (local $3 i32)
    get_global $STACKTOP
    set_local $3
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $3
    set_local $1
    get_local $0
    get_local $0
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.add
    i32.load offset=24
    if $if
      block $block
        get_local $1
        get_local $0
        call $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_
        get_local $1
        i32.load8_s
        if $if_1
          get_local $0
          get_local $0
          i32.load
          i32.const -12
          i32.add
          i32.load
          i32.add
          i32.load offset=24
          tee_local $2
          get_local $2
          i32.load
          i32.load offset=24
          i32.const 63
          i32.and
          i32.const 312
          i32.add
          call_indirect (type $FUNCSIG$ii)
          i32.const -1
          i32.eq
          if $if_2
            get_local $0
            get_local $0
            i32.load
            i32.const -12
            i32.add
            i32.load
            i32.add
            i32.const 16
            i32.add
            tee_local $2
            get_local $2
            i32.load
            i32.const 1
            i32.or
            i32.store
          end ;; $if_2
        end ;; $if_1
        get_local $1
        call $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev
      end ;; $block
    end ;; $if
    get_local $3
    set_global $STACKTOP
    get_local $0
    )
  
  (func $_ungetc (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    block $do-once
      get_local $0
      i32.const -1
      i32.eq
      if $_1 (result i32)
        i32.const -1
      else
        block $_2 (result i32)
          get_local $1
          i32.load offset=76
          i32.const -1
          i32.gt_s
          if $_3 (result i32)
            get_local $1
            call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
          else
            i32.const 0
          end ;; $_3
          set_local $3
          block $__rjto$0
            block $__rjti$0
              get_local $1
              i32.load offset=8
              br_if $__rjti$0
              get_local $1
              call $___toread
              i32.eqz
              br_if $__rjti$0
              br $__rjto$0
            end ;; $__rjti$0
            get_local $1
            i32.const 4
            i32.add
            tee_local $2
            i32.load
            tee_local $4
            get_local $1
            i32.load offset=44
            i32.const -8
            i32.add
            i32.gt_u
            if $if
              block $block
                get_local $2
                get_local $4
                i32.const -1
                i32.add
                tee_local $2
                i32.store
                get_local $2
                get_local $0
                i32.store8
                get_local $1
                get_local $1
                i32.load
                i32.const -17
                i32.and
                i32.store
                get_local $3
                i32.eqz
                br_if $do-once
                get_local $1
                call $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
                br $do-once
              end ;; $block
            end ;; $if
          end ;; $__rjto$0
          get_local $3
          if $if_1 (result i32)
            block $block_1 (result i32)
              get_local $1
              call $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
              i32.const -1
            end ;; $block_1
          else
            i32.const -1
          end ;; $if_1
        end ;; $_2
      end ;; $_1
      set_local $0
    end ;; $do-once
    get_local $0
    )
  
  (func $__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj (type $_1)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result f64)
    (local $3 f64)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_global $STACKTOP
    set_local $5
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $5
    set_local $6
    get_local $0
    get_local $1
    i32.eq
    if $if
      block $block
        get_local $2
        i32.const 4
        i32.store
        f64.const 0x0.0000000000000p+0
        set_local $3
      end ;; $block
    else
      block $block_1
        call $___errno_location
        tee_local $4
        i32.load
        set_local $7
        get_local $4
        i32.const 0
        i32.store
        get_local $0
        get_local $6
        call $__ZNSt3__26__clocEv
        call $_strtold_l
        set_local $3
        get_local $4
        i32.load
        tee_local $0
        i32.eqz
        if $if_1
          get_local $4
          get_local $7
          i32.store
        end ;; $if_1
        get_local $6
        i32.load
        get_local $1
        i32.eq
        if $if_2
          get_local $0
          i32.const 34
          i32.eq
          if $if_3
            get_local $2
            i32.const 4
            i32.store
          end ;; $if_3
        else
          block $block_2
            get_local $2
            i32.const 4
            i32.store
            f64.const 0x0.0000000000000p+0
            set_local $3
          end ;; $block_2
        end ;; $if_2
      end ;; $block_1
    end ;; $if
    get_local $5
    set_global $STACKTOP
    get_local $3
    )
  
  (func $__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_ (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    block $__rjto$0
      block $__rjti$0
        loop $while-in
          block $while-out
            get_local $3
            get_local $4
            i32.eq
            br_if $__rjti$0
            get_local $1
            get_local $2
            i32.eq
            if $if
              block $block
                i32.const -1
                set_local $0
                br $while-out
              end ;; $block
            end ;; $if
            get_local $1
            i32.load8_s
            tee_local $0
            get_local $3
            i32.load8_s
            tee_local $5
            i32.lt_s
            if $if_1
              block $block_1
                i32.const -1
                set_local $0
                br $while-out
              end ;; $block_1
            end ;; $if_1
            get_local $5
            get_local $0
            i32.lt_s
            if $if_2
              i32.const 1
              set_local $0
            else
              block $block_2
                get_local $3
                i32.const 1
                i32.add
                set_local $3
                get_local $1
                i32.const 1
                i32.add
                set_local $1
                br $while-in
              end ;; $block_2
            end ;; $if_2
          end ;; $while-out
        end ;; $while-in
        br $__rjto$0
      end ;; $__rjti$0
      get_local $1
      get_local $2
      i32.ne
      set_local $0
    end ;; $__rjto$0
    get_local $0
    )
  
  (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    (local $4 i32)
    get_local $2
    i32.const -17
    i32.gt_u
    if $_1
      get_local $0
      call $__ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv
    end ;; $_1
    block $__rjto$0
      block $__rjti$0
        get_local $2
        i32.const 11
        i32.lt_u
        if $if
          block $block
            get_local $0
            get_local $2
            i32.store8 offset=11
            get_local $2
            br_if $__rjti$0
          end ;; $block
        else
          block $block_1
            get_local $0
            get_local $2
            i32.const 16
            i32.add
            i32.const -16
            i32.and
            tee_local $3
            call $__Znwj
            tee_local $4
            i32.store
            get_local $0
            get_local $3
            i32.const -2147483648
            i32.or
            i32.store offset=8
            get_local $0
            get_local $2
            i32.store offset=4
            get_local $4
            set_local $0
            br $__rjti$0
          end ;; $block_1
        end ;; $if
        br $__rjto$0
      end ;; $__rjti$0
      get_local $0
      get_local $1
      get_local $2
      call $_memcpy
      drop
    end ;; $__rjto$0
    get_local $0
    get_local $2
    i32.add
    i32.const 0
    i32.store8
    )
  
  (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    (local $4 i32)
    get_local $2
    i32.const 1073741807
    i32.gt_u
    if $if
      get_local $0
      call $__ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv
    end ;; $if
    get_local $2
    i32.const 2
    i32.lt_u
    if $if_1
      block $block
        get_local $0
        get_local $2
        i32.store8 offset=11
        get_local $0
        set_local $3
      end ;; $block
    else
      get_local $2
      i32.const 4
      i32.add
      i32.const -4
      i32.and
      tee_local $4
      i32.const 1073741823
      i32.gt_u
      if $if_2
        i32.const 16218
        i32.const 16255
        i32.const 1734
        i32.const 16332
        call $___assert_fail
      else
        block $block_1
          get_local $0
          get_local $4
          i32.const 2
          i32.shl
          call $__Znwj
          tee_local $3
          i32.store
          get_local $0
          get_local $4
          i32.const -2147483648
          i32.or
          i32.store offset=8
          get_local $0
          get_local $2
          i32.store offset=4
        end ;; $block_1
      end ;; $if_2
    end ;; $if_1
    get_local $3
    get_local $1
    get_local $2
    call $__ZNSt3__211char_traitsIwE4copyEPwPKwj
    drop
    get_local $3
    get_local $2
    i32.const 2
    i32.shl
    i32.add
    i32.const 0
    i32.store
    )
  
  (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    (local $4 i32)
    get_local $1
    i32.const -17
    i32.gt_u
    if $_1
      get_local $0
      call $__ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv
    end ;; $_1
    block $__rjto$0
      block $__rjti$0
        get_local $1
        i32.const 11
        i32.lt_u
        if $if
          block $block
            get_local $0
            get_local $1
            i32.store8 offset=11
            get_local $1
            br_if $__rjti$0
          end ;; $block
        else
          block $block_1
            get_local $0
            get_local $1
            i32.const 16
            i32.add
            i32.const -16
            i32.and
            tee_local $3
            call $__Znwj
            tee_local $4
            i32.store
            get_local $0
            get_local $3
            i32.const -2147483648
            i32.or
            i32.store offset=8
            get_local $0
            get_local $1
            i32.store offset=4
            get_local $4
            set_local $0
            br $__rjti$0
          end ;; $block_1
        end ;; $if
        br $__rjto$0
      end ;; $__rjti$0
      get_local $0
      get_local $2
      get_local $1
      call $_memset
      drop
    end ;; $__rjto$0
    get_local $0
    get_local $1
    i32.add
    i32.const 0
    i32.store8
    )
  
  (func $_realloc (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    get_local $0
    i32.eqz
    if $if
      get_local $1
      call $_malloc
      return
    end ;; $if
    get_local $1
    i32.const -65
    i32.gt_u
    if $if_1
      block $block
        call $___errno_location
        i32.const 12
        i32.store
        i32.const 0
        return
      end ;; $block
    end ;; $if_1
    get_local $0
    i32.const -8
    i32.add
    get_local $1
    i32.const 11
    i32.lt_u
    if $if_2 (result i32)
      i32.const 16
    else
      get_local $1
      i32.const 11
      i32.add
      i32.const -8
      i32.and
    end ;; $if_2
    call $_try_realloc_chunk
    tee_local $2
    if $if_3
      get_local $2
      i32.const 8
      i32.add
      return
    end ;; $if_3
    get_local $1
    call $_malloc
    tee_local $2
    i32.eqz
    if $if_4
      i32.const 0
      return
    end ;; $if_4
    get_local $2
    get_local $0
    get_local $0
    i32.const -4
    i32.add
    i32.load
    tee_local $3
    i32.const -8
    i32.and
    get_local $3
    i32.const 3
    i32.and
    if $if_5 (result i32)
      i32.const 4
    else
      i32.const 8
    end ;; $if_5
    i32.sub
    tee_local $3
    get_local $1
    i32.lt_u
    if $if_6 (result i32)
      get_local $3
    else
      get_local $1
    end ;; $if_6
    call $_memcpy
    drop
    get_local $0
    call $_free
    get_local $2
    )
  
  (func $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    get_local $0
    i32.const 4
    i32.add
    tee_local $0
    i32.load
    tee_local $1
    get_local $1
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.add
    tee_local $1
    i32.load offset=24
    if $if
      get_local $1
      i32.load offset=16
      i32.eqz
      if $if_1
        get_local $1
        i32.load offset=4
        i32.const 8192
        i32.and
        if $if_2
          call $__ZSt18uncaught_exceptionv
          i32.eqz
          if $if_3
            get_local $0
            i32.load
            tee_local $1
            get_local $1
            i32.load
            i32.const -12
            i32.add
            i32.load
            i32.add
            i32.load offset=24
            tee_local $1
            get_local $1
            i32.load
            i32.load offset=24
            i32.const 63
            i32.and
            i32.const 312
            i32.add
            call_indirect (type $FUNCSIG$ii)
            i32.const -1
            i32.eq
            if $if_4
              get_local $0
              i32.load
              tee_local $0
              get_local $0
              i32.load
              i32.const -12
              i32.add
              i32.load
              i32.add
              i32.const 16
              i32.add
              tee_local $0
              get_local $0
              i32.load
              i32.const 1
              i32.or
              i32.store
            end ;; $if_4
          end ;; $if_3
        end ;; $if_2
      end ;; $if_1
    end ;; $if
    )
  
  (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    (local $4 i32)
    get_local $1
    i32.const 1073741807
    i32.gt_u
    if $if
      get_local $0
      call $__ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv
    end ;; $if
    get_local $1
    i32.const 2
    i32.lt_u
    if $if_1
      block $block
        get_local $0
        get_local $1
        i32.store8 offset=11
        get_local $0
        set_local $3
      end ;; $block
    else
      get_local $1
      i32.const 4
      i32.add
      i32.const -4
      i32.and
      tee_local $4
      i32.const 1073741823
      i32.gt_u
      if $if_2
        i32.const 16218
        i32.const 16255
        i32.const 1734
        i32.const 16332
        call $___assert_fail
      else
        block $block_1
          get_local $0
          get_local $4
          i32.const 2
          i32.shl
          call $__Znwj
          tee_local $3
          i32.store
          get_local $0
          get_local $4
          i32.const -2147483648
          i32.or
          i32.store offset=8
          get_local $0
          get_local $1
          i32.store offset=4
        end ;; $block_1
      end ;; $if_2
    end ;; $if_1
    get_local $3
    get_local $1
    get_local $2
    call $__ZNSt3__211char_traitsIwE6assignEPwjw
    drop
    get_local $3
    get_local $1
    i32.const 2
    i32.shl
    i32.add
    i32.const 0
    i32.store
    )
  
  (func $__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_ (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    block $__rjto$0
      block $__rjti$0
        loop $while-in
          block $while-out
            get_local $3
            get_local $4
            i32.eq
            br_if $__rjti$0
            get_local $1
            get_local $2
            i32.eq
            if $if
              block $block
                i32.const -1
                set_local $0
                br $while-out
              end ;; $block
            end ;; $if
            get_local $1
            i32.load
            tee_local $0
            get_local $3
            i32.load
            tee_local $5
            i32.lt_s
            if $if_1
              block $block_1
                i32.const -1
                set_local $0
                br $while-out
              end ;; $block_1
            end ;; $if_1
            get_local $5
            get_local $0
            i32.lt_s
            if $if_2
              i32.const 1
              set_local $0
            else
              block $block_2
                get_local $3
                i32.const 4
                i32.add
                set_local $3
                get_local $1
                i32.const 4
                i32.add
                set_local $1
                br $while-in
              end ;; $block_2
            end ;; $if_2
          end ;; $while-out
        end ;; $while-in
        br $__rjto$0
      end ;; $__rjti$0
      get_local $1
      get_local $2
      i32.ne
      set_local $0
    end ;; $__rjto$0
    get_local $0
    )
  
  (func $__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_ (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    (local $8 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 4
    i32.add
    tee_local $8
    get_local $2
    i32.store
    get_local $0
    tee_local $1
    get_local $5
    i32.store
    get_local $2
    get_local $3
    get_local $8
    get_local $5
    get_local $6
    get_local $1
    i32.const 1114111
    i32.const 0
    call $__ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE
    set_local $2
    get_local $4
    get_local $8
    i32.load
    i32.store
    get_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    set_global $STACKTOP
    get_local $2
    )
  
  (func $__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_ (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    (local $8 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 4
    i32.add
    tee_local $8
    get_local $2
    i32.store
    get_local $0
    tee_local $1
    get_local $5
    i32.store
    get_local $2
    get_local $3
    get_local $8
    get_local $5
    get_local $6
    get_local $1
    i32.const 1114111
    i32.const 0
    call $__ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE
    set_local $2
    get_local $4
    get_local $8
    i32.load
    i32.store
    get_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    set_global $STACKTOP
    get_local $2
    )
  
  (func $__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_ (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    (local $8 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 4
    i32.add
    tee_local $8
    get_local $2
    i32.store
    get_local $0
    tee_local $1
    get_local $5
    i32.store
    get_local $2
    get_local $3
    get_local $8
    get_local $5
    get_local $6
    get_local $1
    i32.const 1114111
    i32.const 0
    call $__ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE
    set_local $2
    get_local $4
    get_local $8
    i32.load
    i32.store
    get_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    set_global $STACKTOP
    get_local $2
    )
  
  (func $__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_ (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    (local $8 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    i32.const 4
    i32.add
    tee_local $8
    get_local $2
    i32.store
    get_local $0
    tee_local $1
    get_local $5
    i32.store
    get_local $2
    get_local $3
    get_local $8
    get_local $5
    get_local $6
    get_local $1
    i32.const 1114111
    i32.const 0
    call $__ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE
    set_local $2
    get_local $4
    get_local $8
    i32.load
    i32.store
    get_local $7
    get_local $1
    i32.load
    i32.store
    get_local $0
    set_global $STACKTOP
    get_local $2
    )
  
  (func $__ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (local $4 i32)
    block $do-once
      get_local $1
      i32.const 16
      i32.add
      tee_local $0
      i32.load
      tee_local $4
      if $if
        block $block
          get_local $4
          get_local $2
          i32.ne
          if $if_1
            block $block_1
              get_local $1
              i32.const 36
              i32.add
              tee_local $0
              get_local $0
              i32.load
              i32.const 1
              i32.add
              i32.store
              get_local $1
              i32.const 2
              i32.store offset=24
              get_local $1
              i32.const 1
              i32.store8 offset=54
              br $do-once
            end ;; $block_1
          end ;; $if_1
          get_local $1
          i32.const 24
          i32.add
          tee_local $0
          i32.load
          i32.const 2
          i32.eq
          if $if_2
            get_local $0
            get_local $3
            i32.store
          end ;; $if_2
        end ;; $block
      else
        block $block_2
          get_local $0
          get_local $2
          i32.store
          get_local $1
          get_local $3
          i32.store offset=24
          get_local $1
          i32.const 1
          i32.store offset=36
        end ;; $block_2
      end ;; $if
    end ;; $do-once
    )
  
  (func $__ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    (local $7 i32)
    get_local $0
    i32.load offset=4
    tee_local $7
    i32.const 8
    i32.shr_s
    set_local $6
    get_local $7
    i32.const 1
    i32.and
    if $if
      get_local $3
      i32.load
      get_local $6
      i32.add
      i32.load
      set_local $6
    end ;; $if
    get_local $0
    i32.load
    tee_local $0
    get_local $1
    get_local $2
    get_local $3
    get_local $6
    i32.add
    get_local $7
    i32.const 2
    i32.and
    if $if_1 (result i32)
      get_local $4
    else
      i32.const 2
    end ;; $if_1
    get_local $5
    get_local $0
    i32.load
    i32.load offset=20
    i32.const 7
    i32.and
    i32.const 405
    i32.add
    call_indirect (type $FUNCSIG$viiiiii)
    )
  
  (func $__ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    (local $4 i32)
    get_global $STACKTOP
    set_local $4
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev
    get_local $0
    i32.const 6784
    i32.store
    get_local $0
    get_local $1
    i32.store offset=32
    get_local $4
    i32.const 4
    i32.add
    tee_local $3
    get_local $0
    i32.const 4
    i32.add
    call $__ZNSt3__26localeC2ERKS0_
    get_local $4
    tee_local $1
    get_local $3
    i32.load
    i32.store
    get_local $1
    i32.const 21008
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $3
    get_local $1
    call $__ZNSt3__26localeD2Ev
    get_local $0
    get_local $3
    i32.store offset=36
    get_local $0
    get_local $2
    i32.store offset=40
    get_local $0
    get_local $3
    get_local $3
    i32.load
    i32.load offset=28
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.const 1
    i32.and
    i32.store8 offset=44
    get_local $4
    set_global $STACKTOP
    )
  
  (func $__ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    (local $4 i32)
    get_global $STACKTOP
    set_local $4
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    call $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev
    get_local $0
    i32.const 6720
    i32.store
    get_local $0
    get_local $1
    i32.store offset=32
    get_local $4
    i32.const 4
    i32.add
    tee_local $3
    get_local $0
    i32.const 4
    i32.add
    call $__ZNSt3__26localeC2ERKS0_
    get_local $4
    tee_local $1
    get_local $3
    i32.load
    i32.store
    get_local $1
    i32.const 21000
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    set_local $3
    get_local $1
    call $__ZNSt3__26localeD2Ev
    get_local $0
    get_local $3
    i32.store offset=36
    get_local $0
    get_local $2
    i32.store offset=40
    get_local $0
    get_local $3
    get_local $3
    i32.load
    i32.load offset=28
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.const 1
    i32.and
    i32.store8 offset=44
    get_local $4
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 4
    call $__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    set_local $2
    get_local $4
    i32.load
    i32.const 4
    i32.and
    i32.eqz
    if $if
      get_local $1
      get_local $2
      i32.const -1900
      i32.add
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    tee_local $6
    get_local $3
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $3
    get_local $6
    i32.load
    i32.store
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    i32.const 4
    call $__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi
    set_local $2
    get_local $4
    i32.load
    i32.const 4
    i32.and
    i32.eqz
    if $if
      get_local $1
      get_local $2
      i32.const -1900
      i32.add
      i32.store
    end ;; $if
    get_local $0
    set_global $STACKTOP
    )
  
  (func $___fflush_unlocked (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    block $__rjto$0 (result i32)
      block $__rjti$0
        get_local $0
        i32.const 20
        i32.add
        tee_local $1
        i32.load
        get_local $0
        i32.const 28
        i32.add
        tee_local $2
        i32.load
        i32.le_u
        br_if $__rjti$0
        get_local $0
        i32.const 0
        i32.const 0
        get_local $0
        i32.load offset=36
        i32.const 31
        i32.and
        i32.const 8
        i32.add
        call_indirect (type $FUNCSIG$iiii)
        drop
        get_local $1
        i32.load
        br_if $__rjti$0
        i32.const -1
        br $__rjto$0
      end ;; $__rjti$0
      get_local $0
      i32.const 4
      i32.add
      tee_local $3
      i32.load
      tee_local $4
      get_local $0
      i32.const 8
      i32.add
      tee_local $5
      i32.load
      tee_local $6
      i32.lt_u
      if $if
        get_local $0
        get_local $4
        get_local $6
        i32.sub
        i32.const 1
        get_local $0
        i32.load offset=40
        i32.const 31
        i32.and
        i32.const 8
        i32.add
        call_indirect (type $FUNCSIG$iiii)
        drop
      end ;; $if
      get_local $0
      i32.const 0
      i32.store offset=16
      get_local $2
      i32.const 0
      i32.store
      get_local $1
      i32.const 0
      i32.store
      get_local $5
      i32.const 0
      i32.store
      get_local $3
      i32.const 0
      i32.store
      i32.const 0
    end ;; $__rjto$0
    tee_local $0
    )
  
  (func $__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    get_local $0
    get_local $1
    i32.load offset=8
    i32.eq
    if $if
      i32.const 0
      get_local $1
      get_local $2
      get_local $3
      get_local $4
      call $__ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i
    else
      get_local $0
      i32.load offset=8
      tee_local $6
      get_local $1
      get_local $2
      get_local $3
      get_local $4
      get_local $5
      get_local $6
      i32.load
      i32.load offset=20
      i32.const 7
      i32.and
      i32.const 405
      i32.add
      call_indirect (type $FUNCSIG$viiiiii)
    end ;; $if
    )
  
  (func $_vasprintf (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    get_global $STACKTOP
    set_local $5
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $5
    set_local $3
    block $do-once (result i32)
      i32.const 240
      call $_malloc
      tee_local $4
      if $if (result i32)
        block $block (result i32)
          get_local $3
          get_local $2
          i32.load
          i32.store
          get_local $4
          i32.const 240
          get_local $1
          get_local $3
          call $_vsnprintf
          tee_local $3
          i32.const 240
          i32.lt_u
          if $if_1
            block $block_1
              get_local $0
              get_local $4
              get_local $3
              i32.const 1
              i32.add
              call $_realloc
              tee_local $0
              if $if_2 (result i32)
                get_local $0
              else
                get_local $4
              end ;; $if_2
              i32.store
              get_local $3
              br $do-once
            end ;; $block_1
          end ;; $if_1
          get_local $4
          call $_free
          get_local $3
          i32.const 0
          i32.lt_s
          if $if_3 (result i32)
            i32.const -1
          else
            block $block_2 (result i32)
              get_local $0
              get_local $3
              i32.const 1
              i32.add
              tee_local $3
              call $_malloc
              tee_local $0
              i32.store
              get_local $0
              if $if_4 (result i32)
                get_local $0
                get_local $3
                get_local $1
                get_local $2
                call $_vsnprintf
              else
                i32.const -1
              end ;; $if_4
            end ;; $block_2
          end ;; $if_3
        end ;; $block
      else
        i32.const -1
      end ;; $if
    end ;; $do-once
    set_local $0
    get_local $5
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__26locale5__imp7installEPNS0_5facetEl (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    (local $4 i32)
    get_local $1
    call $__ZNSt3__214__shared_count12__add_sharedEv
    get_local $0
    i32.load offset=12
    get_local $0
    i32.const 8
    i32.add
    tee_local $0
    i32.load
    tee_local $4
    i32.sub
    i32.const 2
    i32.shr_s
    get_local $2
    i32.gt_u
    if $if (result i32)
      block $block (result i32)
        get_local $0
        set_local $3
        get_local $4
      end ;; $block
    else
      block $block_1 (result i32)
        get_local $0
        get_local $2
        i32.const 1
        i32.add
        call $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj
        get_local $0
        set_local $3
        get_local $0
        i32.load
      end ;; $block_1
    end ;; $if
    tee_local $0
    get_local $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    tee_local $0
    if $if_1
      get_local $0
      call $__ZNSt3__214__shared_count16__release_sharedEv
      drop
    end ;; $if_1
    get_local $3
    i32.load
    get_local $2
    i32.const 2
    i32.shl
    i32.add
    get_local $1
    i32.store
    )
  
  (func $__ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    (local $9 i32)
    get_global $STACKTOP
    set_local $7
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $7
    tee_local $6
    i32.const 37
    i32.store8
    get_local $6
    i32.const 1
    i32.add
    tee_local $8
    get_local $4
    i32.store8
    get_local $6
    i32.const 2
    i32.add
    tee_local $9
    get_local $5
    i32.store8
    get_local $6
    i32.const 0
    i32.store8 offset=3
    get_local $5
    i32.const 255
    i32.and
    if $if
      block $block
        get_local $8
        get_local $5
        i32.store8
        get_local $9
        get_local $4
        i32.store8
      end ;; $block
    end ;; $if
    get_local $2
    get_local $1
    get_local $1
    get_local $2
    i32.load
    get_local $1
    i32.sub
    get_local $6
    get_local $3
    get_local $0
    i32.load
    call $_strftime_l
    i32.add
    i32.store
    get_local $7
    set_global $STACKTOP
    )
  
  (func $_getc (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    block $do-once
      block $__rjti$0
        get_local $0
        i32.load offset=76
        i32.const 0
        i32.lt_s
        br_if $__rjti$0
        get_local $0
        call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
        i32.eqz
        br_if $__rjti$0
        get_local $0
        i32.const 4
        i32.add
        tee_local $1
        i32.load
        tee_local $2
        get_local $0
        i32.load offset=8
        i32.lt_u
        if $if (result i32)
          block $block (result i32)
            get_local $1
            get_local $2
            i32.const 1
            i32.add
            i32.store
            get_local $2
            i32.load8_u
          end ;; $block
        else
          get_local $0
          call $___uflow
        end ;; $if
        set_local $1
        get_local $0
        call $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
        br $do-once
      end ;; $__rjti$0
      get_local $0
      i32.const 4
      i32.add
      tee_local $1
      i32.load
      tee_local $2
      get_local $0
      i32.load offset=8
      i32.lt_u
      if $if_1 (result i32)
        block $block_1 (result i32)
          get_local $1
          get_local $2
          i32.const 1
          i32.add
          i32.store
          get_local $2
          i32.load8_u
        end ;; $block_1
      else
        get_local $0
        call $___uflow
      end ;; $if_1
      set_local $1
    end ;; $do-once
    get_local $1
    )
  
  (func $__ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib (type $FUNCSIG$viiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_local $0
    i32.load offset=4
    tee_local $6
    i32.const 8
    i32.shr_s
    set_local $5
    get_local $6
    i32.const 1
    i32.and
    if $if
      get_local $2
      i32.load
      get_local $5
      i32.add
      i32.load
      set_local $5
    end ;; $if
    get_local $0
    i32.load
    tee_local $0
    get_local $1
    get_local $2
    get_local $5
    i32.add
    get_local $6
    i32.const 2
    i32.and
    if $if_1 (result i32)
      get_local $3
    else
      i32.const 2
    end ;; $if_1
    get_local $4
    get_local $0
    i32.load
    i32.load offset=24
    i32.const 3
    i32.and
    i32.const 40
    i32.add
    call_indirect (type $FUNCSIG$viiiii)
    )
  
  (func $_strtox (type $_1)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result f64)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 f64)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 112
    i32.add
    set_global $STACKTOP
    get_local $6
    tee_local $3
    tee_local $4
    i32.const 112
    i32.add
    set_local $5
    loop $do-in
      get_local $4
      i32.const 0
      i32.store
      get_local $4
      i32.const 4
      i32.add
      tee_local $4
      get_local $5
      i32.lt_s
      br_if $do-in
    end ;; $do-in
    get_local $3
    i32.const 4
    i32.add
    tee_local $4
    get_local $0
    i32.store
    get_local $3
    i32.const 8
    i32.add
    tee_local $5
    i32.const -1
    i32.store
    get_local $3
    get_local $0
    i32.store offset=44
    get_local $3
    i32.const -1
    i32.store offset=76
    get_local $3
    i32.const 0
    call $___shlim
    get_local $3
    get_local $2
    i32.const 1
    call $___floatscan
    set_local $7
    get_local $4
    i32.load
    get_local $5
    i32.load
    i32.sub
    get_local $3
    i32.load offset=108
    i32.add
    set_local $2
    get_local $1
    if $if
      get_local $1
      get_local $2
      if $if_1 (result i32)
        get_local $0
        get_local $2
        i32.add
      else
        get_local $0
      end ;; $if_1
      i32.store
    end ;; $if
    get_local $6
    set_global $STACKTOP
    get_local $7
    )
  
  (func $__ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_ (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (local $4 i32)
    get_local $0
    i32.const 0
    i32.store offset=12
    get_local $0
    get_local $3
    i32.store offset=16
    get_local $1
    if $if
      get_local $1
      i32.const 29
      i32.lt_u
      get_local $3
      i32.const 112
      i32.add
      tee_local $4
      i32.load8_s
      i32.eqz
      i32.and
      if $if_1
        get_local $4
        i32.const 1
        i32.store8
      else
        get_local $1
        i32.const 2
        i32.shl
        call $__Znwj
        set_local $3
      end ;; $if_1
    else
      i32.const 0
      set_local $3
    end ;; $if
    get_local $0
    get_local $3
    i32.store
    get_local $0
    get_local $3
    get_local $2
    i32.const 2
    i32.shl
    i32.add
    tee_local $2
    i32.store offset=8
    get_local $0
    get_local $2
    i32.store offset=4
    get_local $0
    get_local $3
    get_local $1
    i32.const 2
    i32.shl
    i32.add
    i32.store offset=12
    )
  
  (func $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    block $label$break$L1
      get_local $0
      i32.const 4
      i32.add
      tee_local $3
      i32.load
      tee_local $4
      get_local $0
      i32.load
      tee_local $5
      i32.sub
      i32.const 2
      i32.shr_s
      tee_local $2
      get_local $1
      i32.lt_u
      if $_1
        get_local $0
        get_local $1
        get_local $2
        i32.sub
        call $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj
      else
        get_local $2
        get_local $1
        i32.gt_u
        if $_2
          block $_3
            get_local $5
            get_local $1
            i32.const 2
            i32.shl
            i32.add
            set_local $1
            get_local $4
            set_local $0
            loop $while-in
              get_local $0
              get_local $1
              i32.eq
              br_if $label$break$L1
              get_local $3
              get_local $0
              i32.const -4
              i32.add
              tee_local $0
              i32.store
              br $while-in
            end ;; $while-in
          end ;; $_3
        end ;; $_2
      end ;; $_1
    end ;; $label$break$L1
    )
  
  (func $_memcpy (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    get_local $2
    i32.const 4096
    i32.ge_s
    if $_1
      get_local $0
      get_local $1
      get_local $2
      call $_emscripten_memcpy_big
      return
    end ;; $_1
    get_local $0
    set_local $3
    get_local $0
    i32.const 3
    i32.and
    get_local $1
    i32.const 3
    i32.and
    i32.eq
    if $_2
      block $_3
        loop $while-in
          get_local $0
          i32.const 3
          i32.and
          if $_4
            block $_5
              get_local $2
              i32.eqz
              if $_6
                get_local $3
                return
              end ;; $_6
              get_local $0
              get_local $1
              i32.load8_s
              i32.store8
              get_local $0
              i32.const 1
              i32.add
              set_local $0
              get_local $1
              i32.const 1
              i32.add
              set_local $1
              get_local $2
              i32.const 1
              i32.sub
              set_local $2
              br $while-in
            end ;; $_5
          end ;; $_4
        end ;; $while-in
        loop $while-in1
          get_local $2
          i32.const 4
          i32.ge_s
          if $_7
            block $_8
              get_local $0
              get_local $1
              i32.load
              i32.store
              get_local $0
              i32.const 4
              i32.add
              set_local $0
              get_local $1
              i32.const 4
              i32.add
              set_local $1
              get_local $2
              i32.const 4
              i32.sub
              set_local $2
              br $while-in1
            end ;; $_8
          end ;; $_7
        end ;; $while-in1
      end ;; $_3
    end ;; $_2
    loop $while-in3
      get_local $2
      i32.const 0
      i32.gt_s
      if $if
        block $block
          get_local $0
          get_local $1
          i32.load8_s
          i32.store8
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          get_local $1
          i32.const 1
          i32.add
          set_local $1
          get_local $2
          i32.const 1
          i32.sub
          set_local $2
          br $while-in3
        end ;; $block
      end ;; $if
    end ;; $while-in3
    get_local $3
    )
  
  (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    get_local $0
    i32.const 11
    i32.add
    tee_local $4
    i32.load8_s
    tee_local $3
    i32.const 0
    i32.lt_s
    tee_local $5
    if $if (result i32)
      get_local $0
      i32.load offset=4
    else
      get_local $3
      i32.const 255
      i32.and
    end ;; $if
    tee_local $3
    get_local $1
    i32.lt_u
    if $if_1
      get_local $0
      get_local $1
      get_local $3
      i32.sub
      get_local $2
      call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc
      drop
    else
      get_local $5
      if $if_2
        block $block
          get_local $0
          i32.load
          get_local $1
          i32.add
          i32.const 0
          i32.store8
          get_local $0
          get_local $1
          i32.store offset=4
        end ;; $block
      else
        block $block_1
          get_local $0
          get_local $1
          i32.add
          i32.const 0
          i32.store8
          get_local $4
          get_local $1
          i32.store8
        end ;; $block_1
      end ;; $if_2
    end ;; $if_1
    )
  
  (func $_memset (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    get_local $0
    get_local $2
    i32.add
    set_local $4
    get_local $2
    i32.const 20
    i32.ge_s
    if $_1
      block $_2
        get_local $1
        i32.const 255
        i32.and
        set_local $1
        get_local $0
        i32.const 3
        i32.and
        tee_local $3
        if $_3
          block $_4
            get_local $0
            i32.const 4
            i32.add
            get_local $3
            i32.sub
            set_local $3
            loop $while-in
              get_local $0
              get_local $3
              i32.lt_s
              if $_5
                block $_6
                  get_local $0
                  get_local $1
                  i32.store8
                  get_local $0
                  i32.const 1
                  i32.add
                  set_local $0
                  br $while-in
                end ;; $_6
              end ;; $_5
            end ;; $while-in
          end ;; $_4
        end ;; $_3
        get_local $1
        get_local $1
        i32.const 8
        i32.shl
        i32.or
        get_local $1
        i32.const 16
        i32.shl
        i32.or
        get_local $1
        i32.const 24
        i32.shl
        i32.or
        set_local $3
        get_local $4
        i32.const -4
        i32.and
        set_local $5
        loop $while-in1
          get_local $0
          get_local $5
          i32.lt_s
          if $_7
            block $_8
              get_local $0
              get_local $3
              i32.store
              get_local $0
              i32.const 4
              i32.add
              set_local $0
              br $while-in1
            end ;; $_8
          end ;; $_7
        end ;; $while-in1
      end ;; $_2
    end ;; $_1
    loop $while-in3
      get_local $0
      get_local $4
      i32.lt_s
      if $if
        block $block
          get_local $0
          get_local $1
          i32.store8
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in3
        end ;; $block
      end ;; $if
    end ;; $while-in3
    get_local $0
    get_local $2
    i32.sub
    )
  
  (func $___toread (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    get_local $0
    i32.const 74
    i32.add
    tee_local $2
    i32.load8_s
    set_local $1
    get_local $2
    get_local $1
    i32.const 255
    i32.add
    get_local $1
    i32.or
    i32.store8
    get_local $0
    i32.const 20
    i32.add
    tee_local $1
    i32.load
    get_local $0
    i32.const 44
    i32.add
    tee_local $2
    i32.load
    i32.gt_u
    if $if
      get_local $0
      i32.const 0
      i32.const 0
      get_local $0
      i32.load offset=36
      i32.const 31
      i32.and
      i32.const 8
      i32.add
      call_indirect (type $FUNCSIG$iiii)
      drop
    end ;; $if
    get_local $0
    i32.const 0
    i32.store offset=16
    get_local $0
    i32.const 0
    i32.store offset=28
    get_local $1
    i32.const 0
    i32.store
    get_local $0
    i32.load
    tee_local $1
    i32.const 20
    i32.and
    if $if_1 (result i32)
      get_local $1
      i32.const 4
      i32.and
      if $if_2 (result i32)
        block $block (result i32)
          get_local $0
          get_local $1
          i32.const 32
          i32.or
          i32.store
          i32.const -1
        end ;; $block
      else
        i32.const -1
      end ;; $if_2
    else
      block $block_1 (result i32)
        get_local $0
        get_local $2
        i32.load
        tee_local $1
        i32.store offset=8
        get_local $0
        get_local $1
        i32.store offset=4
        i32.const 0
      end ;; $block_1
    end ;; $if_1
    tee_local $0
    )
  
  (func $__ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (local $4 i32)
    (local $5 i32)
    get_local $0
    i32.load offset=4
    tee_local $5
    i32.const 8
    i32.shr_s
    set_local $4
    get_local $5
    i32.const 1
    i32.and
    if $if
      get_local $2
      i32.load
      get_local $4
      i32.add
      i32.load
      set_local $4
    end ;; $if
    get_local $0
    i32.load
    tee_local $0
    get_local $1
    get_local $2
    get_local $4
    i32.add
    get_local $5
    i32.const 2
    i32.and
    if $if_1 (result i32)
      get_local $3
    else
      i32.const 2
    end ;; $if_1
    get_local $0
    i32.load
    i32.load offset=28
    i32.const 7
    i32.and
    i32.const 461
    i32.add
    call_indirect (type $FUNCSIG$viiii)
    )
  
  (func $__ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    get_global $STACKTOP
    set_local $3
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev
    get_local $0
    i32.const 6656
    i32.store
    get_local $0
    get_local $1
    i32.store offset=32
    get_local $0
    get_local $2
    i32.store offset=40
    get_local $0
    i32.const -1
    i32.store offset=48
    get_local $0
    i32.const 0
    i32.store8 offset=52
    get_local $3
    i32.const 4
    i32.add
    tee_local $2
    get_local $0
    i32.const 4
    i32.add
    call $__ZNSt3__26localeC2ERKS0_
    get_local $3
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $0
    get_local $1
    call $__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE
    get_local $1
    call $__ZNSt3__26localeD2Ev
    get_local $3
    set_global $STACKTOP
    )
  
  (func $__ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    get_global $STACKTOP
    set_local $3
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    call $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev
    get_local $0
    i32.const 6592
    i32.store
    get_local $0
    get_local $1
    i32.store offset=32
    get_local $0
    get_local $2
    i32.store offset=40
    get_local $0
    i32.const -1
    i32.store offset=48
    get_local $0
    i32.const 0
    i32.store8 offset=52
    get_local $3
    i32.const 4
    i32.add
    tee_local $2
    get_local $0
    i32.const 4
    i32.add
    call $__ZNSt3__26localeC2ERKS0_
    get_local $3
    tee_local $1
    get_local $2
    i32.load
    i32.store
    get_local $0
    get_local $1
    call $__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE
    get_local $1
    call $__ZNSt3__26localeD2Ev
    get_local $3
    set_global $STACKTOP
    )
  
  (func $___stdio_seek (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    get_global $STACKTOP
    set_local $4
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $4
    tee_local $3
    get_local $0
    i32.load offset=60
    i32.store
    get_local $3
    i32.const 0
    i32.store offset=4
    get_local $3
    get_local $1
    i32.store offset=8
    get_local $3
    get_local $4
    i32.const 20
    i32.add
    tee_local $0
    i32.store offset=12
    get_local $3
    get_local $2
    i32.store offset=16
    i32.const 140
    get_local $3
    call $___syscall140
    call $___syscall_ret
    i32.const 0
    i32.lt_s
    if $if (result i32)
      block $block (result i32)
        get_local $0
        i32.const -1
        i32.store
        i32.const -1
      end ;; $block
    else
      get_local $0
      i32.load
    end ;; $if
    set_local $0
    get_local $4
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__211__stdoutbufIwE6xsputnEPKwi (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    block $label$break$L1
      get_local $0
      i32.load8_s offset=44
      if $_1
        get_local $1
        i32.const 4
        get_local $2
        get_local $0
        i32.load offset=32
        call $_fwrite
        set_local $1
      else
        block $_2
          get_local $1
          set_local $3
          i32.const 0
          set_local $1
          loop $while-in
            get_local $1
            get_local $2
            i32.ge_s
            br_if $label$break$L1
            get_local $0
            get_local $3
            i32.load
            get_local $0
            i32.load
            i32.load offset=52
            i32.const 15
            i32.and
            i32.const 413
            i32.add
            call_indirect (type $FUNCSIG$iii)
            i32.const -1
            i32.eq
            br_if $label$break$L1
            get_local $3
            i32.const 4
            i32.add
            set_local $3
            get_local $1
            i32.const 1
            i32.add
            set_local $1
            br $while-in
          end ;; $while-in
        end ;; $_2
      end ;; $_1
    end ;; $label$break$L1
    get_local $1
    )
  
  (func $__ZNSt3__211__stdoutbufIcE6xsputnEPKci (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    block $label$break$L1
      get_local $0
      i32.load8_s offset=44
      if $_1
        get_local $1
        i32.const 1
        get_local $2
        get_local $0
        i32.load offset=32
        call $_fwrite
        set_local $1
      else
        block $_2
          get_local $1
          set_local $3
          i32.const 0
          set_local $1
          loop $while-in
            get_local $1
            get_local $2
            i32.ge_s
            br_if $label$break$L1
            get_local $0
            get_local $3
            i32.load8_u
            get_local $0
            i32.load
            i32.load offset=52
            i32.const 15
            i32.and
            i32.const 413
            i32.add
            call_indirect (type $FUNCSIG$iii)
            i32.const -1
            i32.eq
            br_if $label$break$L1
            get_local $3
            i32.const 1
            i32.add
            set_local $3
            get_local $1
            i32.const 1
            i32.add
            set_local $1
            br $while-in
          end ;; $while-in
        end ;; $_2
      end ;; $_1
    end ;; $label$break$L1
    get_local $1
    )
  
  (func $_strtox_545 (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    (local $7 i32)
    (local $8 i32)
    get_global $STACKTOP
    set_local $6
    get_global $STACKTOP
    i32.const 112
    i32.add
    set_global $STACKTOP
    get_local $6
    tee_local $5
    i32.const 0
    i32.store
    get_local $5
    i32.const 4
    i32.add
    tee_local $7
    get_local $0
    i32.store
    get_local $5
    get_local $0
    i32.store offset=44
    get_local $5
    i32.const 8
    i32.add
    tee_local $8
    get_local $0
    i32.const 0
    i32.lt_s
    if $if (result i32)
      i32.const -1
    else
      get_local $0
      i32.const 2147483647
      i32.add
    end ;; $if
    i32.store
    get_local $5
    i32.const -1
    i32.store offset=76
    get_local $5
    i32.const 0
    call $___shlim
    get_local $5
    get_local $2
    i32.const 1
    get_local $3
    get_local $4
    call $___intscan
    set_local $2
    get_local $1
    if $if_1
      get_local $1
      get_local $0
      get_local $7
      i32.load
      get_local $5
      i32.load offset=108
      i32.add
      get_local $8
      i32.load
      i32.sub
      i32.add
      i32.store
    end ;; $if_1
    get_local $6
    set_global $STACKTOP
    get_local $2
    )
  
  (func $__ZNSt3__26locale5__impD2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    get_local $0
    i32.const 9184
    i32.store
    get_local $0
    i32.const 8
    i32.add
    set_local $3
    get_local $0
    i32.const 12
    i32.add
    set_local $4
    i32.const 0
    set_local $1
    loop $while-in
      get_local $1
      get_local $4
      i32.load
      get_local $3
      i32.load
      tee_local $2
      i32.sub
      i32.const 2
      i32.shr_s
      i32.lt_u
      if $if
        block $block
          get_local $2
          get_local $1
          i32.const 2
          i32.shl
          i32.add
          i32.load
          tee_local $2
          if $if_1
            get_local $2
            call $__ZNSt3__214__shared_count16__release_sharedEv
            drop
          end ;; $if_1
          get_local $1
          i32.const 1
          i32.add
          set_local $1
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $0
    i32.const 144
    i32.add
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    get_local $3
    call $__ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev
    )
  
  (func $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    get_local $0
    i32.const 0
    i32.store
    get_local $0
    i32.const 4
    i32.add
    tee_local $2
    i32.const 0
    i32.store
    get_local $0
    i32.const 0
    i32.store offset=8
    get_local $0
    i32.const 0
    i32.store8 offset=128
    get_local $1
    if $_1
      block $_2
        get_local $0
        get_local $1
        call $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj
        get_local $2
        i32.load
        set_local $0
        loop $do-in
          get_local $0
          i32.const 0
          i32.store
          get_local $2
          get_local $2
          i32.load
          i32.const 4
          i32.add
          tee_local $0
          i32.store
          get_local $1
          i32.const -1
          i32.add
          tee_local $1
          br_if $do-in
        end ;; $do-in
      end ;; $_2
    end ;; $_1
    )
  
  (func $__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (local $4 i32)
    get_local $0
    get_local $1
    i32.load offset=8
    i32.eq
    if $if
      i32.const 0
      get_local $1
      get_local $2
      get_local $3
      call $__ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi
    else
      get_local $0
      i32.load offset=8
      tee_local $4
      get_local $1
      get_local $2
      get_local $3
      get_local $4
      i32.load
      i32.load offset=28
      i32.const 7
      i32.and
      i32.const 461
      i32.add
      call_indirect (type $FUNCSIG$viiii)
    end ;; $if
    )
  
  (func $_strcmp (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    get_local $1
    i32.load8_s
    set_local $2
    get_local $0
    i32.load8_s
    tee_local $3
    if $_1 (result i32)
      get_local $3
      get_local $2
      i32.ne
    else
      i32.const 1
    end ;; $_1
    if $_2 (result i32)
      block $_3 (result i32)
        get_local $2
        set_local $1
        get_local $3
      end ;; $_3
    else
      block $_4 (result i32)
        loop $do-in
          get_local $1
          i32.const 1
          i32.add
          tee_local $1
          i32.load8_s
          set_local $2
          get_local $0
          i32.const 1
          i32.add
          tee_local $0
          i32.load8_s
          tee_local $3
          if $if (result i32)
            get_local $3
            get_local $2
            i32.ne
          else
            i32.const 1
          end ;; $if
          i32.eqz
          br_if $do-in
        end ;; $do-in
        get_local $2
        set_local $1
        get_local $3
      end ;; $_4
    end ;; $_2
    tee_local $0
    i32.const 255
    i32.and
    get_local $1
    i32.const 255
    i32.and
    i32.sub
    )
  
  (func $_wmemmove (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    get_local $2
    i32.eqz
    set_local $3
    get_local $0
    get_local $1
    i32.sub
    i32.const 2
    i32.shr_s
    get_local $2
    i32.lt_u
    if $_1
      get_local $3
      i32.eqz
      if $_2
        loop $do-in
          get_local $0
          get_local $2
          i32.const -1
          i32.add
          tee_local $2
          i32.const 2
          i32.shl
          i32.add
          get_local $1
          get_local $2
          i32.const 2
          i32.shl
          i32.add
          i32.load
          i32.store
          get_local $2
          br_if $do-in
        end ;; $do-in
      end ;; $_2
    else
      get_local $3
      i32.eqz
      if $_3
        block $_4
          get_local $0
          set_local $3
          loop $while-in
            get_local $3
            get_local $1
            i32.load
            i32.store
            get_local $2
            i32.const -1
            i32.add
            tee_local $2
            if $if
              block $block
                get_local $1
                i32.const 4
                i32.add
                set_local $1
                get_local $3
                i32.const 4
                i32.add
                set_local $3
                br $while-in
              end ;; $block
            end ;; $if
          end ;; $while-in
        end ;; $_4
      end ;; $_3
    end ;; $_1
    get_local $0
    )
  
  (func $__ZNSt3__211__call_onceERVmPvPFvS2_E (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    i32.const 21048
    call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
    drop
    loop $while-in
      get_local $0
      i32.load
      i32.const 1
      i32.eq
      if $if
        block $block
          i32.const 21076
          i32.const 21048
          call $_pthread_cond_wait
          drop
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $0
    i32.load
    if $if_1
      i32.const 21048
      call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
      drop
    else
      block $block_1
        get_local $0
        i32.const 1
        i32.store
        i32.const 21048
        call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
        drop
        get_local $1
        get_local $2
        i32.const 127
        i32.and
        i32.const 48
        i32.add
        call_indirect (type $FUNCSIG$vi)
        i32.const 21048
        call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
        drop
        get_local $0
        i32.const -1
        i32.store
        i32.const 21048
        call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
        drop
        i32.const 21076
        call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
        drop
      end ;; $block_1
    end ;; $if_1
    )
  
  (func $__ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    (local $2 i32)
    (local $3 i32)
    get_local $0
    i32.load offset=4
    set_local $2
    get_local $0
    i32.const 8
    i32.add
    tee_local $3
    i32.load
    set_local $1
    loop $while-in
      get_local $1
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $3
          get_local $1
          i32.const -4
          i32.add
          tee_local $1
          i32.store
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $0
    i32.load
    tee_local $1
    if $if_1
      get_local $0
      i32.load offset=16
      tee_local $0
      get_local $1
      i32.eq
      if $if_2
        get_local $0
        i32.const 0
        i32.store8 offset=112
      else
        get_local $1
        call $__ZdlPv
      end ;; $if_2
    end ;; $if_1
    )
  
  (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    i32.const 0
    i32.store
    get_local $0
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 0
    i32.store offset=8
    get_local $1
    i32.load8_s offset=11
    i32.const 0
    i32.lt_s
    if $if
      get_local $0
      get_local $1
      i32.load
      get_local $1
      i32.load offset=4
      call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj
    else
      block $block
        get_local $0
        get_local $1
        i32.load
        i32.store
        get_local $0
        get_local $1
        i32.load offset=4
        i32.store offset=4
        get_local $0
        get_local $1
        i32.load offset=8
        i32.store offset=8
      end ;; $block
    end ;; $if
    )
  
  (func $__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    get_local $1
    i32.const 1073741823
    i32.gt_u
    if $if
      get_local $0
      call $__ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv
    end ;; $if
    get_local $0
    get_local $1
    i32.const 29
    i32.lt_u
    get_local $0
    i32.const 128
    i32.add
    tee_local $2
    i32.load8_s
    i32.eqz
    i32.and
    if $if_1 (result i32)
      block $block (result i32)
        get_local $2
        i32.const 1
        i32.store8
        get_local $0
        i32.const 16
        i32.add
      end ;; $block
    else
      get_local $1
      i32.const 2
      i32.shl
      call $__Znwj
    end ;; $if_1
    tee_local $2
    i32.store offset=4
    get_local $0
    get_local $2
    i32.store
    get_local $0
    get_local $2
    get_local $1
    i32.const 2
    i32.shl
    i32.add
    i32.store offset=8
    )
  
  (func $__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    (local $2 i32)
    get_local $0
    i32.load
    i32.load
    tee_local $1
    i32.load offset=4
    set_local $0
    get_local $1
    i32.load
    get_local $1
    i32.load offset=8
    tee_local $2
    i32.const 1
    i32.shr_s
    i32.add
    set_local $1
    get_local $2
    i32.const 1
    i32.and
    if $if
      get_local $1
      i32.load
      get_local $0
      i32.add
      i32.load
      set_local $0
    end ;; $if
    get_local $1
    get_local $0
    i32.const 127
    i32.and
    i32.const 48
    i32.add
    call_indirect (type $FUNCSIG$vi)
    )
  
  (func $__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    get_local $2
    get_local $1
    i32.sub
    i32.const 2
    i32.shr_u
    set_local $5
    get_local $1
    set_local $0
    loop $while-in
      get_local $0
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $3
          get_local $0
          i32.load
          tee_local $4
          i32.const 128
          i32.lt_u
          if $if_1 (result i32)
            call $___ctype_b_loc
            i32.load
            get_local $4
            i32.const 1
            i32.shl
            i32.add
            i32.load16_u
          else
            i32.const 0
          end ;; $if_1
          tee_local $4
          i32.store16
          get_local $3
          i32.const 2
          i32.add
          set_local $3
          get_local $0
          i32.const 4
          i32.add
          set_local $0
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $1
    get_local $5
    i32.const 2
    i32.shl
    i32.add
    )
  
  (func $___stdout_write (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    get_global $STACKTOP
    set_local $4
    get_global $STACKTOP
    i32.const 80
    i32.add
    set_global $STACKTOP
    get_local $4
    set_local $3
    get_local $0
    i32.const 1
    i32.store offset=36
    get_local $0
    i32.load
    i32.const 64
    i32.and
    i32.eqz
    if $if
      block $block
        get_local $3
        get_local $0
        i32.load offset=60
        i32.store
        get_local $3
        i32.const 21505
        i32.store offset=4
        get_local $3
        get_local $4
        i32.const 12
        i32.add
        i32.store offset=8
        i32.const 54
        get_local $3
        call $___syscall54
        if $if_1
          get_local $0
          i32.const -1
          i32.store8 offset=75
        end ;; $if_1
      end ;; $block
    end ;; $if
    get_local $0
    get_local $1
    get_local $2
    call $___stdio_write
    set_local $0
    get_local $4
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    (local $3 i32)
    get_local $0
    i32.const 36
    i32.add
    tee_local $2
    get_local $1
    i32.const 21008
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $1
    i32.store
    get_local $0
    i32.const 44
    i32.add
    tee_local $3
    get_local $1
    get_local $1
    i32.load
    i32.load offset=24
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.store
    get_local $0
    get_local $2
    i32.load
    tee_local $0
    get_local $0
    i32.load
    i32.load offset=28
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.const 1
    i32.and
    i32.store8 offset=53
    )
  
  (func $__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    (local $3 i32)
    get_local $0
    i32.const 36
    i32.add
    tee_local $2
    get_local $1
    i32.const 21000
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $1
    i32.store
    get_local $0
    i32.const 44
    i32.add
    tee_local $3
    get_local $1
    get_local $1
    i32.load
    i32.load offset=24
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.store
    get_local $0
    get_local $2
    i32.load
    tee_local $0
    get_local $0
    i32.load
    i32.load offset=28
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.const 1
    i32.and
    i32.store8 offset=53
    )
  
  (func $__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_ (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    loop $while-in
      block $while-out
        get_local $2
        get_local $3
        i32.eq
        if $if
          block $block
            get_local $3
            set_local $2
            br $while-out
          end ;; $block
        end ;; $if
        get_local $2
        i32.load
        tee_local $0
        i32.const 128
        i32.ge_u
        br_if $while-out
        call $___ctype_b_loc
        i32.load
        get_local $0
        i32.const 1
        i32.shl
        i32.add
        i32.load16_s
        get_local $1
        i32.and
        i32.const 65535
        i32.and
        if $if_1
          block $block_1
            get_local $2
            i32.const 4
            i32.add
            set_local $2
            br $while-in
          end ;; $block_1
        end ;; $if_1
      end ;; $while-out
    end ;; $while-in
    get_local $2
    )
  
  (func $__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    get_local $0
    get_local $1
    i32.load offset=8
    i32.eq
    if $if
      i32.const 0
      get_local $1
      get_local $2
      get_local $3
      get_local $4
      call $__ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i
    end ;; $if
    )
  
  (func $_fwrite (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    get_local $2
    get_local $1
    i32.mul
    set_local $4
    get_local $3
    i32.load offset=76
    i32.const -1
    i32.gt_s
    if $if
      block $block
        get_local $3
        call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv
        i32.eqz
        set_local $5
        get_local $0
        get_local $4
        get_local $3
        call $___fwritex
        set_local $0
        get_local $5
        i32.eqz
        if $if_1
          get_local $3
          call $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
        end ;; $if_1
      end ;; $block
    else
      get_local $0
      get_local $4
      get_local $3
      call $___fwritex
      set_local $0
    end ;; $if
    get_local $0
    get_local $4
    i32.ne
    if $if_2
      get_local $0
      get_local $1
      i32.div_u
      set_local $2
    end ;; $if_2
    get_local $2
    )
  
  (func $___string_read (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_local $0
    i32.const 84
    i32.add
    tee_local $5
    i32.load
    tee_local $3
    i32.const 0
    get_local $2
    i32.const 256
    i32.add
    tee_local $4
    call $_memchr
    tee_local $6
    if $if (result i32)
      get_local $6
      get_local $3
      i32.sub
      tee_local $4
    else
      get_local $4
    end ;; $if
    get_local $2
    i32.lt_u
    if $if_1
      get_local $4
      set_local $2
    end ;; $if_1
    get_local $1
    get_local $3
    get_local $2
    call $_memcpy
    drop
    get_local $0
    get_local $3
    get_local $2
    i32.add
    i32.store offset=4
    get_local $0
    get_local $3
    get_local $4
    i32.add
    tee_local $0
    i32.store offset=8
    get_local $5
    get_local $0
    i32.store
    get_local $2
    )
  
  (func $_calloc (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    get_local $0
    if $if
      block $block
        get_local $1
        get_local $0
        i32.mul
        set_local $2
        get_local $1
        get_local $0
        i32.or
        i32.const 65535
        i32.gt_u
        if $if_1
          get_local $2
          get_local $0
          i32.div_u
          get_local $1
          i32.ne
          if $if_2
            i32.const -1
            set_local $2
          end ;; $if_2
        end ;; $if_1
      end ;; $block
    else
      i32.const 0
      set_local $2
    end ;; $if
    get_local $2
    call $_malloc
    tee_local $0
    i32.eqz
    if $if_3
      get_local $0
      return
    end ;; $if_3
    get_local $0
    i32.const -4
    i32.add
    i32.load
    i32.const 3
    i32.and
    i32.eqz
    if $if_4
      get_local $0
      return
    end ;; $if_4
    get_local $0
    i32.const 0
    get_local $2
    call $_memset
    drop
    get_local $0
    )
  
  (func $___muldi3 (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    get_local $0
    get_local $2
    call $___muldsi3
    set_local $4
    get_local $1
    get_local $2
    i32.mul
    get_local $3
    get_local $0
    i32.mul
    i32.add
    get_global $tempRet0
    tee_local $0
    i32.add
    get_local $0
    i32.const 0
    i32.and
    i32.or
    set_global $tempRet0
    get_local $4
    )
  
  (func $__ZNSt3__26locale2id5__getEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    get_global $STACKTOP
    set_local $1
    get_global $STACKTOP
    i32.const 32
    i32.add
    set_global $STACKTOP
    get_local $1
    i32.const 16
    i32.add
    set_local $3
    get_local $1
    i32.const 12
    i32.add
    set_local $4
    get_local $1
    tee_local $2
    get_local $0
    i32.store
    get_local $2
    i32.const 97
    i32.store offset=4
    get_local $2
    i32.const 0
    i32.store offset=8
    get_local $0
    i32.load
    i32.const -1
    i32.ne
    if $if
      block $block
        get_local $3
        get_local $2
        i32.store
        get_local $4
        get_local $3
        i32.store
        get_local $0
        get_local $4
        i32.const 98
        call $__ZNSt3__211__call_onceERVmPvPFvS2_E
      end ;; $block
    end ;; $if
    get_local $1
    set_global $STACKTOP
    get_local $0
    i32.load offset=4
    i32.const -1
    i32.add
    )
  
  (func $__ZNSt3__28ios_base4initEPv (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    get_local $0
    get_local $1
    i32.store offset=24
    get_local $0
    get_local $1
    i32.eqz
    i32.store offset=16
    get_local $0
    i32.const 0
    i32.store offset=20
    get_local $0
    i32.const 4098
    i32.store offset=4
    get_local $0
    i32.const 0
    i32.store offset=12
    get_local $0
    i32.const 6
    i32.store offset=8
    get_local $0
    i32.const 28
    i32.add
    set_local $1
    get_local $0
    i32.const 32
    i32.add
    tee_local $0
    i32.const 40
    i32.add
    set_local $2
    loop $do-in
      get_local $0
      i32.const 0
      i32.store
      get_local $0
      i32.const 4
      i32.add
      tee_local $0
      get_local $2
      i32.lt_s
      br_if $do-in
    end ;; $do-in
    get_local $1
    call $__ZNSt3__26localeC2Ev
    )
  
  (func $__ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    (local $2 i32)
    (local $3 i32)
    get_local $0
    i32.load
    tee_local $1
    if $_1
      block $_2
        get_local $0
        i32.const 4
        i32.add
        tee_local $3
        i32.load
        set_local $2
        loop $while-in
          get_local $2
          get_local $1
          i32.ne
          if $if
            block $block
              get_local $3
              get_local $2
              i32.const -4
              i32.add
              tee_local $2
              i32.store
              br $while-in
            end ;; $block
          end ;; $if
        end ;; $while-in
        get_local $0
        i32.const 16
        i32.add
        get_local $1
        i32.eq
        if $if_1
          get_local $0
          i32.const 0
          i32.store8 offset=128
        else
          get_local $1
          call $__ZdlPv
        end ;; $if_1
      end ;; $_2
    end ;; $_1
    )
  
  (func $__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    get_local $2
    get_local $1
    i32.sub
    i32.const 2
    i32.shr_u
    set_local $5
    get_local $1
    set_local $0
    loop $while-in
      get_local $0
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $4
          get_local $0
          i32.load
          tee_local $6
          i32.const 128
          i32.lt_u
          if $if_1 (result i32)
            get_local $6
            i32.const 255
            i32.and
          else
            get_local $3
          end ;; $if_1
          i32.store8
          get_local $4
          i32.const 1
          i32.add
          set_local $4
          get_local $0
          i32.const 4
          i32.add
          set_local $0
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $1
    get_local $5
    i32.const 2
    i32.shl
    i32.add
    )
  
  (func $__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_ (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    loop $while-in
      block $while-out
        get_local $2
        get_local $3
        i32.eq
        if $if
          block $block
            get_local $3
            set_local $2
            br $while-out
          end ;; $block
        end ;; $if
        get_local $2
        i32.load
        tee_local $0
        i32.const 128
        i32.lt_u
        if $if_1
          call $___ctype_b_loc
          i32.load
          get_local $0
          i32.const 1
          i32.shl
          i32.add
          i32.load16_s
          get_local $1
          i32.and
          i32.const 65535
          i32.and
          br_if $while-out
        end ;; $if_1
        get_local $2
        i32.const 4
        i32.add
        set_local $2
        br $while-in
      end ;; $while-out
    end ;; $while-in
    get_local $2
    )
  
  (func $__ZNSt3__28numpunctIwEC2Ej (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const -1
    i32.add
    i32.store offset=4
    get_local $0
    i32.const 9296
    i32.store
    get_local $0
    i32.const 46
    i32.store offset=8
    get_local $0
    i32.const 44
    i32.store offset=12
    get_local $0
    i32.const 16
    i32.add
    tee_local $1
    i32.const 0
    i32.store
    get_local $1
    i32.const 0
    i32.store offset=4
    get_local $1
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $if
        block $block
          get_local $1
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    )
  
  (func $___towrite (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    get_local $0
    i32.const 74
    i32.add
    tee_local $2
    i32.load8_s
    set_local $1
    get_local $2
    get_local $1
    i32.const 255
    i32.add
    get_local $1
    i32.or
    i32.store8
    get_local $0
    i32.load
    tee_local $1
    i32.const 8
    i32.and
    if $if (result i32)
      block $block (result i32)
        get_local $0
        get_local $1
        i32.const 32
        i32.or
        i32.store
        i32.const -1
      end ;; $block
    else
      block $block_1 (result i32)
        get_local $0
        i32.const 0
        i32.store offset=8
        get_local $0
        i32.const 0
        i32.store offset=4
        get_local $0
        get_local $0
        i32.load offset=44
        tee_local $1
        i32.store offset=28
        get_local $0
        get_local $1
        i32.store offset=20
        get_local $0
        get_local $1
        get_local $0
        i32.load offset=48
        i32.add
        i32.store offset=16
        i32.const 0
      end ;; $block_1
    end ;; $if
    tee_local $0
    )
  
  (func $__ZNSt3__28numpunctIcEC2Ej (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const -1
    i32.add
    i32.store offset=4
    get_local $0
    i32.const 9256
    i32.store
    get_local $0
    i32.const 46
    i32.store8 offset=8
    get_local $0
    i32.const 44
    i32.store8 offset=9
    get_local $0
    i32.const 12
    i32.add
    tee_local $1
    i32.const 0
    i32.store
    get_local $1
    i32.const 0
    i32.store offset=4
    get_local $1
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $0
    loop $while-in
      get_local $0
      i32.const 3
      i32.ne
      if $if
        block $block
          get_local $1
          get_local $0
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $0
          i32.const 1
          i32.add
          set_local $0
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    )
  
  (func $_vsscanf (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $5
    get_global $STACKTOP
    i32.const 112
    i32.add
    set_global $STACKTOP
    get_local $5
    tee_local $3
    tee_local $4
    i32.const 112
    i32.add
    set_local $6
    loop $do-in
      get_local $4
      i32.const 0
      i32.store
      get_local $4
      i32.const 4
      i32.add
      tee_local $4
      get_local $6
      i32.lt_s
      br_if $do-in
    end ;; $do-in
    get_local $3
    i32.const 26
    i32.store offset=32
    get_local $3
    get_local $0
    i32.store offset=44
    get_local $3
    i32.const -1
    i32.store offset=76
    get_local $3
    get_local $0
    i32.store offset=84
    get_local $3
    get_local $1
    get_local $2
    call $_vfscanf
    set_local $0
    get_local $5
    set_global $STACKTOP
    get_local $0
    )
  
  (func $_newlocale (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    block $do-once (result i32)
      block $__rjti$0
        get_local $1
        i32.load8_s
        i32.eqz
        br_if $__rjti$0
        get_local $1
        i32.const 13970
        call $_strcmp
        i32.eqz
        br_if $__rjti$0
        get_local $1
        i32.const 13230
        call $_strcmp
        i32.eqz
        br_if $__rjti$0
        i32.const 0
        br $do-once
      end ;; $__rjti$0
      get_local $2
      if $if (result i32)
        get_local $2
      else
        i32.const 17652
        i32.load
        if $if_1 (result i32)
          i32.const 1
          i32.const 4
          call $_calloc
        else
          block $block (result i32)
            i32.const 17652
            i32.const 1
            i32.store
            i32.const 17656
          end ;; $block
        end ;; $if_1
      end ;; $if
    end ;; $do-once
    )
  
  (func $__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    (local $6 i32)
    get_global $STACKTOP
    set_local $5
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $5
    tee_local $6
    get_local $4
    i32.store
    get_local $2
    call $_uselocale
    set_local $2
    get_local $0
    get_local $1
    get_local $3
    get_local $6
    call $_vsnprintf
    set_local $0
    get_local $2
    if $if
      get_local $2
      call $_uselocale
      drop
    end ;; $if
    get_local $5
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__25ctypeIwE10do_toupperEPwPKw (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    get_local $2
    get_local $1
    i32.sub
    i32.const 2
    i32.shr_u
    set_local $4
    get_local $1
    set_local $0
    loop $while-in
      get_local $0
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $0
          i32.load
          tee_local $3
          i32.const 128
          i32.lt_u
          if $if_1
            call $___ctype_toupper_loc
            i32.load
            get_local $3
            i32.const 2
            i32.shl
            i32.add
            i32.load
            set_local $3
          end ;; $if_1
          get_local $0
          get_local $3
          i32.store
          get_local $0
          i32.const 4
          i32.add
          set_local $0
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $1
    get_local $4
    i32.const 2
    i32.shl
    i32.add
    )
  
  (func $__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    get_local $2
    get_local $1
    i32.sub
    i32.const 2
    i32.shr_u
    set_local $4
    get_local $1
    set_local $0
    loop $while-in
      get_local $0
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $0
          i32.load
          tee_local $3
          i32.const 128
          i32.lt_u
          if $if_1
            call $___ctype_tolower_loc
            i32.load
            get_local $3
            i32.const 2
            i32.shl
            i32.add
            i32.load
            set_local $3
          end ;; $if_1
          get_local $0
          get_local $3
          i32.store
          get_local $0
          i32.const 4
          i32.add
          set_local $0
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $1
    get_local $4
    i32.const 2
    i32.shl
    i32.add
    )
  
  (func $___cxa_can_catch (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    get_global $STACKTOP
    set_local $3
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $3
    tee_local $4
    get_local $2
    i32.load
    i32.store
    get_local $0
    get_local $1
    get_local $4
    get_local $0
    i32.load
    i32.load offset=16
    i32.const 31
    i32.and
    i32.const 8
    i32.add
    call_indirect (type $FUNCSIG$iiii)
    tee_local $0
    if $if
      get_local $2
      get_local $4
      i32.load
      i32.store
    end ;; $if
    get_local $3
    set_global $STACKTOP
    get_local $0
    i32.const 1
    i32.and
    )
  
  (func $__ZNKSt3__27collateIwE7do_hashEPKwS3_ (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    i32.const 0
    set_local $0
    loop $while-in
      get_local $1
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $1
          i32.load
          get_local $0
          i32.const 4
          i32.shl
          i32.add
          tee_local $0
          i32.const -268435456
          i32.and
          tee_local $3
          i32.const 24
          i32.shr_u
          get_local $3
          i32.or
          get_local $0
          i32.xor
          set_local $0
          get_local $1
          i32.const 4
          i32.add
          set_local $1
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $0
    )
  
  (func $__ZNKSt3__27collateIcE7do_hashEPKcS3_ (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    i32.const 0
    set_local $0
    loop $while-in
      get_local $1
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $1
          i32.load8_s
          get_local $0
          i32.const 4
          i32.shl
          i32.add
          tee_local $0
          i32.const -268435456
          i32.and
          tee_local $3
          i32.const 24
          i32.shr_u
          get_local $3
          i32.or
          get_local $0
          i32.xor
          set_local $0
          get_local $1
          i32.const 1
          i32.add
          set_local $1
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $0
    )
  
  (func $__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    get_local $0
    i32.const 8
    i32.add
    tee_local $1
    i32.load
    call $_uselocale
    set_local $0
    i32.const 0
    i32.const 0
    i32.const 4
    call $_mbtowc
    set_local $2
    get_local $0
    if $if
      get_local $0
      call $_uselocale
      drop
    end ;; $if
    get_local $2
    if $if_1 (result i32)
      i32.const -1
    else
      get_local $1
      i32.load
      tee_local $0
      if $if_2 (result i32)
        get_local $0
        call $_uselocale
        tee_local $0
        if $if_3 (result i32)
          block $block (result i32)
            get_local $0
            call $_uselocale
            drop
            i32.const 0
          end ;; $block
        else
          i32.const 0
        end ;; $if_3
      else
        i32.const 1
      end ;; $if_2
    end ;; $if_1
    tee_local $0
    )
  
  (func $__ZNKSt3__27collateIwE12do_transformEPKwS3_ (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    get_local $0
    i32.const 0
    i32.store
    get_local $0
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 0
    i32.store offset=8
    get_local $0
    get_local $2
    get_local $3
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_
    )
  
  (func $__ZNKSt3__27collateIcE12do_transformEPKcS3_ (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    get_local $0
    i32.const 0
    i32.store
    get_local $0
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 0
    i32.store offset=8
    get_local $0
    get_local $2
    get_local $3
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_
    )
  
  (func $__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    get_global $STACKTOP
    set_local $4
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $4
    tee_local $5
    get_local $3
    i32.store
    get_local $1
    call $_uselocale
    set_local $1
    get_local $0
    get_local $2
    get_local $5
    call $_vasprintf
    set_local $0
    get_local $1
    if $if
      get_local $1
      call $_uselocale
      drop
    end ;; $if
    get_local $4
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    i32.const 0
    i32.store8
    get_local $0
    get_local $1
    i32.store offset=4
    get_local $1
    get_local $1
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.add
    tee_local $1
    i32.load offset=16
    i32.eqz
    if $if
      block $block
        get_local $1
        i32.load offset=72
        tee_local $1
        if $if_1
          get_local $1
          call $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv
          drop
        end ;; $if_1
        get_local $0
        i32.const 1
        i32.store8
      end ;; $block
    end ;; $if
    )
  
  (func $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    i32.const 0
    i32.store8
    get_local $0
    get_local $1
    i32.store offset=4
    get_local $1
    get_local $1
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.add
    tee_local $1
    i32.load offset=16
    i32.eqz
    if $if
      block $block
        get_local $1
        i32.load offset=72
        tee_local $1
        if $if_1
          get_local $1
          call $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv
          drop
        end ;; $if_1
        get_local $0
        i32.const 1
        i32.store8
      end ;; $block
    end ;; $if
    )
  
  (func $__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    get_global $STACKTOP
    set_local $4
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $4
    tee_local $5
    get_local $3
    i32.store
    get_local $1
    call $_uselocale
    set_local $1
    get_local $0
    get_local $2
    get_local $5
    call $_vsscanf
    set_local $0
    get_local $1
    if $if
      get_local $1
      call $_uselocale
      drop
    end ;; $if
    get_local $4
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__25ctypeIcE10do_toupperEPcPKc (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    loop $while-in
      get_local $1
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $1
          i32.load8_s
          tee_local $0
          i32.const -1
          i32.gt_s
          if $if_1
            call $___ctype_toupper_loc
            i32.load
            get_local $0
            i32.const 2
            i32.shl
            i32.add
            i32.load
            i32.const 255
            i32.and
            set_local $0
          end ;; $if_1
          get_local $1
          get_local $0
          i32.store8
          get_local $1
          i32.const 1
          i32.add
          set_local $1
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $2
    )
  
  (func $__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    loop $while-in
      get_local $1
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $1
          i32.load8_s
          tee_local $0
          i32.const -1
          i32.gt_s
          if $if_1
            call $___ctype_tolower_loc
            i32.load
            get_local $0
            i32.const 2
            i32.shl
            i32.add
            i32.load
            i32.const 255
            i32.and
            set_local $0
          end ;; $if_1
          get_local $1
          get_local $0
          i32.store8
          get_local $1
          i32.const 1
          i32.add
          set_local $1
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $2
    )
  
  (func $__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    loop $while-in
      get_local $1
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $4
          get_local $1
          i32.load8_s
          tee_local $0
          i32.const -1
          i32.gt_s
          if $if_1 (result i32)
            get_local $0
          else
            get_local $3
          end ;; $if_1
          i32.store8
          get_local $4
          i32.const 1
          i32.add
          set_local $4
          get_local $1
          i32.const 1
          i32.add
          set_local $1
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $2
    )
  
  (func $__ZNSt3__28ios_base16__call_callbacksENS0_5eventE (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    get_local $0
    i32.const 32
    i32.add
    set_local $3
    get_local $0
    i32.const 36
    i32.add
    set_local $4
    get_local $0
    i32.load offset=40
    set_local $2
    loop $while-in
      get_local $2
      if $if
        block $block
          get_local $1
          get_local $0
          get_local $4
          i32.load
          get_local $2
          i32.const -1
          i32.add
          tee_local $2
          i32.const 2
          i32.shl
          i32.add
          i32.load
          get_local $3
          i32.load
          get_local $2
          i32.const 2
          i32.shl
          i32.add
          i32.load
          i32.const 0
          i32.and
          i32.const 376
          i32.add
          call_indirect (type $FUNCSIG$viii)
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    )
  
  (func $__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    get_local $0
    get_local $1
    i32.load offset=8
    i32.eq
    if $if
      i32.const 0
      get_local $1
      get_local $2
      get_local $3
      call $__ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi
    end ;; $if
    )
  
  (func $___muldsi3 (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    get_local $1
    i32.const 65535
    i32.and
    tee_local $2
    get_local $0
    i32.const 65535
    i32.and
    tee_local $3
    i32.mul
    tee_local $4
    i32.const 16
    i32.shr_u
    get_local $2
    get_local $0
    i32.const 16
    i32.shr_u
    tee_local $2
    i32.mul
    i32.add
    set_local $0
    get_local $1
    i32.const 16
    i32.shr_u
    tee_local $5
    get_local $3
    i32.mul
    set_local $1
    get_local $0
    i32.const 16
    i32.shr_u
    get_local $5
    get_local $2
    i32.mul
    i32.add
    get_local $0
    i32.const 65535
    i32.and
    get_local $1
    i32.add
    i32.const 16
    i32.shr_u
    i32.add
    set_global $tempRet0
    get_local $0
    get_local $1
    i32.add
    i32.const 16
    i32.shl
    get_local $4
    i32.const 65535
    i32.and
    i32.or
    )
  
  (func $_memmove (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    get_local $1
    get_local $0
    i32.lt_s
    get_local $0
    get_local $1
    get_local $2
    i32.add
    i32.lt_s
    i32.and
    if $_1
      block $_2
        get_local $0
        set_local $3
        get_local $1
        get_local $2
        i32.add
        set_local $1
        get_local $0
        get_local $2
        i32.add
        set_local $0
        loop $while-in
          get_local $2
          i32.const 0
          i32.gt_s
          if $if
            block $block
              get_local $2
              i32.const 1
              i32.sub
              set_local $2
              get_local $0
              i32.const 1
              i32.sub
              tee_local $0
              get_local $1
              i32.const 1
              i32.sub
              tee_local $1
              i32.load8_s
              i32.store8
              br $while-in
            end ;; $block
          end ;; $if
        end ;; $while-in
        get_local $3
        set_local $0
      end ;; $_2
    else
      get_local $0
      get_local $1
      get_local $2
      call $_memcpy
      drop
    end ;; $_1
    get_local $0
    )
  
  (func $__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    get_local $0
    i32.const 0
    i32.store
    get_local $0
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 0
    i32.store offset=8
    i32.const 0
    set_local $2
    loop $while-in
      get_local $2
      i32.const 3
      i32.ne
      if $if
        block $block
          get_local $0
          get_local $2
          i32.const 2
          i32.shl
          i32.add
          i32.const 0
          i32.store
          get_local $2
          i32.const 1
          i32.add
          set_local $2
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    )
  
  (func $_copysign (type $_6)
    (param $0 f64)
    (param $1 f64)
    (result f64)
    (local $2 i32)
    get_global $tempDoublePtr
    get_local $1
    f64.store
    get_global $tempDoublePtr
    i32.load offset=4
    set_local $2
    get_global $tempDoublePtr
    get_local $0
    f64.abs
    f64.store
    get_local $2
    i32.const -2147483648
    i32.and
    get_global $tempDoublePtr
    i32.load offset=4
    i32.or
    set_local $2
    get_global $tempDoublePtr
    get_global $tempDoublePtr
    i32.load
    i32.store
    get_global $tempDoublePtr
    get_local $2
    i32.store offset=4
    get_global $tempDoublePtr
    f64.load
    )
  
  (func $__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    get_local $0
    get_local $0
    i32.load
    i32.load offset=24
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    drop
    get_local $0
    get_local $1
    i32.const 21008
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $2
    i32.store offset=36
    get_local $0
    get_local $2
    get_local $2
    i32.load
    i32.load offset=28
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.const 1
    i32.and
    i32.store8 offset=44
    )
  
  (func $__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    get_local $0
    get_local $0
    i32.load
    i32.load offset=24
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    drop
    get_local $0
    get_local $1
    i32.const 21000
    call $__ZNKSt3__26locale9use_facetERNS0_2idE
    tee_local $2
    i32.store offset=36
    get_local $0
    get_local $2
    get_local $2
    i32.load
    i32.load offset=28
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.const 1
    i32.and
    i32.store8 offset=44
    )
  
  (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    get_local $0
    tee_local $1
    i32.const 0
    i32.store
    get_local $1
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 8
    i32.add
    tee_local $0
    i32.const -1
    i32.store
    get_local $0
    i32.const -1
    i32.store offset=4
    )
  
  (func $___uflow (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    get_global $STACKTOP
    set_local $1
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $1
    set_local $2
    block $__rjto$0 (result i32)
      block $__rjti$0
        get_local $0
        i32.load offset=8
        br_if $__rjti$0
        get_local $0
        call $___toread
        i32.eqz
        br_if $__rjti$0
        i32.const -1
        br $__rjto$0
      end ;; $__rjti$0
      get_local $0
      get_local $2
      i32.const 1
      get_local $0
      i32.load offset=32
      i32.const 31
      i32.and
      i32.const 8
      i32.add
      call_indirect (type $FUNCSIG$iiii)
      i32.const 1
      i32.eq
      if $if (result i32)
        get_local $2
        i32.load8_u
      else
        i32.const -1
      end ;; $if
    end ;; $__rjto$0
    set_local $0
    get_local $1
    set_global $STACKTOP
    get_local $0
    )
  
  (func $___uremdi3 (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    get_global $STACKTOP
    set_local $4
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    get_local $1
    get_local $2
    get_local $3
    get_local $4
    tee_local $0
    call $___udivmoddi4
    drop
    get_local $4
    set_global $STACKTOP
    get_local $0
    i32.load offset=4
    set_global $tempRet0
    get_local $0
    i32.load
    )
  
  (func $__ZNKSt3__220__time_get_c_storageIwE3__xEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 17096
    i32.load8_s
    i32.eqz
    if $if
      i32.const 17096
      call $___cxa_guard_acquire
      if $if_1
        block $block
          i32.const 20872
          i32.const 0
          i32.store
          i32.const 20876
          i32.const 0
          i32.store
          i32.const 20880
          i32.const 0
          i32.store
          i32.const 20872
          i32.const 8512
          i32.const 8512
          call $_wcslen
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj
          i32.const 106
          i32.const 20872
          get_global $___dso_handle
          call $___cxa_atexit
          drop
        end ;; $block
      end ;; $if_1
    end ;; $if
    i32.const 20872
    )
  
  (func $__ZNKSt3__220__time_get_c_storageIwE3__rEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 17088
    i32.load8_s
    i32.eqz
    if $if
      i32.const 17088
      call $___cxa_guard_acquire
      if $if_1
        block $block
          i32.const 20860
          i32.const 0
          i32.store
          i32.const 20864
          i32.const 0
          i32.store
          i32.const 20868
          i32.const 0
          i32.store
          i32.const 20860
          i32.const 8464
          i32.const 8464
          call $_wcslen
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj
          i32.const 106
          i32.const 20860
          get_global $___dso_handle
          call $___cxa_atexit
          drop
        end ;; $block
      end ;; $if_1
    end ;; $if
    i32.const 20860
    )
  
  (func $__ZNKSt3__220__time_get_c_storageIwE3__cEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 17080
    i32.load8_s
    i32.eqz
    if $if
      i32.const 17080
      call $___cxa_guard_acquire
      if $if_1
        block $block
          i32.const 20848
          i32.const 0
          i32.store
          i32.const 20852
          i32.const 0
          i32.store
          i32.const 20856
          i32.const 0
          i32.store
          i32.const 20848
          i32.const 8380
          i32.const 8380
          call $_wcslen
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj
          i32.const 106
          i32.const 20848
          get_global $___dso_handle
          call $___cxa_atexit
          drop
        end ;; $block
      end ;; $if_1
    end ;; $if
    i32.const 20848
    )
  
  (func $__ZNKSt3__220__time_get_c_storageIwE3__XEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 17104
    i32.load8_s
    i32.eqz
    if $if
      i32.const 17104
      call $___cxa_guard_acquire
      if $if_1
        block $block
          i32.const 20884
          i32.const 0
          i32.store
          i32.const 20888
          i32.const 0
          i32.store
          i32.const 20892
          i32.const 0
          i32.store
          i32.const 20884
          i32.const 8548
          i32.const 8548
          call $_wcslen
          call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj
          i32.const 106
          i32.const 20884
          get_global $___dso_handle
          call $___cxa_atexit
          drop
        end ;; $block
      end ;; $if_1
    end ;; $if
    i32.const 20884
    )
  
  (func $__ZNSt3__25ctypeIcEC2EPKtbj (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (local $4 i32)
    get_local $0
    get_local $3
    i32.const -1
    i32.add
    i32.store offset=4
    get_local $0
    i32.const 9204
    i32.store
    get_local $0
    i32.const 8
    i32.add
    tee_local $4
    get_local $1
    i32.store
    get_local $0
    get_local $2
    i32.const 1
    i32.and
    i32.store8 offset=12
    get_local $1
    i32.eqz
    if $if
      get_local $4
      call $___ctype_b_loc
      i32.load
      i32.store
    end ;; $if
    )
  
  (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    get_local $0
    tee_local $1
    i32.const 0
    i32.store
    get_local $1
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 8
    i32.add
    tee_local $0
    i32.const -1
    i32.store
    get_local $0
    i32.const -1
    i32.store offset=4
    )
  
  (func $__ZNKSt3__220__time_get_c_storageIcE3__rEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 17008
    i32.load8_s
    i32.eqz
    if $if
      i32.const 17008
      call $___cxa_guard_acquire
      if $if_1
        block $block
          i32.const 20048
          i32.const 0
          i32.store
          i32.const 20052
          i32.const 0
          i32.store
          i32.const 20056
          i32.const 0
          i32.store
          i32.const 20048
          i32.const 14701
          i32.const 11
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj
          i32.const 102
          i32.const 20048
          get_global $___dso_handle
          call $___cxa_atexit
          drop
        end ;; $block
      end ;; $if_1
    end ;; $if
    i32.const 20048
    )
  
  (func $__ZNKSt3__220__time_get_c_storageIcE3__xEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 17016
    i32.load8_s
    i32.eqz
    if $if
      i32.const 17016
      call $___cxa_guard_acquire
      if $if_1
        block $block
          i32.const 20060
          i32.const 0
          i32.store
          i32.const 20064
          i32.const 0
          i32.store
          i32.const 20068
          i32.const 0
          i32.store
          i32.const 20060
          i32.const 14713
          i32.const 8
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj
          i32.const 102
          i32.const 20060
          get_global $___dso_handle
          call $___cxa_atexit
          drop
        end ;; $block
      end ;; $if_1
    end ;; $if
    i32.const 20060
    )
  
  (func $__ZNKSt3__220__time_get_c_storageIcE3__XEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 17024
    i32.load8_s
    i32.eqz
    if $if
      i32.const 17024
      call $___cxa_guard_acquire
      if $if_1
        block $block
          i32.const 20072
          i32.const 0
          i32.store
          i32.const 20076
          i32.const 0
          i32.store
          i32.const 20080
          i32.const 0
          i32.store
          i32.const 20072
          i32.const 14722
          i32.const 8
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj
          i32.const 102
          i32.const 20072
          get_global $___dso_handle
          call $___cxa_atexit
          drop
        end ;; $block
      end ;; $if_1
    end ;; $if
    i32.const 20072
    )
  
  (func $__ZNKSt3__220__time_get_c_storageIcE3__cEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 17000
    i32.load8_s
    i32.eqz
    if $if
      i32.const 17000
      call $___cxa_guard_acquire
      if $if_1
        block $block
          i32.const 20036
          i32.const 0
          i32.store
          i32.const 20040
          i32.const 0
          i32.store
          i32.const 20044
          i32.const 0
          i32.store
          i32.const 20036
          i32.const 14680
          i32.const 20
          call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj
          i32.const 102
          i32.const 20036
          get_global $___dso_handle
          call $___cxa_atexit
          drop
        end ;; $block
      end ;; $if_1
    end ;; $if
    i32.const 20036
    )
  
  (func $__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    loop $while-in
      get_local $1
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $3
          get_local $1
          i32.load8_s
          i32.store8
          get_local $3
          i32.const 1
          i32.add
          set_local $3
          get_local $1
          i32.const 1
          i32.add
          set_local $1
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $2
    )
  
  (func $__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    loop $while-in
      get_local $1
      get_local $2
      i32.ne
      if $if
        block $block
          get_local $3
          get_local $1
          i32.load8_s
          i32.store
          get_local $3
          i32.const 4
          i32.add
          set_local $3
          get_local $1
          i32.const 1
          i32.add
          set_local $1
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $2
    )
  
  (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    get_local $0
    get_local $0
    i32.load
    i32.load offset=36
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.const -1
    i32.eq
    if $if (result i32)
      i32.const -1
    else
      block $block (result i32)
        get_local $0
        i32.const 12
        i32.add
        tee_local $1
        i32.load
        set_local $0
        get_local $1
        get_local $0
        i32.const 4
        i32.add
        i32.store
        get_local $0
        i32.load
      end ;; $block
    end ;; $if
    tee_local $0
    )
  
  (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    get_local $0
    get_local $0
    i32.load
    i32.load offset=36
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    i32.const -1
    i32.eq
    if $if (result i32)
      i32.const -1
    else
      block $block (result i32)
        get_local $0
        i32.const 12
        i32.add
        tee_local $1
        i32.load
        set_local $0
        get_local $1
        get_local $0
        i32.const 1
        i32.add
        i32.store
        get_local $0
        i32.load8_u
      end ;; $block
    end ;; $if
    tee_local $0
    )
  
  (func $_wmemcpy (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    get_local $2
    if $_1
      block $_2
        get_local $2
        set_local $3
        get_local $0
        set_local $2
        loop $while-in
          get_local $2
          get_local $1
          i32.load
          i32.store
          get_local $3
          i32.const -1
          i32.add
          tee_local $3
          if $if
            block $block
              get_local $1
              i32.const 4
              i32.add
              set_local $1
              get_local $2
              i32.const 4
              i32.add
              set_local $2
              br $while-in
            end ;; $block
          end ;; $if
        end ;; $while-in
      end ;; $_2
    end ;; $_1
    get_local $0
    )
  
  (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    get_local $0
    i32.const 6368
    i32.store
    get_local $0
    i32.const 4
    i32.add
    call $__ZNSt3__26localeC2Ev
    get_local $0
    i32.const 8
    i32.add
    tee_local $1
    i32.const 0
    i32.store
    get_local $1
    i32.const 0
    i32.store offset=4
    get_local $1
    i32.const 0
    i32.store offset=8
    get_local $1
    i32.const 0
    i32.store offset=12
    get_local $1
    i32.const 0
    i32.store offset=16
    get_local $1
    i32.const 0
    i32.store offset=20
    )
  
  (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    get_local $0
    i32.const 6304
    i32.store
    get_local $0
    i32.const 4
    i32.add
    call $__ZNSt3__26localeC2Ev
    get_local $0
    i32.const 8
    i32.add
    tee_local $1
    i32.const 0
    i32.store
    get_local $1
    i32.const 0
    i32.store offset=4
    get_local $1
    i32.const 0
    i32.store offset=8
    get_local $1
    i32.const 0
    i32.store offset=12
    get_local $1
    i32.const 0
    i32.store offset=16
    get_local $1
    i32.const 0
    i32.store offset=20
    )
  
  (func $__ZNSt3__28ios_base4InitD2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    i32.const 18336
    call $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv
    drop
    i32.const 18420
    call $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv
    drop
    i32.const 18672
    call $__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv
    drop
    i32.const 18756
    call $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv
    drop
    )
  
  (func $___shlim (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    (local $3 i32)
    (local $4 i32)
    get_local $0
    get_local $1
    i32.store offset=104
    get_local $0
    get_local $0
    i32.load offset=8
    tee_local $2
    get_local $0
    i32.load offset=4
    tee_local $3
    i32.sub
    tee_local $4
    i32.store offset=108
    get_local $1
    i32.const 0
    i32.ne
    get_local $4
    get_local $1
    i32.gt_s
    i32.and
    if $if
      get_local $0
      get_local $3
      get_local $1
      i32.add
      i32.store offset=100
    else
      get_local $0
      get_local $2
      i32.store offset=100
    end ;; $if
    )
  
  (func $__Znwj (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    get_local $0
    i32.eqz
    if $_1
      i32.const 1
      set_local $0
    end ;; $_1
    loop $while-in
      block $while-out
        get_local $0
        call $_malloc
        tee_local $1
        if $if
          block $block
            get_local $1
            set_local $0
            br $while-out
          end ;; $block
        end ;; $if
        call $__ZSt15get_new_handlerv
        tee_local $1
        if $if_1
          block $block_1
            get_local $1
            i32.const 3
            i32.and
            i32.const 377
            i32.add
            call_indirect (type $FUNCSIG$v)
            br $while-in
          end ;; $block_1
        else
          i32.const 0
          set_local $0
        end ;; $if_1
      end ;; $while-out
    end ;; $while-in
    get_local $0
    )
  
  (func $__ZNKSt3__28numpunctIwE12do_falsenameEv (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    i32.const 0
    i32.store
    get_local $0
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 0
    i32.store offset=8
    get_local $0
    i32.const 9348
    i32.const 9348
    call $_wcslen
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj
    )
  
  (func $__ZNSt3__28ios_baseD2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 6288
    i32.store
    get_local $0
    i32.const 0
    call $__ZNSt3__28ios_base16__call_callbacksENS0_5eventE
    get_local $0
    i32.const 28
    i32.add
    call $__ZNSt3__26localeD2Ev
    get_local $0
    i32.load offset=32
    call $_free
    get_local $0
    i32.load offset=36
    call $_free
    get_local $0
    i32.load offset=48
    call $_free
    get_local $0
    i32.load offset=60
    call $_free
    )
  
  (func $__ZNKSt3__28numpunctIwE11do_truenameEv (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    i32.const 0
    i32.store
    get_local $0
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 0
    i32.store offset=8
    get_local $0
    i32.const 9328
    i32.const 9328
    call $_wcslen
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj
    )
  
  (func $__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_ (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    get_local $4
    get_local $2
    i32.store
    get_local $7
    get_local $5
    i32.store
    i32.const 3
    )
  
  (func $_sn_write (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    get_local $0
    i32.load offset=16
    get_local $0
    i32.const 20
    i32.add
    tee_local $3
    i32.load
    tee_local $4
    i32.sub
    tee_local $0
    get_local $2
    i32.gt_u
    if $if
      get_local $2
      set_local $0
    end ;; $if
    get_local $4
    get_local $1
    get_local $0
    call $_memcpy
    drop
    get_local $3
    get_local $3
    i32.load
    get_local $0
    i32.add
    i32.store
    get_local $2
    )
  
  (func $__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    i32.const 0
    i32.store
    get_local $0
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 0
    i32.store offset=8
    get_local $0
    i32.const 1
    i32.const 45
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw
    )
  
  (func $__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    i32.const 0
    i32.store
    get_local $0
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 0
    i32.store offset=8
    get_local $0
    i32.const 1
    i32.const 45
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc
    )
  
  (func $__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    get_local $1
    i32.load8_s offset=11
    i32.const 0
    i32.lt_s
    if $if (result i32)
      get_local $1
      i32.load
    else
      get_local $1
    end ;; $if
    i32.const 1
    call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj
    tee_local $3
    get_local $3
    i32.const -1
    i32.ne
    i32.shr_u
    )
  
  (func $__ZNKSt3__28numpunctIcE12do_falsenameEv (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    i32.const 0
    i32.store
    get_local $0
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 0
    i32.store offset=8
    get_local $0
    i32.const 15939
    i32.const 5
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj
    )
  
  (func $__ZNKSt3__28numpunctIcE11do_truenameEv (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    i32.const 0
    i32.store
    get_local $0
    i32.const 0
    i32.store offset=4
    get_local $0
    i32.const 0
    i32.store offset=8
    get_local $0
    i32.const 15934
    i32.const 4
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj
    )
  
  (func $__ZNSt3__214__shared_count16__release_sharedEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    get_local $0
    i32.const 4
    i32.add
    tee_local $2
    i32.load
    set_local $1
    get_local $2
    get_local $1
    i32.const -1
    i32.add
    i32.store
    get_local $1
    if $if (result i32)
      i32.const 0
    else
      block $block (result i32)
        get_local $0
        get_local $0
        i32.load
        i32.load offset=8
        i32.const 127
        i32.and
        i32.const 48
        i32.add
        call_indirect (type $FUNCSIG$vi)
        i32.const 1
      end ;; $block
    end ;; $if
    tee_local $0
    )
  
  (func $dynCall_iiiiiiiii (type $_12)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (param $8 i32)
    (result i32)
    get_local $1
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    get_local $6
    get_local $7
    get_local $8
    get_local $0
    i32.const 15
    i32.and
    i32.const 381
    i32.add
    call_indirect (type $FUNCSIG$iiiiiiiii)
    )
  
  (func $_abort_message (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    get_global $STACKTOP
    set_local $2
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $2
    get_local $1
    i32.store
    i32.const 2700
    i32.load
    tee_local $1
    get_local $0
    get_local $2
    call $_vfprintf
    drop
    i32.const 10
    get_local $1
    call $_fputc
    drop
    call $_abort
    )
  
  (func $_snprintf (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    (local $5 i32)
    get_global $STACKTOP
    set_local $4
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $4
    tee_local $5
    get_local $3
    i32.store
    get_local $0
    get_local $1
    get_local $2
    get_local $5
    call $_vsnprintf
    set_local $0
    get_local $4
    set_global $STACKTOP
    get_local $0
    )
  
  (func $___stdio_close (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    get_global $STACKTOP
    set_local $1
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $1
    tee_local $2
    get_local $0
    i32.load offset=60
    i32.store
    i32.const 6
    get_local $2
    call $___syscall6
    call $___syscall_ret
    set_local $0
    get_local $1
    set_global $STACKTOP
    get_local $0
    )
  
  (func $__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    get_local $2
    get_local $3
    get_local $4
    i32.const 1114111
    i32.const 0
    call $__ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE
    )
  
  (func $__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    get_local $2
    get_local $3
    get_local $4
    i32.const 1114111
    i32.const 0
    call $__ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE
    )
  
  (func $__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    i32.load offset=8
    tee_local $0
    if $if (result i32)
      get_local $0
      call $_uselocale
      tee_local $0
      if $if_1 (result i32)
        block $block (result i32)
          get_local $0
          call $_uselocale
          drop
          i32.const 4
        end ;; $block
      else
        i32.const 4
      end ;; $if_1
    else
      i32.const 1
    end ;; $if
    tee_local $0
    )
  
  (func $dynCall_iiiiiiii (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    get_local $1
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    get_local $6
    get_local $7
    get_local $0
    i32.const 7
    i32.and
    call_indirect (type $FUNCSIG$iiiiiiii)
    )
  
  (func $_sscanf (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    (local $4 i32)
    get_global $STACKTOP
    set_local $3
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $3
    tee_local $4
    get_local $2
    i32.store
    get_local $0
    get_local $1
    get_local $4
    call $_vsscanf
    set_local $0
    get_local $3
    set_global $STACKTOP
    get_local $0
    )
  
  (func $_wmemset (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    (local $3 i32)
    get_local $2
    if $_1
      block $_2
        get_local $0
        set_local $3
        loop $while-in
          get_local $3
          get_local $1
          i32.store
          get_local $2
          i32.const -1
          i32.add
          tee_local $2
          if $if
            block $block
              get_local $3
              i32.const 4
              i32.add
              set_local $3
              br $while-in
            end ;; $block
          end ;; $if
        end ;; $while-in
      end ;; $_2
    end ;; $_1
    get_local $0
    )
  
  (func $___cxa_get_globals_fast (type $FUNCSIG$i)
    (result i32)
    (local $0 i32)
    (local $1 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    i32.const 21124
    i32.const 2
    call $_pthread_once
    if $if
      i32.const 16444
      get_local $0
      call $_abort_message
    else
      block $block
        i32.const 21128
        i32.load
        call $_pthread_getspecific
        set_local $1
        get_local $0
        set_global $STACKTOP
        get_local $1
        return
      end ;; $block
    end ;; $if
    i32.const 0
    )
  
  (func $__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    i32.const 2
    i32.store8
    get_local $0
    i32.const 3
    i32.store8 offset=1
    get_local $0
    i32.const 0
    i32.store8 offset=2
    get_local $0
    i32.const 4
    i32.store8 offset=3
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 20976
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 20968
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 20960
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 20952
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 20912
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 20904
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 20896
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 20084
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 19272
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 19264
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 19256
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 19232
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    (local $5 i32)
    get_local $3
    get_local $2
    i32.sub
    tee_local $5
    get_local $4
    i32.lt_u
    if $if (result i32)
      get_local $5
    else
      get_local $4
    end ;; $if
    )
  
  (func $_bitshift64Shl (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    get_local $2
    i32.const 32
    i32.lt_s
    if $if
      block $block
        get_local $1
        get_local $2
        i32.shl
        get_local $0
        i32.const 1
        get_local $2
        i32.shl
        i32.const 1
        i32.sub
        i32.const 32
        get_local $2
        i32.sub
        i32.shl
        i32.and
        i32.const 32
        get_local $2
        i32.sub
        i32.shr_u
        i32.or
        set_global $tempRet0
        get_local $0
        get_local $2
        i32.shl
        return
      end ;; $block
    end ;; $if
    get_local $0
    get_local $2
    i32.const 32
    i32.sub
    i32.shl
    set_global $tempRet0
    i32.const 0
    )
  
  (func $__ZNSt3__27codecvtIwc11__mbstate_tED2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    get_local $0
    i32.const 9136
    i32.store
    get_local $0
    i32.const 8
    i32.add
    tee_local $1
    i32.load
    call $__ZNSt3__26__clocEv
    i32.ne
    if $if
      get_local $1
      i32.load
      call $__ZdlPv
    end ;; $if
    )
  
  (func $__ZNKSt3__25ctypeIwE5do_isEtw (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    get_local $2
    i32.const 128
    i32.lt_u
    if $if (result i32)
      call $___ctype_b_loc
      i32.load
      get_local $2
      i32.const 1
      i32.shl
      i32.add
      i32.load16_s
      get_local $1
      i32.and
      i32.const 65535
      i32.and
      i32.const 0
      i32.ne
    else
      i32.const 0
    end ;; $if
    )
  
  (func $__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    get_global $STACKTOP
    set_local $1
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $0
    call $_free
    i32.const 21128
    i32.load
    i32.const 0
    call $_pthread_setspecific
    if $if
      i32.const 16341
      get_local $1
      call $_abort_message
    else
      get_local $1
      set_global $STACKTOP
    end ;; $if
    )
  
  (func $_bitshift64Lshr (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    get_local $2
    i32.const 32
    i32.lt_s
    if $if
      block $block
        get_local $1
        get_local $2
        i32.shr_u
        set_global $tempRet0
        get_local $0
        get_local $2
        i32.shr_u
        get_local $1
        i32.const 1
        get_local $2
        i32.shl
        i32.const 1
        i32.sub
        i32.and
        i32.const 32
        get_local $2
        i32.sub
        i32.shl
        i32.or
        return
      end ;; $block
    end ;; $if
    i32.const 0
    set_global $tempRet0
    get_local $1
    get_local $2
    i32.const 32
    i32.sub
    i32.shr_u
    )
  
  (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    get_local $0
    get_local $1
    get_local $1
    call $_wcslen
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj
    )
  
  (func $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    get_local $0
    get_local $1
    get_local $1
    call $_strlen
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj
    )
  
  (func $dynCall_iiiiiii (type $FUNCSIG$iiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (result i32)
    get_local $1
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    get_local $6
    get_local $0
    i32.const 63
    i32.and
    i32.const 240
    i32.add
    call_indirect (type $FUNCSIG$iiiiiii)
    )
  
  (func $__ZNKSt3__25ctypeIcE10do_tolowerEc (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    get_local $1
    i32.const 24
    i32.shl
    i32.const 24
    i32.shr_s
    i32.const -1
    i32.gt_s
    if $if (result i32)
      call $___ctype_tolower_loc
      i32.load
      get_local $1
      i32.const 24
      i32.shl
      i32.const 24
      i32.shr_s
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 255
      i32.and
    else
      get_local $1
    end ;; $if
    )
  
  (func $__ZNKSt3__26locale9use_facetERNS0_2idE (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    get_local $0
    i32.load
    set_local $0
    get_local $1
    call $__ZNSt3__26locale2id5__getEv
    set_local $1
    get_local $0
    i32.load offset=8
    get_local $1
    i32.const 2
    i32.shl
    i32.add
    i32.load
    )
  
  (func $__ZNKSt3__25ctypeIcE10do_toupperEc (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    get_local $1
    i32.const 24
    i32.shl
    i32.const 24
    i32.shr_s
    i32.const -1
    i32.gt_s
    if $if (result i32)
      call $___ctype_toupper_loc
      i32.load
      get_local $1
      i32.const 255
      i32.and
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 255
      i32.and
    else
      get_local $1
    end ;; $if
    )
  
  (func $dynCall_iiiiiid (type $_13)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 f64)
    (result i32)
    get_local $1
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    get_local $6
    get_local $0
    i32.const 3
    i32.and
    i32.const 44
    i32.add
    call_indirect (type $FUNCSIG$iiiiiid)
    )
  
  (func $dynCall_viiiiii (type $_5)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    get_local $1
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    get_local $6
    get_local $0
    i32.const 7
    i32.and
    i32.const 405
    i32.add
    call_indirect (type $FUNCSIG$viiiiii)
    )
  
  (func $__ZNKSt3__28ios_base6getlocEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    get_global $STACKTOP
    set_local $1
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    get_local $1
    tee_local $2
    get_local $0
    i32.const 28
    i32.add
    call $__ZNSt3__26localeC2ERKS0_
    get_local $1
    set_global $STACKTOP
    get_local $2
    i32.load
    )
  
  (func $__ZNKSt3__25ctypeIwE10do_toupperEw (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    get_local $1
    i32.const 128
    i32.lt_u
    if $if (result i32)
      call $___ctype_toupper_loc
      i32.load
      get_local $1
      i32.const 2
      i32.shl
      i32.add
      i32.load
    else
      get_local $1
    end ;; $if
    )
  
  (func $__ZNKSt3__25ctypeIwE10do_tolowerEw (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    get_local $1
    i32.const 128
    i32.lt_u
    if $if (result i32)
      call $___ctype_tolower_loc
      i32.load
      get_local $1
      i32.const 2
      i32.shl
      i32.add
      i32.load
    else
      get_local $1
    end ;; $if
    )
  
  (func $__ZNKSt3__28numpunctIwE11do_groupingEv (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 16
    i32.add
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_
    )
  
  (func $__ZNKSt3__28numpunctIcE11do_groupingEv (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 12
    i32.add
    call $__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 21016
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 21024
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 21008
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 21000
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    get_local $4
    get_local $2
    i32.store
    i32.const 3
    )
  
  (func $dynCall_iiiiii (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    get_local $1
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    get_local $0
    i32.const 31
    i32.and
    i32.const 429
    i32.add
    call_indirect (type $FUNCSIG$iiiiii)
    )
  
  (func $runPostSets (type $FUNCSIG$v)
    nop
    )
  
  (func $_i64Subtract (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    get_local $1
    get_local $3
    i32.sub
    get_local $2
    get_local $0
    i32.gt_u
    i32.sub
    set_global $tempRet0
    get_local $0
    get_local $2
    i32.sub
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 20944
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 20936
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 20928
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 20920
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev (type $FUNCSIG$v)
    (local $0 i32)
    get_global $STACKTOP
    set_local $0
    get_global $STACKTOP
    i32.const 16
    i32.add
    set_global $STACKTOP
    i32.const 21128
    i32.const 109
    call $_pthread_key_create
    if $if
      i32.const 16394
      get_local $0
      call $_abort_message
    else
      get_local $0
      set_global $STACKTOP
    end ;; $if
    )
  
  (func $__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    get_local $0
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.add
    call $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev
    )
  
  (func $__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    get_local $0
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.add
    call $__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev
    )
  
  (func $__ZNSt3__211char_traitsIwE4moveEPwPKwj (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    get_local $2
    if $if (result i32)
      get_local $0
      get_local $1
      get_local $2
      call $_wmemmove
    else
      get_local $0
    end ;; $if
    )
  
  (func $__ZNSt3__211char_traitsIwE4copyEPwPKwj (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    get_local $2
    if $if (result i32)
      get_local $0
      get_local $1
      get_local $2
      call $_wmemcpy
    else
      get_local $0
    end ;; $if
    )
  
  (func $dynCall_iiiiid (type $FUNCSIG$iiiiiid)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 f64)
    (result i32)
    get_local $1
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    get_local $0
    i32.const 7
    i32.and
    i32.const 304
    i32.add
    call_indirect (type $FUNCSIG$iiiiid)
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 19248
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 19220
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 20992
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 20984
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 19200
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 19192
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $dynCall_viiiii (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    get_local $1
    get_local $2
    get_local $3
    get_local $4
    get_local $5
    get_local $0
    i32.const 3
    i32.and
    i32.const 40
    i32.add
    call_indirect (type $FUNCSIG$viiiii)
    )
  
  (func $__ZNSt3__26localeC2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    get_local $0
    call $__ZNSt3__26locale8__globalEv
    i32.load
    tee_local $1
    i32.store
    get_local $1
    call $__ZNSt3__214__shared_count12__add_sharedEv
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 19240
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $1
    i32.const 19208
    call $__ZNSt3__26locale2id5__getEv
    call $__ZNSt3__26locale5__imp7installEPNS0_5facetEl
    )
  
  (func $__ZNSt3__211char_traitsIwE6assignEPwjw (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    get_local $1
    if $if (result i32)
      get_local $0
      get_local $2
      get_local $1
      call $_wmemset
    else
      get_local $0
    end ;; $if
    )
  
  (func $__ZNSt3__26locale5__imp11make_globalEv (type $FUNCSIG$i)
    (result i32)
    (local $0 i32)
    i32.const 21040
    call $__ZNSt3__26locale7classicEv
    i32.load
    tee_local $0
    i32.store
    get_local $0
    call $__ZNSt3__214__shared_count12__add_sharedEv
    i32.const 21040
    )
  
  (func $__ZNSt3__26locale8__globalEv (type $FUNCSIG$i)
    (result i32)
    i32.const 17592
    i32.load8_s
    i32.eqz
    if $if
      i32.const 17592
      call $___cxa_guard_acquire
      if $if_1
        block $block
          call $__ZNSt3__26locale5__imp11make_globalEv
          drop
          i32.const 21044
          i32.const 21040
          i32.store
        end ;; $block
      end ;; $if_1
    end ;; $if
    i32.const 21044
    i32.load
    )
  
  (func $__ZNSt3__26locale7classicEv (type $FUNCSIG$i)
    (result i32)
    i32.const 17424
    i32.load8_s
    i32.eqz
    if $if
      i32.const 17424
      call $___cxa_guard_acquire
      if $if_1
        block $block
          call $__ZNSt3__26locale5__imp12make_classicEv
          drop
          i32.const 21036
          i32.const 21032
          i32.store
        end ;; $block
      end ;; $if_1
    end ;; $if
    i32.const 21036
    i32.load
    )
  
  (func $_wcslen (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    get_local $0
    set_local $1
    loop $while-in
      get_local $1
      i32.load
      if $if
        block $block
          get_local $1
          i32.const 4
          i32.add
          set_local $1
          br $while-in
        end ;; $block
      end ;; $if
    end ;; $while-in
    get_local $1
    get_local $0
    i32.sub
    i32.const 2
    i32.shr_s
    )
  
  (func $__ZNSt3__26localeC2ERKS0_ (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    (local $2 i32)
    get_local $0
    get_local $1
    i32.load
    tee_local $2
    i32.store
    get_local $2
    call $__ZNSt3__214__shared_count12__add_sharedEv
    )
  
  (func $__ZNSt3__25ctypeIcED2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    get_local $0
    i32.const 9204
    i32.store
    get_local $0
    i32.load offset=8
    tee_local $1
    if $if
      get_local $0
      i32.load8_s offset=12
      if $if_1
        get_local $1
        call $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev
      end ;; $if_1
    end ;; $if
    )
  
  (func $dynCall_iiiii (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    get_local $1
    get_local $2
    get_local $3
    get_local $4
    get_local $0
    i32.const 7
    i32.and
    i32.const 397
    i32.add
    call_indirect (type $FUNCSIG$iiiii)
    )
  
  (func $__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    get_local $0
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.add
    i32.const 4
    i32.add
    call $__ZNSt3__28ios_baseD2Ev
    )
  
  (func $__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    get_local $0
    i32.load
    i32.const -12
    i32.add
    i32.load
    i32.add
    i32.const 8
    i32.add
    call $__ZNSt3__28ios_baseD2Ev
    )
  
  (func $__ZNSt3__210__time_putD2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.load
    call $__ZNSt3__26__clocEv
    i32.ne
    if $if
      get_local $0
      i32.load
      call $__ZdlPv
    end ;; $if
    )
  
  (func $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.load8_s offset=11
    i32.const 0
    i32.lt_s
    if $if
      get_local $0
      i32.load
      call $__ZdlPv
    end ;; $if
    )
  
  (func $dynCall_viiii (type $FUNCSIG$viiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    get_local $1
    get_local $2
    get_local $3
    get_local $4
    get_local $0
    i32.const 7
    i32.and
    i32.const 461
    i32.add
    call_indirect (type $FUNCSIG$viiii)
    )
  
  (func $__ZNSt3__28numpunctIwED2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 9296
    i32.store
    get_local $0
    i32.const 16
    i32.add
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    )
  
  (func $__ZNSt3__28numpunctIcED2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 9256
    i32.store
    get_local $0
    i32.const 12
    i32.add
    call $__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev
    )
  
  (func $___syscall_ret (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    i32.const -4096
    i32.gt_u
    if $if (result i32)
      block $block (result i32)
        call $___errno_location
        i32.const 0
        get_local $0
        i32.sub
        i32.store
        i32.const -1
      end ;; $block
    else
      get_local $0
    end ;; $if
    )
  
  (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 6368
    i32.store
    get_local $0
    i32.const 4
    i32.add
    call $__ZNSt3__26localeD2Ev
    get_local $0
    call $__ZdlPv
    )
  
  (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 6304
    i32.store
    get_local $0
    i32.const 4
    i32.add
    call $__ZNSt3__26localeD2Ev
    get_local $0
    call $__ZdlPv
    )
  
  (func $__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 8
    i32.add
    call $__ZNSt3__210__time_putD2Ev
    get_local $0
    call $__ZdlPv
    )
  
  (func $b11 (type $FUNCSIG$iiiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (param $7 i32)
    (result i32)
    i32.const 11
    call $abort
    i32.const 0
    )
  
  (func $__ZNSt3__26locale5facet16__on_zero_sharedEv (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    if $if
      get_local $0
      get_local $0
      i32.load
      i32.load offset=4
      i32.const 127
      i32.and
      i32.const 48
      i32.add
      call_indirect (type $FUNCSIG$vi)
    end ;; $if
    )
  
  (func $_i64Add (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    (local $4 i32)
    get_local $1
    get_local $3
    i32.add
    get_local $0
    get_local $2
    i32.add
    tee_local $4
    get_local $0
    i32.lt_u
    i32.add
    set_global $tempRet0
    get_local $4
    )
  
  (func $_uselocale (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    (local $2 i32)
    call $_pthread_self
    i32.const 184
    i32.add
    tee_local $1
    i32.load
    set_local $2
    get_local $0
    if $if
      get_local $1
      get_local $0
      i32.store
    end ;; $if
    get_local $2
    )
  
  (func $__ZNSt3__28ios_base5clearEj (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    get_local $0
    i32.load offset=24
    i32.eqz
    get_local $1
    i32.or
    i32.store offset=16
    )
  
  (func $_strtoull_l (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    get_local $0
    get_local $1
    get_local $2
    call $_strtoull
    )
  
  (func $___cxa_is_pointer_type (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    if $if (result i32)
      get_local $0
      i32.const 2408
      i32.const 2464
      i32.const 0
      call $___dynamic_cast
      i32.const 0
      i32.ne
    else
      i32.const 0
    end ;; $if
    )
  
  (func $__ZNSt3__26__clocEv (type $FUNCSIG$i)
    (result i32)
    i32.const 16944
    i32.load8_s
    i32.eqz
    if $if
      i32.const 16944
      call $___cxa_guard_acquire
      if $if_1
        i32.const 19228
        i32.const 2147483647
        i32.const 13970
        i32.const 0
        call $_newlocale
        i32.store
      end ;; $if_1
    end ;; $if
    i32.const 19228
    i32.load
    )
  
  (func $dynCall_iiii (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    get_local $1
    get_local $2
    get_local $3
    get_local $0
    i32.const 31
    i32.and
    i32.const 8
    i32.add
    call_indirect (type $FUNCSIG$iiii)
    )
  
  (func $__ZNKSt3__25ctypeIwE9do_narrowEwc (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    get_local $1
    i32.const 128
    i32.lt_u
    if $if (result i32)
      get_local $1
      i32.const 255
      i32.and
    else
      get_local $2
    end ;; $if
    )
  
  (func $_strtoll_l (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    get_local $0
    get_local $1
    get_local $2
    call $_strtoll
    )
  
  (func $__ZNKSt3__25ctypeIcE9do_narrowEcc (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    get_local $1
    i32.const 24
    i32.shl
    i32.const 24
    i32.shr_s
    i32.const -1
    i32.gt_s
    if $if (result i32)
      get_local $1
    else
      get_local $2
    end ;; $if
    )
  
  (func $___udivdi3 (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    get_local $0
    get_local $1
    get_local $2
    get_local $3
    i32.const 0
    call $___udivmoddi4
    )
  
  (func $__ZNSt3__26locale2id6__initEv (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    i32.const 19216
    i32.const 19216
    i32.load
    tee_local $1
    i32.const 1
    i32.add
    i32.store
    get_local $0
    get_local $1
    i32.const 1
    i32.add
    i32.store offset=4
    )
  
  (func $__ZNSt3__214__shared_count12__add_sharedEv (type $FUNCSIG$vi)
    (param $0 i32)
    (local $1 i32)
    get_local $0
    i32.const 4
    i32.add
    tee_local $1
    get_local $1
    i32.load
    i32.const 1
    i32.add
    i32.store
    )
  
  (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 6368
    i32.store
    get_local $0
    i32.const 4
    i32.add
    call $__ZNSt3__26localeD2Ev
    )
  
  (func $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 6304
    i32.store
    get_local $0
    i32.const 4
    i32.add
    call $__ZNSt3__26localeD2Ev
    )
  
  (func $_strtoll (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    get_local $0
    get_local $1
    get_local $2
    i32.const 0
    i32.const -2147483648
    call $_strtox_545
    )
  
  (func $__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 8
    i32.add
    call $__ZNSt3__210__time_putD2Ev
    )
  
  (func $___cxa_guard_acquire (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    i32.load8_s
    i32.const 1
    i32.eq
    if $if (result i32)
      i32.const 0
    else
      block $block (result i32)
        get_local $0
        i32.const 1
        i32.store8
        i32.const 1
      end ;; $block
    end ;; $if
    )
  
  (func $dynCall_viii (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    get_local $1
    get_local $2
    get_local $3
    get_local $0
    i32.const 0
    i32.and
    i32.const 376
    i32.add
    call_indirect (type $FUNCSIG$viii)
    )
  
  (func $b0 (type $FUNCSIG$iiiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (param $6 i32)
    (result i32)
    i32.const 0
    call $abort
    i32.const 0
    )
  
  (func $stackAlloc (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    get_global $STACKTOP
    set_local $1
    get_global $STACKTOP
    get_local $0
    i32.add
    set_global $STACKTOP
    get_global $STACKTOP
    i32.const 15
    i32.add
    i32.const -16
    i32.and
    set_global $STACKTOP
    get_local $1
    )
  
  (func $_strtoull (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    get_local $0
    get_local $1
    get_local $2
    i32.const -1
    i32.const -1
    call $_strtox_545
    )
  
  (func $__ZNSt3__211__stdoutbufIwED0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    call $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev
    get_local $0
    call $__ZdlPv
    )
  
  (func $__ZNSt3__211__stdoutbufIcED0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    call $__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev
    get_local $0
    call $__ZdlPv
    )
  
  (func $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 4
    i32.add
    call $__ZNSt3__28ios_baseD2Ev
    get_local $0
    call $__ZdlPv
    )
  
  (func $__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 8
    i32.add
    call $__ZNSt3__28ios_baseD2Ev
    get_local $0
    call $__ZdlPv
    )
  
  (func $___errno_location (type $FUNCSIG$i)
    (result i32)
    i32.const 17600
    i32.load
    if $if (result i32)
      call $_pthread_self
      i32.load offset=64
    else
      i32.const 17644
    end ;; $if
    )
  
  (func $_isxdigit (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    i32.const -48
    i32.add
    i32.const 10
    i32.lt_u
    if $if (result i32)
      i32.const 1
    else
      get_local $0
      i32.const 32
      i32.or
      i32.const -97
      i32.add
      i32.const 6
      i32.lt_u
    end ;; $if
    )
  
  (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    get_local $0
    )
  
  (func $__ZNSt3__27codecvtIwc11__mbstate_tED0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    call $__ZNSt3__27codecvtIwc11__mbstate_tED2Ev
    get_local $0
    call $__ZdlPv
    )
  
  (func $establishStackSpace (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $0
    set_global $STACKTOP
    get_local $1
    set_global $STACK_MAX
    )
  
  (func $_catgets (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    get_local $3
    )
  
  (func $__ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv (type $FUNCSIG$vi)
    (param $0 i32)
    i32.const 16091
    i32.const 16120
    i32.const 1183
    i32.const 16197
    call $___assert_fail
    )
  
  (func $dynCall_iii (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    get_local $1
    get_local $2
    get_local $0
    i32.const 15
    i32.and
    i32.const 413
    i32.add
    call_indirect (type $FUNCSIG$iii)
    )
  
  (func $__ZNSt3__26localeD2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.load
    call $__ZNSt3__214__shared_count16__release_sharedEv
    drop
    )
  
  (func $_wctomb (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    get_local $0
    if $if (result i32)
      get_local $0
      get_local $1
      i32.const 0
      call $_wcrtomb
    else
      i32.const 0
    end ;; $if
    )
  
  (func $__ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv (type $FUNCSIG$vi)
    (param $0 i32)
    i32.const 15966
    i32.const 15989
    i32.const 304
    i32.const 16197
    call $___assert_fail
    )
  
  (func $b6 (type $FUNCSIG$iiiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    (result i32)
    i32.const 6
    call $abort
    i32.const 0
    )
  
  (func $b3 (type $FUNCSIG$iiiiiid)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 f64)
    (result i32)
    i32.const 3
    call $abort
    i32.const 0
    )
  
  (func $__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 4
    i32.add
    call $__ZNSt3__28ios_baseD2Ev
    )
  
  (func $__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 8
    i32.add
    call $__ZNSt3__28ios_baseD2Ev
    )
  
  (func $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    call $__ZdlPv
    )
  
  (func $setThrew (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_global $__THREW__
    i32.eqz
    if $if
      block $block
        get_local $0
        set_global $__THREW__
        get_local $1
        set_global $threwValue
      end ;; $block
    end ;; $if
    )
  
  (func $__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 2
    )
  
  (func $__ZNSt3__210__stdinbufIwE9underflowEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    i32.const 0
    call $__ZNSt3__210__stdinbufIwE9__getcharEb
    )
  
  (func $__ZNSt3__210__stdinbufIcE9underflowEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    i32.const 0
    call $__ZNSt3__210__stdinbufIcE9__getcharEb
    )
  
  (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    nop
    )
  
  (func $dynCall_vii (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    get_local $1
    get_local $2
    get_local $0
    i32.const 63
    i32.and
    i32.const 176
    i32.add
    call_indirect (type $FUNCSIG$vii)
    )
  
  (func $b13 (type $FUNCSIG$viiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (param $5 i32)
    i32.const 13
    call $abort
    )
  
  (func $__ZNSt3__210__stdinbufIwE5uflowEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    i32.const 1
    call $__ZNSt3__210__stdinbufIwE9__getcharEb
    )
  
  (func $__ZNSt3__210__stdinbufIcE5uflowEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    i32.const 1
    call $__ZNSt3__210__stdinbufIcE9__getcharEb
    )
  
  (func $_mbsinit (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    if $if (result i32)
      get_local $0
      i32.load
      i32.eqz
    else
      i32.const 1
    end ;; $if
    )
  
  (func $_mbrlen (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    i32.const 0
    get_local $0
    get_local $1
    get_local $2
    if $if (result i32)
      get_local $2
    else
      i32.const 17660
    end ;; $if
    call $_mbrtowc
    )
  
  (func $__ZNSt3__26locale5__imp12make_classicEv (type $FUNCSIG$i)
    (result i32)
    i32.const 17432
    i32.const 1
    call $__ZNSt3__26locale5__impC2Ej
    i32.const 21032
    i32.const 17432
    i32.store
    i32.const 21032
    )
  
  (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    i32.const -1
    )
  
  (func $_do_read (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    get_local $0
    get_local $1
    get_local $2
    call $___string_read
    )
  
  (func $__ZNSt3__26locale5__impD0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    call $__ZNSt3__26locale5__impD2Ev
    get_local $0
    call $__ZdlPv
    )
  
  (func $b15 (type $FUNCSIG$iiiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    (result i32)
    i32.const 15
    call $abort
    i32.const 0
    )
  
  (func $__ZNSt3__28numpunctIwED0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    call $__ZNSt3__28numpunctIwED2Ev
    get_local $0
    call $__ZdlPv
    )
  
  (func $__ZNSt3__28numpunctIcED0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    call $__ZNSt3__28numpunctIcED2Ev
    get_local $0
    call $__ZdlPv
    )
  
  (func $__GLOBAL__I_000101 (type $FUNCSIG$v)
    i32.const 0
    call $__ZNSt3__28ios_base4InitC2Ev
    i32.const 96
    i32.const 23208
    get_global $___dso_handle
    call $___cxa_atexit
    drop
    )
  
  (func $b7 (type $FUNCSIG$iiiiid)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 f64)
    (result i32)
    i32.const 7
    call $abort
    i32.const 0
    )
  
  (func $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    nop
    )
  
  (func $__ZNSt3__28ios_baseD0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    call $__ZNSt3__28ios_baseD2Ev
    get_local $0
    call $__ZdlPv
    )
  
  (func $__ZNSt3__25ctypeIcED0Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    call $__ZNSt3__25ctypeIcED2Ev
    get_local $0
    call $__ZdlPv
    )
  
  (func $__ZNKSt3__28numpunctIwE16do_thousands_sepEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    i32.load offset=12
    )
  
  (func $dynCall_ii (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    get_local $1
    get_local $0
    i32.const 63
    i32.and
    i32.const 312
    i32.add
    call_indirect (type $FUNCSIG$ii)
    )
  
  (func $__ZNKSt3__28numpunctIwE16do_decimal_pointEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    i32.load offset=8
    )
  
  (func $__ZNKSt3__28numpunctIcE16do_thousands_sepEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    i32.load8_s offset=9
    )
  
  (func $__ZNKSt3__28numpunctIcE16do_decimal_pointEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    i32.load8_s offset=8
    )
  
  (func $__ZNKSt3__25ctypeIwE8do_widenEc (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    get_local $1
    i32.const 24
    i32.shl
    i32.const 24
    i32.shr_s
    )
  
  (func $b2 (type $FUNCSIG$viiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (param $4 i32)
    i32.const 2
    call $abort
    )
  
  (func $__ZSt15get_new_handlerv (type $FUNCSIG$i)
    (result i32)
    (local $0 i32)
    i32.const 21132
    i32.const 21132
    i32.load
    tee_local $0
    i32.store
    get_local $0
    )
  
  (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const -1
    )
  
  (func $__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 0
    )
  
  (func $b12 (type $FUNCSIG$iiiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    (result i32)
    i32.const 12
    call $abort
    i32.const 0
    )
  
  (func $__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 2147483647
    )
  
  (func $dynCall_vi (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    get_local $1
    get_local $0
    i32.const 127
    i32.and
    i32.const 48
    i32.add
    call_indirect (type $FUNCSIG$vi)
    )
  
  (func $_strtold_l (type $_1)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result f64)
    get_local $0
    get_local $1
    i32.const 2
    call $_strtox
    )
  
  (func $__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 1
    )
  
  (func $_cleanup_522 (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.load offset=68
    i32.eqz
    if $if
      get_local $0
      call $__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
    end ;; $if
    )
  
  (func $__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 4
    )
  
  (func $__ZNKSt3__25ctypeIcE8do_widenEc (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    get_local $1
    )
  
  (func $__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 127
    )
  
  (func $b16 (type $FUNCSIG$viiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (param $3 i32)
    i32.const 16
    call $abort
    )
  
  (func $_isspace (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    get_local $0
    i32.const 32
    i32.eq
    get_local $0
    i32.const -9
    i32.add
    i32.const 5
    i32.lt_u
    i32.or
    )
  
  (func $_isdigit_l (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    get_local $0
    i32.const -48
    i32.add
    i32.const 10
    i32.lt_u
    )
  
  (func $__ZNSt9bad_allocC2Ev (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 9700
    i32.store
    )
  
  (func $b1 (type $FUNCSIG$iiii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    i32.const 1
    call $abort
    i32.const 0
    )
  
  (func $_isxdigit_l (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    get_local $0
    call $_isxdigit
    )
  
  (func $_copysignl (type $_6)
    (param $0 f64)
    (param $1 f64)
    (result f64)
    get_local $0
    get_local $1
    call $_copysign
    )
  
  (func $_scalbnl (type $_11)
    (param $0 f64)
    (param $1 i32)
    (result f64)
    get_local $0
    get_local $1
    call $_scalbn
    )
  
  (func $dynCall_v (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    i32.const 3
    i32.and
    i32.const 377
    i32.add
    call_indirect (type $FUNCSIG$v)
    )
  
  (func $_frexpl (type $_11)
    (param $0 f64)
    (param $1 i32)
    (result f64)
    get_local $0
    get_local $1
    call $_frexp
    )
  
  (func $b9 (type $FUNCSIG$viii)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    i32.const 9
    call $abort
    )
  
  (func $__ZNKSt9bad_alloc4whatEv (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 16821
    )
  
  (func $_fmodl (type $_6)
    (param $0 f64)
    (param $1 f64)
    (result f64)
    get_local $0
    get_local $1
    call $_fmod
    )
  
  (func $b14 (type $FUNCSIG$iii)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    i32.const 14
    call $abort
    i32.const 0
    )
  
  (func $setTempRet0 (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    set_global $tempRet0
    )
  
  (func $__ZdlPv (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    call $_free
    )
  
  (func $stackRestore (type $FUNCSIG$vi)
    (param $0 i32)
    get_local $0
    set_global $STACKTOP
    )
  
  (func $b5 (type $FUNCSIG$vii)
    (param $0 i32)
    (param $1 i32)
    i32.const 5
    call $abort
    )
  
  (func $b8 (type $FUNCSIG$ii)
    (param $0 i32)
    (result i32)
    i32.const 8
    call $abort
    i32.const 0
    )
  
  (func $___ctype_toupper_loc (type $FUNCSIG$i)
    (result i32)
    i32.const 4708
    )
  
  (func $___ctype_tolower_loc (type $FUNCSIG$i)
    (result i32)
    i32.const 3168
    )
  
  (func $getTempRet0 (type $FUNCSIG$i)
    (result i32)
    get_global $tempRet0
    )
  
  (func $stackSave (type $FUNCSIG$i)
    (result i32)
    get_global $STACKTOP
    )
  
  (func $b4 (type $FUNCSIG$vi)
    (param $0 i32)
    i32.const 4
    call $abort
    )
  
  (func $___ctype_b_loc (type $FUNCSIG$i)
    (result i32)
    i32.const 3164
    )
  
  (func $_pthread_self (type $FUNCSIG$i)
    (result i32)
    i32.const 0
    )
  
  (func $b10 (type $FUNCSIG$v)
    i32.const 10
    call $abort
    ))